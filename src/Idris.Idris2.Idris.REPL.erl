-module('Idris.Idris2.Idris.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--process-12463'/9,
  'case--process-11490'/7,
  'case--case block in case block in case block in case block in processEdit-8119'/27,
  'case--case block in case block in processEdit-7271'/23,
  'case--case block in processEdit-7176'/21,
  'case--processEdit-6066'/15,
  'case--nextGenDef-5576'/7,
  'case--nextProofSearch-5380'/6,
  'case--updateFile-4949'/5,
  'case--findCG-4658'/5,
  'nested--25502-12411--in--un--toPaths'/8,
  'nested--18995-5134--in--un--replaceStr'/7,
  'nested--28055-13121--in--un--prompt'/6,
  'nested--19844-5881--in--un--match'/4,
  'nested--28093-13882--in--un--makeSpace'/1,
  'nested--19076-5205--in--un--insertInBlank'/8,
  'nested--27792-12805--in--un--getLoad'/4,
  'nested--27792-12806--in--un--fnameCmd'/3,
  'nested--24809-10108--in--un--execDecl'/8,
  'nested--25397-10628--in--un--elabMode'/8,
  'nested--28093-13883--in--un--col'/5,
  'nested--19844-5880--in--un--cmp'/5,
  'nested--28093-13884--in--un--cmdInfo'/1,
  'nested--19207-5322--in--un--addW'/7,
  'nested--19076-5206--in--un--addApp'/10,
  'un--updateFile'/3,
  'un--showInfo'/3,
  'un--setOpt'/4,
  'un--rtrim'/1,
  'un--replEval'/6,
  'un--replCmd'/7,
  'un--repl'/6,
  'un--proofSearch'/4,
  'un--processLocal'/11,
  'un--processEdit'/6,
  'un--processCatch'/7,
  'un--process'/6,
  'un--printClause'/6,
  'un--prettyTerm'/1,
  'un--prepareExp'/7,
  'un--parseRepl'/1,
  'un--parseEmptyCmd'/0,
  'un--parseCmd'/0,
  'un--nextProofSearch'/4,
  'un--nextGenDef'/5,
  'un--lookupDefTyName'/3,
  'un--loadMainFile'/7,
  'un--interpret'/7,
  'un--inferAndNormalize'/8,
  'un--inferAndElab'/8,
  'un--handleResult'/7,
  'un--handleMissing\x{27}'/1,
  'un--handleMissing'/1,
  'un--getOptions'/3,
  'un--getItDecls'/2,
  'un--findInTree'/3,
  'un--findCG'/3,
  'un--execExp'/7,
  'un--execDecls'/7,
  'un--dropLamsTm'/4,
  'un--dropLams'/2,
  'un--displayType'/4,
  'un--displayTerm'/5,
  'un--displayResult'/6,
  'un--displayPats'/4,
  'un--displayPatTerm'/5,
  'un--displayHelp'/0,
  'un--displayErrors'/7,
  'un--displayClause'/4,
  'un--compileLib'/5,
  'un--compileExp'/8,
  'un--caseSplit'/3,
  'un--anyAt'/3,
  'un--addMadeLemma'/6,
  'un--addMadeCase'/4,
  'un--addClause'/3
]).
'case--process-12463'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Libraries.Utils.Path':'un--parse'(V9))), fun (V11) -> begin (V13 = begin (V12 = ('Idris.Idris2.Libraries.System.Directory.Tree':'un--explore'(V10, V11))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V15) -> begin (V17 = begin (V16 = (('nested--25502-12411--in--un--toPaths'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Libraries.Utils.Path':'un--parse'(<<""/utf8>>)), ('Idris.Idris2.Libraries.System.Directory.Tree.Tree':'un--toRelative'(V15))))(V11))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> begin (V64 = (('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V20, V21, [], V22)) end end end, V19, fun (V23) -> begin (V24 = ('Idris.Idris2.Libraries.Utils.Path':'un--dropExtension'(V23))), begin (V26 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Data.String':'un--split'(fun (V25) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V25, ('Idris.Idris2.Libraries.Utils.Path':'un--dirSeparator'()))) end, V24))))), begin (V55 = ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V29, V30, V31)) end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V34, V35, V36)) end end end end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V38)) end end, fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V42, V43, V44, V45)) end end end end end end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V47)) end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V50, V51, V52)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V53, V54)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}, ('Idris.Idris2.Data.List':'un--intersperse'(<<"."/utf8>>, V26))))), begin (V56 = ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V55))), fun (V57) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V58) -> begin (V59 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V5, V4, V3, {'Idris.Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, ('Idris.Idris2.Core.Name.Namespace':'un--nsAsModuleIdent'(V56)), V56}, V58))), case V59 of {'Idris.Prelude.Types.Left', E5} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V62) -> fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V62}} end end, V57)) end end end end end end))(V11))), case V64 of {'Idris.Prelude.Types.Left', E7} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V66) -> begin (V67 = ('Idris.Idris2.Data.List':'un--catMaybes'(V66))), begin (V73 = case V67 of [] -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"Done"/utf8>>))}; _ -> begin (V70 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V68) -> fun (V69) -> ('Idris.Idris2.Idris.Error':'un--display'(V5, V3, V1, V68, V69)) end end, V67, [], V11))), case V70 of {'Idris.Prelude.Types.Left', E9} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V72) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V72))} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V73 of {'Idris.Prelude.Types.Left', E11} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V75) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', V75}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> fun (V76) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.REPLError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"Package not found in the known search directories"/utf8>>))}} end end.
'case--process-11490'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.NoFileLoaded'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> begin (V26 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V9) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" +"/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(((V9 + 1) rem 9223372036854775808))))) end end, case V5 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> V16 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), fun (V27) -> begin (V76 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V28) -> case V28 of {'Idris.Prelude.Types.Left', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V30) -> {'Idris.Prelude.Types.Right', 0} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V31) -> begin (V75 = (('Idris.Idris2.Erlang.System':'un--system'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V34, V35, V36)) end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> V38 end end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), begin (V46 = (V43(V44))), (V45(V46)) end end end end end end end}, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), ((V50(V52))(V51)) end end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V54(V55))), (V56(V55)) end end end end}, fun (V57) -> fun (V58) -> V58 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(case V5 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74) -> V64 end(E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" \x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V8, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}"/utf8>>, V26))))))))))(V31))), {'Idris.Prelude.Types.Right', V75} end end, V27))), case V76 of {'Idris.Prelude.Types.Left', E35} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V78) -> ('un--loadMainFile'(V4, V3, V2, V1, V0, V8, V27)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in processEdit-8119'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V25 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V27, V28) -> begin (V31 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V29) -> fun (V30) -> ('un--printClause'(V8, V6, V27, V22, V29, V30)) end end, V20, [], V26))), case V31 of {'Idris.Prelude.Types.Left', E2} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V33) -> case V3 of 1 -> ('un--updateFile'(V4, fun (V34) -> ('un--addClause'(('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'(V33)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(V2)))), V34)) end, V26)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V37, V38)) end end end end, fun (V39) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V39)) end, V33))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-7271'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V21 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V25, V26) -> begin (V27 = ('Idris.Idris2.Idris.Resugar':'un--resugar'(V23, V8, V6, V25, V26, V22))), case V27 of {'Idris.Prelude.Types.Left', E4} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V29) -> begin (V30 = case V11 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V29)); 0 -> V29; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V3 of 1 -> ('un--updateFile'(V4, fun (V31) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V30)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V2, 1)))))), V31)) end, V22)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('un--prettyTerm'(V30))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-7176'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Idris.Core.Context.NotHole'} -> (fun () -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V22) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V22)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end()); {'Idris.Core.Context.SolvedHole', E0} -> (fun (V23) -> fun (V24) -> ('case--case block in case block in processEdit-7271'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, ('un--dropLamsTm'([], V23, {'Idris.Core.Env.Nil'}, V17)), V24)) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-6066'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> case V16 of {'Idris.Prelude.Types.Just', E3} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V20, V21) -> fun (V22) -> begin (V23 = ('un--displayTerm'(V7, V5, V8, V21, V22))), case V23 of {'Idris.Prelude.Types.Left', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Core.Name':'un--nameRoot'(V18)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), V25))))}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8, E9)); _ -> fun (V26) -> case V15 of {'Idris.Prelude.Types.Just', E7} -> (fun (V27) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', V27}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10, V26)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6)); _ -> fun (V28) -> case V15 of {'Idris.Prelude.Types.Just', E4} -> (fun (V29) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', V29}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10, V28)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> fun (V30) -> case V15 of {'Idris.Prelude.Types.Just', E2} -> (fun (V31) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', V31}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10, V30)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nextGenDef-5576'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> begin (V10 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'(V3, V2, V9, V6))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> case V12 of {'Idris.Prelude.Types.Just', E5} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V14, V15) -> begin (V33 = begin (V32 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V8, V15}}, V27, V28, V29, V30, V31} end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E24} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V35) -> case V0 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V8, V14}}}; _ -> begin (V36 = (V0 - 1)), ('un--nextGenDef'(V3, V2, V1, V36, V6)) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V54 = begin (V53 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, {'Idris.Prelude.Types.Nothing'}, V48, V49, V50, V51, V52} end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V53} end), case V54 of {'Idris.Prelude.Types.Left', E42} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nextProofSearch-5380'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V7, V8) -> begin (V9 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'(V2, V1, V8, V5))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> case V11 of {'Idris.Prelude.Types.Just', E5} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V13, V14) -> begin (V32 = begin (V31 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V15, V16, V17, V18, V19, V20, V21, V22, V23, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, V14}}, V25, V26, V27, V28, V29, V30} end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E24} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, V13}}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V52 = begin (V51 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V35, V36, V37, V38, V39, V40, V41, V42, V43, {'Idris.Prelude.Types.Nothing'}, V45, V46, V47, V48, V49, V50} end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V51} end), case V52 of {'Idris.Prelude.Types.Left', E42} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V54) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateFile-4949'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> begin (V34 = begin (V33 = (('Idris.Idris2.Erlang.System.File':'un--readFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, V5))(V4))), {'Idris.Prelude.Types.Right', V33} end), case V34 of {'Idris.Prelude.Types.Left', E1} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Right', E3} -> (fun (V37) -> begin (V70 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V38) -> case V38 of {'Idris.Prelude.Types.Left', E4} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V40) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V41) -> begin (V69 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V44, V45, V46)) end end end end end, fun (V47) -> fun (V48) -> fun (V49) -> V48 end end end, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), begin (V56 = (V53(V54))), (V55(V56)) end end end end end end end}, fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V59(V61))), ((V60(V62))(V61)) end end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> begin (V66 = (V64(V65))), (V66(V65)) end end end end}, fun (V67) -> fun (V68) -> V68 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, <<"~"/utf8>>)), V37))(V41))), {'Idris.Prelude.Types.Right', V69} end end, V4))), case V70 of {'Idris.Prelude.Types.Left', E6} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V72) -> begin (V105 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V73) -> case V73 of {'Idris.Prelude.Types.Left', E8} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V75) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V76) -> begin (V104 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V79, V80, V81)) end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> V83 end end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> begin (V90 = (V87(V89))), begin (V91 = (V88(V89))), (V90(V91)) end end end end end end end}, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> begin (V97 = (V94(V96))), ((V95(V97))(V96)) end end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> begin (V101 = (V99(V100))), (V101(V100)) end end end end}, fun (V102) -> fun (V103) -> V103 end end}, V5, ('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'((V0(('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(V37))))))))))(V76))), {'Idris.Prelude.Types.Right', V104} end end, V4))), case V105 of {'Idris.Prelude.Types.Left', E10} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); {'Idris.Prelude.Types.Left', E12} -> (fun (V108) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.FileErr', V5, V108}, V4)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--findCG-4658'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Options.Chez'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.Chez':'un--codegenChez'())} end()); {'Idris.Core.Options.ChezSep'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.ChezSep':'un--codegenChezSep'())} end()); {'Idris.Core.Options.Racket'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.Racket':'un--codegenRacket'())} end()); {'Idris.Core.Options.Gambit'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.Scheme.Gambit':'un--codegenGambit'())} end()); {'Idris.Core.Options.Node'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.Node':'un--codegenNode'())} end()); {'Idris.Core.Options.Javascript'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.Javascript':'un--codegenJavascript'())} end()); {'Idris.Core.Options.RefC'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.RefC.RefC':'un--codegenRefC'())} end()); {'Idris.Core.Options.Other', E0} -> (fun (V5) -> begin (V6 = ('Idris.Idris2.Idris.REPL.Opts':'un--getCodegen'(V1, V5, V4))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> case V8 of {'Idris.Prelude.Types.Just', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', V9} end(E3)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V42 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V10) -> case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V13) -> begin (V41 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> V20 end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), begin (V28 = (V25(V26))), (V27(V28)) end end end end end end end}, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V31(V33))), ((V32(V34))(V33)) end end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V36(V37))), (V38(V37)) end end end end}, fun (V39) -> fun (V40) -> V40 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"No such code generator: "/utf8>>, V5))))(V13))), {'Idris.Prelude.Types.Right', V41} end end, V4))), case V42 of {'Idris.Prelude.Types.Left', E6} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V44) -> begin (V72 = (('Idris.Idris2.Libraries.Utils.System':'un--softExitWith'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V47, V48, V49)) end end end end end, fun (V50) -> fun (V51) -> fun (V52) -> V51 end end end, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), begin (V59 = (V56(V57))), (V58(V59)) end end end end end end end}, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> begin (V65 = (V62(V64))), ((V63(V65))(V64)) end end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V67(V68))), (V69(V68)) end end end end}, fun (V70) -> fun (V71) -> V71 end end}, {'Idris.Erlang.System.ExitFailure', 1, 0}))(V4))), {'Idris.Prelude.Types.Right', V72} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--25502-12411--in--un--toPaths'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Libraries.System.Directory.Tree':'un--depthFirst'(fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V12) -> [('Idris.Idris2.Libraries.System.Directory.Tree':'un--toFilePath'(V8, V9)) | V12] end, (V10()), V11)) end end end end, V6, V7, fun (V13) -> [] end)).
'nested--18995-5134--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of <<""/utf8>> -> <<""/utf8>>; _ -> case ('Idris.Idris2.Data.String':'un--isPrefixOf'(V4, V6)) of 1 -> ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--drop'(('Idris.Idris2.Prelude.Types.String':'un--length'(V4)), ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V6)))))))); 0 -> ('Idris.Idris2.Prelude.Types':'un--strCons'(('erlang':'hd'(('string':'next_grapheme'(V6)))), ('nested--18995-5134--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, case ('string':'next_grapheme'(V6)) of [E0 | E1] when (erlang:'is_binary'(E1)) -> (fun (V7, V8) -> V8 end(E0, E1)); _ -> <<""/utf8>> end)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--28055-13121--in--un--prompt'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> <<"[tc] "/utf8>>; 1 -> <<""/utf8>>; 2 -> <<"[exec] "/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--19844-5881--in--un--match'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case ('Idris.Idris2.Core.Name':'un--matches'(V1, V5)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Idris.Prelude.EqOrd.MkEq', fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V8, V9)) end end}, ('Idris.Idris2.Core.Name':'un--userNameRoot'(V5)), ('Idris.Idris2.Core.Name':'un--userNameRoot'(V1)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--28093-13882--in--un--makeSpace'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Prelude.Types':'un--take'(V0, ('Idris.Idris2.Data.Stream':'un--repeat'($ )))))).
'nested--19076-5205--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> [('Idris.Idris2.Parser.Unlit':'un--relit'(V6, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, <<"\x{a}"/utf8>>)))))))) | []]; [E0 | E1] -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(('Idris.Idris2.Data.String':'un--trim'(V8)), <<""/utf8>>)) of 1 -> [('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Parser.Unlit':'un--relit'(V6, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, <<"\x{a}"/utf8>>)))))))))) | V9]; 0 -> [V8 | ('nested--19076-5205--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V9))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--27792-12805--in--un--getLoad'(V0, V1, V2, V3) -> {'Idris.Prelude.Types.Just', (V2(('Idris.Idris2.Data.String':'un--trim'(('Idris.Idris2.Prelude.Types':'un--substr'(V1, ('Idris.Idris2.Prelude.Types.String':'un--length'(V3)), V3))))))}.
'nested--27792-12806--in--un--fnameCmd'(V0, V1, V2) -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> case ('Idris.Idris2.Data.String':'un--isPrefixOf'(V5, V2)) of 1 -> ('nested--27792-12805--in--un--getLoad'(V0, ('Idris.Idris2.Prelude.Types.String':'un--length'(V5)), V6, V2)); 0 -> ('nested--27792-12806--in--un--fnameCmd'(V0, V4, V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--24809-10108--in--un--execDecl'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = (('Idris.Idris2.Idris.Desugar':'un--desugarDecl'(V3, V5, V4, V2, [], V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Context':'un--resolveName'(V5, {'Idris.Core.Name.UN', <<"[defs]"/utf8>>}, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.TTImp.Elab.Check.EST'}, ('Idris.Idris2.TTImp.Elab.Check':'un--initEStateSub'([], V13, {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.SubRefl'})), V7))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('un--getItDecls'(V1, V7))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> ('un--processLocal'([], V5, V2, V4, V16, [], [], {'Idris.Core.Env.Nil'}, V19, V10, V7)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--25397-10628--in--un--elabMode'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> {'Idris.TTImp.Elab.Check.InType'}; _ -> {'Idris.TTImp.Elab.Check.InExpr'} end.
'nested--28093-13883--in--un--col'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('nested--28093-13882--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--minus'(V0, ('Idris.Idris2.Prelude.Types.String':'un--length'(V2)))))), ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, ('Idris.Idris2.Prelude.Types.String':'un--++'(('nested--28093-13882--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--minus'(V1, ('Idris.Idris2.Prelude.Types.String':'un--length'(V3)))))), V4)))))))).
'nested--19844-5880--in--un--cmp'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> case V6 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> case V4 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V11, V12) -> case V11 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V13, V14) -> case V12 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V15, V16) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V19, V20)) end end}, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V25, V26)) end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V33, V34)) end end}, {'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V37, V38)) end end}, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V45, V46)) end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V47, V48)) end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V49, V50)) end end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V51, V52)) end end}, {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V9, V7)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V10, V8))}, {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V15, V13)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V16, V14))})) end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--28093-13884--in--un--cmdInfo'(V0) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('nested--28093-13883--in--un--col'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<" "/utf8>>, V1)), ('Idris.Idris2.Idris.Parser':'dn--un--show_Show_CmdArg'(V3)), V4)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--19207-5322--in--un--addW'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of 0 -> case V6 of [E2 | E3] -> (fun (V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Data.List':'un--reverse'(V5)), ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V9) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V3, V9)) end, V2)), V8)))) end(E2, E3)); [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V10 = (V4 - 1)), case V6 of [E0 | E1] -> (fun (V11, V12) -> ('nested--19207-5322--in--un--addW'(V0, V1, V2, V3, V10, [V11 | V5], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Data.List':'un--reverse'(V5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'nested--19076-5206--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Data.List':'un--reverse'(('nested--19076-5205--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V8)))), V9)); _ -> begin (V10 = (V7 - 1)), case V9 of [E0 | E1] -> (fun (V11, V12) -> ('nested--19076-5206--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V10, [V11 | V8], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Data.List':'un--reverse'(V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--updateFile'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> ('case--updateFile-4949'(V1, V0, V6, case V6 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V9 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--showInfo'(V0, V1, V2) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> begin (V90 = begin (V34 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V7, V8, V9)) end end end, fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V10, V11, V12)) end end end}, case V6 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V30 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2))), case V34 of {'Idris.Prelude.Types.Left', E25} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V36) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V37) -> case V37 of {'Idris.Prelude.Types.Left', E27} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V39) -> {'Idris.Prelude.Types.Right', 0} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V40) -> begin (V89 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V43, V44, V45)) end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> V47 end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V51(V53))), begin (V55 = (V52(V53))), (V54(V55)) end end end end end end end}, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), ((V59(V61))(V60)) end end end end end end, fun (V62) -> fun (V63) -> fun (V64) -> begin (V65 = (V63(V64))), (V65(V64)) end end end end}, fun (V66) -> fun (V67) -> V67 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V6 of {'Idris.Core.Context.MkGlobalDef', E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> V69 end(E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Core.Context':'dn--un--show_Show_Def'(V36))))))))(V40))), {'Idris.Prelude.Types.Right', V89} end end, V2)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E50} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V92) -> begin (V146 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V93) -> case V93 of {'Idris.Prelude.Types.Left', E52} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V95) -> {'Idris.Prelude.Types.Right', 0} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V96) -> begin (V145 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V99, V100, V101)) end end end end end, fun (V102) -> fun (V103) -> fun (V104) -> V103 end end end, fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> begin (V110 = (V107(V109))), begin (V111 = (V108(V109))), (V110(V111)) end end end end end end end}, fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> begin (V117 = (V114(V116))), ((V115(V117))(V116)) end end end end end end, fun (V118) -> fun (V119) -> fun (V120) -> begin (V121 = (V119(V120))), (V121(V120)) end end end end}, fun (V122) -> fun (V123) -> V123 end end}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(case V6 of {'Idris.Core.Context.MkGlobalDef', E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74} -> (fun (V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144) -> V131 end(E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V96))), {'Idris.Prelude.Types.Right', V145} end end, V2))), case V146 of {'Idris.Prelude.Types.Left', E75} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V148) -> begin (V205 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V149) -> case V149 of {'Idris.Prelude.Types.Left', E77} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V151) -> {'Idris.Prelude.Types.Right', 0} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V152) -> begin (V204 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V155, V156, V157)) end end end end end, fun (V158) -> fun (V159) -> fun (V160) -> V159 end end end, fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> begin (V166 = (V163(V165))), begin (V167 = (V164(V165))), (V166(V167)) end end end end end end end}, fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> begin (V173 = (V170(V172))), ((V171(V173))(V172)) end end end end end end, fun (V174) -> fun (V175) -> fun (V176) -> begin (V177 = (V175(V176))), (V177(V176)) end end end end}, fun (V178) -> fun (V179) -> V179 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Erasable args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V180) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V180)) end, fun (V181) -> fun (V182) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V181, V182)) end end}, case V6 of {'Idris.Core.Context.MkGlobalDef', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99} -> (fun (V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203) -> V186 end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V152))), {'Idris.Prelude.Types.Right', V204} end end, V2))), case V205 of {'Idris.Prelude.Types.Left', E100} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V207) -> begin (V264 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V208) -> case V208 of {'Idris.Prelude.Types.Left', E102} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V210) -> {'Idris.Prelude.Types.Right', 0} end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V211) -> begin (V263 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V214, V215, V216)) end end end end end, fun (V217) -> fun (V218) -> fun (V219) -> V218 end end end, fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> begin (V225 = (V222(V224))), begin (V226 = (V223(V224))), (V225(V226)) end end end end end end end}, fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> begin (V232 = (V229(V231))), ((V230(V232))(V231)) end end end end end end, fun (V233) -> fun (V234) -> fun (V235) -> begin (V236 = (V234(V235))), (V236(V235)) end end end end}, fun (V237) -> fun (V238) -> V238 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Detaggable arg types: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V239) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V239)) end, fun (V240) -> fun (V241) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V240, V241)) end end}, case V6 of {'Idris.Core.Context.MkGlobalDef', E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124} -> (fun (V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262) -> V246 end(E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V211))), {'Idris.Prelude.Types.Right', V263} end end, V2))), case V264 of {'Idris.Prelude.Types.Left', E125} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V266) -> begin (V323 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V267) -> case V267 of {'Idris.Prelude.Types.Left', E127} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V269) -> {'Idris.Prelude.Types.Right', 0} end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V270) -> begin (V322 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V273, V274, V275)) end end end end end, fun (V276) -> fun (V277) -> fun (V278) -> V277 end end end, fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> begin (V284 = (V281(V283))), begin (V285 = (V282(V283))), (V284(V285)) end end end end end end end}, fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> begin (V291 = (V288(V290))), ((V289(V291))(V290)) end end end end end end, fun (V292) -> fun (V293) -> fun (V294) -> begin (V295 = (V293(V294))), (V295(V294)) end end end end}, fun (V296) -> fun (V297) -> V297 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Specialise args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V298) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V298)) end, fun (V299) -> fun (V300) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V299, V300)) end end}, case V6 of {'Idris.Core.Context.MkGlobalDef', E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149} -> (fun (V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321) -> V306 end(E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V270))), {'Idris.Prelude.Types.Right', V322} end end, V2))), case V323 of {'Idris.Prelude.Types.Left', E150} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V325) -> begin (V382 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V326) -> case V326 of {'Idris.Prelude.Types.Left', E152} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V328) -> {'Idris.Prelude.Types.Right', 0} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V329) -> begin (V381 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V332, V333, V334)) end end end end end, fun (V335) -> fun (V336) -> fun (V337) -> V336 end end end, fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> begin (V343 = (V340(V342))), begin (V344 = (V341(V342))), (V343(V344)) end end end end end end end}, fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> begin (V350 = (V347(V349))), ((V348(V350))(V349)) end end end end end end, fun (V351) -> fun (V352) -> fun (V353) -> begin (V354 = (V352(V353))), (V354(V353)) end end end end}, fun (V355) -> fun (V356) -> V356 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Inferrable args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V357) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V357)) end, fun (V358) -> fun (V359) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V358, V359)) end end}, case V6 of {'Idris.Core.Context.MkGlobalDef', E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174} -> (fun (V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380) -> V366 end(E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V329))), {'Idris.Prelude.Types.Right', V381} end end, V2))), case V382 of {'Idris.Prelude.Types.Left', E175} -> (fun (V383) -> {'Idris.Prelude.Types.Left', V383} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V384) -> begin (V439 = case V6 of {'Idris.Core.Context.MkGlobalDef', E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197} -> (fun (V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405) -> case V403 of {'Idris.Prelude.Types.Just', E198} -> (fun (V406) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V407) -> case V407 of {'Idris.Prelude.Types.Left', E199} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V409) -> {'Idris.Prelude.Types.Right', 0} end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V410) -> begin (V438 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V413, V414, V415)) end end end end end, fun (V416) -> fun (V417) -> fun (V418) -> V417 end end end, fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> begin (V424 = (V421(V423))), begin (V425 = (V422(V423))), (V424(V425)) end end end end end end end}, fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> begin (V431 = (V428(V430))), ((V429(V431))(V430)) end end end end end end, fun (V432) -> fun (V433) -> fun (V434) -> begin (V435 = (V433(V434))), (V435(V434)) end end end end}, fun (V436) -> fun (V437) -> V437 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Compiled: "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_CDef'(V406))))))(V410))), {'Idris.Prelude.Types.Right', V438} end end, V2)) end(E198)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V439 of {'Idris.Prelude.Types.Left', E201} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V441) -> begin (V482 = begin (V444 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V442) -> fun (V443) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V442, V443)) end end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context':'un--refersTo'(V6)))), [], V2))), case V444 of {'Idris.Prelude.Types.Left', E203} -> (fun (V445) -> {'Idris.Prelude.Types.Left', V445} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V446) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V447) -> case V447 of {'Idris.Prelude.Types.Left', E205} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V449) -> {'Idris.Prelude.Types.Right', 0} end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V450) -> begin (V481 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V451) -> fun (V452) -> fun (V453) -> fun (V454) -> fun (V455) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V453, V454, V455)) end end end end end, fun (V456) -> fun (V457) -> fun (V458) -> V457 end end end, fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> begin (V464 = (V461(V463))), begin (V465 = (V462(V463))), (V464(V465)) end end end end end end end}, fun (V466) -> fun (V467) -> fun (V468) -> fun (V469) -> fun (V470) -> begin (V471 = (V468(V470))), ((V469(V471))(V470)) end end end end end end, fun (V472) -> fun (V473) -> fun (V474) -> begin (V475 = (V473(V474))), (V475(V474)) end end end end}, fun (V476) -> fun (V477) -> V477 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Refers to: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V478) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V478)) end, fun (V479) -> fun (V480) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V479, V480)) end end}, V446))))))(V450))), {'Idris.Prelude.Types.Right', V481} end end, V2)) end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V482 of {'Idris.Prelude.Types.Left', E207} -> (fun (V483) -> {'Idris.Prelude.Types.Left', V483} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V484) -> begin (V525 = begin (V487 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V485) -> fun (V486) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V485, V486)) end end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context':'un--refersToRuntime'(V6)))), [], V2))), case V487 of {'Idris.Prelude.Types.Left', E209} -> (fun (V488) -> {'Idris.Prelude.Types.Left', V488} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V489) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V490) -> case V490 of {'Idris.Prelude.Types.Left', E211} -> (fun (V491) -> {'Idris.Prelude.Types.Left', V491} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V492) -> {'Idris.Prelude.Types.Right', 0} end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V493) -> begin (V524 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V496, V497, V498)) end end end end end, fun (V499) -> fun (V500) -> fun (V501) -> V500 end end end, fun (V502) -> fun (V503) -> fun (V504) -> fun (V505) -> fun (V506) -> begin (V507 = (V504(V506))), begin (V508 = (V505(V506))), (V507(V508)) end end end end end end end}, fun (V509) -> fun (V510) -> fun (V511) -> fun (V512) -> fun (V513) -> begin (V514 = (V511(V513))), ((V512(V514))(V513)) end end end end end end, fun (V515) -> fun (V516) -> fun (V517) -> begin (V518 = (V516(V517))), (V518(V517)) end end end end}, fun (V519) -> fun (V520) -> V520 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Refers to (runtime): "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V521) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V521)) end, fun (V522) -> fun (V523) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V522, V523)) end end}, V489))))))(V493))), {'Idris.Prelude.Types.Right', V524} end end, V2)) end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V525 of {'Idris.Prelude.Types.Left', E213} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V527) -> begin (V584 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V528) -> case V528 of {'Idris.Prelude.Types.Left', E215} -> (fun (V529) -> {'Idris.Prelude.Types.Left', V529} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V530) -> {'Idris.Prelude.Types.Right', 0} end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V531) -> begin (V583 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V532) -> fun (V533) -> fun (V534) -> fun (V535) -> fun (V536) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V534, V535, V536)) end end end end end, fun (V537) -> fun (V538) -> fun (V539) -> V538 end end end, fun (V540) -> fun (V541) -> fun (V542) -> fun (V543) -> fun (V544) -> begin (V545 = (V542(V544))), begin (V546 = (V543(V544))), (V545(V546)) end end end end end end end}, fun (V547) -> fun (V548) -> fun (V549) -> fun (V550) -> fun (V551) -> begin (V552 = (V549(V551))), ((V550(V552))(V551)) end end end end end end, fun (V553) -> fun (V554) -> fun (V555) -> begin (V556 = (V554(V555))), (V556(V555)) end end end end}, fun (V557) -> fun (V558) -> V558 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Flags: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V559) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_DefFlag'(V559)) end, fun (V560) -> fun (V561) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_DefFlag'(V560, V561)) end end}, case V6 of {'Idris.Core.Context.MkGlobalDef', E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237} -> (fun (V562, V563, V564, V565, V566, V567, V568, V569, V570, V571, V572, V573, V574, V575, V576, V577, V578, V579, V580, V581, V582) -> V573 end(E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V531))), {'Idris.Prelude.Types.Right', V583} end end, V2))), case V584 of {'Idris.Prelude.Types.Left', E238} -> (fun (V585) -> {'Idris.Prelude.Types.Left', V585} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V586) -> begin (V616 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V587) -> fun (V588) -> ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V589) -> fun (V590) -> fun (V591) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_SCCall'(V589, V590, V591)) end end end, fun (V592) -> fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_SCCall'(V592, V593, V594)) end end end}, V587, V588)) end end, case V6 of {'Idris.Core.Context.MkGlobalDef', E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260} -> (fun (V595, V596, V597, V598, V599, V600, V601, V602, V603, V604, V605, V606, V607, V608, V609, V610, V611, V612, V613, V614, V615) -> V615 end(E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, [], V2))), case V616 of {'Idris.Prelude.Types.Left', E261} -> (fun (V617) -> {'Idris.Prelude.Types.Left', V617} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V618) -> case ('Idris.Idris2.Data.List':'un--isNil'(case V6 of {'Idris.Core.Context.MkGlobalDef', E269, E270, E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289} -> (fun (V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629, V630, V631, V632, V633, V634, V635, V636, V637, V638, V639) -> V639 end(E269, E270, E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> ((begin (V678 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V640) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V640 of {'Idris.Core.Context.MkSCCall', E263, E264} -> (fun (V641, V642) -> V641 end(E263, E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V643) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V644) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V645) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V645)) end, fun (V646) -> fun (V647) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V646, V647)) end end}, {'Idris.Prelude.Show.MkShow', fun (V648) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_SizeChange'(V648)) end, fun (V649) -> fun (V650) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_SizeChange'(V649, V650)) end end}}, V644)) end, fun (V651) -> fun (V652) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V653) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V653)) end, fun (V654) -> fun (V655) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V654, V655)) end end}, {'Idris.Prelude.Show.MkShow', fun (V656) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_SizeChange'(V656)) end, fun (V657) -> fun (V658) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_SizeChange'(V657, V658)) end end}}, V651, V652)) end end}, V643)) end, fun (V659) -> fun (V660) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V661) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V662) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V662)) end, fun (V663) -> fun (V664) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V663, V664)) end end}, {'Idris.Prelude.Show.MkShow', fun (V665) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_SizeChange'(V665)) end, fun (V666) -> fun (V667) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_SizeChange'(V666, V667)) end end}}, V661)) end, fun (V668) -> fun (V669) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V670) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V670)) end, fun (V671) -> fun (V672) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V671, V672)) end end}, {'Idris.Prelude.Show.MkShow', fun (V673) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_SizeChange'(V673)) end, fun (V674) -> fun (V675) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_SizeChange'(V674, V675)) end end}}, V668, V669)) end end}, V659, V660)) end end}, case V640 of {'Idris.Core.Context.MkSCCall', E265, E266} -> (fun (V676, V677) -> V677 end(E265, E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))) end, V618))), fun () -> fun (V679) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V680) -> case V680 of {'Idris.Prelude.Types.Left', E267} -> (fun (V681) -> {'Idris.Prelude.Types.Left', V681} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V682) -> {'Idris.Prelude.Types.Right', 0} end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V683) -> begin (V711 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V684) -> fun (V685) -> fun (V686) -> fun (V687) -> fun (V688) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V686, V687, V688)) end end end end end, fun (V689) -> fun (V690) -> fun (V691) -> V690 end end end, fun (V692) -> fun (V693) -> fun (V694) -> fun (V695) -> fun (V696) -> begin (V697 = (V694(V696))), begin (V698 = (V695(V696))), (V697(V698)) end end end end end end end}, fun (V699) -> fun (V700) -> fun (V701) -> fun (V702) -> fun (V703) -> begin (V704 = (V701(V703))), ((V702(V704))(V703)) end end end end end end, fun (V705) -> fun (V706) -> fun (V707) -> begin (V708 = (V706(V707))), (V708(V707)) end end end end}, fun (V709) -> fun (V710) -> V710 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Size change: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, V678))))))(V683))), {'Idris.Prelude.Types.Right', V711} end end, V679)) end end end())(V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--setOpt'(V0, V1, V2, V3) -> case V2 of {'Idris.Idris.Syntax.ShowImplicits', E0} -> (fun (V4) -> begin (V5 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V3))), case V5 of {'Idris.Prelude.Types.Left', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V7) -> ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V7 of {'Idris.Core.Options.MkPPOpts', E3, E4, E5} -> (fun (V8, V9, V10) -> {'Idris.Core.Options.MkPPOpts', V4, V9, V10} end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.Idris.Syntax.ShowNamespace', E6} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V3))), case V12 of {'Idris.Prelude.Types.Left', E7} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V14 of {'Idris.Core.Options.MkPPOpts', E9, E10, E11} -> (fun (V15, V16, V17) -> {'Idris.Core.Options.MkPPOpts', V15, V16, V11} end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); {'Idris.Idris.Syntax.ShowTypes', E12} -> (fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E13} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V22) -> begin (V39 = ('erlang':'put'(V1, case V22 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V18, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38} end(E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V39} end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); {'Idris.Idris.Syntax.EvalMode', E31} -> (fun (V40) -> begin (V42 = begin (V41 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V41} end), case V42 of {'Idris.Prelude.Types.Left', E32} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V44) -> begin (V61 = ('erlang':'put'(V1, case V44 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V45, V40, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60} end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V61} end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); {'Idris.Idris.Syntax.Editor', E50} -> (fun (V62) -> begin (V64 = begin (V63 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V63} end), case V64 of {'Idris.Prelude.Types.Left', E51} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V66) -> begin (V83 = ('erlang':'put'(V1, case V66 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V67, V68, V69, V70, V71, V62, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82} end(E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V83} end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); {'Idris.Idris.Syntax.CG', E69} -> (fun (V84) -> begin (V86 = begin (V85 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V85} end), case V86 of {'Idris.Prelude.Types.Left', E70} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V88) -> case ('Idris.Idris2.Core.Options':'un--getCG'(case V88 of {'Idris.Core.Context.MkDefs', E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100} -> (fun (V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116) -> V93 end(E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V84)) of {'Idris.Prelude.Types.Just', E72} -> (fun (V117) -> ('Idris.Idris2.Core.Context':'un--setCG'(V0, V117, V3)) end(E72)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V1, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No such code generator available"/utf8>>)), V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); {'Idris.Idris.Syntax.Profile', E101} -> (fun (V118) -> begin (V119 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V3))), case V119 of {'Idris.Prelude.Types.Left', E102} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V121) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V121 of {'Idris.Core.Options.MkSessionOpts', E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122} -> (fun (V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140) -> {'Idris.Core.Options.MkSessionOpts', V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V118, V139, V140} end(E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--rtrim'(V0) -> ('Idris.Idris2.Prelude.Types':'un--reverse'(('Idris.Idris2.Data.String':'un--ltrim'(('Idris.Idris2.Prelude.Types':'un--reverse'(V0)))))).
'un--replEval'(V0, V1, V2, V3, V4, V5) -> case V2 of 1 -> fun (V6) -> ('Idris.Idris2.Core.Normalise':'un--normaliseAll'(V0, V1, V3, V4, V5, V6)) end; _ -> fun (V7) -> ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, V1, V3, V4, V5, V7)) end end.
'un--replCmd'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of <<""/utf8>> -> {'Idris.Prelude.Types.Right', 0}; _ -> begin (V7 = ('un--interpret'(V0, V1, V2, V3, V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> (('un--displayResult'(V0, V1, V2, V3, V4, V9))(V6)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--repl'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--getNS'(V0, V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V61 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V13) -> case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V16) -> begin (V60 = (('Idris.Idris2.Prelude.IO':'un--putStr'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> V23 end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), begin (V31 = (V28(V29))), (V30(V31)) end end end end end end end}, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V34(V36))), ((V35(V37))(V36)) end end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V39(V40))), (V41(V40)) end end end end}, fun (V42) -> fun (V43) -> V43 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('nested--28055-13121--in--un--prompt'(V4, V3, V2, V1, V0, case V12 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V45 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_Namespace'(V8)), <<"> "/utf8>>))))))(V16))), {'Idris.Prelude.Types.Right', V60} end end, V5))), case V61 of {'Idris.Prelude.Types.Left', E22} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V63) -> begin (V96 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V64) -> case V64 of {'Idris.Prelude.Types.Left', E24} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V66) -> {'Idris.Prelude.Types.Right', 0} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V67) -> begin (V95 = (('Idris.Idris2.Erlang.System.File':'un--fflush'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V70, V71, V72)) end end end end end, fun (V73) -> fun (V74) -> fun (V75) -> V74 end end end, fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> begin (V81 = (V78(V80))), begin (V82 = (V79(V80))), (V81(V82)) end end end end end end end}, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V85(V87))), ((V86(V88))(V87)) end end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> begin (V92 = (V90(V91))), (V92(V91)) end end end end}, fun (V93) -> fun (V94) -> V94 end end}, ('Idris.Idris2.Erlang.System.File':'un--stdout'())))(V67))), {'Idris.Prelude.Types.Right', V95} end end, V5))), case V96 of {'Idris.Prelude.Types.Left', E26} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V98) -> begin (V127 = begin (V126 = (('Idris.Idris2.Prelude.IO':'un--getLine'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V101, V102, V103)) end end end end end, fun (V104) -> fun (V105) -> fun (V106) -> V105 end end end, fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> begin (V112 = (V109(V111))), begin (V113 = (V110(V111))), (V112(V113)) end end end end end end end}, fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> begin (V119 = (V116(V118))), ((V117(V119))(V118)) end end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> begin (V123 = (V121(V122))), (V123(V122)) end end end end}, fun (V124) -> fun (V125) -> V125 end end}))(V5))), {'Idris.Prelude.Types.Right', V126} end), case V127 of {'Idris.Prelude.Types.Left', E28} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V129) -> begin (V130 = ('un--interpret'(V0, V1, V2, V3, V4, V129, V5))), case V130 of {'Idris.Prelude.Types.Left', E30} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V132) -> ('un--handleResult'(V0, V1, V2, V3, V4, V132, V5)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--proofSearch'(V0, V1, V2, V3) -> case V2 of 0 -> case V3 of [E2 | E3] -> (fun (V4, V5) -> [('nested--18995-5134--in--un--replaceStr'(V4, V5, V1, V0, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"?"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0)))), V1, V4)) | V5] end(E2, E3)); _ -> case V3 of [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V6 = (V2 - 1)), case V3 of [E0 | E1] -> (fun (V7, V8) -> [V7 | ('un--proofSearch'(V0, V1, V6, V8))] end(E0, E1)); _ -> case V3 of [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--processLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> ('Idris.Idris2.TTImp.Elab.Local':'un--localHelper'(V0, V1, V2, V3, V4, V6, V7, V8, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V13) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V0, V1, V2, V3, V5, V11, V7, V13)) end, V9, V12)) end end, V10)).
'un--processEdit'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.TypeAt', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V17) -> begin (V28 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V8 end, ('un--findInTree'({'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V6, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V7, 1))}, V8, case V17 of {'Idris.Core.Metadata.MkMetadata', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> V23 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))), begin (V57 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V28, case V13 of {'Idris.Core.Context.MkDefs', E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56) -> V29 end(E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V57 of {'Idris.Prelude.Types.Left', E45} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V59) -> begin (V64 = case V59 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}}; _ -> begin (V61 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V60) -> ('un--displayType'(V0, V2, V13, V60)) end, V59, [], V9))), case V61 of {'Idris.Prelude.Types.Left', E47} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V63))}} end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V64 of {'Idris.Prelude.Types.Left', E49} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V66) -> begin (V70 = ('Idris.Idris2.Core.Metadata':'un--findTypeAt'(V3, fun (V67) -> fun (V68) -> ('un--anyAt'(fun (V69) -> ('Idris.Idris2.Core.FC':'un--within'({'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V6, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V7, 1))}, V69)) end, V67, V68)) end end, V9))), case V70 of {'Idris.Prelude.Types.Left', E51} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V72) -> (('case--processEdit-6066'(V8, V7, V6, V4, V3, V2, V1, V0, V13, V17, V28, V59, V66, V72, {'Idris.Builtin.MkPair', V66, V72}))(V9)) end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.Idris.Syntax.CaseSplit', E53, E54, E55, E56} -> (fun (V73, V74, V75, V76) -> begin (V78 = fun (V77) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V75, 0)) of 1 -> ('Idris.Idris2.Core.FC':'un--within'({'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V74, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V75, 1))}, V77)); 0 -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V74, 1)), V77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), fun (V79) -> begin (V82 = ('Idris.Idris2.TTImp.Interactive.CaseSplit':'un--getSplits'(V0, V3, V1, fun (V80) -> fun (V81) -> ('un--anyAt'(V78, V80, V81)) end end, V76, V79))), case V82 of {'Idris.Prelude.Types.Left', E57} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V84) -> case V84 of {'Idris.TTImp.Interactive.CaseSplit.OK', E59} -> (fun (V85) -> begin (V86 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--updateCase'(V0, V2, V4, V85, ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V74, 1)), ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V75, 1)), V79))), case V86 of {'Idris.Prelude.Types.Left', E60} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V88) -> case V73 of 1 -> ('un--updateFile'(V4, fun (V89) -> ('un--caseSplit'(('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'(V88)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V74, 1)))))), V89)) end, V79)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V92, V93)) end end end end, fun (V94) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V94)) end, V88))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); {'Idris.TTImp.Interactive.CaseSplit.SplitFail', E62} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.TTImp.Interactive.CaseSplit':'dn--un--show_Show_SplitError'(V95))))}} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E53, E54, E55, E56)); {'Idris.Idris.Syntax.AddClause', E63, E64, E65} -> (fun (V96, V97, V98) -> fun (V99) -> begin (V100 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--getClause'(V0, V3, V4, V97, V98, V99))), case V100 of {'Idris.Prelude.Types.Left', E66} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V102) -> case V102 of {'Idris.Prelude.Types.Just', E68} -> (fun (V103) -> case V96 of 1 -> ('un--updateFile'(V4, fun (V104) -> ('un--addClause'(V103, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(V97)))), V104)) end, V99)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V103))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E68)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V98)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"not defined here"/utf8>>))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63, E64, E65)); {'Idris.Idris.Syntax.ExprSearch', E69, E70, E71, E72} -> (fun (V105, V106, V107, V108) -> fun (V109) -> begin (V111 = begin (V110 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V110} end), case V111 of {'Idris.Prelude.Types.Left', E73} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V113) -> begin (V115 = begin (V114 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V114} end), case V115 of {'Idris.Prelude.Types.Left', E75} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V117) -> begin (V129 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V118)), ('Idris.Idris2.Core.Name':'un--dropNS'(V119)))) end end, V107, case V117 of {'Idris.Idris.Syntax.MkSyntax', E77, E78, E79, E80, E81, E82, E83, E84, E85} -> (fun (V120, V121, V122, V123, V124, V125, V126, V127, V128) -> V126 end(E77, E78, E79, E80, E81, E82, E83, E84, E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V158 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V107, case V113 of {'Idris.Core.Context.MkDefs', E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113} -> (fun (V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157) -> V130 end(E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V109))), case V158 of {'Idris.Prelude.Types.Left', E114} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V160) -> case V160 of [E116 | E117] -> (fun (V161, V162) -> case V161 of {'Idris.Builtin.MkPair', E118, E119} -> (fun (V163, V164) -> case V164 of {'Idris.Builtin.MkPair', E120, E121} -> (fun (V165, V166) -> case V166 of {'Idris.Core.Context.Hole', E122, E123} -> (fun (V167, V168) -> case V162 of [] -> begin (V170 = fun (V169) -> ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearch'(V0, V3, V1, ('Idris.Idris2.Core.FC':'un--replFC'()), V107, [], V169)) end), begin (V172 = begin (V171 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V171} end), case V172 of {'Idris.Prelude.Types.Left', E124} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V174) -> begin (V192 = begin (V191 = ('erlang':'put'(V4, case V174 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141} -> (fun (V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V175, V176, V177, V178, V179, V180, V181, V182, V183, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V107, V170}}, V185, V186, V187, V188, V189, V190} end(E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V191} end), case V192 of {'Idris.Prelude.Types.Left', E142} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V194) -> begin (V196 = begin (V195 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V195} end), case V196 of {'Idris.Prelude.Types.Left', E144} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V198) -> begin (V199 = ('un--nextProofSearch'(V0, V1, V4, V109))), case V199 of {'Idris.Prelude.Types.Left', E146} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V201) -> case V201 of {'Idris.Prelude.Types.Just', E148} -> (fun (V202) -> case V202 of {'Idris.Builtin.MkPair', E149, E150} -> (fun (V203, V204) -> begin (V205 = ('un--dropLams'(V167, V204))), begin (V206 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V205, V109))), case V206 of {'Idris.Prelude.Types.Left', E151} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V208) -> begin (V209 = case V129 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V208)); 0 -> V208; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V105 of 1 -> ('un--updateFile'(V4, fun (V210) -> ('un--proofSearch'(V107, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V209)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V106, 1)))))), V210)) end, V109)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('un--prettyTerm'(V209))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E148)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V211) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V211)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No search results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No search results"/utf8>>)); 0 -> <<"No search results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V212) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V212)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E122, E123)); {'Idris.Core.Context.PMDef', E153, E154, E155, E156, E157} -> (fun (V213, V214, V215, V216, V217) -> case V214 of [] -> case V215 of {'Idris.Core.CaseTree.STerm', E158, E159} -> (fun (V218, V219) -> case V162 of [] -> begin (V220 = [{'Idris.Builtin.MkPair', V163, {'Idris.Builtin.MkPair', V165, {'Idris.Core.Context.PMDef', V213, [], {'Idris.Core.CaseTree.STerm', V218, V219}, V216, V217}}} | []]), (('case--case block in processEdit-7176'(V108, V107, V106, V105, V4, V3, V2, V1, V0, V113, V117, V129, V216, V217, V218, V163, V165, V219, V213, V220, case V213 of {'Idris.Core.Context.MkPMDefInfo', E160, E161} -> (fun (V221, V222) -> V221 end(E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V109)) end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V223) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V223)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E158, E159)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V224) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V224)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V225) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V225)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E153, E154, E155, E156, E157)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V226) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V226)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E120, E121)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V227) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V227)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E118, E119)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V228) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V228)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E116, E117)); [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Unknown name"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V107))))}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V229) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V229)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E69, E70, E71, E72)); {'Idris.Idris.Syntax.ExprSearchNext'} -> (fun () -> fun (V230) -> begin (V232 = begin (V231 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V231} end), case V232 of {'Idris.Prelude.Types.Left', E162} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V234) -> begin (V236 = begin (V235 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V235} end), case V236 of {'Idris.Prelude.Types.Left', E164} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V238) -> begin (V239 = ('un--nextProofSearch'(V0, V1, V4, V230))), case V239 of {'Idris.Prelude.Types.Left', E166} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V241) -> case V241 of {'Idris.Prelude.Types.Just', E168} -> (fun (V242) -> case V242 of {'Idris.Builtin.MkPair', E169, E170} -> (fun (V243, V244) -> begin (V273 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V243, case V234 of {'Idris.Core.Context.MkDefs', E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198} -> (fun (V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272) -> V245 end(E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V230))), case V273 of {'Idris.Prelude.Types.Left', E199} -> (fun (V274) -> {'Idris.Prelude.Types.Left', V274} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V275) -> case V275 of [E201 | E202] -> (fun (V276, V277) -> case V276 of {'Idris.Builtin.MkPair', E203, E204} -> (fun (V278, V279) -> case V279 of {'Idris.Builtin.MkPair', E205, E206} -> (fun (V280, V281) -> case V281 of {'Idris.Core.Context.Hole', E207, E208} -> (fun (V282, V283) -> case V277 of [] -> begin (V295 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V284) -> fun (V285) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V284)), ('Idris.Idris2.Core.Name':'un--dropNS'(V285)))) end end, V243, case V238 of {'Idris.Idris.Syntax.MkSyntax', E209, E210, E211, E212, E213, E214, E215, E216, E217} -> (fun (V286, V287, V288, V289, V290, V291, V292, V293, V294) -> V292 end(E209, E210, E211, E212, E213, E214, E215, E216, E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V296 = ('un--dropLams'(V282, V244))), begin (V297 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V296, V230))), case V297 of {'Idris.Prelude.Types.Left', E218} -> (fun (V298) -> {'Idris.Prelude.Types.Left', V298} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V299) -> begin (V300 = case V295 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V299)); 0 -> V299; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('un--prettyTerm'(V300))}} end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V301) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V301)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E207, E208)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V302) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V302)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E205, E206)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V303) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V303)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E203, E204)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V304) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V304)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E201, E202)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V305) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V305)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169, E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E168)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V306) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V306)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No more results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No more results"/utf8>>)); 0 -> <<"No more results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.GenerateDef', E220, E221, E222, E223} -> (fun (V307, V308, V309, V310) -> fun (V311) -> begin (V313 = begin (V312 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V312} end), case V313 of {'Idris.Prelude.Types.Left', E224} -> (fun (V314) -> {'Idris.Prelude.Types.Left', V314} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V315) -> begin (V318 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V3, fun (V316) -> fun (V317) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V308, 1)), V316)) end end, V311))), case V318 of {'Idris.Prelude.Types.Left', E226} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V320) -> case V320 of {'Idris.Prelude.Types.Just', E228} -> (fun (V321) -> case V321 of {'Idris.Builtin.MkPair', E229, E230} -> (fun (V322, V323) -> case V323 of {'Idris.Builtin.MkPair', E231, E232} -> (fun (V324, V325) -> case V325 of {'Idris.Builtin.MkPair', E233, E234} -> (fun (V326, V327) -> begin (V356 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V324, case V315 of {'Idris.Core.Context.MkDefs', E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262} -> (fun (V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351, V352, V353, V354, V355) -> V328 end(E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V311))), case V356 of {'Idris.Prelude.Types.Left', E263} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V358) -> begin (V359 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V322, {'Idris.Builtin.MkPair', V324, {'Idris.Builtin.MkPair', V326, V327}}}}), case V358 of {'Idris.Prelude.Types.Just', E265} -> (fun (V360) -> case V360 of {'Idris.Core.Context.None'} -> (fun () -> begin (V366 = fun (V361) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefSort'(V0, V3, V1, fun (V362) -> fun (V363) -> ('Idris.Idris2.Core.FC':'un--onLine'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V308, 1)), V362)) end end, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V364) -> fun (V365) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--mostUsed'(V364, V365)) end end, V324, V361)) end), begin (V368 = begin (V367 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V367} end), case V368 of {'Idris.Prelude.Types.Left', E266} -> (fun (V369) -> {'Idris.Prelude.Types.Left', V369} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V370) -> begin (V388 = begin (V387 = ('erlang':'put'(V4, case V370 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283} -> (fun (V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V308, V366}}, V382, V383, V384, V385, V386} end(E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V387} end), case V388 of {'Idris.Prelude.Types.Left', E284} -> (fun (V389) -> {'Idris.Prelude.Types.Left', V389} end(E284)); {'Idris.Prelude.Types.Right', E285} -> (fun (V390) -> begin (V391 = ('un--nextGenDef'(V0, V1, V4, V310, V311))), case V391 of {'Idris.Prelude.Types.Left', E286} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V393) -> begin (V394 = {'Idris.Prelude.Types.Just', {'Idris.Core.Context.None'}}), case V393 of {'Idris.Prelude.Types.Just', E288} -> (fun (V395) -> case V395 of {'Idris.Builtin.MkPair', E289, E290} -> (fun (V396, V397) -> case V397 of {'Idris.Builtin.MkPair', E291, E292} -> (fun (V398, V399) -> begin (V400 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Core.FC':'un--startCol'(('Idris.Idris2.Core.FC':'un--toNonEmptyFC'(V398))))))))), begin (V401 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V308, V311))), case V401 of {'Idris.Prelude.Types.Left', E293} -> (fun (V402) -> {'Idris.Prelude.Types.Left', V402} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V403) -> begin (V404 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V396, {'Idris.Builtin.MkPair', V398, V399}}}), case V403 of {'Idris.Prelude.Types.Just', E295} -> (fun (V405) -> begin (V406 = {'Idris.Prelude.Types.Just', V405}), ('case--case block in case block in case block in case block in processEdit-8119'(V310, V309, V308, V307, V4, V3, V2, V1, V0, V315, V327, V326, V322, V324, V359, V394, V366, V370, V396, V398, V399, V404, V400, V405, V406, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V405)), V311)) end end(E295)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V407) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V407)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not found"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not found"/utf8>>)); 0 -> <<"Source line not found"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E291, E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E289, E290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E288)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V408) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V408)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No search results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No search results"/utf8>>)); 0 -> <<"No search results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V409) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V409)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Already defined"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Already defined"/utf8>>)); 0 -> <<"Already defined"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E265)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V309))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E233, E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E231, E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E228)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V309)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"on line"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Int'(V308))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E220, E221, E222, E223)); {'Idris.Idris.Syntax.GenerateDefNext'} -> (fun () -> fun (V410) -> begin (V411 = ('un--nextGenDef'(V0, V1, V4, 0, V410))), case V411 of {'Idris.Prelude.Types.Left', E296} -> (fun (V412) -> {'Idris.Prelude.Types.Left', V412} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V413) -> case V413 of {'Idris.Prelude.Types.Just', E298} -> (fun (V414) -> case V414 of {'Idris.Builtin.MkPair', E299, E300} -> (fun (V415, V416) -> case V416 of {'Idris.Builtin.MkPair', E301, E302} -> (fun (V417, V418) -> begin (V419 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Core.FC':'un--startCol'(('Idris.Idris2.Core.FC':'un--toNonEmptyFC'(V417))))))))), begin (V420 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V415, V410))), case V420 of {'Idris.Prelude.Types.Left', E303} -> (fun (V421) -> {'Idris.Prelude.Types.Left', V421} end(E303)); {'Idris.Prelude.Types.Right', E304} -> (fun (V422) -> case V422 of {'Idris.Prelude.Types.Just', E305} -> (fun (V423) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V423)) of {'Idris.Builtin.MkPair', E306, E307} -> (fun (V424, V425) -> begin (V428 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V426) -> fun (V427) -> ('un--printClause'(V0, V2, V424, V419, V426, V427)) end end, V418, [], V410))), case V428 of {'Idris.Prelude.Types.Left', E308} -> (fun (V429) -> {'Idris.Prelude.Types.Left', V429} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V430) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V431) -> fun (V432) -> fun (V433) -> fun (V434) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V433, V434)) end end end end, fun (V435) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V435)) end, V430))))}} end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E306, E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E305)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V436) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V436)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not found"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not found"/utf8>>)); 0 -> <<"Source line not found"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E301, E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E299, E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E298)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V437) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V437)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No more results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No more results"/utf8>>)); 0 -> <<"No more results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.MakeLemma', E310, E311, E312} -> (fun (V438, V439, V440) -> fun (V441) -> begin (V443 = begin (V442 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V442} end), case V443 of {'Idris.Prelude.Types.Left', E313} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E313)); {'Idris.Prelude.Types.Right', E314} -> (fun (V445) -> begin (V447 = begin (V446 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V446} end), case V447 of {'Idris.Prelude.Types.Left', E315} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V449) -> begin (V461 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V450) -> fun (V451) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V450)), ('Idris.Idris2.Core.Name':'un--dropNS'(V451)))) end end, V440, case V449 of {'Idris.Idris.Syntax.MkSyntax', E317, E318, E319, E320, E321, E322, E323, E324, E325} -> (fun (V452, V453, V454, V455, V456, V457, V458, V459, V460) -> V458 end(E317, E318, E319, E320, E321, E322, E323, E324, E325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V490 = ('un--lookupDefTyName'(V440, case V445 of {'Idris.Core.Context.MkDefs', E326, E327, E328, E329, E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353} -> (fun (V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489) -> V462 end(E326, E327, E328, E329, E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V441))), case V490 of {'Idris.Prelude.Types.Left', E354} -> (fun (V491) -> {'Idris.Prelude.Types.Left', V491} end(E354)); {'Idris.Prelude.Types.Right', E355} -> (fun (V492) -> case V492 of [E356 | E357] -> (fun (V493, V494) -> case V493 of {'Idris.Builtin.MkPair', E358, E359} -> (fun (V495, V496) -> case V496 of {'Idris.Builtin.MkPair', E360, E361} -> (fun (V497, V498) -> case V498 of {'Idris.Builtin.MkPair', E362, E363} -> (fun (V499, V500) -> case V499 of {'Idris.Core.Context.Hole', E364, E365} -> (fun (V501, V502) -> case V494 of [] -> begin (V503 = ('Idris.Idris2.TTImp.Interactive.MakeLemma':'un--makeLemma'(V3, V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V440, V501, V500, V441))), case V503 of {'Idris.Prelude.Types.Left', E366} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E366)); {'Idris.Prelude.Types.Right', E367} -> (fun (V505) -> case V505 of {'Idris.Builtin.MkPair', E368, E369} -> (fun (V506, V507) -> begin (V508 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V506, V441))), case V508 of {'Idris.Prelude.Types.Left', E370} -> (fun (V509) -> {'Idris.Prelude.Types.Left', V509} end(E370)); {'Idris.Prelude.Types.Right', E371} -> (fun (V510) -> begin (V511 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, V507, V441))), case V511 of {'Idris.Prelude.Types.Left', E372} -> (fun (V512) -> {'Idris.Prelude.Types.Left', V512} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V513) -> begin (V515 = begin (V514 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V514} end), case V515 of {'Idris.Prelude.Types.Left', E374} -> (fun (V516) -> {'Idris.Prelude.Types.Left', V516} end(E374)); {'Idris.Prelude.Types.Right', E375} -> (fun (V517) -> begin (V518 = ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(case V461 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V513)); 0 -> V513; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V519 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V439, V441))), case V519 of {'Idris.Prelude.Types.Left', E376} -> (fun (V520) -> {'Idris.Prelude.Types.Left', V520} end(E376)); {'Idris.Prelude.Types.Right', E377} -> (fun (V521) -> case V521 of {'Idris.Prelude.Types.Just', E378} -> (fun (V522) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V522)) of {'Idris.Builtin.MkPair', E379, E380} -> (fun (V523, V524) -> case V438 of 1 -> ('un--updateFile'(V4, fun (V525) -> ('un--addMadeLemma'(V523, V440, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V510)), V518, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V439, 1)))))))), V525)) end, V441)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.MadeLemma', V523, V440, V510, V518}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E379, E380)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E378)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V526) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V526)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not found"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not found"/utf8>>)); 0 -> <<"Source line not found"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E368, E369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V527) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V527)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E364, E365)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V528) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V528)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E362, E363)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V529) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V529)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E360, E361)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V530) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V530)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E358, E359)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V531) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V531)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E356, E357)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V532) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V532)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E314)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E310, E311, E312)); {'Idris.Idris.Syntax.MakeCase', E381, E382, E383} -> (fun (V533, V534, V535) -> fun (V536) -> begin (V537 = ('Idris.Idris2.Idris.REPL.Opts':'un--getLitStyle'(V4, V536))), case V537 of {'Idris.Prelude.Types.Left', E384} -> (fun (V538) -> {'Idris.Prelude.Types.Left', V538} end(E384)); {'Idris.Prelude.Types.Right', E385} -> (fun (V539) -> begin (V541 = begin (V540 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V540} end), case V541 of {'Idris.Prelude.Types.Left', E386} -> (fun (V542) -> {'Idris.Prelude.Types.Left', V542} end(E386)); {'Idris.Prelude.Types.Right', E387} -> (fun (V543) -> begin (V555 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V544) -> fun (V545) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V544)), ('Idris.Idris2.Core.Name':'un--dropNS'(V545)))) end end, V535, case V543 of {'Idris.Idris.Syntax.MkSyntax', E388, E389, E390, E391, E392, E393, E394, E395, E396} -> (fun (V546, V547, V548, V549, V550, V551, V552, V553, V554) -> V552 end(E388, E389, E390, E391, E392, E393, E394, E395, E396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V556 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V534, V536))), case V556 of {'Idris.Prelude.Types.Left', E397} -> (fun (V557) -> {'Idris.Prelude.Types.Left', V557} end(E397)); {'Idris.Prelude.Types.Right', E398} -> (fun (V558) -> case V558 of {'Idris.Prelude.Types.Just', E399} -> (fun (V559) -> case ('Idris.Idris2.Parser.Unlit':'un--unlit'(V539, V559)) of {'Idris.Prelude.Types.Right', E400} -> (fun (V560) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V559)) of {'Idris.Builtin.MkPair', E401, E402} -> (fun (V561, V562) -> begin (V563 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeCase'(V555, V535, V560))))))), case V533 of 1 -> ('un--updateFile'(V4, fun (V564) -> ('un--addMadeCase'(V561, V563, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V534, 1)))))))), V564)) end, V536)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.MadeCase', V561, V563}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E401, E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E400)); {'Idris.Prelude.Types.Left', E403} -> (fun (V565) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V566) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V566)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Invalid literate Idris"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Invalid literate Idris"/utf8>>)); 0 -> <<"Invalid literate Idris"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end(E403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E399)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V567) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V567)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not available"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not available"/utf8>>)); 0 -> <<"Source line not available"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E381, E382, E383)); {'Idris.Idris.Syntax.MakeWith', E404, E405, E406} -> (fun (V568, V569, V570) -> fun (V571) -> begin (V572 = ('Idris.Idris2.Idris.REPL.Opts':'un--getLitStyle'(V4, V571))), case V572 of {'Idris.Prelude.Types.Left', E407} -> (fun (V573) -> {'Idris.Prelude.Types.Left', V573} end(E407)); {'Idris.Prelude.Types.Right', E408} -> (fun (V574) -> begin (V575 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V569, V571))), case V575 of {'Idris.Prelude.Types.Left', E409} -> (fun (V576) -> {'Idris.Prelude.Types.Left', V576} end(E409)); {'Idris.Prelude.Types.Right', E410} -> (fun (V577) -> case V577 of {'Idris.Prelude.Types.Just', E411} -> (fun (V578) -> case ('Idris.Idris2.Parser.Unlit':'un--unlit'(V574, V578)) of {'Idris.Prelude.Types.Right', E412} -> (fun (V579) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V578)) of {'Idris.Builtin.MkPair', E413, E414} -> (fun (V580, V581) -> begin (V582 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeWith'(V570, V579))))))), case V568 of 1 -> ('un--updateFile'(V4, fun (V583) -> ('un--addMadeCase'(V580, V582, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V569, 1)))))))), V583)) end, V571)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.MadeWith', V580, V582}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E413, E414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E412)); {'Idris.Prelude.Types.Left', E415} -> (fun (V584) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V585) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V585)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Invalid literate Idris"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Invalid literate Idris"/utf8>>)); 0 -> <<"Invalid literate Idris"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end(E415)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E411)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V586) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V586)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not available"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not available"/utf8>>)); 0 -> <<"Source line not available"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E408)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E404, E405, E406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--processCatch'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Core.Context':'un--branch'(V0, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V19 = begin (V18 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V18} end), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V22) -> begin (V23 = (('un--process'(V0, V1, V2, V3, V4, V5))(V22))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Context':'un--commit'(V0, V22))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Right', V25} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V29) -> fun (V30) -> begin (V32 = begin (V31 = ('erlang':'put'(V0, V9))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E12} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V34) -> begin (V36 = begin (V35 = ('erlang':'put'(V1, V13))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E14} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V38) -> begin (V40 = begin (V39 = ('erlang':'put'(V2, V17))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E16} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V42) -> begin (V44 = begin (V43 = ('erlang':'put'(V4, V21))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E18} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Idris.Error':'un--display'(V0, V2, V4, V29, V30))), case V47 of {'Idris.Prelude.Types.Left', E20} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.REPLError', V49}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--process'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.NewDefn', E0} -> (fun (V6) -> fun (V7) -> ('un--execDecls'(V0, V1, V2, V3, V4, V6, V7)) end end(E0)); {'Idris.Idris.Syntax.Eval', E1} -> (fun (V8) -> fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V30 = case V13 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V15 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V30 of 2 -> begin (V35 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V31) -> case V31 of {'Idris.Prelude.Types.Left', E78} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V33) -> {'Idris.Prelude.Types.Right', 0} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V34) -> ('un--execExp'(V0, V1, V2, V3, V4, V8, V34)) end, V9))), case V35 of {'Idris.Prelude.Types.Left', E80} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Executed', V8}} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V38 = ('un--inferAndNormalize'(V0, V1, V2, V3, V4, V30, V8, V9))), case V38 of {'Idris.Prelude.Types.Left', E20} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V40) -> case V40 of {'Idris.Idris.REPL.WithType', E22, E23} -> (fun (V41, V42) -> begin (V43 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V41, V9))), case V43 of {'Idris.Prelude.Types.Left', E24} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V45) -> begin (V47 = begin (V46 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E26} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V49) -> begin (V51 = begin (V50 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V50} end), case V51 of {'Idris.Prelude.Types.Left', E28} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V53) -> begin (V57 = fun (V54) -> fun (V55) -> fun (V56) -> ('un--replEval'(V0, [], V30, V54, V55, V56)) end end end), begin (V62 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V58) -> case V58 of {'Idris.Prelude.Types.Left', E30} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.DN', <<"it"/utf8>>, V60}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V61) -> ('Idris.Idris2.Core.UnifyState':'un--genName'(V0, V1, <<"evalResult"/utf8>>, V61)) end, V9))), case V62 of {'Idris.Prelude.Types.Left', E32} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V64) -> begin (V69 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V65) -> case V65 of {'Idris.Prelude.Types.Left', E34} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V67) -> {'Idris.Prelude.Types.Right', 0} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V68) -> ('Idris.Idris2.Core.Context':'un--addDef'(V0, V64, ('Idris.Idris2.Core.Context':'un--newDef'(('Idris.Idris2.Core.FC':'un--replFC'()), V64, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), [], V42, 0, {'Idris.Core.Context.PMDef', ('Idris.Idris2.Core.Context':'un--defaultPI'()), [], {'Idris.Core.CaseTree.STerm', 0, V41}, {'Idris.Core.CaseTree.STerm', 0, V41}, []})), V68)) end, V9))), case V69 of {'Idris.Prelude.Types.Left', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V71) -> begin (V72 = ('Idris.Idris2.Core.Context':'un--addToSave'(V0, V64, V9))), case V72 of {'Idris.Prelude.Types.Left', E38} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V74) -> begin (V92 = begin (V91 = ('erlang':'put'(V4, case V53 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, {'Idris.Prelude.Types.Just', V64}, V87, V88, V89, V90} end(E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V91} end), case V92 of {'Idris.Prelude.Types.Left', E56} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V94) -> case case V53 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77} -> (fun (V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110) -> V95 end(E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> begin (V114 = begin (V111 = ((((V57(V49))({'Idris.Core.Env.Nil'}))(V42))(V9))), case V111 of {'Idris.Prelude.Types.Left', E58} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V113) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V113, V9)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V114 of {'Idris.Prelude.Types.Left', E60} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V116) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Evaluated', V45, {'Idris.Prelude.Types.Just', V116}}} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Evaluated', V45, {'Idris.Prelude.Types.Nothing'}}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); {'Idris.Idris.Syntax.Check', E82} -> (fun (V117) -> case V117 of {'Idris.Idris.Syntax.PRef', E97, E98} -> (fun (V118, V119) -> fun (V120) -> case V119 of {'Idris.Core.Name.UN', E133} -> (fun (V121) -> case V121 of <<"it"/utf8>> -> begin (V123 = begin (V122 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V122} end), case V123 of {'Idris.Prelude.Types.Left', E168} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V125) -> case V125 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185} -> (fun (V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141) -> case V137 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.UndefinedName', V118, {'Idris.Core.Name.UN', <<"it"/utf8>>}}, V120)) end()); {'Idris.Prelude.Types.Just', E186} -> (fun (V142) -> (('un--process'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.Check', {'Idris.Idris.Syntax.PRef', V118, V142}}))(V120)) end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V144 = begin (V143 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V143} end), case V144 of {'Idris.Prelude.Types.Left', E134} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V146) -> begin (V175 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V119, case V146 of {'Idris.Core.Context.MkDefs', E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163} -> (fun (V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174) -> V147 end(E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V120))), case V175 of {'Idris.Prelude.Types.Left', E164} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V177) -> case V177 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V118, V119, V120)); _ -> begin (V179 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V178) -> ('un--displayType'(V0, V2, V146, V178)) end, V177, [], V120))), case V179 of {'Idris.Prelude.Types.Left', E166} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V181) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V181))}} end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E133)); _ -> begin (V183 = begin (V182 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V182} end), case V183 of {'Idris.Prelude.Types.Left', E99} -> (fun (V184) -> {'Idris.Prelude.Types.Left', V184} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V185) -> begin (V214 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V119, case V185 of {'Idris.Core.Context.MkDefs', E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128} -> (fun (V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213) -> V186 end(E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V120))), case V214 of {'Idris.Prelude.Types.Left', E129} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V216) -> case V216 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V118, V119, V120)); _ -> begin (V218 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V217) -> ('un--displayType'(V0, V2, V185, V217)) end, V216, [], V120))), case V218 of {'Idris.Prelude.Types.Left', E131} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V220) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V220))}} end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E97, E98)); _ -> fun (V221) -> begin (V222 = ('un--inferAndElab'(V0, V1, V2, V3, V4, {'Idris.TTImp.Elab.Check.InExpr'}, V117, V221))), case V222 of {'Idris.Prelude.Types.Left', E83} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V224) -> case V224 of {'Idris.Idris.REPL.WithType', E85, E86} -> (fun (V225, V226) -> begin (V228 = begin (V227 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V227} end), case V228 of {'Idris.Prelude.Types.Left', E87} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V230) -> begin (V234 = begin (V231 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V230, {'Idris.Core.Env.Nil'}, V225, V221))), case V231 of {'Idris.Prelude.Types.Left', E89} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V233) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V233, V221)) end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V234 of {'Idris.Prelude.Types.Left', E91} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V236) -> begin (V240 = begin (V237 = ('Idris.Idris2.Core.Normalise':'un--normaliseScope'(V0, [], V230, {'Idris.Core.Env.Nil'}, V226, V221))), case V237 of {'Idris.Prelude.Types.Left', E93} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V239) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V239, V221)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V240 of {'Idris.Prelude.Types.Left', E95} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V242) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.TermChecked', V236, V242}} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85, E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E82)); {'Idris.Idris.Syntax.CheckWithImplicits', E187} -> (fun (V243) -> fun (V244) -> begin (V252 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V245) -> case V245 of {'Idris.Prelude.Types.Left', E188} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V247) -> {'Idris.Prelude.Types.Right', case V247 of {'Idris.Core.Options.MkPPOpts', E190, E191, E192} -> (fun (V248, V249, V250) -> V248 end(E190, E191, E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V251) -> ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V251)) end, V244))), case V252 of {'Idris.Prelude.Types.Left', E193} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V254) -> begin (V255 = ('un--setOpt'(V0, V4, {'Idris.Idris.Syntax.ShowImplicits', 1}, V244))), case V255 of {'Idris.Prelude.Types.Left', E195} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V257) -> begin (V258 = (('un--process'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.Check', V243}))(V244))), case V258 of {'Idris.Prelude.Types.Left', E197} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V260) -> begin (V261 = ('un--setOpt'(V0, V4, {'Idris.Idris.Syntax.ShowImplicits', V254}, V244))), case V261 of {'Idris.Prelude.Types.Left', E199} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V263) -> {'Idris.Prelude.Types.Right', V260} end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E187)); {'Idris.Idris.Syntax.PrintDef', E201} -> (fun (V264) -> fun (V265) -> begin (V267 = begin (V266 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V266} end), case V267 of {'Idris.Prelude.Types.Left', E202} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V269) -> begin (V298 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V264, case V269 of {'Idris.Core.Context.MkDefs', E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231} -> (fun (V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297) -> V270 end(E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V265))), case V298 of {'Idris.Prelude.Types.Left', E232} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V300) -> case V300 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V264, V265)); _ -> begin (V302 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V301) -> ('un--displayPats'(V0, V2, V269, V301)) end, V300, [], V265))), case V302 of {'Idris.Prelude.Types.Left', E234} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V304) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V304))}} end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E201)); {'Idris.Idris.Syntax.Reload'} -> (fun () -> fun (V305) -> begin (V307 = begin (V306 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V306} end), case V307 of {'Idris.Prelude.Types.Left', E236} -> (fun (V308) -> {'Idris.Prelude.Types.Left', V308} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V309) -> case V309 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253} -> (fun (V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325) -> case V312 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.NoFileLoaded'}} end()); {'Idris.Prelude.Types.Just', E254} -> (fun (V326) -> ('un--loadMainFile'(V0, V1, V2, V3, V4, V326, V305)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Load', E255} -> (fun (V327) -> fun (V328) -> begin (V330 = begin (V329 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V329} end), case V330 of {'Idris.Prelude.Types.Left', E256} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V332) -> begin (V350 = begin (V349 = ('erlang':'put'(V4, case V332 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273} -> (fun (V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V333, V334, {'Idris.Prelude.Types.Just', V327}, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348} end(E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V349} end), case V350 of {'Idris.Prelude.Types.Left', E274} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V352) -> ('un--loadMainFile'(V0, V1, V2, V3, V4, V327, V328)) end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E255)); {'Idris.Idris.Syntax.ImportMod', E276} -> (fun (V353) -> fun (V354) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V355) -> begin (V356 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V0, V1, V2, {'Idris.Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V353, ('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V353))}, V355))), case V356 of {'Idris.Prelude.Types.Left', E277} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V358) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ModuleLoaded', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V353))}} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V359) -> fun (V360) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ErrorLoadingModule', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V353)), V359}} end end, V354)) end end(E276)); {'Idris.Idris.Syntax.CD', E279} -> (fun (V361) -> fun (V362) -> begin (V363 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V0, V361, V362))), case V363 of {'Idris.Prelude.Types.Left', E280} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V365) -> begin (V366 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'(V362))), case V366 of {'Idris.Prelude.Types.Left', E282} -> (fun (V367) -> {'Idris.Prelude.Types.Left', V367} end(E282)); {'Idris.Prelude.Types.Right', E283} -> (fun (V368) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CurrentDirectory', V368}} end(E283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E279)); {'Idris.Idris.Syntax.CWD'} -> (fun () -> fun (V369) -> begin (V370 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'(V369))), case V370 of {'Idris.Prelude.Types.Left', E284} -> (fun (V371) -> {'Idris.Prelude.Types.Left', V371} end(E284)); {'Idris.Prelude.Types.Right', E285} -> (fun (V372) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CurrentDirectory', V372}} end(E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Edit'} -> (fun () -> fun (V373) -> begin (V375 = begin (V374 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V374} end), case V375 of {'Idris.Prelude.Types.Left', E286} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V377) -> (('case--process-11490'(V4, V3, V2, V1, V0, V377, case V377 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303} -> (fun (V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393) -> V380 end(E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V373)) end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Compile', E304, E305} -> (fun (V394, V395) -> fun (V396) -> ('un--compileExp'(V0, V1, V2, V3, V4, V394, V395, V396)) end end(E304, E305)); {'Idris.Idris.Syntax.Exec', E306} -> (fun (V397) -> fun (V398) -> ('un--execExp'(V0, V1, V2, V3, V4, V397, V398)) end end(E306)); {'Idris.Idris.Syntax.Help'} -> (fun () -> fun (V399) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.RequestedHelp'}} end end()); {'Idris.Idris.Syntax.TypeSearch', E307} -> (fun (V400) -> fun (V401) -> begin (V402 = ('Idris.Idris2.Core.Context':'un--branch'(V0, V401))), case V402 of {'Idris.Prelude.Types.Left', E308} -> (fun (V403) -> {'Idris.Prelude.Types.Left', V403} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V404) -> begin (V433 = case V404 of {'Idris.Core.Context.MkDefs', E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330, E331, E332, E333, E334, E335, E336, E337} -> (fun (V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431, V432) -> V407 end(E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330, E331, E332, E333, E334, E335, E336, E337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V462 = case V404 of {'Idris.Core.Context.MkDefs', E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365} -> (fun (V434, V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461) -> V434 end(E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V463 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, 1, [], V400, V401))), case V463 of {'Idris.Prelude.Types.Left', E366} -> (fun (V464) -> {'Idris.Prelude.Types.Left', V464} end(E366)); {'Idris.Prelude.Types.Right', E367} -> (fun (V465) -> begin (V466 = ('Idris.Idris2.TTImp.BindImplicits':'un--piBindNames'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), [], V465, V401))), case V466 of {'Idris.Prelude.Types.Left', E368} -> (fun (V467) -> {'Idris.Prelude.Types.Left', V467} end(E368)); {'Idris.Prelude.Types.Right', E369} -> (fun (V468) -> begin (V469 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, 0, {'Idris.TTImp.Elab.Check.InType'}, [], [], {'Idris.Core.Env.Nil'}, V468, {'Idris.Prelude.Types.Nothing'}))(V401))), case V469 of {'Idris.Prelude.Types.Left', E370} -> (fun (V470) -> {'Idris.Prelude.Types.Left', V470} end(E370)); {'Idris.Prelude.Types.Right', E371} -> (fun (V471) -> case V471 of {'Idris.Builtin.MkPair', E372, E373} -> (fun (V472, V473) -> begin (V480 = ('Idris.Idris2.Core.Context':'un--toResolvedNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V474) -> fun (V475) -> fun (V476) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V474, V475, V476)) end end end, fun (V477) -> fun (V478) -> fun (V479) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V477, V478, V479)) end end end}, V472, V401))), case V480 of {'Idris.Prelude.Types.Left', E374} -> (fun (V481) -> {'Idris.Prelude.Types.Left', V481} end(E374)); {'Idris.Prelude.Types.Right', E375} -> (fun (V482) -> begin (V648 = begin (V483 = ('Idris.Idris2.Core.Context':'un--allNames'(V462, V401))), case V483 of {'Idris.Prelude.Types.Left', E376} -> (fun (V484) -> {'Idris.Prelude.Types.Left', V484} end(E376)); {'Idris.Prelude.Types.Right', E377} -> (fun (V485) -> begin (V489 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V486) -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V487) -> fun (V488) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V487, V488)) end end, V462, V486)) end, V485, [], V401))), case V489 of {'Idris.Prelude.Types.Left', E378} -> (fun (V490) -> {'Idris.Prelude.Types.Left', V490} end(E378)); {'Idris.Prelude.Types.Right', E379} -> (fun (V491) -> begin (V619 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V492) -> fun (V493) -> ('Idris.Idris2.Data.List':'un--mapMaybe'(V492, V493)) end end, V491, fun (V494) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V494, fun (V495) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V496) -> fun (V497) -> fun (V498) -> fun (V499) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V498, V499)) end end end end, fun (V500) -> fun (V501) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V501)) end end, fun (V502) -> fun (V503) -> fun (V504) -> fun (V505) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V504, V505)) end end end end}, fun (V506) -> fun (V507) -> fun (V508) -> fun (V509) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V508, V509)) end end end end, fun (V510) -> fun (V511) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V511)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V512) -> fun (V513) -> fun (V514) -> fun (V515) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V514, V515)) end end end end, fun (V516) -> fun (V517) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V517)) end end, fun (V518) -> fun (V519) -> fun (V520) -> fun (V521) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V520, V521)) end end end end}, fun (V522) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V523) -> fun (V524) -> fun (V525) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V524, V525)) end end end}, ('Idris.Idris2.Core.Context':'un--visibleIn'(V433, case V495 of {'Idris.Core.Context.MkGlobalDef', E380, E381, E382, E383, E384, E385, E386, E387, E388, E389, E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400} -> (fun (V526, V527, V528, V529, V530, V531, V532, V533, V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, V544, V545, V546) -> V527 end(E380, E381, E382, E383, E384, E385, E386, E387, E388, E389, E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V495 of {'Idris.Core.Context.MkGlobalDef', E401, E402, E403, E404, E405, E406, E407, E408, E409, E410, E411, E412, E413, E414, E415, E416, E417, E418, E419, E420, E421} -> (fun (V547, V548, V549, V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565, V566, V567) -> V556 end(E401, E402, E403, E404, E405, E406, E407, E408, E409, E410, E411, E412, E413, E414, E415, E416, E417, E418, E419, E420, E421)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), fun () -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V568) -> fun (V569) -> fun (V570) -> fun (V571) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V570, V571)) end end end end, fun (V572) -> fun (V573) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V573)) end end, fun (V574) -> fun (V575) -> fun (V576) -> fun (V577) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V576, V577)) end end end end}, fun (V578) -> fun (V579) -> fun (V580) -> fun (V581) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V580, V581)) end end end end, fun (V582) -> fun (V583) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V583)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V584) -> fun (V585) -> fun (V586) -> fun (V587) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V586, V587)) end end end end, fun (V588) -> fun (V589) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V589)) end end, fun (V590) -> fun (V591) -> fun (V592) -> fun (V593) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V592, V593)) end end end end}, fun (V594) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V595) -> fun (V596) -> fun (V597) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V596, V597)) end end end}, ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Core.Name':'un--userNameRoot'(case V495 of {'Idris.Core.Context.MkGlobalDef', E422, E423, E424, E425, E426, E427, E428, E429, E430, E431, E432, E433, E434, E435, E436, E437, E438, E439, E440, E441, E442} -> (fun (V598, V599, V600, V601, V602, V603, V604, V605, V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618) -> V599 end(E422, E423, E424, E425, E426, E427, E428, E429, E430, E431, E432, E433, E434, E435, E436, E437, E438, E439, E440, E441, E442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V495)) end)) end)) end)) end))), begin (V622 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V620) -> fun (V621) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_GlobalDef'(V462, V620, V621)) end end, V619, [], V401))), case V622 of {'Idris.Prelude.Types.Left', E443} -> (fun (V623) -> {'Idris.Prelude.Types.Left', V623} end(E443)); {'Idris.Prelude.Types.Right', E444} -> (fun (V624) -> ('Idris.Idris2.Core.Core':'un--filterM'(fun (V625) -> fun (V626) -> ('Idris.Idris2.Idris.REPL.Common':'un--equivTypes'(V0, case V625 of {'Idris.Core.Context.MkGlobalDef', E445, E446, E447, E448, E449, E450, E451, E452, E453, E454, E455, E456, E457, E458, E459, E460, E461, E462, E463, E464, E465} -> (fun (V627, V628, V629, V630, V631, V632, V633, V634, V635, V636, V637, V638, V639, V640, V641, V642, V643, V644, V645, V646, V647) -> V629 end(E445, E446, E447, E448, E449, E450, E451, E452, E453, E454, E455, E456, E457, E458, E459, E460, E461, E462, E463, E464, E465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V482, V626)) end end, V624, V401)) end(E444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V648 of {'Idris.Prelude.Types.Left', E466} -> (fun (V649) -> {'Idris.Prelude.Types.Left', V649} end(E466)); {'Idris.Prelude.Types.Right', E467} -> (fun (V650) -> begin (V652 = begin (V651 = ('erlang':'put'(V0, V404))), {'Idris.Prelude.Types.Right', V651} end), case V652 of {'Idris.Prelude.Types.Left', E468} -> (fun (V653) -> {'Idris.Prelude.Types.Left', V653} end(E468)); {'Idris.Prelude.Types.Right', E469} -> (fun (V654) -> begin (V683 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V655) -> fun (V656) -> ('Idris.Idris2.Idris.REPL.Common':'un--docsOrSignature'(V4, V0, V2, ('Idris.Idris2.Core.FC':'un--replFC'()), V655, V656)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V657) -> fun (V658) -> fun (V659) -> fun (V660) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V659, V660)) end end end end, fun (V661) -> case V661 of {'Idris.Core.Context.MkGlobalDef', E470, E471, E472, E473, E474, E475, E476, E477, E478, E479, E480, E481, E482, E483, E484, E485, E486, E487, E488, E489, E490} -> (fun (V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672, V673, V674, V675, V676, V677, V678, V679, V680, V681, V682) -> V663 end(E470, E471, E472, E473, E474, E475, E476, E477, E478, E479, E480, E481, E482, E483, E484, E485, E486, E487, E488, E489, E490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V650)), [], V401))), case V683 of {'Idris.Prelude.Types.Left', E491} -> (fun (V684) -> {'Idris.Prelude.Types.Left', V684} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V685) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V686) -> fun (V687) -> fun (V688) -> fun (V689) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V688, V689)) end end end end, fun (V690) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V690)) end, ('Idris.Idris2.Data.List':'un--intersperse'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_List'(V685))))))))}} end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E372, E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E307)); {'Idris.Idris.Syntax.Missing', E493} -> (fun (V691) -> fun (V692) -> begin (V694 = begin (V693 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V693} end), case V694 of {'Idris.Prelude.Types.Left', E494} -> (fun (V695) -> {'Idris.Prelude.Types.Left', V695} end(E494)); {'Idris.Prelude.Types.Right', E495} -> (fun (V696) -> begin (V725 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V691, case V696 of {'Idris.Core.Context.MkDefs', E496, E497, E498, E499, E500, E501, E502, E503, E504, E505, E506, E507, E508, E509, E510, E511, E512, E513, E514, E515, E516, E517, E518, E519, E520, E521, E522, E523} -> (fun (V697, V698, V699, V700, V701, V702, V703, V704, V705, V706, V707, V708, V709, V710, V711, V712, V713, V714, V715, V716, V717, V718, V719, V720, V721, V722, V723, V724) -> V697 end(E496, E497, E498, E499, E500, E501, E502, E503, E504, E505, E506, E507, E508, E509, E510, E511, E512, E513, E514, E515, E516, E517, E518, E519, E520, E521, E522, E523)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V692))), case V725 of {'Idris.Prelude.Types.Left', E524} -> (fun (V726) -> {'Idris.Prelude.Types.Left', V726} end(E524)); {'Idris.Prelude.Types.Right', E525} -> (fun (V727) -> case V727 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V691, V692)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V728) -> case V728 of {'Idris.Prelude.Types.Left', E526} -> (fun (V729) -> {'Idris.Prelude.Types.Left', V729} end(E526)); {'Idris.Prelude.Types.Right', E527} -> (fun (V730) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Missed', V730}} end(E527)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V731) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V732) -> fun (V733) -> begin (V734 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V732, V733))), case V734 of {'Idris.Prelude.Types.Left', E528} -> (fun (V735) -> {'Idris.Prelude.Types.Left', V735} end(E528)); {'Idris.Prelude.Types.Right', E529} -> (fun (V736) -> case V736 of {'Idris.Core.TT.MkTotality', E530, E531} -> (fun (V737, V738) -> case V738 of {'Idris.Core.TT.MissingCases', E532} -> (fun (V739) -> begin (V742 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V740) -> fun (V741) -> ('un--displayPatTerm'(V0, V2, V696, V740, V741)) end end, V739, [], V733))), case V742 of {'Idris.Prelude.Types.Left', E533} -> (fun (V743) -> {'Idris.Prelude.Types.Left', V743} end(E533)); {'Idris.Prelude.Types.Right', E534} -> (fun (V744) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CasesMissing', V732, V744}} end(E534)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E532)); {'Idris.Core.TT.NonCoveringCall', E535} -> (fun (V745) -> begin (V748 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V746) -> fun (V747) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V746, V747)) end end, V745, [], V733))), case V748 of {'Idris.Prelude.Types.Left', E536} -> (fun (V749) -> {'Idris.Prelude.Types.Left', V749} end(E536)); {'Idris.Prelude.Types.Right', E537} -> (fun (V750) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CallsNonCovering', V732, V750}} end(E537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E535)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.AllCasesCovered', V732}} end end(E530, E531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V751) -> ('Idris.Idris2.Builtin':'un--fst'(V751)) end, V727)), [], V731)) end, V692)) end end(E525)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E495)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E493)); {'Idris.Idris.Syntax.Total', E538} -> (fun (V752) -> fun (V753) -> begin (V755 = begin (V754 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V754} end), case V755 of {'Idris.Prelude.Types.Left', E539} -> (fun (V756) -> {'Idris.Prelude.Types.Left', V756} end(E539)); {'Idris.Prelude.Types.Right', E540} -> (fun (V757) -> begin (V786 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V752, case V757 of {'Idris.Core.Context.MkDefs', E541, E542, E543, E544, E545, E546, E547, E548, E549, E550, E551, E552, E553, E554, E555, E556, E557, E558, E559, E560, E561, E562, E563, E564, E565, E566, E567, E568} -> (fun (V758, V759, V760, V761, V762, V763, V764, V765, V766, V767, V768, V769, V770, V771, V772, V773, V774, V775, V776, V777, V778, V779, V780, V781, V782, V783, V784, V785) -> V758 end(E541, E542, E543, E544, E545, E546, E547, E548, E549, E550, E551, E552, E553, E554, E555, E556, E557, E558, E559, E560, E561, E562, E563, E564, E565, E566, E567, E568)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V753))), case V786 of {'Idris.Prelude.Types.Left', E569} -> (fun (V787) -> {'Idris.Prelude.Types.Left', V787} end(E569)); {'Idris.Prelude.Types.Right', E570} -> (fun (V788) -> case V788 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V752, V753)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V789) -> case V789 of {'Idris.Prelude.Types.Left', E571} -> (fun (V790) -> {'Idris.Prelude.Types.Left', V790} end(E571)); {'Idris.Prelude.Types.Right', E572} -> (fun (V791) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CheckedTotal', V791}} end(E572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V792) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V793) -> fun (V794) -> begin (V799 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V795) -> case V795 of {'Idris.Prelude.Types.Left', E573} -> (fun (V796) -> {'Idris.Prelude.Types.Left', V796} end(E573)); {'Idris.Prelude.Types.Right', E574} -> (fun (V797) -> {'Idris.Prelude.Types.Right', 0} end(E574)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V798) -> ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V793, V798)) end, V794))), case V799 of {'Idris.Prelude.Types.Left', E575} -> (fun (V800) -> {'Idris.Prelude.Types.Left', V800} end(E575)); {'Idris.Prelude.Types.Right', E576} -> (fun (V801) -> begin (V811 = begin (V802 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V793, V794))), case V802 of {'Idris.Prelude.Types.Left', E577} -> (fun (V803) -> {'Idris.Prelude.Types.Left', V803} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V804) -> ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V805) -> fun (V806) -> fun (V807) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Totality'(V805, V806, V807)) end end end, fun (V808) -> fun (V809) -> fun (V810) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Totality'(V808, V809, V810)) end end end}, V804, V794)) end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V811 of {'Idris.Prelude.Types.Left', E579} -> (fun (V812) -> {'Idris.Prelude.Types.Left', V812} end(E579)); {'Idris.Prelude.Types.Right', E580} -> (fun (V813) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V793, V813}} end(E580)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V814) -> ('Idris.Idris2.Builtin':'un--fst'(V814)) end, V788)), [], V792)) end, V753)) end end(E570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E540)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E538)); {'Idris.Idris.Syntax.Doc', E581} -> (fun (V815) -> fun (V816) -> begin (V817 = (('Idris.Idris2.Idris.Doc.String':'un--getDocsForPTerm'(V4, V0, V2, V815))(V816))), case V817 of {'Idris.Prelude.Types.Left', E582} -> (fun (V818) -> {'Idris.Prelude.Types.Left', V818} end(E582)); {'Idris.Prelude.Types.Right', E583} -> (fun (V819) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V820) -> fun (V821) -> fun (V822) -> fun (V823) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V822, V823)) end end end end, fun (V824) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V824)) end, V819))))}} end(E583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E581)); {'Idris.Idris.Syntax.Browse', E584} -> (fun (V825) -> fun (V826) -> begin (V827 = ('Idris.Idris2.Idris.Doc.String':'un--getContents'(V0, V2, V825, V826))), case V827 of {'Idris.Prelude.Types.Left', E585} -> (fun (V828) -> {'Idris.Prelude.Types.Left', V828} end(E585)); {'Idris.Prelude.Types.Right', E586} -> (fun (V829) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V830) -> fun (V831) -> fun (V832) -> fun (V833) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V832, V833)) end end end end, fun (V834) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V834)) end, V829))))}} end(E586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E584)); {'Idris.Idris.Syntax.DebugInfo', E587} -> (fun (V835) -> fun (V836) -> begin (V838 = begin (V837 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V837} end), case V838 of {'Idris.Prelude.Types.Left', E588} -> (fun (V839) -> {'Idris.Prelude.Types.Left', V839} end(E588)); {'Idris.Prelude.Types.Right', E589} -> (fun (V840) -> begin (V874 = begin (V869 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V835, case V840 of {'Idris.Core.Context.MkDefs', E590, E591, E592, E593, E594, E595, E596, E597, E598, E599, E600, E601, E602, E603, E604, E605, E606, E607, E608, E609, E610, E611, E612, E613, E614, E615, E616, E617} -> (fun (V841, V842, V843, V844, V845, V846, V847, V848, V849, V850, V851, V852, V853, V854, V855, V856, V857, V858, V859, V860, V861, V862, V863, V864, V865, V866, V867, V868) -> V841 end(E590, E591, E592, E593, E594, E595, E596, E597, E598, E599, E600, E601, E602, E603, E604, E605, E606, E607, E608, E609, E610, E611, E612, E613, E614, E615, E616, E617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V836))), case V869 of {'Idris.Prelude.Types.Left', E618} -> (fun (V870) -> {'Idris.Prelude.Types.Left', V870} end(E618)); {'Idris.Prelude.Types.Right', E619} -> (fun (V871) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V872) -> fun (V873) -> ('un--showInfo'(V0, V872, V873)) end end, V871, V836)) end(E619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V874 of {'Idris.Prelude.Types.Left', E620} -> (fun (V875) -> {'Idris.Prelude.Types.Left', V875} end(E620)); {'Idris.Prelude.Types.Right', E621} -> (fun (V876) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E621)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E589)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E587)); {'Idris.Idris.Syntax.SetOpt', E622} -> (fun (V877) -> fun (V878) -> begin (V879 = ('un--setOpt'(V0, V4, V877, V878))), case V879 of {'Idris.Prelude.Types.Left', E623} -> (fun (V880) -> {'Idris.Prelude.Types.Left', V880} end(E623)); {'Idris.Prelude.Types.Right', E624} -> (fun (V881) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E622)); {'Idris.Idris.Syntax.GetOpts'} -> (fun () -> fun (V882) -> begin (V883 = ('un--getOptions'(V0, V4, V882))), case V883 of {'Idris.Prelude.Types.Left', E625} -> (fun (V884) -> {'Idris.Prelude.Types.Left', V884} end(E625)); {'Idris.Prelude.Types.Right', E626} -> (fun (V885) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.OptionsSet', V885}} end(E626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.SetLog', E627} -> (fun (V886) -> fun (V887) -> begin (V888 = ('Idris.Idris2.Core.Context':'un--addLogLevel'(V0, V886, V887))), case V888 of {'Idris.Prelude.Types.Left', E628} -> (fun (V889) -> {'Idris.Prelude.Types.Left', V889} end(E628)); {'Idris.Prelude.Types.Right', E629} -> (fun (V890) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.LogLevelSet', V886}} end(E629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E627)); {'Idris.Idris.Syntax.SetConsoleWidth', E630} -> (fun (V891) -> fun (V892) -> begin (V893 = ('Idris.Idris2.Idris.REPL.Opts':'un--setConsoleWidth'(V4, V891, V892))), case V893 of {'Idris.Prelude.Types.Left', E631} -> (fun (V894) -> {'Idris.Prelude.Types.Left', V894} end(E631)); {'Idris.Prelude.Types.Right', E632} -> (fun (V895) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ConsoleWidthSet', V891}} end(E632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E630)); {'Idris.Idris.Syntax.SetColor', E633} -> (fun (V896) -> fun (V897) -> begin (V898 = ('Idris.Idris2.Idris.REPL.Opts':'un--setColor'(V4, V896, V897))), case V898 of {'Idris.Prelude.Types.Left', E634} -> (fun (V899) -> {'Idris.Prelude.Types.Left', V899} end(E634)); {'Idris.Prelude.Types.Right', E635} -> (fun (V900) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ColorSet', V896}} end(E635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E633)); {'Idris.Idris.Syntax.Metavars'} -> (fun () -> fun (V901) -> begin (V903 = begin (V902 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V902} end), case V903 of {'Idris.Prelude.Types.Left', E636} -> (fun (V904) -> {'Idris.Prelude.Types.Left', V904} end(E636)); {'Idris.Prelude.Types.Right', E637} -> (fun (V905) -> begin (V934 = case V905 of {'Idris.Core.Context.MkDefs', E638, E639, E640, E641, E642, E643, E644, E645, E646, E647, E648, E649, E650, E651, E652, E653, E654, E655, E656, E657, E658, E659, E660, E661, E662, E663, E664, E665} -> (fun (V906, V907, V908, V909, V910, V911, V912, V913, V914, V915, V916, V917, V918, V919, V920, V921, V922, V923, V924, V925, V926, V927, V928, V929, V930, V931, V932, V933) -> V906 end(E638, E639, E640, E641, E642, E643, E644, E645, E646, E647, E648, E649, E650, E651, E652, E653, E654, E655, E656, E657, E658, E659, E660, E661, E662, E663, E664, E665)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V935 = ('Idris.Idris2.Core.Context':'un--getUserHoles'(V0, V901))), case V935 of {'Idris.Prelude.Types.Left', E666} -> (fun (V936) -> {'Idris.Prelude.Types.Left', V936} end(E666)); {'Idris.Prelude.Types.Right', E667} -> (fun (V937) -> begin (V939 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V938) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V938, V934)) end, V937, [], V901))), case V939 of {'Idris.Prelude.Types.Left', E668} -> (fun (V940) -> {'Idris.Prelude.Types.Left', V940} end(E668)); {'Idris.Prelude.Types.Right', E669} -> (fun (V941) -> begin (V970 = ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V942) -> fun (V943) -> fun (V944) -> fun (V945) -> fun (V946) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V944, V945, V946)) end end end end end, fun (V947) -> fun (V948) -> fun (V949) -> fun (V950) -> fun (V951) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V949, V950, V951)) end end end end end, fun (V952) -> fun (V953) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V953)) end end, fun (V954) -> fun (V955) -> fun (V956) -> fun (V957) -> fun (V958) -> fun (V959) -> fun (V960) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V957, V958, V959, V960)) end end end end end end end, fun (V961) -> fun (V962) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V962)) end end, fun (V963) -> fun (V964) -> fun (V965) -> fun (V966) -> fun (V967) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V965, V966, V967)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V968) -> fun (V969) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V968, V969)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V941))), begin (V977 = ('Idris.Idris2.Data.List':'un--mapMaybe'(fun (V971) -> case V971 of {'Idris.Builtin.MkPair', E670, E671} -> (fun (V972, V973) -> case V973 of {'Idris.Builtin.MkPair', E672, E673} -> (fun (V974, V975) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V975)), fun (V976) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Builtin.MkPair', V972, {'Idris.Builtin.MkPair', V975, V976}})) end)) end(E672, E673)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E670, E671)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V970))), begin (V1005 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V978) -> fun (V979) -> case V978 of {'Idris.Builtin.MkPair', E674, E675} -> (fun (V980, V981) -> case V981 of {'Idris.Builtin.MkPair', E676, E677} -> (fun (V982, V983) -> ('Idris.Idris2.Idris.IDEMode.Holes':'un--holeData'([], V0, V2, V905, {'Idris.Core.Env.Nil'}, V980, V983, case V982 of {'Idris.Core.Context.MkGlobalDef', E678, E679, E680, E681, E682, E683, E684, E685, E686, E687, E688, E689, E690, E691, E692, E693, E694, E695, E696, E697, E698} -> (fun (V984, V985, V986, V987, V988, V989, V990, V991, V992, V993, V994, V995, V996, V997, V998, V999, V1000, V1001, V1002, V1003, V1004) -> V986 end(E678, E679, E680, E681, E682, E683, E684, E685, E686, E687, E688, E689, E690, E691, E692, E693, E694, E695, E696, E697, E698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V979)) end(E676, E677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E674, E675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V977, [], V901))), case V1005 of {'Idris.Prelude.Types.Left', E699} -> (fun (V1006) -> {'Idris.Prelude.Types.Left', V1006} end(E699)); {'Idris.Prelude.Types.Right', E700} -> (fun (V1007) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.FoundHoles', V1007}} end(E700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E669)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E667)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E637)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Editing', E701} -> (fun (V1008) -> fun (V1009) -> begin (V1010 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V1009))), case V1010 of {'Idris.Prelude.Types.Left', E702} -> (fun (V1011) -> {'Idris.Prelude.Types.Left', V1011} end(E702)); {'Idris.Prelude.Types.Right', E703} -> (fun (V1012) -> begin (V1016 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V1012 of {'Idris.Core.Options.MkPPOpts', E704, E705, E706} -> (fun (V1013, V1014, V1015) -> {'Idris.Core.Options.MkPPOpts', V1013, 0, V1015} end(E704, E705, E706)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1009))), case V1016 of {'Idris.Prelude.Types.Left', E707} -> (fun (V1017) -> {'Idris.Prelude.Types.Left', V1017} end(E707)); {'Idris.Prelude.Types.Right', E708} -> (fun (V1018) -> begin (V1019 = (('un--processEdit'(V0, V1, V2, V3, V4, V1008))(V1009))), case V1019 of {'Idris.Prelude.Types.Left', E709} -> (fun (V1020) -> {'Idris.Prelude.Types.Left', V1020} end(E709)); {'Idris.Prelude.Types.Right', E710} -> (fun (V1021) -> begin (V1022 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, V1012, V1009))), case V1022 of {'Idris.Prelude.Types.Left', E711} -> (fun (V1023) -> {'Idris.Prelude.Types.Left', V1023} end(E711)); {'Idris.Prelude.Types.Right', E712} -> (fun (V1024) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Edited', V1021}} end(E712)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E710)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E708)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E703)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E701)); {'Idris.Idris.Syntax.CGDirective', E713} -> (fun (V1025) -> fun (V1026) -> begin (V1049 = begin (V1027 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V1026))), case V1027 of {'Idris.Prelude.Types.Left', E714} -> (fun (V1028) -> {'Idris.Prelude.Types.Left', V1028} end(E714)); {'Idris.Prelude.Types.Right', E715} -> (fun (V1029) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V1029 of {'Idris.Core.Options.MkSessionOpts', E716, E717, E718, E719, E720, E721, E722, E723, E724, E725, E726, E727, E728, E729, E730, E731, E732, E733, E734} -> (fun (V1030, V1031, V1032, V1033, V1034, V1035, V1036, V1037, V1038, V1039, V1040, V1041, V1042, V1043, V1044, V1045, V1046, V1047, V1048) -> {'Idris.Core.Options.MkSessionOpts', V1030, V1031, V1032, V1033, [V1025 | V1034], V1035, V1036, V1037, V1038, V1039, V1040, V1041, V1042, V1043, V1044, V1045, V1046, V1047, V1048} end(E716, E717, E718, E719, E720, E721, E722, E723, E724, E725, E726, E727, E728, E729, E730, E731, E732, E733, E734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1026)) end(E715)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V1049 of {'Idris.Prelude.Types.Left', E735} -> (fun (V1050) -> {'Idris.Prelude.Types.Left', V1050} end(E735)); {'Idris.Prelude.Types.Right', E736} -> (fun (V1051) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E736)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E713)); {'Idris.Idris.Syntax.RunShellCommand', E737} -> (fun (V1052) -> fun (V1053) -> begin (V1086 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V1054) -> case V1054 of {'Idris.Prelude.Types.Left', E738} -> (fun (V1055) -> {'Idris.Prelude.Types.Left', V1055} end(E738)); {'Idris.Prelude.Types.Right', E739} -> (fun (V1056) -> {'Idris.Prelude.Types.Right', 0} end(E739)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V1057) -> begin (V1085 = (('Idris.Idris2.Erlang.System':'un--system'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V1058) -> fun (V1059) -> fun (V1060) -> fun (V1061) -> fun (V1062) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1060, V1061, V1062)) end end end end end, fun (V1063) -> fun (V1064) -> fun (V1065) -> V1064 end end end, fun (V1066) -> fun (V1067) -> fun (V1068) -> fun (V1069) -> fun (V1070) -> begin (V1071 = (V1068(V1070))), begin (V1072 = (V1069(V1070))), (V1071(V1072)) end end end end end end end}, fun (V1073) -> fun (V1074) -> fun (V1075) -> fun (V1076) -> fun (V1077) -> begin (V1078 = (V1075(V1077))), ((V1076(V1078))(V1077)) end end end end end end, fun (V1079) -> fun (V1080) -> fun (V1081) -> begin (V1082 = (V1080(V1081))), (V1082(V1081)) end end end end}, fun (V1083) -> fun (V1084) -> V1084 end end}, V1052))(V1057))), {'Idris.Prelude.Types.Right', V1085} end end, V1053))), case V1086 of {'Idris.Prelude.Types.Left', E740} -> (fun (V1087) -> {'Idris.Prelude.Types.Left', V1087} end(E740)); {'Idris.Prelude.Types.Right', E741} -> (fun (V1088) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E741)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E737)); {'Idris.Idris.Syntax.Quit'} -> (fun () -> fun (V1089) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Exited'}} end end()); {'Idris.Idris.Syntax.NOP'} -> (fun () -> fun (V1090) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end end()); {'Idris.Idris.Syntax.ShowVersion'} -> (fun () -> fun (V1091) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.VersionIs', ('Idris.Idris2.Idris.Version':'un--version'())}} end end()); {'Idris.Idris.Syntax.ImportPackage', E742} -> (fun (V1092) -> fun (V1093) -> begin (V1095 = begin (V1094 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1094} end), case V1095 of {'Idris.Prelude.Types.Left', E743} -> (fun (V1096) -> {'Idris.Prelude.Types.Left', V1096} end(E743)); {'Idris.Prelude.Types.Right', E744} -> (fun (V1097) -> begin (V1145 = case V1097 of {'Idris.Core.Context.MkDefs', E745, E746, E747, E748, E749, E750, E751, E752, E753, E754, E755, E756, E757, E758, E759, E760, E761, E762, E763, E764, E765, E766, E767, E768, E769, E770, E771, E772} -> (fun (V1098, V1099, V1100, V1101, V1102, V1103, V1104, V1105, V1106, V1107, V1108, V1109, V1110, V1111, V1112, V1113, V1114, V1115, V1116, V1117, V1118, V1119, V1120, V1121, V1122, V1123, V1124, V1125) -> case V1102 of {'Idris.Core.Options.MkOptions', E773, E774, E775, E776, E777, E778, E779, E780, E781} -> (fun (V1126, V1127, V1128, V1129, V1130, V1131, V1132, V1133, V1134) -> case V1126 of {'Idris.Core.Options.MkDirs', E782, E783, E784, E785, E786, E787, E788, E789, E790, E791} -> (fun (V1135, V1136, V1137, V1138, V1139, V1140, V1141, V1142, V1143, V1144) -> V1141 end(E782, E783, E784, E785, E786, E787, E788, E789, E790, E791)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E773, E774, E775, E776, E777, E778, E779, E780, E781)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E745, E746, E747, E748, E749, E750, E751, E752, E753, E754, E755, E756, E757, E758, E759, E760, E761, E762, E763, E764, E765, E766, E767, E768, E769, E770, E771, E772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), (('case--process-12463'(V1092, V4, V3, V2, V1, V0, V1097, V1145, ('Idris.Idris2.Data.List':'un--find'(fun (V1146) -> ('Idris.Idris2.Data.String':'un--isInfixOf'(V1092, ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V1146 end, ('Idris.Idris2.Libraries.Utils.Path':'un--fileName'(V1146)))))) end, V1145))))(V1093)) end end(E744)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E742)); {'Idris.Idris.Syntax.FuzzyTypeSearch', E792} -> (fun (V1147) -> fun (V1148) -> ('Idris.Idris2.Idris.REPL.FuzzySearch':'un--fuzzySearch'(V0, V1, V2, V3, V4, V1147, V1148)) end end(E792)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--printClause'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V6, V7, V8) -> begin (V9 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V7, V5))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V8, V5))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicate'(V3, $ )))), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V11)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = "/utf8>>, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V14))))))))))} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E7, E8, E9, E10, E11, E12} -> (fun (V15, V16, V17, V18, V19, V20) -> begin (V21 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V16, V5))), case V21 of {'Idris.Prelude.Types.Left', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V17, V5))), case V24 of {'Idris.Prelude.Types.Left', E15} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V26) -> begin (V29 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V27) -> fun (V28) -> ('un--printClause'(V0, V1, V2, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'(V3, (1 + (1 + 0)))), V27, V28)) end end, V20, [], V5))), case V29 of {'Idris.Prelude.Types.Left', E17} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V31) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicate'(V3, $ )))), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V23)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" with ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V26)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<")"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V32) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" proof "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V32)))) end end, V18)), <<"\x{a}"/utf8>>)))))))))))))), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V31))))} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8, E9, E10, E11, E12)); {'Idris.TTImp.TTImp.ImpossibleClause', E19, E20} -> (fun (V33, V34) -> begin (V35 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, V34, V5))), case V35 of {'Idris.Prelude.Types.Left', E21} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V37) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicate'(V3, $ )))), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V37)), <<" impossible"/utf8>>))))))} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--prettyTerm'(V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V1) -> {'Idris.Idris.Pretty.Syntax', V1} end, ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V0)))).
'un--prepareExp'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, 1, [], {'Idris.Idris.Syntax.PApp', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Idris.Syntax.PRef', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.UN', <<"unsafePerformIO"/utf8>>}}, V5}, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('un--getItDecls'(V4, V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = {'Idris.TTImp.TTImp.ILocal', ('Idris.Idris2.Core.FC':'un--replFC'()), V12, V9}), begin (V14 = ('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', <<"[input]"/utf8>>}, V6))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V16, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V13, {'Idris.Prelude.Types.Nothing'}))(V6))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V20, V21) -> begin (V26 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V0, V1, ('Idris.Idris2.Core.FC':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'({'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V22) -> fun (V23) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V22, V23)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V24) -> fun (V25) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V24, V25)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())})), 1, {'Idris.Core.Env.Nil'}, V20, V6))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> begin (V29 = ('Idris.Idris2.Compiler.Inline':'un--compileAndInlineAll'(V0, V6))), case V29 of {'Idris.Prelude.Types.Left', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Right', V28} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--parseRepl'(V0) -> case ('nested--27792-12806--in--un--fnameCmd'(V0, [{'Idris.Builtin.MkPair', <<":load "/utf8>>, fun (V1) -> {'Idris.Idris.Syntax.Load', V1} end} | [{'Idris.Builtin.MkPair', <<":l "/utf8>>, fun (V2) -> {'Idris.Idris.Syntax.Load', V2} end} | [{'Idris.Builtin.MkPair', <<":cd "/utf8>>, fun (V3) -> {'Idris.Idris.Syntax.CD', V3} end} | [{'Idris.Builtin.MkPair', <<":!"/utf8>>, fun (V4) -> {'Idris.Idris.Syntax.RunShellCommand', V4} end} | []]]]], V0)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> case ('Idris.Idris2.Parser.Source':'un--runParser'(0, {'Idris.Core.FC.Virtual', 0}, {'Idris.Prelude.Types.Nothing'}, V0, {'Idris.Libraries.Text.Parser.Core.Alt', 0, 0, ('un--parseEmptyCmd'()), fun () -> ('un--parseCmd'()) end})) of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Prelude.Types.Right', V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); {'Idris.Prelude.Types.Just', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V9}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--parseEmptyCmd'() -> {'Idris.Libraries.Text.Parser.Core.SeqEmpty', 0, 0, ('Idris.Idris2.Libraries.Text.Parser.Core':'dn--un--map_Functor_(((Grammar $state) $tok) $c)'(0, fun (V0) -> fun (V1) -> V1 end end, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()))), fun (V2) -> ('Idris.Idris2.Libraries.Text.Parser.Core':'dn--un--map_Functor_(((Grammar $state) $tok) $c)'(0, V2, {'Idris.Libraries.Text.Parser.Core.Empty', {'Idris.Prelude.Types.Nothing'}})) end}.
'un--parseCmd'() -> {'Idris.Libraries.Text.Parser.Core.SeqEmpty', 0, 0, ('Idris.Idris2.Idris.Parser':'un--command'()), fun (V0) -> {'Idris.Libraries.Text.Parser.Core.ThenEmpty', 0, 0, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()), {'Idris.Libraries.Text.Parser.Core.Empty', {'Idris.Prelude.Types.Just', V0}}} end}.
'un--nextProofSearch'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('case--nextProofSearch-5380'(V2, V1, V0, V7, case V7 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> V17 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--nextGenDef'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> ('case--nextGenDef-5576'(V3, V2, V1, V0, V8, case V8 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V19 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--lookupDefTyName'(V0, V1, V2) -> ('Idris.Idris2.Core.Context':'un--lookupNameBy'(fun (V3) -> {'Idris.Builtin.MkPair', case V3 of {'Idris.Core.Context.MkGlobalDef', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V21 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V3 of {'Idris.Core.Context.MkGlobalDef', E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45) -> V27 end(E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end, V0, V1, V2)).
'un--loadMainFile'(V0, V1, V2, V3, V4, V5, V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V28 = begin (V27 = ('erlang':'put'(V4, case V10 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, {'Idris.Prelude.Types.Nothing'}, V23, V24, V25, V26} end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V27} end), case V28 of {'Idris.Prelude.Types.Left', E18} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V30) -> begin (V31 = ('Idris.Idris2.Core.Directory':'un--ctxtPathToNS'(V0, V5, V6))), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> begin (V34 = ('Idris.Idris2.Idris.REPL.Common':'un--resetContext'(V0, V1, V2, V3, {'Idris.Core.FC.PhysicalIdrSrc', V33}, V6))), case V34 of {'Idris.Prelude.Types.Left', E22} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V36) -> begin (V65 = begin (V64 = (('Idris.Idris2.Erlang.System.File':'un--readFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V39, V40, V41)) end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> V43 end end end, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V47(V49))), begin (V51 = (V48(V49))), (V50(V51)) end end end end end end end}, fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> begin (V57 = (V54(V56))), ((V55(V57))(V56)) end end end end end end, fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V59(V60))), (V61(V60)) end end end end}, fun (V62) -> fun (V63) -> V63 end end}, V5))(V6))), {'Idris.Prelude.Types.Right', V64} end), case V65 of {'Idris.Prelude.Types.Left', E24} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V67) -> case V67 of {'Idris.Prelude.Types.Right', E26} -> (fun (V68) -> begin (V70 = ('Idris.Idris2.Core.Context.Log':'un--logTime'(V0, fun () -> <<"+ Build deps"/utf8>> end, fun (V69) -> ('Idris.Idris2.Idris.ModTree':'un--buildDeps'(V0, V2, V3, V1, V4, V5, V69)) end, V6))), case V70 of {'Idris.Prelude.Types.Left', E27} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V72) -> begin (V73 = ('Idris.Idris2.Idris.REPL.Common':'un--updateErrorLine'(V4, V72, V6))), case V73 of {'Idris.Prelude.Types.Left', E29} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V75) -> begin (V76 = ('Idris.Idris2.Idris.REPL.Opts':'un--setSource'(V4, V68, V6))), case V76 of {'Idris.Prelude.Types.Left', E31} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V78) -> begin (V79 = ('Idris.Idris2.Idris.REPL.Opts':'un--resetProofState'(V4, V6))), case V79 of {'Idris.Prelude.Types.Left', E33} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V81) -> case V72 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.FileLoaded', V5}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ErrorsBuildingFile', V5, V72}} end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); {'Idris.Prelude.Types.Left', E35} -> (fun (V82) -> begin (V83 = ('Idris.Idris2.Idris.REPL.Opts':'un--setSource'(V4, <<""/utf8>>, V6))), case V83 of {'Idris.Prelude.Types.Left', E36} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V85) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ErrorLoadingFile', V5, V82}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--interpret'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.REPL.Opts':'un--setCurrentElabSource'(V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> case ('un--parseRepl'(V5)) of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> begin (V11 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V10))(V6))), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.REPLError', V13}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> case V14 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V15) -> ('un--processCatch'(V0, V1, V2, V3, V4, V15, V6)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inferAndNormalize'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('un--inferAndElab'(V0, V1, V2, V3, V4, ('nested--25397-10628--in--un--elabMode'(V6, V5, V4, V3, V2, V1, V0, V5)), V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> case V10 of {'Idris.Idris.REPL.WithType', E2, E3} -> (fun (V11, V12) -> begin (V13 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Elaborated input"/utf8>> end, V11, V7))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> begin (V23 = fun (V20) -> fun (V21) -> fun (V22) -> ('un--replEval'(V0, [], V5, V20, V21, V22)) end end end), begin (V24 = ((((V23(V19))({'Idris.Core.Env.Nil'}))(V11))(V7))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V0, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Normalised"/utf8>> end, {'Idris.Core.Env.Nil'}, V26, V7))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.WithType', V26, V12}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inferAndElab'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, 1, [], V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('un--getItDecls'(V4, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = {'Idris.TTImp.TTImp.ILocal', ('Idris.Idris2.Core.FC':'un--replFC'()), V13, V10}), begin (V15 = ('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', <<"[input]"/utf8>>}, V7))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V24 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Context':'un--hide'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', <<"::"/utf8>>}}, V18))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> ('Idris.Idris2.Core.Context':'un--hide'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', <<"Nil"/utf8>>}}, V18)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V22) -> fun (V23) -> {'Idris.Prelude.Types.Right', 0} end end, V7))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V27 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V17, V5, [], [], {'Idris.Core.Env.Nil'}, V14, {'Idris.Prelude.Types.Nothing'}))(V7))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> case V29 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V30, V31) -> begin (V32 = (('Idris.Idris2.Core.Normalise':'un--getTerm'(V31))(V7))), case V32 of {'Idris.Prelude.Types.Left', E14} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.WithType', V30, V34}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--handleResult'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.REPL.Common.Exited'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Bye for now!"/utf8>>)), V6)) end()); _ -> begin (V7 = (('un--displayResult'(V0, V1, V2, V3, V4, V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> ('un--repl'(V0, V1, V2, V3, V4, V6)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--handleMissing\x{27}'(V0) -> case V0 of {'Idris.Idris.REPL.Common.CasesMissing', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V2)))))) end(E0, E1)); {'Idris.Idris.REPL.Common.CallsNonCovering', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": Calls non covering function"/utf8>>, case V4 of [E4 | E5] -> (fun (V5, V6) -> case V6 of [] -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5)))); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)) end, V4)))))) end end(E4, E5)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)) end, V4)))))) end)))) end(E2, E3)); {'Idris.Idris.REPL.Common.AllCasesCovered', E6} -> (fun (V9) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V9)), <<": All cases covered"/utf8>>)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--handleMissing'(V0) -> case V0 of {'Idris.Idris.REPL.Common.CasesMissing', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V1)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V5, V6)) end end end end, fun (V7) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V7)))) end, V2)))))) end(E0, E1)); {'Idris.Idris.REPL.Common.CallsNonCovering', E2, E3} -> (fun (V8, V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V8)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Calls non covering"/utf8>>)), case V9 of [E4 | E5] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"function"/utf8>>)), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V10)))))); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"functions:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V12) -> fun (V13) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), V12, V13)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V16, V17)) end end end end, fun (V18) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V18)))) end, V9)))))) end end(E4, E5)); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"functions:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), V19, V20)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V23, V24)) end end end end, fun (V25) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V25)))) end, V9)))))) end)))) end(E2, E3)); {'Idris.Idris.REPL.Common.AllCasesCovered', E6} -> (fun (V26) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V26)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"All cases covered"/utf8>>)))) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getOptions'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.ShowImplicits', case V5 of {'Idris.Core.Options.MkPPOpts', E4, E5, E6} -> (fun (V10, V11, V12) -> V10 end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.ShowNamespace', case V5 of {'Idris.Core.Options.MkPPOpts', E7, E8, E9} -> (fun (V13, V14, V15) -> V15 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.ShowTypes', case V9 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> V16 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.EvalMode', case V9 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47) -> V33 end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.Editor', case V9 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V53 end(E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | []]]]]]} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getItDecls'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> case V5 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V17 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', []} end()); {'Idris.Prelude.Types.Just', E18} -> (fun (V22) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IClaim', ('Idris.Idris2.Core.FC':'un--replFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 0, [], {'Idris.TTImp.TTImp.MkImpTy', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.UN', <<"it"/utf8>>}, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--replFC'()), 0}}} | [{'Idris.TTImp.TTImp.IDef', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.UN', <<"it"/utf8>>}, [{'Idris.TTImp.TTImp.PatClause', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.TTImp.TTImp.IVar', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.UN', <<"it"/utf8>>}}, {'Idris.TTImp.TTImp.IVar', ('Idris.Idris2.Core.FC':'un--replFC'()), V22}} | []]} | []]]} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--findInTree'(V0, V1, V2) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(fun (V3) -> ('Idris.Idris2.Builtin':'un--snd'(V3)) end, ('Idris.Idris2.Data.List':'un--head\x{27}'(('Idris.Idris2.Data.List':'un--filter'(fun (V4) -> ('nested--19844-5881--in--un--match'(V2, V1, V0, V4)) end, ('Idris.Idris2.Data.List':'un--sortBy'(fun (V5) -> fun (V6) -> ('nested--19844-5880--in--un--cmp'(V2, V1, V0, ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V5)), ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V6)))) end end, ('Idris.Idris2.Libraries.Data.PosMap':'un--searchPos'(fun (V7) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measureRM_MeasureRM_$a'(fun (V8) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V8)) end, V7)) end, V0, V2)))))))))).
'un--findCG'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> ('case--findCG-4658'(V1, V0, V6, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> case V11 of {'Idris.Core.Options.MkOptions', E30, E31, E32, E33, E34, E35, E36, E37, E38} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43) -> case V37 of {'Idris.Core.Options.MkSessionOpts', E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62) -> V47 end(E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30, E31, E32, E33, E34, E35, E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--execExp'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('un--prepareExp'(V0, V1, V2, V3, V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V13 = begin (V10 = ('un--findCG'(V4, V0, V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> ('Idris.Idris2.Compiler.Common':'un--cgExecuteExpr'(V0, V12, V9, V6)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Executed', V5}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--execDecls'(V0, V1, V2, V3, V4, V5, V6) -> begin (V9 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V7) -> fun (V8) -> ('nested--24809-10108--in--un--execDecl'(V5, V4, V3, V2, V1, V0, V7, V8)) end end, V5, V6))), case V9 of {'Idris.Prelude.Types.Left', E0} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DefDeclared'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--dropLamsTm'(V0, V1, V2, V3) -> case V1 of 0 -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}}; _ -> begin (V4 = (V1 - 1)), case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> ('un--dropLamsTm'([V6 | V0], V4, {'Idris.Core.Env.::', V7, V2}, V8)) end(E0, E1, E2, E3)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}} end end end.
'un--dropLams'(V0, V1) -> case V0 of 0 -> V1; _ -> begin (V2 = (V0 - 1)), case V1 of {'Idris.TTImp.TTImp.ILam', E0, E1, E2, E3, E4, E5} -> (fun (V3, V4, V5, V6, V7, V8) -> ('un--dropLams'(V2, V8)) end(E0, E1, E2, E3, E4, E5)); _ -> V1 end end end.
'un--displayType'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V8) -> begin (V33 = begin (V30 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, case V7 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V11 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8))), case V30 of {'Idris.Prelude.Types.Left', E25} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V32) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Idris.Core.Env.Nil'}, V32, V8)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V33 of {'Idris.Prelude.Types.Left', E27} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V35) -> begin (V57 = ('Idris.Idris2.Core.Context':'un--aliasName'(V0, case V7 of {'Idris.Core.Context.MkGlobalDef', E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56) -> V37 end(E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8))), case V57 of {'Idris.Prelude.Types.Left', E50} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V59) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V59)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(V35))))))} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun () -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V62) -> case V62 of {'Idris.Prelude.Types.Left', E52} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V65) -> {'Idris.Idris.Pretty.Syntax', V65} end, V64))} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V66) -> ('Idris.Idris2.Idris.IDEMode.Holes':'un--prettyHole'([], V0, V1, V2, {'Idris.Core.Env.Nil'}, V4, V60, case V7 of {'Idris.Core.Context.MkGlobalDef', E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87) -> V69 end(E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V66)) end, V61)) end end end, ('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V7)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayTerm'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Idris.Core.Env.Nil'}, V7, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('un--prettyTerm'(V10))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--displayResult'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.REPL.Common.REPLError', E0} -> (fun (V6) -> fun (V7) -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, V6, V7)) end end(E0)); {'Idris.Idris.REPL.Common.Evaluated', E1, E2} -> (fun (V8, V9) -> fun (V10) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('un--prettyTerm'(V8)), V10)) end()); {'Idris.Prelude.Types.Just', E3} -> (fun (V11) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyTerm'(V8)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('Idris.Idris2.Idris.Pretty':'un--code'(('un--prettyTerm'(V11)))))))), V10)) end(E3)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E1, E2)); {'Idris.Idris.REPL.Common.Printed', E4} -> (fun (V12) -> fun (V13) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V12, V13)) end end(E4)); {'Idris.Idris.REPL.Common.TermChecked', E5, E6} -> (fun (V14, V15) -> fun (V16) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyTerm'(V14)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('Idris.Idris2.Idris.Pretty':'un--code'(('un--prettyTerm'(V15)))))))), V16)) end end(E5, E6)); {'Idris.Idris.REPL.Common.FileLoaded', E7} -> (fun (V17) -> fun (V18) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Loaded file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V17)))), V18)) end end(E7)); {'Idris.Idris.REPL.Common.ModuleLoaded', E8} -> (fun (V19) -> fun (V20) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Imported module"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V19)))), V20)) end end(E8)); {'Idris.Idris.REPL.Common.ErrorLoadingModule', E9, E10} -> (fun (V21, V22) -> fun (V23) -> begin (V24 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V22))(V23))), case V24 of {'Idris.Prelude.Types.Left', E11} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V26) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error loading module"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V21)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), V26)))), V23)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10)); {'Idris.Idris.REPL.Common.ErrorLoadingFile', E13, E14} -> (fun (V27, V28) -> fun (V29) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error loading file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V27)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V28)))))))), V29)) end end(E13, E14)); {'Idris.Idris.REPL.Common.ErrorsBuildingFile', E15, E16} -> (fun (V30, V31) -> fun (V32) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error(s) building file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V30)))), V32)) end end(E15, E16)); {'Idris.Idris.REPL.Common.NoFileLoaded'} -> (fun () -> fun (V33) -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No file can be reloaded"/utf8>>)), V33)) end end()); {'Idris.Idris.REPL.Common.CurrentDirectory', E17} -> (fun (V34) -> fun (V35) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Current working directory is"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--dquotes'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V34)))))), V35)) end end(E17)); {'Idris.Idris.REPL.Common.CompilationFailed'} -> (fun () -> fun (V36) -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Compilation failed"/utf8>>)), V36)) end end()); {'Idris.Idris.REPL.Common.Compiled', E18} -> (fun (V37) -> fun (V38) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"File"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V37)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"written"/utf8>>)))))), V38)) end end(E18)); {'Idris.Idris.REPL.Common.CompiledLibrary', E19} -> (fun (V39) -> fun (V40) -> case V39 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V41, V42) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"Compiled"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V41)))), V40)) end(E20, E21)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E19)); {'Idris.Idris.REPL.Common.ProofFound', E22} -> (fun (V43) -> fun (V44) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('un--prettyTerm'(V43)), V44)) end end(E22)); {'Idris.Idris.REPL.Common.Missed', E23} -> (fun (V45) -> fun (V46) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V49, V50)) end end end end, fun (V51) -> ('un--handleMissing'(V51)) end, V45)))), V46)) end end(E23)); {'Idris.Idris.REPL.Common.CheckedTotal', E24} -> (fun (V52) -> fun (V53) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V54) -> case V54 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V55, V56) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V55)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"is"/utf8>>)), ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_Totality'(V56)))))) end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V52)))), V53)) end end(E24)); {'Idris.Idris.REPL.Common.FoundHoles', E27} -> (fun (V57) -> case V57 of [] -> fun (V58) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No holes"/utf8>>)), V58)) end; [E31 | E32] -> (fun (V59, V60) -> case V60 of [] -> fun (V61) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"1 hole"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(case V59 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E36, E37, E38} -> (fun (V62, V63, V64) -> V62 end(E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), V61)) end; _ -> begin (V75 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V65) -> fun (V66) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<", "/utf8>>)), V65, V66)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V69, V70)) end end end end, fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(case V71 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E33, E34, E35} -> (fun (V72, V73, V74) -> V72 end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, V57))))), fun (V76) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V57)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"holes"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), V75)))), V76)) end end end end(E31, E32)); _ -> begin (V87 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V77) -> fun (V78) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<", "/utf8>>)), V77, V78)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V81, V82)) end end end end, fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(case V83 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E28, E29, E30} -> (fun (V84, V85, V86) -> V84 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, V57))))), fun (V88) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V57)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"holes"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), V87)))), V88)) end end end end(E27)); {'Idris.Idris.REPL.Common.LogLevelSet', E39} -> (fun (V89) -> fun (V90) -> case V89 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Logging turned off"/utf8>>)), V90)) end()); {'Idris.Prelude.Types.Just', E40} -> (fun (V91) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set log level to"/utf8>>)), ('Idris.Idris2.Core.Options.Log':'dn--un--pretty_Pretty_LogLevel'(V91)))), V90)) end(E40)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E39)); {'Idris.Idris.REPL.Common.ConsoleWidthSet', E41} -> (fun (V92) -> fun (V93) -> case V92 of {'Idris.Prelude.Types.Just', E42} -> (fun (V94) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set consolewidth to"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Nat'(V94)))), V93)) end(E42)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set consolewidth to auto"/utf8>>)), V93)) end()); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E41)); {'Idris.Idris.REPL.Common.ColorSet', E43} -> (fun (V95) -> fun (V96) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(case V95 of 1 -> <<"Set color on"/utf8>>; 0 -> <<"Set color off"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V96)) end end(E43)); {'Idris.Idris.REPL.Common.VersionIs', E44} -> (fun (V97) -> fun (V98) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Idris.Version':'un--showVersion'(1, V97)))), V98)) end end(E44)); {'Idris.Idris.REPL.Common.RequestedHelp'} -> (fun () -> fun (V99) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('un--displayHelp'()))), V99)) end end()); {'Idris.Idris.REPL.Common.Edited', E45} -> (fun (V100) -> fun (V101) -> case V100 of {'Idris.Idris.REPL.Common.DisplayEdit', E46} -> (fun (V102) -> case V102 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V102, V101)) end end(E46)); {'Idris.Idris.REPL.Common.EditError', E47} -> (fun (V103) -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, V103, V101)) end(E47)); {'Idris.Idris.REPL.Common.MadeLemma', E48, E49, E50, E51} -> (fun (V104, V105, V106, V107) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Parser.Unlit':'un--relit'(V104, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V105)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V106)), <<"\x{a}"/utf8>>)))))))), V107)))), V101)) end(E48, E49, E50, E51)); {'Idris.Idris.REPL.Common.MadeWith', E52, E53} -> (fun (V108, V109) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V110) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V108, V110)) end, V109)))))), V101)) end(E52, E53)); {'Idris.Idris.REPL.Common.MadeCase', E54, E55} -> (fun (V111, V112) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V113) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V111, V113)) end, V112)))))), V101)) end(E54, E55)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E45)); {'Idris.Idris.REPL.Common.OptionsSet', E56} -> (fun (V114) -> fun (V115) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V118, V119)) end end end end, fun (V120) -> ('Idris.Idris2.Idris.Syntax':'dn--un--pretty_Pretty_REPLOpt'(V120)) end, V114)))), V115)) end end(E56)); _ -> fun (V121) -> {'Idris.Prelude.Types.Right', 0} end end.
'un--displayPats'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> fun (V8) -> case V7 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> case V26 of {'Idris.Core.Context.PMDef', E25, E26, E27, E28, E29} -> (fun (V30, V31, V32, V33, V34) -> begin (V35 = (('un--displayType'(V0, V1, V2, {'Idris.Builtin.MkPair', V4, {'Idris.Builtin.MkPair', V6, V7}}))(V8))), case V35 of {'Idris.Prelude.Types.Left', E30} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V37) -> begin (V39 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V38) -> ('un--displayClause'(V0, V1, V2, V38)) end, V34, [], V8))), case V39 of {'Idris.Prelude.Types.Left', E32} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V41) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'([V37 | V41]))} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25, E26, E27, E28, E29)); _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V4)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"is not a pattern matching definition"/utf8>>))))} end end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayPatTerm'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Idris.Resugar':'un--resugarNoPatvars'([], V0, V1, {'Idris.Core.Env.Nil'}, V7, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V10))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--displayHelp'() -> ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V0) -> ('nested--28093-13884--in--un--cmdInfo'(V0)) end, ('Idris.Idris2.Idris.Parser':'un--help'()))))).
'un--displayErrors'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.REPL.Common.ErrorLoadingFile', E0, E1} -> (fun (V7, V8) -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"File error in"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V7)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V8)))))))), V6)) end(E0, E1)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'un--displayClause'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V4, V5) -> fun (V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> begin (V14 = begin (V11 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, V4, V2, V7, V9, V6))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'(V4, V0, V1, V7, V13, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> begin (V20 = begin (V17 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, V4, V2, V7, V10, V6))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'(V4, V0, V1, V7, V19, V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V20 of {'Idris.Prelude.Types.Left', E12} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyTerm'(V16)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--equals'()), ('un--prettyTerm'(V22))))))} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileLib'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('un--findCG'(V1, V0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Compiler.Common':'un--cgCompileLibrary'(V0, V7, V2, V3, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end end, fun () -> fun (V12) -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompiledLibrary', V12}} end end end, V10))(V4)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileExp'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('un--prepareExp'(V0, V1, V2, V3, V4, V5, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V14 = begin (V11 = ('un--findCG'(V4, V0, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> ('Idris.Idris2.Compiler.Common':'un--cgCompileExpr'(V0, V13, V10, V6, V7)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end end, fun () -> fun (V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Compiled', V18}} end end end, V16))(V7)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--caseSplit'(V0, V1, V2) -> case V1 of 0 -> case V2 of [E2 | E3] -> (fun (V3, V4) -> [('un--rtrim'(V0)) | V4] end(E2, E3)); _ -> case V2 of [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V5 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V6, V7) -> [V6 | ('un--caseSplit'(V0, V5, V7))] end(E0, E1)); _ -> case V2 of [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--anyAt'(V0, V1, V2) -> (V0(V1)).
'un--addMadeLemma'(V0, V1, V2, V3, V4, V5) -> ('nested--19076-5206--in--un--addApp'(V5, V4, V3, V2, V1, V0, V0, V4, [], ('un--proofSearch'(V1, V3, V4, V5)))).
'un--addMadeCase'(V0, V1, V2, V3) -> ('nested--19207-5322--in--un--addW'(V3, V2, V1, V0, V2, [], V3)).
'un--addClause'(V0, V1, V2) -> case V1 of 0 -> case V2 of [] -> [('un--rtrim'(V0)) | []]; [E2 | E3] -> (fun (V3, V4) -> case ('Idris.Idris2.Prelude.Interfaces':'un--all'({'Idris.Prelude.Interfaces.MkFoldable', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V7, V8, V9)) end end end end end, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V16)) end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V20, V21, V22, V23)) end end end end end end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V25)) end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V28, V29, V30)) end end end end end}, fun (V31) -> ('Idris.Idris2.Prelude.Types':'un--isSpace'(V31)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V3)))) of 1 -> [('un--rtrim'(V0)) | [V3 | V4]]; 0 -> [V3 | ('un--addClause'(V0, 0, V4))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V32 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V33, V34) -> [V33 | ('un--addClause'(V0, V32, V34))] end(E0, E1)); [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
