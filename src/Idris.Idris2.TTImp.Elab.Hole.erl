-module('Idris.Idris2.TTImp.Elab.Hole').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--mkPrecise'/3,
  'un--checkHole'/13
]).
'un--mkPrecise'(V0, V1, V2) -> case V1 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V3, V4, V5) -> case V4 of {'Idris.Core.Value.NMeta', E3, E4, E5} -> (fun (V6, V7, V8) -> ('Idris.Idris2.Core.Context':'un--updateDef'(V0, {'Idris.Core.Name.Resolved', V7}, fun (V9) -> case V9 of {'Idris.Core.Context.Hole', E6, E7} -> (fun (V10, V11) -> {'Idris.Prelude.Types.Just', {'Idris.Core.Context.Hole', V10, case V11 of {'Idris.Core.Context.MkHoleFlags', E8, E9} -> (fun (V12, V13) -> {'Idris.Core.Context.MkHoleFlags', V12, 1} end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}} end(E6, E7)); _ -> {'Idris.Prelude.Types.Nothing'} end end, V2)) end(E3, E4, E5)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'un--checkHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V11 of {'Idris.Prelude.Types.Just', E56} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, {'Idris.Core.Name.UN', V10}, V12))), case V14 of {'Idris.Prelude.Types.Left', E57} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E59} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V20) -> begin (V49 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V16, case V20 of {'Idris.Core.Context.MkDefs', E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48) -> V21 end(E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12))), case V49 of {'Idris.Prelude.Types.Left', E89} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V51) -> case V51 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V52 = (('Idris.Idris2.Core.Normalise':'un--getTerm'(V13))(V12))), case V52 of {'Idris.Prelude.Types.Left', E93} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V54) -> begin (V55 = ('Idris.Idris2.Core.Env':'un--letToLam'(V8))), begin (V56 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVarI'(V0, V1, V3, V9, V5, V55, V16, V54, V12))), case V56 of {'Idris.Prelude.Types.Left', E95} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V58) -> case V58 of {'Idris.Builtin.MkPair', E97, E98} -> (fun (V59, V60) -> begin (V64 = begin (V61 = (('Idris.Idris2.Core.Normalise':'un--getNF'(V1, V13))(V12))), case V61 of {'Idris.Prelude.Types.Left', E99} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V63) -> ('un--mkPrecise'(V1, V63, V12)) end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V64 of {'Idris.Prelude.Types.Left', E101} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V66) -> begin (V67 = ('Idris.Idris2.Core.Metadata':'un--withCurrentLHS'(V1, V2, {'Idris.Core.Name.Resolved', V59}, V12))), case V67 of {'Idris.Prelude.Types.Left', E103} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V69) -> begin (V70 = ('Idris.Idris2.Core.Metadata':'un--addNameLoc'(V2, V1, V9, V16, V12))), case V70 of {'Idris.Prelude.Types.Left', E105} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V72) -> begin (V73 = ('Idris.Idris2.Core.Context':'un--addUserHole'(V1, V16, V12))), case V73 of {'Idris.Prelude.Types.Left', E107} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V75) -> begin (V76 = ('Idris.Idris2.TTImp.Elab.Check':'un--saveHole'(V4, V16, V12))), case V76 of {'Idris.Prelude.Types.Left', E109} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V78) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V60, V13}} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97, E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V79 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"elab.hole"/utf8>>, (1 + 0), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V16)), <<" already defined"/utf8>>)) end, V12))), case V79 of {'Idris.Prelude.Types.Left', E91} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V81) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AlreadyDefined', V9, V16}, V12)) end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> begin (V82 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"type_of_"/utf8>>, V10)), V12))), case V82 of {'Idris.Prelude.Types.Left', E0} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V84) -> begin (V85 = ('Idris.Idris2.Core.Env':'un--letToLam'(V8))), begin (V90 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V9, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V86) -> fun (V87) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V86, V87)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V88) -> fun (V89) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V88, V89)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())})), V85, V84, {'Idris.Core.TT.TType', V9}, V12))), case V90 of {'Idris.Prelude.Types.Left', E2} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V92) -> begin (V93 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, {'Idris.Core.Name.UN', V10}, V12))), case V93 of {'Idris.Prelude.Types.Left', E4} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V95) -> begin (V97 = begin (V96 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V96} end), case V97 of {'Idris.Prelude.Types.Left', E6} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V99) -> begin (V103 = begin (V100 = (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V99, V85, V92))(V12))), case V100 of {'Idris.Prelude.Types.Left', E8} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V102) -> ('un--mkPrecise'(V1, V102, V12)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V103 of {'Idris.Prelude.Types.Left', E10} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V105) -> begin (V134 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V95, case V99 of {'Idris.Core.Context.MkDefs', E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39} -> (fun (V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133) -> V106 end(E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12))), case V134 of {'Idris.Prelude.Types.Left', E40} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V136) -> case V136 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V137 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVarI'(V0, V1, V3, V9, V5, V85, V95, V92, V12))), case V137 of {'Idris.Prelude.Types.Left', E44} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V139) -> case V139 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V140, V141) -> begin (V142 = ('Idris.Idris2.Core.Metadata':'un--withCurrentLHS'(V1, V2, {'Idris.Core.Name.Resolved', V140}, V12))), case V142 of {'Idris.Prelude.Types.Left', E48} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V144) -> begin (V145 = ('Idris.Idris2.Core.Metadata':'un--addNameLoc'(V2, V1, V9, V95, V12))), case V145 of {'Idris.Prelude.Types.Left', E50} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V147) -> begin (V148 = ('Idris.Idris2.Core.Context':'un--addUserHole'(V1, V95, V12))), case V148 of {'Idris.Prelude.Types.Left', E52} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V150) -> begin (V151 = ('Idris.Idris2.TTImp.Elab.Check':'un--saveHole'(V4, V95, V12))), case V151 of {'Idris.Prelude.Types.Left', E54} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V153) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V141, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V92))}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V154 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"elab.hole"/utf8>>, (1 + 0), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V95)), <<" already defined"/utf8>>)) end, V12))), case V154 of {'Idris.Prelude.Types.Left', E42} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V156) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AlreadyDefined', V9, V95}, V12)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
