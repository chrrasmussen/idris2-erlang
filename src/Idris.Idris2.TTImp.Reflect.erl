-module('Idris.Idris2.TTImp.Reflect').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--reify-13316'/11,
  'case--reify-12927'/11,
  'case--reify-12680'/11,
  'case--reify-12458'/11,
  'case--reify-12143'/11,
  'case--reify-11851'/11,
  'case--reify-11659'/11,
  'case--reify-11094'/11,
  'case--reify-10883'/11,
  'case--reify-10629'/11,
  'case--reify-7797'/11,
  'case--reify-7386'/11,
  'case--reify-7189'/11,
  'case--reify-6913'/11,
  'dn--un--reify_Reify_UseSide'/4,
  'dn--un--reify_Reify_RawImp'/4,
  'dn--un--reify_Reify_ImpTy'/4,
  'dn--un--reify_Reify_ImpRecord'/4,
  'dn--un--reify_Reify_ImpDecl'/4,
  'dn--un--reify_Reify_ImpData'/4,
  'dn--un--reify_Reify_ImpClause'/4,
  'dn--un--reify_Reify_IFieldUpdate'/4,
  'dn--un--reify_Reify_IField'/4,
  'dn--un--reify_Reify_FnOpt'/4,
  'dn--un--reify_Reify_DotReason'/4,
  'dn--un--reify_Reify_DataOpt'/4,
  'dn--un--reify_Reify_BindMode'/4,
  'dn--un--reify_Reify_AltType'/4,
  'dn--un--reflect_Reflect_UseSide'/6,
  'dn--un--reflect_Reflect_RawImp'/6,
  'dn--un--reflect_Reflect_ImpTy'/6,
  'dn--un--reflect_Reflect_ImpRecord'/6,
  'dn--un--reflect_Reflect_ImpDecl'/6,
  'dn--un--reflect_Reflect_ImpData'/6,
  'dn--un--reflect_Reflect_ImpClause'/6,
  'dn--un--reflect_Reflect_IFieldUpdate'/6,
  'dn--un--reflect_Reflect_IField'/6,
  'dn--un--reflect_Reflect_FnOpt'/6,
  'dn--un--reflect_Reflect_DotReason'/6,
  'dn--un--reflect_Reflect_DataOpt'/6,
  'dn--un--reflect_Reflect_BindMode'/6,
  'dn--un--reflect_Reflect_AltType'/6,
  'dn--un--__Impl_Reify_UseSide'/4,
  'dn--un--__Impl_Reify_RawImp'/4,
  'dn--un--__Impl_Reify_ImpTy'/4,
  'dn--un--__Impl_Reify_ImpRecord'/4,
  'dn--un--__Impl_Reify_ImpDecl'/4,
  'dn--un--__Impl_Reify_ImpData'/4,
  'dn--un--__Impl_Reify_ImpClause'/4,
  'dn--un--__Impl_Reify_IFieldUpdate'/4,
  'dn--un--__Impl_Reify_IField'/4,
  'dn--un--__Impl_Reify_FnOpt'/4,
  'dn--un--__Impl_Reify_DotReason'/4,
  'dn--un--__Impl_Reify_DataOpt'/4,
  'dn--un--__Impl_Reify_BindMode'/4,
  'dn--un--__Impl_Reify_AltType'/4,
  'dn--un--__Impl_Reflect_UseSide'/6,
  'dn--un--__Impl_Reflect_RawImp'/6,
  'dn--un--__Impl_Reflect_ImpTy'/6,
  'dn--un--__Impl_Reflect_ImpRecord'/6,
  'dn--un--__Impl_Reflect_ImpDecl'/6,
  'dn--un--__Impl_Reflect_ImpData'/6,
  'dn--un--__Impl_Reflect_ImpClause'/6,
  'dn--un--__Impl_Reflect_IFieldUpdate'/6,
  'dn--un--__Impl_Reflect_IField'/6,
  'dn--un--__Impl_Reflect_FnOpt'/6,
  'dn--un--__Impl_Reflect_DotReason'/6,
  'dn--un--__Impl_Reflect_DataOpt'/6,
  'dn--un--__Impl_Reflect_BindMode'/6,
  'dn--un--__Impl_Reflect_AltType'/6
]).
'case--reify-13316'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"IClaim"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V42 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V42 of {'Idris.Prelude.Types.Left', E25} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V44) -> begin (V52 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V45 of {'Idris.Prelude.Types.Left', E27} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V47) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('dn--un--reify_Reify_FnOpt'(V48, V49, V50, V51)) end end end end, V8, V0, V7, V47))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V55 of {'Idris.Prelude.Types.Left', E31} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V57) -> (('dn--un--reify_Reify_ImpTy'(V8, V0, V7, V57))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E33} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V32, V38, V44, V54, V60}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V61)) end end end(E13, E14)); _ -> fun (V62) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V62)) end end end(E11, E12)); _ -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V63)) end end end(E9, E10)); _ -> fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V64)) end end end(E7, E8)); _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V65)) end end end(E5, E6)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V66)) end end; <<"IData"/utf8>> -> case V12 of [E35 | E36] -> (fun (V67, V68) -> case V68 of [E37 | E38] -> (fun (V69, V70) -> case V70 of [E39 | E40] -> (fun (V71, V72) -> case V72 of [] -> fun (V73) -> begin (V77 = begin (V74 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V67))(V73))), case V74 of {'Idris.Prelude.Types.Left', E41} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V76) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V76))(V73)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V77 of {'Idris.Prelude.Types.Left', E43} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V79) -> begin (V83 = begin (V80 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V69))(V73))), case V80 of {'Idris.Prelude.Types.Left', E45} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V82) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V8, V0, V7, V82))(V73)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V83 of {'Idris.Prelude.Types.Left', E47} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V85) -> begin (V89 = begin (V86 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V71))(V73))), case V86 of {'Idris.Prelude.Types.Left', E49} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V88) -> (('dn--un--reify_Reify_ImpData'(V8, V0, V7, V88))(V73)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V89 of {'Idris.Prelude.Types.Left', E51} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V79, V85, V91}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V92) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V92)) end end end(E39, E40)); _ -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V93)) end end end(E37, E38)); _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V94)) end end end(E35, E36)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V95)) end end; <<"IDef"/utf8>> -> case V12 of [E53 | E54] -> (fun (V96, V97) -> case V97 of [E55 | E56] -> (fun (V98, V99) -> case V99 of [E57 | E58] -> (fun (V100, V101) -> case V101 of [] -> fun (V102) -> begin (V106 = begin (V103 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V96))(V102))), case V103 of {'Idris.Prelude.Types.Left', E59} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V105) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V105))(V102)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V106 of {'Idris.Prelude.Types.Left', E61} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V108) -> begin (V112 = begin (V109 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V98))(V102))), case V109 of {'Idris.Prelude.Types.Left', E63} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V111) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V111))(V102)) end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V112 of {'Idris.Prelude.Types.Left', E65} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V114) -> begin (V122 = begin (V115 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V100))(V102))), case V115 of {'Idris.Prelude.Types.Left', E67} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V117) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> ('dn--un--reify_Reify_ImpClause'(V118, V119, V120, V121)) end end end end, V8, V0, V7, V117))(V102)) end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V122 of {'Idris.Prelude.Types.Left', E69} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V124) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V108, V114, V124}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V125) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V125)) end end end(E57, E58)); _ -> fun (V126) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V126)) end end end(E55, E56)); _ -> fun (V127) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V127)) end end end(E53, E54)); _ -> fun (V128) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V128)) end end; <<"IParameters"/utf8>> -> case V12 of [E71 | E72] -> (fun (V129, V130) -> case V130 of [E73 | E74] -> (fun (V131, V132) -> case V132 of [E75 | E76] -> (fun (V133, V134) -> case V134 of [] -> fun (V135) -> begin (V139 = begin (V136 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V129))(V135))), case V136 of {'Idris.Prelude.Types.Left', E77} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V138) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V138))(V135)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V139 of {'Idris.Prelude.Types.Left', E79} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V141) -> begin (V157 = begin (V142 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V131))(V135))), case V142 of {'Idris.Prelude.Types.Left', E81} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V144) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V149, V150, V151, V152)) end end end end, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ('dn--un--reify_Reify_RawImp'(V153, V154, V155, V156)) end end end end}, V145, V146, V147, V148)) end end end end, V8, V0, V7, V144))(V135)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V157 of {'Idris.Prelude.Types.Left', E83} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V159) -> begin (V167 = begin (V160 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V133))(V135))), case V160 of {'Idris.Prelude.Types.Left', E85} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V162) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('dn--un--reify_Reify_ImpDecl'(V163, V164, V165, V166)) end end end end, V8, V0, V7, V162))(V135)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V167 of {'Idris.Prelude.Types.Left', E87} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V169) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V141, V159, V169}} end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V170) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V170)) end end end(E75, E76)); _ -> fun (V171) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V171)) end end end(E73, E74)); _ -> fun (V172) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V172)) end end end(E71, E72)); _ -> fun (V173) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V173)) end end; <<"IRecord"/utf8>> -> case V12 of [E89 | E90] -> (fun (V174, V175) -> case V175 of [E91 | E92] -> (fun (V176, V177) -> case V177 of [E93 | E94] -> (fun (V178, V179) -> case V179 of [] -> fun (V180) -> begin (V184 = begin (V181 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V174))(V180))), case V181 of {'Idris.Prelude.Types.Left', E95} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V183) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V183))(V180)) end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V184 of {'Idris.Prelude.Types.Left', E97} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V186) -> begin (V190 = begin (V187 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V176))(V180))), case V187 of {'Idris.Prelude.Types.Left', E99} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V189) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V8, V0, V7, V189))(V180)) end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V190 of {'Idris.Prelude.Types.Left', E101} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V192) -> begin (V196 = begin (V193 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V178))(V180))), case V193 of {'Idris.Prelude.Types.Left', E103} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V195) -> (('dn--un--reify_Reify_ImpRecord'(V8, V0, V7, V195))(V180)) end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V196 of {'Idris.Prelude.Types.Left', E105} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V198) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V186, {'Idris.Prelude.Types.Nothing'}, V192, V198}} end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V199) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V199)) end end end(E93, E94)); _ -> fun (V200) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V200)) end end end(E91, E92)); _ -> fun (V201) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V201)) end end end(E89, E90)); _ -> fun (V202) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V202)) end end; <<"INamespace"/utf8>> -> case V12 of [E107 | E108] -> (fun (V203, V204) -> case V204 of [E109 | E110] -> (fun (V205, V206) -> case V206 of [E111 | E112] -> (fun (V207, V208) -> case V208 of [] -> fun (V209) -> begin (V213 = begin (V210 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V203))(V209))), case V210 of {'Idris.Prelude.Types.Left', E113} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V212) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V212))(V209)) end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V213 of {'Idris.Prelude.Types.Left', E115} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V215) -> begin (V219 = begin (V216 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V205))(V209))), case V216 of {'Idris.Prelude.Types.Left', E117} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V218) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Namespace'(V8, V0, V7, V218))(V209)) end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V219 of {'Idris.Prelude.Types.Left', E119} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V221) -> begin (V229 = begin (V222 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V207))(V209))), case V222 of {'Idris.Prelude.Types.Left', E121} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V224) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> ('dn--un--reify_Reify_ImpDecl'(V225, V226, V227, V228)) end end end end, V8, V0, V7, V224))(V209)) end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V229 of {'Idris.Prelude.Types.Left', E123} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V231) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V215, V221, V231}} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V232) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V232)) end end end(E111, E112)); _ -> fun (V233) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V233)) end end end(E109, E110)); _ -> fun (V234) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V234)) end end end(E107, E108)); _ -> fun (V235) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V235)) end end; <<"ITransform"/utf8>> -> case V12 of [E125 | E126] -> (fun (V236, V237) -> case V237 of [E127 | E128] -> (fun (V238, V239) -> case V239 of [E129 | E130] -> (fun (V240, V241) -> case V241 of [E131 | E132] -> (fun (V242, V243) -> case V243 of [] -> fun (V244) -> begin (V248 = begin (V245 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V236))(V244))), case V245 of {'Idris.Prelude.Types.Left', E133} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V247) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V247))(V244)) end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V248 of {'Idris.Prelude.Types.Left', E135} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V250) -> begin (V254 = begin (V251 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V238))(V244))), case V251 of {'Idris.Prelude.Types.Left', E137} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V253) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V253))(V244)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V254 of {'Idris.Prelude.Types.Left', E139} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V256) -> begin (V260 = begin (V257 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V240))(V244))), case V257 of {'Idris.Prelude.Types.Left', E141} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V259) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V259))(V244)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V260 of {'Idris.Prelude.Types.Left', E143} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V262) -> begin (V266 = begin (V263 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V242))(V244))), case V263 of {'Idris.Prelude.Types.Left', E145} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V265) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V265))(V244)) end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V266 of {'Idris.Prelude.Types.Left', E147} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V268) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V250, V256, V262, V268}} end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V269) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V269)) end end end(E131, E132)); _ -> fun (V270) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V270)) end end end(E129, E130)); _ -> fun (V271) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V271)) end end end(E127, E128)); _ -> fun (V272) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V272)) end end end(E125, E126)); _ -> fun (V273) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V273)) end end; <<"ILog"/utf8>> -> case V12 of [E149 | E150] -> (fun (V274, V275) -> case V275 of [] -> fun (V276) -> begin (V296 = begin (V277 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V274))(V276))), case V277 of {'Idris.Prelude.Types.Left', E151} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V279) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'('erased', fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V288) -> fun (V289) -> fun (V290) -> fun (V291) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V288, V289, V290, V291)) end end end end, V284, V285, V286, V287)) end end end end, fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V292, V293, V294, V295)) end end end end}, V280, V281, V282, V283)) end end end end, V8, V0, V7, V279))(V276)) end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V296 of {'Idris.Prelude.Types.Left', E153} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V298) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILog', V298}} end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V299) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V299)) end end end(E149, E150)); _ -> fun (V300) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V300)) end end; _ -> fun (V301) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V301)) end end end(E4)); _ -> fun (V302) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V302)) end end end(E2, E3)); _ -> fun (V303) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V303)) end end end(E0, E1)); _ -> fun (V304) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V304)) end end.
'case--reify-12927'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"PatClause"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [] -> fun (V22) -> begin (V26 = begin (V23 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V22))), case V23 of {'Idris.Prelude.Types.Left', E11} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V25) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V25))(V22)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V26 of {'Idris.Prelude.Types.Left', E13} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V28) -> begin (V32 = begin (V29 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V22))), case V29 of {'Idris.Prelude.Types.Left', E15} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V31) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V31))(V22)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V32 of {'Idris.Prelude.Types.Left', E17} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V34) -> begin (V38 = begin (V35 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V22))), case V35 of {'Idris.Prelude.Types.Left', E19} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V37) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V37))(V22)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V38 of {'Idris.Prelude.Types.Left', E21} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V28, V34, V40}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V41)) end end end(E9, E10)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V42)) end end end(E7, E8)); _ -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V43)) end end end(E5, E6)); _ -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V44)) end end; <<"WithClause"/utf8>> -> case V12 of [E23 | E24] -> (fun (V45, V46) -> case V46 of [E25 | E26] -> (fun (V47, V48) -> case V48 of [E27 | E28] -> (fun (V49, V50) -> case V50 of [E29 | E30] -> (fun (V51, V52) -> case V52 of [E31 | E32] -> (fun (V53, V54) -> case V54 of [] -> fun (V55) -> begin (V59 = begin (V56 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V45))(V55))), case V56 of {'Idris.Prelude.Types.Left', E33} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V58) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V58))(V55)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E35} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V61) -> begin (V65 = begin (V62 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V47))(V55))), case V62 of {'Idris.Prelude.Types.Left', E37} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V64) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V64))(V55)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V65 of {'Idris.Prelude.Types.Left', E39} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V67) -> begin (V71 = begin (V68 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V49))(V55))), case V68 of {'Idris.Prelude.Types.Left', E41} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V70) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V70))(V55)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V71 of {'Idris.Prelude.Types.Left', E43} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V73) -> begin (V81 = begin (V74 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V51))(V55))), case V74 of {'Idris.Prelude.Types.Left', E45} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V76) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'('erased', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V77, V78, V79, V80)) end end end end, V8, V0, V7, V76))(V55)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V81 of {'Idris.Prelude.Types.Left', E47} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V83) -> begin (V91 = begin (V84 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V53))(V55))), case V84 of {'Idris.Prelude.Types.Left', E49} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V86) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('dn--un--reify_Reify_ImpClause'(V87, V88, V89, V90)) end end end end, V8, V0, V7, V86))(V55)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V91 of {'Idris.Prelude.Types.Left', E51} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V93) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V61, V67, V73, V83, [], V93}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V94)) end end end(E31, E32)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V95)) end end end(E29, E30)); _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V96)) end end end(E27, E28)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V97)) end end end(E25, E26)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V98)) end end end(E23, E24)); _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V99)) end end; <<"ImpossibleClause"/utf8>> -> case V12 of [E53 | E54] -> (fun (V100, V101) -> case V101 of [E55 | E56] -> (fun (V102, V103) -> case V103 of [] -> fun (V104) -> begin (V108 = begin (V105 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V100))(V104))), case V105 of {'Idris.Prelude.Types.Left', E57} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V107) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V107))(V104)) end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V108 of {'Idris.Prelude.Types.Left', E59} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V110) -> begin (V114 = begin (V111 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V102))(V104))), case V111 of {'Idris.Prelude.Types.Left', E61} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V113) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V113))(V104)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V114 of {'Idris.Prelude.Types.Left', E63} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V116) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V110, V116}} end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V117) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V117)) end end end(E55, E56)); _ -> fun (V118) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V118)) end end end(E53, E54)); _ -> fun (V119) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V119)) end end; _ -> fun (V120) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V120)) end end end(E4)); _ -> fun (V121) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V121)) end end end(E2, E3)); _ -> fun (V122) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V122)) end end end(E0, E1)); _ -> fun (V123) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V123)) end end.
'case--reify-12680'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkRecord"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V74 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V46, V47, V48, V49)) end end end end, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V54, V55, V56, V57)) end end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'('erased', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('dn--un--reify_Reify_RawImp'(V66, V67, V68, V69)) end end end end, V62, V63, V64, V65)) end end end end, fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('dn--un--reify_Reify_RawImp'(V70, V71, V72, V73)) end end end end}, V58, V59, V60, V61)) end end end end}, V50, V51, V52, V53)) end end end end}, V42, V43, V44, V45)) end end end end, V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V74 of {'Idris.Prelude.Types.Left', E25} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V76) -> begin (V80 = begin (V77 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V77 of {'Idris.Prelude.Types.Left', E27} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V79) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V79))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V80 of {'Idris.Prelude.Types.Left', E29} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V82) -> begin (V90 = begin (V83 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V83 of {'Idris.Prelude.Types.Left', E31} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V85) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('dn--un--reify_Reify_IField'(V86, V87, V88, V89)) end end end end, V8, V0, V7, V85))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E33} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V32, V38, V76, V82, V92}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V93)) end end end(E13, E14)); _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V94)) end end end(E11, E12)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V95)) end end end(E9, E10)); _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V96)) end end end(E7, E8)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V97)) end end end(E5, E6)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V98)) end end; _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V99)) end end end(E4)); _ -> fun (V100) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V100)) end end end(E2, E3)); _ -> fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V101)) end end end(E0, E1)); _ -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V102)) end end.
'case--reify-12458'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkIField"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V46 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'('erased', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('dn--un--reify_Reify_RawImp'(V42, V43, V44, V45)) end end end end, V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V46 of {'Idris.Prelude.Types.Left', E25} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V48) -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V49 of {'Idris.Prelude.Types.Left', E27} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V51) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V51))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V55 of {'Idris.Prelude.Types.Left', E31} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V57) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V57))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E33} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V32, V38, V48, V54, V60}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V61)) end end end(E13, E14)); _ -> fun (V62) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V62)) end end end(E11, E12)); _ -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V63)) end end end(E9, E10)); _ -> fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V64)) end end end(E7, E8)); _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V65)) end end end(E5, E6)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V66)) end end; _ -> fun (V67) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V67)) end end end(E4)); _ -> fun (V68) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V68)) end end end(E2, E3)); _ -> fun (V69) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V69)) end end end(E0, E1)); _ -> fun (V70) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V70)) end end.
'case--reify-12143'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkData"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V42 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V42 of {'Idris.Prelude.Types.Left', E25} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V44) -> begin (V52 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V45 of {'Idris.Prelude.Types.Left', E27} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V47) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('dn--un--reify_Reify_DataOpt'(V48, V49, V50, V51)) end end end end, V8, V0, V7, V47))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V62 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V55 of {'Idris.Prelude.Types.Left', E31} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V57) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('dn--un--reify_Reify_ImpTy'(V58, V59, V60, V61)) end end end end, V8, V0, V7, V57))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V62 of {'Idris.Prelude.Types.Left', E33} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V32, V38, V44, V54, V64}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V65)) end end end(E13, E14)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V66)) end end end(E11, E12)); _ -> fun (V67) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V67)) end end end(E9, E10)); _ -> fun (V68) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V68)) end end end(E7, E8)); _ -> fun (V69) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V69)) end end end(E5, E6)); _ -> fun (V70) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V70)) end end; <<"MkLater"/utf8>> -> case V12 of [E35 | E36] -> (fun (V71, V72) -> case V72 of [E37 | E38] -> (fun (V73, V74) -> case V74 of [E39 | E40] -> (fun (V75, V76) -> case V76 of [] -> fun (V77) -> begin (V81 = begin (V78 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V71))(V77))), case V78 of {'Idris.Prelude.Types.Left', E41} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V80) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V80))(V77)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V81 of {'Idris.Prelude.Types.Left', E43} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V83) -> begin (V87 = begin (V84 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V73))(V77))), case V84 of {'Idris.Prelude.Types.Left', E45} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V86) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V86))(V77)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V87 of {'Idris.Prelude.Types.Left', E47} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V89) -> begin (V93 = begin (V90 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V75))(V77))), case V90 of {'Idris.Prelude.Types.Left', E49} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V92) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V92))(V77)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E51} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V83, V89, V95}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V96)) end end end(E39, E40)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V97)) end end end(E37, E38)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V98)) end end end(E35, E36)); _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V99)) end end; _ -> fun (V100) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V100)) end end end(E4)); _ -> fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V101)) end end end(E2, E3)); _ -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V102)) end end end(E0, E1)); _ -> fun (V103) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V103)) end end.
'case--reify-11851'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"SearchBy"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V16 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V18, V19) -> case V17 of [] -> fun (V20) -> begin (V28 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V19))(V20))), case V21 of {'Idris.Prelude.Types.Left', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V23) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V24, V25, V26, V27)) end end end end, V8, V0, V7, V23))(V20)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V28 of {'Idris.Prelude.Types.Left', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SearchBy', V30}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V31)) end end end(E7, E8)); _ -> fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V32)) end end end(E5, E6)); _ -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V33)) end end; <<"NoHints"/utf8>> -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoHints'}} end; <<"UniqueSearch"/utf8>> -> fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueSearch'}} end; <<"External"/utf8>> -> fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.External'}} end; <<"NoNewtype"/utf8>> -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoNewtype'}} end; _ -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V38)) end end end(E4)); _ -> fun (V39) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V39)) end end end(E2, E3)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V40)) end end end(E0, E1)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V41)) end end.
'case--reify-11659'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkTy"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [] -> fun (V24) -> begin (V28 = begin (V25 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V24))), case V25 of {'Idris.Prelude.Types.Left', E13} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V27) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V27))(V24)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V28 of {'Idris.Prelude.Types.Left', E15} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V30) -> begin (V34 = begin (V31 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V24))), case V31 of {'Idris.Prelude.Types.Left', E17} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V33) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V33))(V24)) end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V34 of {'Idris.Prelude.Types.Left', E19} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V36) -> begin (V40 = begin (V37 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V24))), case V37 of {'Idris.Prelude.Types.Left', E21} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V39) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V39))(V24)) end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V40 of {'Idris.Prelude.Types.Left', E23} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V42) -> begin (V46 = begin (V43 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V24))), case V43 of {'Idris.Prelude.Types.Left', E25} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V45) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V45))(V24)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V46 of {'Idris.Prelude.Types.Left', E27} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V48) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V30, V36, V42, V48}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V49) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V49)) end end end(E11, E12)); _ -> fun (V50) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V50)) end end end(E9, E10)); _ -> fun (V51) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V51)) end end end(E7, E8)); _ -> fun (V52) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V52)) end end end(E5, E6)); _ -> fun (V53) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V53)) end end; _ -> fun (V54) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V54)) end end end(E4)); _ -> fun (V55) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V55)) end end end(E2, E3)); _ -> fun (V56) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V56)) end end end(E0, E1)); _ -> fun (V57) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V57)) end end.
'case--reify-11094'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"Inline"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Inline'}} end; <<"TCInline"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.TCInline'}} end; <<"Hint"/utf8>> -> case V12 of [E5 | E6] -> (fun (V18, V19) -> case V18 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V20, V21) -> case V19 of [] -> fun (V22) -> begin (V26 = begin (V23 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V21))(V22))), case V23 of {'Idris.Prelude.Types.Left', E9} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V25) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V8, V0, V7, V25))(V22)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V26 of {'Idris.Prelude.Types.Left', E11} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Hint', V28}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V29)) end end end(E7, E8)); _ -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V30)) end end end(E5, E6)); _ -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V31)) end end; <<"GlobalHint"/utf8>> -> case V12 of [E13 | E14] -> (fun (V32, V33) -> case V32 of {'Idris.Builtin.MkPair', E15, E16} -> (fun (V34, V35) -> case V33 of [] -> fun (V36) -> begin (V40 = begin (V37 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V35))(V36))), case V37 of {'Idris.Prelude.Types.Left', E17} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V39) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V8, V0, V7, V39))(V36)) end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V40 of {'Idris.Prelude.Types.Left', E19} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V42) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.GlobalHint', V42}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V43)) end end end(E15, E16)); _ -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V44)) end end end(E13, E14)); _ -> fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V45)) end end; <<"ExternFn"/utf8>> -> fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ExternFn'}} end; <<"ForeignFn"/utf8>> -> case V12 of [E21 | E22] -> (fun (V47, V48) -> case V47 of {'Idris.Builtin.MkPair', E23, E24} -> (fun (V49, V50) -> case V48 of [] -> fun (V51) -> begin (V59 = begin (V52 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V50))(V51))), case V52 of {'Idris.Prelude.Types.Left', E25} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V54) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> ('dn--un--reify_Reify_RawImp'(V55, V56, V57, V58)) end end end end, V8, V0, V7, V54))(V51)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E27} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V61}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V62) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V62)) end end end(E23, E24)); _ -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V63)) end end end(E21, E22)); _ -> fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V64)) end end; <<"Invertible"/utf8>> -> fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Invertible'}} end; <<"Totality"/utf8>> -> case V12 of [E29 | E30] -> (fun (V66, V67) -> case V66 of {'Idris.Builtin.MkPair', E31, E32} -> (fun (V68, V69) -> case V67 of [] -> fun (V70) -> begin (V74 = begin (V71 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V69))(V70))), case V71 of {'Idris.Prelude.Types.Left', E33} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V73) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_TotalReq'(V8, V0, V7, V73))(V70)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V74 of {'Idris.Prelude.Types.Left', E35} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V76) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', V76}} end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V77)) end end end(E31, E32)); _ -> fun (V78) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V78)) end end end(E29, E30)); _ -> fun (V79) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V79)) end end; <<"Macro"/utf8>> -> fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Macro'}} end; <<"SpecArgs"/utf8>> -> case V12 of [E37 | E38] -> (fun (V81, V82) -> case V81 of {'Idris.Builtin.MkPair', E39, E40} -> (fun (V83, V84) -> case V82 of [] -> fun (V85) -> begin (V93 = begin (V86 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V84))(V85))), case V86 of {'Idris.Prelude.Types.Left', E41} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V88) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V89, V90, V91, V92)) end end end end, V8, V0, V7, V88))(V85)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E43} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SpecArgs', V95}} end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V96)) end end end(E39, E40)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V97)) end end end(E37, E38)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V98)) end end; _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V99)) end end end(E4)); _ -> fun (V100) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V100)) end end end(E2, E3)); _ -> fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V101)) end end end(E0, E1)); _ -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V102)) end end.
'case--reify-10883'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"FirstSuccess"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.FirstSuccess'}} end; <<"Unique"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Unique'}} end; <<"UniqueDefault"/utf8>> -> case V12 of [E5 | E6] -> (fun (V18, V19) -> case V18 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V20, V21) -> case V19 of [] -> fun (V22) -> begin (V26 = begin (V23 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V21))(V22))), case V23 of {'Idris.Prelude.Types.Left', E9} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V25) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V25))(V22)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V26 of {'Idris.Prelude.Types.Left', E11} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueDefault', V28}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V29)) end end end(E7, E8)); _ -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V30)) end end end(E5, E6)); _ -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V31)) end end; _ -> fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V32)) end end end(E4)); _ -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V33)) end end end(E2, E3)); _ -> fun (V34) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V34)) end end end(E0, E1)); _ -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V35)) end end.
'case--reify-10629'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"ISetField"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V16 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V18, V19) -> case V17 of [E9 | E10] -> (fun (V20, V21) -> case V20 of {'Idris.Builtin.MkPair', E11, E12} -> (fun (V22, V23) -> case V21 of [] -> fun (V24) -> begin (V32 = begin (V25 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V19))(V24))), case V25 of {'Idris.Prelude.Types.Left', E13} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V27) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V28, V29, V30, V31)) end end end end, V8, V0, V7, V27))(V24)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V32 of {'Idris.Prelude.Types.Left', E15} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V34) -> begin (V38 = begin (V35 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V23))(V24))), case V35 of {'Idris.Prelude.Types.Left', E17} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V37) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V37))(V24)) end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V38 of {'Idris.Prelude.Types.Left', E19} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V34, V40}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V41)) end end end(E11, E12)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V42)) end end end(E9, E10)); _ -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V43)) end end end(E7, E8)); _ -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V44)) end end end(E5, E6)); _ -> fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V45)) end end; <<"ISetFieldApp"/utf8>> -> case V12 of [E21 | E22] -> (fun (V46, V47) -> case V46 of {'Idris.Builtin.MkPair', E23, E24} -> (fun (V48, V49) -> case V47 of [E25 | E26] -> (fun (V50, V51) -> case V50 of {'Idris.Builtin.MkPair', E27, E28} -> (fun (V52, V53) -> case V51 of [] -> fun (V54) -> begin (V62 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V49))(V54))), case V55 of {'Idris.Prelude.Types.Left', E29} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V57) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V58, V59, V60, V61)) end end end end, V8, V0, V7, V57))(V54)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V62 of {'Idris.Prelude.Types.Left', E31} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V64) -> begin (V68 = begin (V65 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V53))(V54))), case V65 of {'Idris.Prelude.Types.Left', E33} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V67) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V67))(V54)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V68 of {'Idris.Prelude.Types.Left', E35} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V64, V70}} end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V71) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V71)) end end end(E27, E28)); _ -> fun (V72) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V72)) end end end(E25, E26)); _ -> fun (V73) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V73)) end end end(E23, E24)); _ -> fun (V74) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V74)) end end end(E21, E22)); _ -> fun (V75) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V75)) end end; _ -> fun (V76) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V76)) end end end(E4)); _ -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V77)) end end end(E2, E3)); _ -> fun (V78) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V78)) end end end(E0, E1)); _ -> fun (V79) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V79)) end end.
'case--reify-7797'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"IVar"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V24 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V20))), case V21 of {'Idris.Prelude.Types.Left', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V23) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V23))(V20)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E11} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V20))), case V27 of {'Idris.Prelude.Types.Left', E13} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V29))(V20)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E15} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V26, V32}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V33)) end end end(E7, E8)); _ -> fun (V34) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V34)) end end end(E5, E6)); _ -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V35)) end end; <<"IPi"/utf8>> -> case V12 of [E17 | E18] -> (fun (V36, V37) -> case V37 of [E19 | E20] -> (fun (V38, V39) -> case V39 of [E21 | E22] -> (fun (V40, V41) -> case V41 of [E23 | E24] -> (fun (V42, V43) -> case V43 of [E25 | E26] -> (fun (V44, V45) -> case V45 of [E27 | E28] -> (fun (V46, V47) -> case V47 of [] -> fun (V48) -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V36))(V48))), case V49 of {'Idris.Prelude.Types.Left', E29} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V51) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V51))(V48)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E31} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V38))(V48))), case V55 of {'Idris.Prelude.Types.Left', E33} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V57) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V8, V0, V7, V57))(V48)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E35} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V60) -> begin (V68 = begin (V61 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V40))(V48))), case V61 of {'Idris.Prelude.Types.Left', E37} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V63) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'('erased', fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('dn--un--reify_Reify_RawImp'(V64, V65, V66, V67)) end end end end, V8, V0, V7, V63))(V48)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V68 of {'Idris.Prelude.Types.Left', E39} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V70) -> begin (V78 = begin (V71 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V42))(V48))), case V71 of {'Idris.Prelude.Types.Left', E41} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V73) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'('erased', fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V74, V75, V76, V77)) end end end end, V8, V0, V7, V73))(V48)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V78 of {'Idris.Prelude.Types.Left', E43} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V80) -> begin (V84 = begin (V81 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V44))(V48))), case V81 of {'Idris.Prelude.Types.Left', E45} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V83) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V83))(V48)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V84 of {'Idris.Prelude.Types.Left', E47} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V86) -> begin (V90 = begin (V87 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V46))(V48))), case V87 of {'Idris.Prelude.Types.Left', E49} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V89) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V89))(V48)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E51} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V54, V60, V70, V80, V86, V92}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V93)) end end end(E27, E28)); _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V94)) end end end(E25, E26)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V95)) end end end(E23, E24)); _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V96)) end end end(E21, E22)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V97)) end end end(E19, E20)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V98)) end end end(E17, E18)); _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V99)) end end; <<"ILam"/utf8>> -> case V12 of [E53 | E54] -> (fun (V100, V101) -> case V101 of [E55 | E56] -> (fun (V102, V103) -> case V103 of [E57 | E58] -> (fun (V104, V105) -> case V105 of [E59 | E60] -> (fun (V106, V107) -> case V107 of [E61 | E62] -> (fun (V108, V109) -> case V109 of [E63 | E64] -> (fun (V110, V111) -> case V111 of [] -> fun (V112) -> begin (V116 = begin (V113 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V100))(V112))), case V113 of {'Idris.Prelude.Types.Left', E65} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V115) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V115))(V112)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V116 of {'Idris.Prelude.Types.Left', E67} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V118) -> begin (V122 = begin (V119 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V102))(V112))), case V119 of {'Idris.Prelude.Types.Left', E69} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V121) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V8, V0, V7, V121))(V112)) end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V122 of {'Idris.Prelude.Types.Left', E71} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V124) -> begin (V132 = begin (V125 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V104))(V112))), case V125 of {'Idris.Prelude.Types.Left', E73} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V127) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'('erased', fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--reify_Reify_RawImp'(V128, V129, V130, V131)) end end end end, V8, V0, V7, V127))(V112)) end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V132 of {'Idris.Prelude.Types.Left', E75} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V134) -> begin (V142 = begin (V135 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V106))(V112))), case V135 of {'Idris.Prelude.Types.Left', E77} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V137) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'('erased', fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V138, V139, V140, V141)) end end end end, V8, V0, V7, V137))(V112)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V142 of {'Idris.Prelude.Types.Left', E79} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V144) -> begin (V148 = begin (V145 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V108))(V112))), case V145 of {'Idris.Prelude.Types.Left', E81} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V147) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V147))(V112)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V148 of {'Idris.Prelude.Types.Left', E83} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V150) -> begin (V154 = begin (V151 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V110))(V112))), case V151 of {'Idris.Prelude.Types.Left', E85} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V153) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V153))(V112)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V154 of {'Idris.Prelude.Types.Left', E87} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V156) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V118, V124, V134, V144, V150, V156}} end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V157) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V157)) end end end(E63, E64)); _ -> fun (V158) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V158)) end end end(E61, E62)); _ -> fun (V159) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V159)) end end end(E59, E60)); _ -> fun (V160) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V160)) end end end(E57, E58)); _ -> fun (V161) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V161)) end end end(E55, E56)); _ -> fun (V162) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V162)) end end end(E53, E54)); _ -> fun (V163) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V163)) end end; <<"ILet"/utf8>> -> case V12 of [E89 | E90] -> (fun (V164, V165) -> case V165 of [E91 | E92] -> (fun (V166, V167) -> case V167 of [E93 | E94] -> (fun (V168, V169) -> case V169 of [E95 | E96] -> (fun (V170, V171) -> case V171 of [E97 | E98] -> (fun (V172, V173) -> case V173 of [E99 | E100] -> (fun (V174, V175) -> case V175 of [E101 | E102] -> (fun (V176, V177) -> case V177 of [] -> fun (V178) -> begin (V182 = begin (V179 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V164))(V178))), case V179 of {'Idris.Prelude.Types.Left', E103} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V181) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V181))(V178)) end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V182 of {'Idris.Prelude.Types.Left', E105} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V184) -> begin (V188 = begin (V185 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V166))(V178))), case V185 of {'Idris.Prelude.Types.Left', E107} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V187) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V187))(V178)) end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V188 of {'Idris.Prelude.Types.Left', E109} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V190) -> begin (V194 = begin (V191 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V168))(V178))), case V191 of {'Idris.Prelude.Types.Left', E111} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V193) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V8, V0, V7, V193))(V178)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V194 of {'Idris.Prelude.Types.Left', E113} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V196) -> begin (V200 = begin (V197 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V170))(V178))), case V197 of {'Idris.Prelude.Types.Left', E115} -> (fun (V198) -> {'Idris.Prelude.Types.Left', V198} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V199) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V199))(V178)) end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V200 of {'Idris.Prelude.Types.Left', E117} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V202) -> begin (V206 = begin (V203 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V172))(V178))), case V203 of {'Idris.Prelude.Types.Left', E119} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V205) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V205))(V178)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V206 of {'Idris.Prelude.Types.Left', E121} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V208) -> begin (V212 = begin (V209 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V174))(V178))), case V209 of {'Idris.Prelude.Types.Left', E123} -> (fun (V210) -> {'Idris.Prelude.Types.Left', V210} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V211) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V211))(V178)) end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V212 of {'Idris.Prelude.Types.Left', E125} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V214) -> begin (V218 = begin (V215 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V176))(V178))), case V215 of {'Idris.Prelude.Types.Left', E127} -> (fun (V216) -> {'Idris.Prelude.Types.Left', V216} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V217) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V217))(V178)) end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V218 of {'Idris.Prelude.Types.Left', E129} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V220) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V184, V190, V196, V202, V208, V214, V220}} end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V221) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V221)) end end end(E101, E102)); _ -> fun (V222) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V222)) end end end(E99, E100)); _ -> fun (V223) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V223)) end end end(E97, E98)); _ -> fun (V224) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V224)) end end end(E95, E96)); _ -> fun (V225) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V225)) end end end(E93, E94)); _ -> fun (V226) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V226)) end end end(E91, E92)); _ -> fun (V227) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V227)) end end end(E89, E90)); _ -> fun (V228) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V228)) end end; <<"ICase"/utf8>> -> case V12 of [E131 | E132] -> (fun (V229, V230) -> case V230 of [E133 | E134] -> (fun (V231, V232) -> case V232 of [E135 | E136] -> (fun (V233, V234) -> case V234 of [E137 | E138] -> (fun (V235, V236) -> case V236 of [] -> fun (V237) -> begin (V241 = begin (V238 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V229))(V237))), case V238 of {'Idris.Prelude.Types.Left', E139} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V240) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V240))(V237)) end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V241 of {'Idris.Prelude.Types.Left', E141} -> (fun (V242) -> {'Idris.Prelude.Types.Left', V242} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V243) -> begin (V247 = begin (V244 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V231))(V237))), case V244 of {'Idris.Prelude.Types.Left', E143} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V246) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V246))(V237)) end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V247 of {'Idris.Prelude.Types.Left', E145} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V249) -> begin (V253 = begin (V250 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V233))(V237))), case V250 of {'Idris.Prelude.Types.Left', E147} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V252) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V252))(V237)) end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V253 of {'Idris.Prelude.Types.Left', E149} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V255) -> begin (V263 = begin (V256 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V235))(V237))), case V256 of {'Idris.Prelude.Types.Left', E151} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V258) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> ('dn--un--reify_Reify_ImpClause'(V259, V260, V261, V262)) end end end end, V8, V0, V7, V258))(V237)) end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V263 of {'Idris.Prelude.Types.Left', E153} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V265) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V243, V249, V255, V265}} end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V266) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V266)) end end end(E137, E138)); _ -> fun (V267) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V267)) end end end(E135, E136)); _ -> fun (V268) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V268)) end end end(E133, E134)); _ -> fun (V269) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V269)) end end end(E131, E132)); _ -> fun (V270) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V270)) end end; <<"ILocal"/utf8>> -> case V12 of [E155 | E156] -> (fun (V271, V272) -> case V272 of [E157 | E158] -> (fun (V273, V274) -> case V274 of [E159 | E160] -> (fun (V275, V276) -> case V276 of [] -> fun (V277) -> begin (V281 = begin (V278 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V271))(V277))), case V278 of {'Idris.Prelude.Types.Left', E161} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V280) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V280))(V277)) end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V281 of {'Idris.Prelude.Types.Left', E163} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V283) -> begin (V291 = begin (V284 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V273))(V277))), case V284 of {'Idris.Prelude.Types.Left', E165} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V286) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> ('dn--un--reify_Reify_ImpDecl'(V287, V288, V289, V290)) end end end end, V8, V0, V7, V286))(V277)) end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V291 of {'Idris.Prelude.Types.Left', E167} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V293) -> begin (V297 = begin (V294 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V275))(V277))), case V294 of {'Idris.Prelude.Types.Left', E169} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V296) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V296))(V277)) end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V297 of {'Idris.Prelude.Types.Left', E171} -> (fun (V298) -> {'Idris.Prelude.Types.Left', V298} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V299) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V283, V293, V299}} end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V300) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V300)) end end end(E159, E160)); _ -> fun (V301) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V301)) end end end(E157, E158)); _ -> fun (V302) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V302)) end end end(E155, E156)); _ -> fun (V303) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V303)) end end; <<"IUpdate"/utf8>> -> case V12 of [E173 | E174] -> (fun (V304, V305) -> case V305 of [E175 | E176] -> (fun (V306, V307) -> case V307 of [E177 | E178] -> (fun (V308, V309) -> case V309 of [] -> fun (V310) -> begin (V314 = begin (V311 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V304))(V310))), case V311 of {'Idris.Prelude.Types.Left', E179} -> (fun (V312) -> {'Idris.Prelude.Types.Left', V312} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V313) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V313))(V310)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V314 of {'Idris.Prelude.Types.Left', E181} -> (fun (V315) -> {'Idris.Prelude.Types.Left', V315} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V316) -> begin (V324 = begin (V317 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V306))(V310))), case V317 of {'Idris.Prelude.Types.Left', E183} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V319) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> ('dn--un--reify_Reify_IFieldUpdate'(V320, V321, V322, V323)) end end end end, V8, V0, V7, V319))(V310)) end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V324 of {'Idris.Prelude.Types.Left', E185} -> (fun (V325) -> {'Idris.Prelude.Types.Left', V325} end(E185)); {'Idris.Prelude.Types.Right', E186} -> (fun (V326) -> begin (V330 = begin (V327 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V308))(V310))), case V327 of {'Idris.Prelude.Types.Left', E187} -> (fun (V328) -> {'Idris.Prelude.Types.Left', V328} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V329) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V329))(V310)) end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V330 of {'Idris.Prelude.Types.Left', E189} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V332) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V316, V326, V332}} end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V333) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V333)) end end end(E177, E178)); _ -> fun (V334) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V334)) end end end(E175, E176)); _ -> fun (V335) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V335)) end end end(E173, E174)); _ -> fun (V336) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V336)) end end; <<"IApp"/utf8>> -> case V12 of [E191 | E192] -> (fun (V337, V338) -> case V338 of [E193 | E194] -> (fun (V339, V340) -> case V340 of [E195 | E196] -> (fun (V341, V342) -> case V342 of [] -> fun (V343) -> begin (V347 = begin (V344 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V337))(V343))), case V344 of {'Idris.Prelude.Types.Left', E197} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V346) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V346))(V343)) end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V347 of {'Idris.Prelude.Types.Left', E199} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V349) -> begin (V353 = begin (V350 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V339))(V343))), case V350 of {'Idris.Prelude.Types.Left', E201} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V352) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V352))(V343)) end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V353 of {'Idris.Prelude.Types.Left', E203} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V355) -> begin (V359 = begin (V356 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V341))(V343))), case V356 of {'Idris.Prelude.Types.Left', E205} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V358) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V358))(V343)) end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V359 of {'Idris.Prelude.Types.Left', E207} -> (fun (V360) -> {'Idris.Prelude.Types.Left', V360} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V361) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V349, V355, V361}} end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V362) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V362)) end end end(E195, E196)); _ -> fun (V363) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V363)) end end end(E193, E194)); _ -> fun (V364) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V364)) end end end(E191, E192)); _ -> fun (V365) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V365)) end end; <<"INamedApp"/utf8>> -> case V12 of [E209 | E210] -> (fun (V366, V367) -> case V367 of [E211 | E212] -> (fun (V368, V369) -> case V369 of [E213 | E214] -> (fun (V370, V371) -> case V371 of [E215 | E216] -> (fun (V372, V373) -> case V373 of [] -> fun (V374) -> begin (V378 = begin (V375 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V366))(V374))), case V375 of {'Idris.Prelude.Types.Left', E217} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V377) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V377))(V374)) end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V378 of {'Idris.Prelude.Types.Left', E219} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V380) -> begin (V384 = begin (V381 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V368))(V374))), case V381 of {'Idris.Prelude.Types.Left', E221} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V383) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V383))(V374)) end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V384 of {'Idris.Prelude.Types.Left', E223} -> (fun (V385) -> {'Idris.Prelude.Types.Left', V385} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V386) -> begin (V390 = begin (V387 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V370))(V374))), case V387 of {'Idris.Prelude.Types.Left', E225} -> (fun (V388) -> {'Idris.Prelude.Types.Left', V388} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V389) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V389))(V374)) end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V390 of {'Idris.Prelude.Types.Left', E227} -> (fun (V391) -> {'Idris.Prelude.Types.Left', V391} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V392) -> begin (V396 = begin (V393 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V372))(V374))), case V393 of {'Idris.Prelude.Types.Left', E229} -> (fun (V394) -> {'Idris.Prelude.Types.Left', V394} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V395) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V395))(V374)) end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V396 of {'Idris.Prelude.Types.Left', E231} -> (fun (V397) -> {'Idris.Prelude.Types.Left', V397} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V398) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V380, V386, V392, V398}} end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V399) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V399)) end end end(E215, E216)); _ -> fun (V400) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V400)) end end end(E213, E214)); _ -> fun (V401) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V401)) end end end(E211, E212)); _ -> fun (V402) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V402)) end end end(E209, E210)); _ -> fun (V403) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V403)) end end; <<"IAutoApp"/utf8>> -> case V12 of [E233 | E234] -> (fun (V404, V405) -> case V405 of [E235 | E236] -> (fun (V406, V407) -> case V407 of [E237 | E238] -> (fun (V408, V409) -> case V409 of [] -> fun (V410) -> begin (V414 = begin (V411 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V404))(V410))), case V411 of {'Idris.Prelude.Types.Left', E239} -> (fun (V412) -> {'Idris.Prelude.Types.Left', V412} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V413) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V413))(V410)) end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V414 of {'Idris.Prelude.Types.Left', E241} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V416) -> begin (V420 = begin (V417 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V406))(V410))), case V417 of {'Idris.Prelude.Types.Left', E243} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V419) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V419))(V410)) end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V420 of {'Idris.Prelude.Types.Left', E245} -> (fun (V421) -> {'Idris.Prelude.Types.Left', V421} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V422) -> begin (V426 = begin (V423 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V408))(V410))), case V423 of {'Idris.Prelude.Types.Left', E247} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V425) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V425))(V410)) end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V426 of {'Idris.Prelude.Types.Left', E249} -> (fun (V427) -> {'Idris.Prelude.Types.Left', V427} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V428) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V416, V422, V428}} end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V429) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V429)) end end end(E237, E238)); _ -> fun (V430) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V430)) end end end(E235, E236)); _ -> fun (V431) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V431)) end end end(E233, E234)); _ -> fun (V432) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V432)) end end; <<"IWithApp"/utf8>> -> case V12 of [E251 | E252] -> (fun (V433, V434) -> case V434 of [E253 | E254] -> (fun (V435, V436) -> case V436 of [E255 | E256] -> (fun (V437, V438) -> case V438 of [] -> fun (V439) -> begin (V443 = begin (V440 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V433))(V439))), case V440 of {'Idris.Prelude.Types.Left', E257} -> (fun (V441) -> {'Idris.Prelude.Types.Left', V441} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V442) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V442))(V439)) end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V443 of {'Idris.Prelude.Types.Left', E259} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V445) -> begin (V449 = begin (V446 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V435))(V439))), case V446 of {'Idris.Prelude.Types.Left', E261} -> (fun (V447) -> {'Idris.Prelude.Types.Left', V447} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V448) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V448))(V439)) end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V449 of {'Idris.Prelude.Types.Left', E263} -> (fun (V450) -> {'Idris.Prelude.Types.Left', V450} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V451) -> begin (V455 = begin (V452 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V437))(V439))), case V452 of {'Idris.Prelude.Types.Left', E265} -> (fun (V453) -> {'Idris.Prelude.Types.Left', V453} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V454) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V454))(V439)) end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V455 of {'Idris.Prelude.Types.Left', E267} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V457) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V445, V451, V457}} end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V458) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V458)) end end end(E255, E256)); _ -> fun (V459) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V459)) end end end(E253, E254)); _ -> fun (V460) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V460)) end end end(E251, E252)); _ -> fun (V461) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V461)) end end; <<"ISearch"/utf8>> -> case V12 of [E269 | E270] -> (fun (V462, V463) -> case V463 of [E271 | E272] -> (fun (V464, V465) -> case V465 of [] -> fun (V466) -> begin (V470 = begin (V467 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V462))(V466))), case V467 of {'Idris.Prelude.Types.Left', E273} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V469) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V469))(V466)) end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V470 of {'Idris.Prelude.Types.Left', E275} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V472) -> begin (V476 = begin (V473 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V464))(V466))), case V473 of {'Idris.Prelude.Types.Left', E277} -> (fun (V474) -> {'Idris.Prelude.Types.Left', V474} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V475) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V8, V0, V7, V475))(V466)) end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V476 of {'Idris.Prelude.Types.Left', E279} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V478) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V472, V478}} end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V479) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V479)) end end end(E271, E272)); _ -> fun (V480) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V480)) end end end(E269, E270)); _ -> fun (V481) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V481)) end end; <<"IAlternative"/utf8>> -> case V12 of [E281 | E282] -> (fun (V482, V483) -> case V483 of [E283 | E284] -> (fun (V484, V485) -> case V485 of [E285 | E286] -> (fun (V486, V487) -> case V487 of [] -> fun (V488) -> begin (V492 = begin (V489 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V482))(V488))), case V489 of {'Idris.Prelude.Types.Left', E287} -> (fun (V490) -> {'Idris.Prelude.Types.Left', V490} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V491) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V491))(V488)) end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V492 of {'Idris.Prelude.Types.Left', E289} -> (fun (V493) -> {'Idris.Prelude.Types.Left', V493} end(E289)); {'Idris.Prelude.Types.Right', E290} -> (fun (V494) -> begin (V498 = begin (V495 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V484))(V488))), case V495 of {'Idris.Prelude.Types.Left', E291} -> (fun (V496) -> {'Idris.Prelude.Types.Left', V496} end(E291)); {'Idris.Prelude.Types.Right', E292} -> (fun (V497) -> (('dn--un--reify_Reify_AltType'(V8, V0, V7, V497))(V488)) end(E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V498 of {'Idris.Prelude.Types.Left', E293} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V500) -> begin (V508 = begin (V501 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V486))(V488))), case V501 of {'Idris.Prelude.Types.Left', E295} -> (fun (V502) -> {'Idris.Prelude.Types.Left', V502} end(E295)); {'Idris.Prelude.Types.Right', E296} -> (fun (V503) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V504) -> fun (V505) -> fun (V506) -> fun (V507) -> ('dn--un--reify_Reify_RawImp'(V504, V505, V506, V507)) end end end end, V8, V0, V7, V503))(V488)) end(E296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V508 of {'Idris.Prelude.Types.Left', E297} -> (fun (V509) -> {'Idris.Prelude.Types.Left', V509} end(E297)); {'Idris.Prelude.Types.Right', E298} -> (fun (V510) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V494, V500, V510}} end(E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V511) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V511)) end end end(E285, E286)); _ -> fun (V512) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V512)) end end end(E283, E284)); _ -> fun (V513) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V513)) end end end(E281, E282)); _ -> fun (V514) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V514)) end end; <<"IRewrite"/utf8>> -> case V12 of [E299 | E300] -> (fun (V515, V516) -> case V516 of [E301 | E302] -> (fun (V517, V518) -> case V518 of [E303 | E304] -> (fun (V519, V520) -> case V520 of [] -> fun (V521) -> begin (V525 = begin (V522 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V515))(V521))), case V522 of {'Idris.Prelude.Types.Left', E305} -> (fun (V523) -> {'Idris.Prelude.Types.Left', V523} end(E305)); {'Idris.Prelude.Types.Right', E306} -> (fun (V524) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V524))(V521)) end(E306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V525 of {'Idris.Prelude.Types.Left', E307} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E307)); {'Idris.Prelude.Types.Right', E308} -> (fun (V527) -> begin (V531 = begin (V528 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V517))(V521))), case V528 of {'Idris.Prelude.Types.Left', E309} -> (fun (V529) -> {'Idris.Prelude.Types.Left', V529} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V530) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V530))(V521)) end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V531 of {'Idris.Prelude.Types.Left', E311} -> (fun (V532) -> {'Idris.Prelude.Types.Left', V532} end(E311)); {'Idris.Prelude.Types.Right', E312} -> (fun (V533) -> begin (V537 = begin (V534 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V519))(V521))), case V534 of {'Idris.Prelude.Types.Left', E313} -> (fun (V535) -> {'Idris.Prelude.Types.Left', V535} end(E313)); {'Idris.Prelude.Types.Right', E314} -> (fun (V536) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V536))(V521)) end(E314)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V537 of {'Idris.Prelude.Types.Left', E315} -> (fun (V538) -> {'Idris.Prelude.Types.Left', V538} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V539) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V527, V533, V539}} end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E312)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V540) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V540)) end end end(E303, E304)); _ -> fun (V541) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V541)) end end end(E301, E302)); _ -> fun (V542) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V542)) end end end(E299, E300)); _ -> fun (V543) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V543)) end end; <<"IBindHere"/utf8>> -> case V12 of [E317 | E318] -> (fun (V544, V545) -> case V545 of [E319 | E320] -> (fun (V546, V547) -> case V547 of [E321 | E322] -> (fun (V548, V549) -> case V549 of [] -> fun (V550) -> begin (V554 = begin (V551 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V544))(V550))), case V551 of {'Idris.Prelude.Types.Left', E323} -> (fun (V552) -> {'Idris.Prelude.Types.Left', V552} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V553) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V553))(V550)) end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V554 of {'Idris.Prelude.Types.Left', E325} -> (fun (V555) -> {'Idris.Prelude.Types.Left', V555} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V556) -> begin (V560 = begin (V557 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V546))(V550))), case V557 of {'Idris.Prelude.Types.Left', E327} -> (fun (V558) -> {'Idris.Prelude.Types.Left', V558} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V559) -> (('dn--un--reify_Reify_BindMode'(V8, V0, V7, V559))(V550)) end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V560 of {'Idris.Prelude.Types.Left', E329} -> (fun (V561) -> {'Idris.Prelude.Types.Left', V561} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V562) -> begin (V566 = begin (V563 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V548))(V550))), case V563 of {'Idris.Prelude.Types.Left', E331} -> (fun (V564) -> {'Idris.Prelude.Types.Left', V564} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V565) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V565))(V550)) end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V566 of {'Idris.Prelude.Types.Left', E333} -> (fun (V567) -> {'Idris.Prelude.Types.Left', V567} end(E333)); {'Idris.Prelude.Types.Right', E334} -> (fun (V568) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V556, V562, V568}} end(E334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V569) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V569)) end end end(E321, E322)); _ -> fun (V570) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V570)) end end end(E319, E320)); _ -> fun (V571) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V571)) end end end(E317, E318)); _ -> fun (V572) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V572)) end end; <<"IBindVar"/utf8>> -> case V12 of [E335 | E336] -> (fun (V573, V574) -> case V574 of [E337 | E338] -> (fun (V575, V576) -> case V576 of [] -> fun (V577) -> begin (V581 = begin (V578 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V573))(V577))), case V578 of {'Idris.Prelude.Types.Left', E339} -> (fun (V579) -> {'Idris.Prelude.Types.Left', V579} end(E339)); {'Idris.Prelude.Types.Right', E340} -> (fun (V580) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V580))(V577)) end(E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V581 of {'Idris.Prelude.Types.Left', E341} -> (fun (V582) -> {'Idris.Prelude.Types.Left', V582} end(E341)); {'Idris.Prelude.Types.Right', E342} -> (fun (V583) -> begin (V587 = begin (V584 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V575))(V577))), case V584 of {'Idris.Prelude.Types.Left', E343} -> (fun (V585) -> {'Idris.Prelude.Types.Left', V585} end(E343)); {'Idris.Prelude.Types.Right', E344} -> (fun (V586) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V8, V0, V7, V586))(V577)) end(E344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V587 of {'Idris.Prelude.Types.Left', E345} -> (fun (V588) -> {'Idris.Prelude.Types.Left', V588} end(E345)); {'Idris.Prelude.Types.Right', E346} -> (fun (V589) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindVar', V583, V589}} end(E346)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V590) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V590)) end end end(E337, E338)); _ -> fun (V591) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V591)) end end end(E335, E336)); _ -> fun (V592) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V592)) end end; <<"IAs"/utf8>> -> case V12 of [E347 | E348] -> (fun (V593, V594) -> case V594 of [E349 | E350] -> (fun (V595, V596) -> case V596 of [E351 | E352] -> (fun (V597, V598) -> case V598 of [E353 | E354] -> (fun (V599, V600) -> case V600 of [E355 | E356] -> (fun (V601, V602) -> case V602 of [] -> fun (V603) -> begin (V607 = begin (V604 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V593))(V603))), case V604 of {'Idris.Prelude.Types.Left', E357} -> (fun (V605) -> {'Idris.Prelude.Types.Left', V605} end(E357)); {'Idris.Prelude.Types.Right', E358} -> (fun (V606) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V606))(V603)) end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V607 of {'Idris.Prelude.Types.Left', E359} -> (fun (V608) -> {'Idris.Prelude.Types.Left', V608} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V609) -> begin (V613 = begin (V610 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V595))(V603))), case V610 of {'Idris.Prelude.Types.Left', E361} -> (fun (V611) -> {'Idris.Prelude.Types.Left', V611} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V612) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V612))(V603)) end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V613 of {'Idris.Prelude.Types.Left', E363} -> (fun (V614) -> {'Idris.Prelude.Types.Left', V614} end(E363)); {'Idris.Prelude.Types.Right', E364} -> (fun (V615) -> begin (V619 = begin (V616 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V597))(V603))), case V616 of {'Idris.Prelude.Types.Left', E365} -> (fun (V617) -> {'Idris.Prelude.Types.Left', V617} end(E365)); {'Idris.Prelude.Types.Right', E366} -> (fun (V618) -> (('dn--un--reify_Reify_UseSide'(V8, V0, V7, V618))(V603)) end(E366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V619 of {'Idris.Prelude.Types.Left', E367} -> (fun (V620) -> {'Idris.Prelude.Types.Left', V620} end(E367)); {'Idris.Prelude.Types.Right', E368} -> (fun (V621) -> begin (V625 = begin (V622 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V599))(V603))), case V622 of {'Idris.Prelude.Types.Left', E369} -> (fun (V623) -> {'Idris.Prelude.Types.Left', V623} end(E369)); {'Idris.Prelude.Types.Right', E370} -> (fun (V624) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V624))(V603)) end(E370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V625 of {'Idris.Prelude.Types.Left', E371} -> (fun (V626) -> {'Idris.Prelude.Types.Left', V626} end(E371)); {'Idris.Prelude.Types.Right', E372} -> (fun (V627) -> begin (V631 = begin (V628 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V601))(V603))), case V628 of {'Idris.Prelude.Types.Left', E373} -> (fun (V629) -> {'Idris.Prelude.Types.Left', V629} end(E373)); {'Idris.Prelude.Types.Right', E374} -> (fun (V630) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V630))(V603)) end(E374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V631 of {'Idris.Prelude.Types.Left', E375} -> (fun (V632) -> {'Idris.Prelude.Types.Left', V632} end(E375)); {'Idris.Prelude.Types.Right', E376} -> (fun (V633) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V609, V615, V621, V627, V633}} end(E376)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V634) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V634)) end end end(E355, E356)); _ -> fun (V635) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V635)) end end end(E353, E354)); _ -> fun (V636) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V636)) end end end(E351, E352)); _ -> fun (V637) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V637)) end end end(E349, E350)); _ -> fun (V638) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V638)) end end end(E347, E348)); _ -> fun (V639) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V639)) end end; <<"IMustUnify"/utf8>> -> case V12 of [E377 | E378] -> (fun (V640, V641) -> case V641 of [E379 | E380] -> (fun (V642, V643) -> case V643 of [E381 | E382] -> (fun (V644, V645) -> case V645 of [] -> fun (V646) -> begin (V650 = begin (V647 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V640))(V646))), case V647 of {'Idris.Prelude.Types.Left', E383} -> (fun (V648) -> {'Idris.Prelude.Types.Left', V648} end(E383)); {'Idris.Prelude.Types.Right', E384} -> (fun (V649) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V649))(V646)) end(E384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V650 of {'Idris.Prelude.Types.Left', E385} -> (fun (V651) -> {'Idris.Prelude.Types.Left', V651} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V652) -> begin (V656 = begin (V653 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V642))(V646))), case V653 of {'Idris.Prelude.Types.Left', E387} -> (fun (V654) -> {'Idris.Prelude.Types.Left', V654} end(E387)); {'Idris.Prelude.Types.Right', E388} -> (fun (V655) -> (('dn--un--reify_Reify_DotReason'(V8, V0, V7, V655))(V646)) end(E388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V656 of {'Idris.Prelude.Types.Left', E389} -> (fun (V657) -> {'Idris.Prelude.Types.Left', V657} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V658) -> begin (V662 = begin (V659 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V644))(V646))), case V659 of {'Idris.Prelude.Types.Left', E391} -> (fun (V660) -> {'Idris.Prelude.Types.Left', V660} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V661) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V661))(V646)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V662 of {'Idris.Prelude.Types.Left', E393} -> (fun (V663) -> {'Idris.Prelude.Types.Left', V663} end(E393)); {'Idris.Prelude.Types.Right', E394} -> (fun (V664) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V652, V658, V664}} end(E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V665) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V665)) end end end(E381, E382)); _ -> fun (V666) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V666)) end end end(E379, E380)); _ -> fun (V667) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V667)) end end end(E377, E378)); _ -> fun (V668) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V668)) end end; <<"IDelayed"/utf8>> -> case V12 of [E395 | E396] -> (fun (V669, V670) -> case V670 of [E397 | E398] -> (fun (V671, V672) -> case V672 of [E399 | E400] -> (fun (V673, V674) -> case V674 of [] -> fun (V675) -> begin (V679 = begin (V676 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V669))(V675))), case V676 of {'Idris.Prelude.Types.Left', E401} -> (fun (V677) -> {'Idris.Prelude.Types.Left', V677} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V678) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V678))(V675)) end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V679 of {'Idris.Prelude.Types.Left', E403} -> (fun (V680) -> {'Idris.Prelude.Types.Left', V680} end(E403)); {'Idris.Prelude.Types.Right', E404} -> (fun (V681) -> begin (V685 = begin (V682 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V671))(V675))), case V682 of {'Idris.Prelude.Types.Left', E405} -> (fun (V683) -> {'Idris.Prelude.Types.Left', V683} end(E405)); {'Idris.Prelude.Types.Right', E406} -> (fun (V684) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_LazyReason'(V8, V0, V7, V684))(V675)) end(E406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V685 of {'Idris.Prelude.Types.Left', E407} -> (fun (V686) -> {'Idris.Prelude.Types.Left', V686} end(E407)); {'Idris.Prelude.Types.Right', E408} -> (fun (V687) -> begin (V691 = begin (V688 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V673))(V675))), case V688 of {'Idris.Prelude.Types.Left', E409} -> (fun (V689) -> {'Idris.Prelude.Types.Left', V689} end(E409)); {'Idris.Prelude.Types.Right', E410} -> (fun (V690) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V690))(V675)) end(E410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V691 of {'Idris.Prelude.Types.Left', E411} -> (fun (V692) -> {'Idris.Prelude.Types.Left', V692} end(E411)); {'Idris.Prelude.Types.Right', E412} -> (fun (V693) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V681, V687, V693}} end(E412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E408)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V694) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V694)) end end end(E399, E400)); _ -> fun (V695) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V695)) end end end(E397, E398)); _ -> fun (V696) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V696)) end end end(E395, E396)); _ -> fun (V697) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V697)) end end; <<"IDelay"/utf8>> -> case V12 of [E413 | E414] -> (fun (V698, V699) -> case V699 of [E415 | E416] -> (fun (V700, V701) -> case V701 of [] -> fun (V702) -> begin (V706 = begin (V703 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V698))(V702))), case V703 of {'Idris.Prelude.Types.Left', E417} -> (fun (V704) -> {'Idris.Prelude.Types.Left', V704} end(E417)); {'Idris.Prelude.Types.Right', E418} -> (fun (V705) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V705))(V702)) end(E418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V706 of {'Idris.Prelude.Types.Left', E419} -> (fun (V707) -> {'Idris.Prelude.Types.Left', V707} end(E419)); {'Idris.Prelude.Types.Right', E420} -> (fun (V708) -> begin (V712 = begin (V709 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V700))(V702))), case V709 of {'Idris.Prelude.Types.Left', E421} -> (fun (V710) -> {'Idris.Prelude.Types.Left', V710} end(E421)); {'Idris.Prelude.Types.Right', E422} -> (fun (V711) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V711))(V702)) end(E422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V712 of {'Idris.Prelude.Types.Left', E423} -> (fun (V713) -> {'Idris.Prelude.Types.Left', V713} end(E423)); {'Idris.Prelude.Types.Right', E424} -> (fun (V714) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V708, V714}} end(E424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V715) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V715)) end end end(E415, E416)); _ -> fun (V716) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V716)) end end end(E413, E414)); _ -> fun (V717) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V717)) end end; <<"IForce"/utf8>> -> case V12 of [E425 | E426] -> (fun (V718, V719) -> case V719 of [E427 | E428] -> (fun (V720, V721) -> case V721 of [] -> fun (V722) -> begin (V726 = begin (V723 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V718))(V722))), case V723 of {'Idris.Prelude.Types.Left', E429} -> (fun (V724) -> {'Idris.Prelude.Types.Left', V724} end(E429)); {'Idris.Prelude.Types.Right', E430} -> (fun (V725) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V725))(V722)) end(E430)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V726 of {'Idris.Prelude.Types.Left', E431} -> (fun (V727) -> {'Idris.Prelude.Types.Left', V727} end(E431)); {'Idris.Prelude.Types.Right', E432} -> (fun (V728) -> begin (V732 = begin (V729 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V720))(V722))), case V729 of {'Idris.Prelude.Types.Left', E433} -> (fun (V730) -> {'Idris.Prelude.Types.Left', V730} end(E433)); {'Idris.Prelude.Types.Right', E434} -> (fun (V731) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V731))(V722)) end(E434)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V732 of {'Idris.Prelude.Types.Left', E435} -> (fun (V733) -> {'Idris.Prelude.Types.Left', V733} end(E435)); {'Idris.Prelude.Types.Right', E436} -> (fun (V734) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V728, V734}} end(E436)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V735) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V735)) end end end(E427, E428)); _ -> fun (V736) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V736)) end end end(E425, E426)); _ -> fun (V737) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V737)) end end; <<"IQuote"/utf8>> -> case V12 of [E437 | E438] -> (fun (V738, V739) -> case V739 of [E439 | E440] -> (fun (V740, V741) -> case V741 of [] -> fun (V742) -> begin (V746 = begin (V743 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V738))(V742))), case V743 of {'Idris.Prelude.Types.Left', E441} -> (fun (V744) -> {'Idris.Prelude.Types.Left', V744} end(E441)); {'Idris.Prelude.Types.Right', E442} -> (fun (V745) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V745))(V742)) end(E442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V746 of {'Idris.Prelude.Types.Left', E443} -> (fun (V747) -> {'Idris.Prelude.Types.Left', V747} end(E443)); {'Idris.Prelude.Types.Right', E444} -> (fun (V748) -> begin (V752 = begin (V749 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V740))(V742))), case V749 of {'Idris.Prelude.Types.Left', E445} -> (fun (V750) -> {'Idris.Prelude.Types.Left', V750} end(E445)); {'Idris.Prelude.Types.Right', E446} -> (fun (V751) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V751))(V742)) end(E446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V752 of {'Idris.Prelude.Types.Left', E447} -> (fun (V753) -> {'Idris.Prelude.Types.Left', V753} end(E447)); {'Idris.Prelude.Types.Right', E448} -> (fun (V754) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V748, V754}} end(E448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V755) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V755)) end end end(E439, E440)); _ -> fun (V756) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V756)) end end end(E437, E438)); _ -> fun (V757) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V757)) end end; <<"IQuoteName"/utf8>> -> case V12 of [E449 | E450] -> (fun (V758, V759) -> case V759 of [E451 | E452] -> (fun (V760, V761) -> case V761 of [] -> fun (V762) -> begin (V766 = begin (V763 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V758))(V762))), case V763 of {'Idris.Prelude.Types.Left', E453} -> (fun (V764) -> {'Idris.Prelude.Types.Left', V764} end(E453)); {'Idris.Prelude.Types.Right', E454} -> (fun (V765) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V765))(V762)) end(E454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V766 of {'Idris.Prelude.Types.Left', E455} -> (fun (V767) -> {'Idris.Prelude.Types.Left', V767} end(E455)); {'Idris.Prelude.Types.Right', E456} -> (fun (V768) -> begin (V772 = begin (V769 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V760))(V762))), case V769 of {'Idris.Prelude.Types.Left', E457} -> (fun (V770) -> {'Idris.Prelude.Types.Left', V770} end(E457)); {'Idris.Prelude.Types.Right', E458} -> (fun (V771) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V8, V0, V7, V771))(V762)) end(E458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V772 of {'Idris.Prelude.Types.Left', E459} -> (fun (V773) -> {'Idris.Prelude.Types.Left', V773} end(E459)); {'Idris.Prelude.Types.Right', E460} -> (fun (V774) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V768, V774}} end(E460)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V775) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V775)) end end end(E451, E452)); _ -> fun (V776) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V776)) end end end(E449, E450)); _ -> fun (V777) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V777)) end end; <<"IQuoteDecl"/utf8>> -> case V12 of [E461 | E462] -> (fun (V778, V779) -> case V779 of [E463 | E464] -> (fun (V780, V781) -> case V781 of [] -> fun (V782) -> begin (V786 = begin (V783 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V778))(V782))), case V783 of {'Idris.Prelude.Types.Left', E465} -> (fun (V784) -> {'Idris.Prelude.Types.Left', V784} end(E465)); {'Idris.Prelude.Types.Right', E466} -> (fun (V785) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V785))(V782)) end(E466)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V786 of {'Idris.Prelude.Types.Left', E467} -> (fun (V787) -> {'Idris.Prelude.Types.Left', V787} end(E467)); {'Idris.Prelude.Types.Right', E468} -> (fun (V788) -> begin (V796 = begin (V789 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V780))(V782))), case V789 of {'Idris.Prelude.Types.Left', E469} -> (fun (V790) -> {'Idris.Prelude.Types.Left', V790} end(E469)); {'Idris.Prelude.Types.Right', E470} -> (fun (V791) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V792) -> fun (V793) -> fun (V794) -> fun (V795) -> ('dn--un--reify_Reify_ImpDecl'(V792, V793, V794, V795)) end end end end, V8, V0, V7, V791))(V782)) end(E470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V796 of {'Idris.Prelude.Types.Left', E471} -> (fun (V797) -> {'Idris.Prelude.Types.Left', V797} end(E471)); {'Idris.Prelude.Types.Right', E472} -> (fun (V798) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V788, V798}} end(E472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E468)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V799) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V799)) end end end(E463, E464)); _ -> fun (V800) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V800)) end end end(E461, E462)); _ -> fun (V801) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V801)) end end; <<"IUnquote"/utf8>> -> case V12 of [E473 | E474] -> (fun (V802, V803) -> case V803 of [E475 | E476] -> (fun (V804, V805) -> case V805 of [] -> fun (V806) -> begin (V810 = begin (V807 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V802))(V806))), case V807 of {'Idris.Prelude.Types.Left', E477} -> (fun (V808) -> {'Idris.Prelude.Types.Left', V808} end(E477)); {'Idris.Prelude.Types.Right', E478} -> (fun (V809) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V809))(V806)) end(E478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V810 of {'Idris.Prelude.Types.Left', E479} -> (fun (V811) -> {'Idris.Prelude.Types.Left', V811} end(E479)); {'Idris.Prelude.Types.Right', E480} -> (fun (V812) -> begin (V816 = begin (V813 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V804))(V806))), case V813 of {'Idris.Prelude.Types.Left', E481} -> (fun (V814) -> {'Idris.Prelude.Types.Left', V814} end(E481)); {'Idris.Prelude.Types.Right', E482} -> (fun (V815) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V815))(V806)) end(E482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V816 of {'Idris.Prelude.Types.Left', E483} -> (fun (V817) -> {'Idris.Prelude.Types.Left', V817} end(E483)); {'Idris.Prelude.Types.Right', E484} -> (fun (V818) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V812, V818}} end(E484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V819) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V819)) end end end(E475, E476)); _ -> fun (V820) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V820)) end end end(E473, E474)); _ -> fun (V821) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V821)) end end; <<"IPrimVal"/utf8>> -> case V12 of [E485 | E486] -> (fun (V822, V823) -> case V823 of [E487 | E488] -> (fun (V824, V825) -> case V825 of [] -> fun (V826) -> begin (V830 = begin (V827 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V822))(V826))), case V827 of {'Idris.Prelude.Types.Left', E489} -> (fun (V828) -> {'Idris.Prelude.Types.Left', V828} end(E489)); {'Idris.Prelude.Types.Right', E490} -> (fun (V829) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V829))(V826)) end(E490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V830 of {'Idris.Prelude.Types.Left', E491} -> (fun (V831) -> {'Idris.Prelude.Types.Left', V831} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V832) -> begin (V836 = begin (V833 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V824))(V826))), case V833 of {'Idris.Prelude.Types.Left', E493} -> (fun (V834) -> {'Idris.Prelude.Types.Left', V834} end(E493)); {'Idris.Prelude.Types.Right', E494} -> (fun (V835) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Constant'(V8, V0, V7, V835))(V826)) end(E494)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V836 of {'Idris.Prelude.Types.Left', E495} -> (fun (V837) -> {'Idris.Prelude.Types.Left', V837} end(E495)); {'Idris.Prelude.Types.Right', E496} -> (fun (V838) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V832, V838}} end(E496)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V839) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V839)) end end end(E487, E488)); _ -> fun (V840) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V840)) end end end(E485, E486)); _ -> fun (V841) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V841)) end end; <<"IType"/utf8>> -> case V12 of [E497 | E498] -> (fun (V842, V843) -> case V843 of [] -> fun (V844) -> begin (V848 = begin (V845 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V842))(V844))), case V845 of {'Idris.Prelude.Types.Left', E499} -> (fun (V846) -> {'Idris.Prelude.Types.Left', V846} end(E499)); {'Idris.Prelude.Types.Right', E500} -> (fun (V847) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V847))(V844)) end(E500)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V848 of {'Idris.Prelude.Types.Left', E501} -> (fun (V849) -> {'Idris.Prelude.Types.Left', V849} end(E501)); {'Idris.Prelude.Types.Right', E502} -> (fun (V850) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V850}} end(E502)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V851) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V851)) end end end(E497, E498)); _ -> fun (V852) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V852)) end end; <<"IHole"/utf8>> -> case V12 of [E503 | E504] -> (fun (V853, V854) -> case V854 of [E505 | E506] -> (fun (V855, V856) -> case V856 of [] -> fun (V857) -> begin (V861 = begin (V858 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V853))(V857))), case V858 of {'Idris.Prelude.Types.Left', E507} -> (fun (V859) -> {'Idris.Prelude.Types.Left', V859} end(E507)); {'Idris.Prelude.Types.Right', E508} -> (fun (V860) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V860))(V857)) end(E508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V861 of {'Idris.Prelude.Types.Left', E509} -> (fun (V862) -> {'Idris.Prelude.Types.Left', V862} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V863) -> begin (V867 = begin (V864 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V855))(V857))), case V864 of {'Idris.Prelude.Types.Left', E511} -> (fun (V865) -> {'Idris.Prelude.Types.Left', V865} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V866) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V8, V0, V7, V866))(V857)) end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V867 of {'Idris.Prelude.Types.Left', E513} -> (fun (V868) -> {'Idris.Prelude.Types.Left', V868} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V869) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V863, V869}} end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V870) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V870)) end end end(E505, E506)); _ -> fun (V871) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V871)) end end end(E503, E504)); _ -> fun (V872) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V872)) end end; <<"Implicit"/utf8>> -> case V12 of [E515 | E516] -> (fun (V873, V874) -> case V874 of [E517 | E518] -> (fun (V875, V876) -> case V876 of [] -> fun (V877) -> begin (V881 = begin (V878 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V873))(V877))), case V878 of {'Idris.Prelude.Types.Left', E519} -> (fun (V879) -> {'Idris.Prelude.Types.Left', V879} end(E519)); {'Idris.Prelude.Types.Right', E520} -> (fun (V880) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V880))(V877)) end(E520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V881 of {'Idris.Prelude.Types.Left', E521} -> (fun (V882) -> {'Idris.Prelude.Types.Left', V882} end(E521)); {'Idris.Prelude.Types.Right', E522} -> (fun (V883) -> begin (V887 = begin (V884 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V875))(V877))), case V884 of {'Idris.Prelude.Types.Left', E523} -> (fun (V885) -> {'Idris.Prelude.Types.Left', V885} end(E523)); {'Idris.Prelude.Types.Right', E524} -> (fun (V886) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V8, V0, V7, V886))(V877)) end(E524)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V887 of {'Idris.Prelude.Types.Left', E525} -> (fun (V888) -> {'Idris.Prelude.Types.Left', V888} end(E525)); {'Idris.Prelude.Types.Right', E526} -> (fun (V889) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V883, V889}} end(E526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E522)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V890) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V890)) end end end(E517, E518)); _ -> fun (V891) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V891)) end end end(E515, E516)); _ -> fun (V892) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V892)) end end; <<"IWithUnambigNames"/utf8>> -> case V12 of [E527 | E528] -> (fun (V893, V894) -> case V894 of [E529 | E530] -> (fun (V895, V896) -> case V896 of [E531 | E532] -> (fun (V897, V898) -> case V898 of [] -> fun (V899) -> begin (V903 = begin (V900 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V893))(V899))), case V900 of {'Idris.Prelude.Types.Left', E533} -> (fun (V901) -> {'Idris.Prelude.Types.Left', V901} end(E533)); {'Idris.Prelude.Types.Right', E534} -> (fun (V902) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V8, V0, V7, V902))(V899)) end(E534)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V903 of {'Idris.Prelude.Types.Left', E535} -> (fun (V904) -> {'Idris.Prelude.Types.Left', V904} end(E535)); {'Idris.Prelude.Types.Right', E536} -> (fun (V905) -> begin (V913 = begin (V906 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V895))(V899))), case V906 of {'Idris.Prelude.Types.Left', E537} -> (fun (V907) -> {'Idris.Prelude.Types.Left', V907} end(E537)); {'Idris.Prelude.Types.Right', E538} -> (fun (V908) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'('erased', fun (V909) -> fun (V910) -> fun (V911) -> fun (V912) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V909, V910, V911, V912)) end end end end, V8, V0, V7, V908))(V899)) end(E538)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V913 of {'Idris.Prelude.Types.Left', E539} -> (fun (V914) -> {'Idris.Prelude.Types.Left', V914} end(E539)); {'Idris.Prelude.Types.Right', E540} -> (fun (V915) -> begin (V919 = begin (V916 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V897))(V899))), case V916 of {'Idris.Prelude.Types.Left', E541} -> (fun (V917) -> {'Idris.Prelude.Types.Left', V917} end(E541)); {'Idris.Prelude.Types.Right', E542} -> (fun (V918) -> (('dn--un--reify_Reify_RawImp'(V8, V0, V7, V918))(V899)) end(E542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V919 of {'Idris.Prelude.Types.Left', E543} -> (fun (V920) -> {'Idris.Prelude.Types.Left', V920} end(E543)); {'Idris.Prelude.Types.Right', E544} -> (fun (V921) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V905, V915, V921}} end(E544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E540)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E536)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V922) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V922)) end end end(E531, E532)); _ -> fun (V923) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V923)) end end end(E529, E530)); _ -> fun (V924) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V924)) end end end(E527, E528)); _ -> fun (V925) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V925)) end end; _ -> fun (V926) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V926)) end end end(E4)); _ -> fun (V927) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V927)) end end end(E2, E3)); _ -> fun (V928) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V928)) end end end(E0, E1)); _ -> fun (V929) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V929)) end end.
'case--reify-7386'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"NonLinearVar"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.NonLinearVar'}} end; <<"VarApplied"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.VarApplied'}} end; <<"NotConstructor"/utf8>> -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.NotConstructor'}} end; <<"ErasedArg"/utf8>> -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.ErasedArg'}} end; <<"UserDotted"/utf8>> -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.UserDotted'}} end; <<"UnknownDot"/utf8>> -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.UnknownDot'}} end; <<"UnderAppliedCon"/utf8>> -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.UnderAppliedCon'}} end; _ -> fun (V23) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V23)) end end end(E4)); _ -> fun (V24) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V24)) end end end(E2, E3)); _ -> fun (V25) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V25)) end end end(E0, E1)); _ -> fun (V26) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V26)) end end.
'case--reify-7189'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"UseLeft"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.UseLeft'}} end; <<"UseRight"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.UseRight'}} end; _ -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V18)) end end end(E4)); _ -> fun (V19) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V19)) end end end(E2, E3)); _ -> fun (V20) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V20)) end end end(E0, E1)); _ -> fun (V21) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V21)) end end.
'case--reify-6913'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"PI"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V16 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V18, V19) -> case V17 of [] -> fun (V20) -> begin (V24 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V19))(V20))), case V21 of {'Idris.Prelude.Types.Left', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V23) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V8, V0, V7, V23))(V20)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E11} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PI', V26}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V27)) end end end(E7, E8)); _ -> fun (V28) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V28)) end end end(E5, E6)); _ -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V29)) end end; <<"PATTERN"/utf8>> -> fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PATTERN'}} end; <<"NONE"/utf8>> -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NONE'}} end; _ -> fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V32)) end end end(E4)); _ -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V33)) end end end(E2, E3)); _ -> fun (V34) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V34)) end end end(E0, E1)); _ -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V35)) end end.
'dn--un--reify_Reify_UseSide'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-7189'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"UseSide"/utf8>>, V41)) end end.
'dn--un--reify_Reify_RawImp'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-7797'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"TTImp"/utf8>>, V42)) end end.
'dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-11659'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"ITy"/utf8>>, V42)) end end.
'dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-12680'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Record"/utf8>>, V42)) end end.
'dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-13316'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Decl"/utf8>>, V42)) end end.
'dn--un--reify_Reify_ImpData'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-12143'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Data"/utf8>>, V42)) end end.
'dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-12927'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Clause"/utf8>>, V42)) end end.
'dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-10629'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"IFieldUpdate"/utf8>>, V41)) end end.
'dn--un--reify_Reify_IField'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-12458'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V41)) end, V8))}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"IField"/utf8>>, V42)) end end.
'dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-11094'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"FnOpt"/utf8>>, V41)) end end.
'dn--un--reify_Reify_DotReason'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-7386'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"DotReason"/utf8>>, V41)) end end.
'dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-11851'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"DataOpt"/utf8>>, V41)) end end.
'dn--un--reify_Reify_BindMode'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-6913'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"BindMode"/utf8>>, V41)) end end.
'dn--un--reify_Reify_AltType'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> begin (V40 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-10883'(V1, V4, V6, V7, V8, V5, V40, V2, V0, V39, {'Idris.Builtin.MkPair', V39, V8}))(V9)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"AltType"/utf8>>, V41)) end end.
'dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.TT.UseLeft'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseLeft"/utf8>>)), V6)) end end()); {'Idris.Core.TT.UseRight'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseRight"/utf8>>)), V7)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V8))), case V9 of {'Idris.Prelude.Types.Left', E34} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7))(V8))), case V12 of {'Idris.Prelude.Types.Left', E36} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V14) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IVar"/utf8>>)), [V11 | [V14 | []]], V8)) end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33)); {'Idris.TTImp.TTImp.IPi', E38, E39, E40, E41, E42, E43} -> (fun (V15, V16, V17, V18, V19, V20) -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V15))(V21))), case V22 of {'Idris.Prelude.Types.Left', E44} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V16))(V21))), case V25 of {'Idris.Prelude.Types.Left', E46} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V27) -> begin (V34 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'('erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('dn--un--reflect_Reflect_RawImp'(V28, V29, V30, V31, V32, V33)) end end end end end end, V0, V1, V2, V3, V4, V17))(V21))), case V34 of {'Idris.Prelude.Types.Left', E48} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V36) -> begin (V43 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'('erased', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V37, V38, V39, V40, V41, V42)) end end end end end end, V0, V1, V2, V3, V4, V18))(V21))), case V43 of {'Idris.Prelude.Types.Left', E50} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V45) -> begin (V46 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V19))(V21))), case V46 of {'Idris.Prelude.Types.Left', E52} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V48) -> begin (V49 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V20))(V21))), case V49 of {'Idris.Prelude.Types.Left', E54} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPi"/utf8>>)), [V24 | [V27 | [V36 | [V45 | [V48 | [V51 | []]]]]]], V21)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E38, E39, E40, E41, E42, E43)); {'Idris.TTImp.TTImp.ILam', E56, E57, E58, E59, E60, E61} -> (fun (V52, V53, V54, V55, V56, V57) -> fun (V58) -> begin (V59 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V52))(V58))), case V59 of {'Idris.Prelude.Types.Left', E62} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V61) -> begin (V62 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V53))(V58))), case V62 of {'Idris.Prelude.Types.Left', E64} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V64) -> begin (V71 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'('erased', fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('dn--un--reflect_Reflect_RawImp'(V65, V66, V67, V68, V69, V70)) end end end end end end, V0, V1, V2, V3, V4, V54))(V58))), case V71 of {'Idris.Prelude.Types.Left', E66} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V73) -> begin (V80 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'('erased', fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V74, V75, V76, V77, V78, V79)) end end end end end end, V0, V1, V2, V3, V4, V55))(V58))), case V80 of {'Idris.Prelude.Types.Left', E68} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V82) -> begin (V83 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V56))(V58))), case V83 of {'Idris.Prelude.Types.Left', E70} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V85) -> begin (V86 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V57))(V58))), case V86 of {'Idris.Prelude.Types.Left', E72} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V88) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILam"/utf8>>)), [V61 | [V64 | [V73 | [V82 | [V85 | [V88 | []]]]]]], V58)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58, E59, E60, E61)); {'Idris.TTImp.TTImp.ILet', E74, E75, E76, E77, E78, E79, E80} -> (fun (V89, V90, V91, V92, V93, V94, V95) -> fun (V96) -> begin (V97 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V89))(V96))), case V97 of {'Idris.Prelude.Types.Left', E81} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V99) -> begin (V100 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V90))(V96))), case V100 of {'Idris.Prelude.Types.Left', E83} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V102) -> begin (V103 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V91))(V96))), case V103 of {'Idris.Prelude.Types.Left', E85} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V105) -> begin (V106 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V92))(V96))), case V106 of {'Idris.Prelude.Types.Left', E87} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V108) -> begin (V109 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V93))(V96))), case V109 of {'Idris.Prelude.Types.Left', E89} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V111) -> begin (V112 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V94))(V96))), case V112 of {'Idris.Prelude.Types.Left', E91} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V114) -> begin (V115 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V95))(V96))), case V115 of {'Idris.Prelude.Types.Left', E93} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V117) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILet"/utf8>>)), [V99 | [V102 | [V105 | [V108 | [V111 | [V114 | [V117 | []]]]]]]], V96)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E74, E75, E76, E77, E78, E79, E80)); {'Idris.TTImp.TTImp.ICase', E95, E96, E97, E98} -> (fun (V118, V119, V120, V121) -> fun (V122) -> begin (V123 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V118))(V122))), case V123 of {'Idris.Prelude.Types.Left', E99} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V125) -> begin (V126 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V119))(V122))), case V126 of {'Idris.Prelude.Types.Left', E101} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V128) -> begin (V129 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V120))(V122))), case V129 of {'Idris.Prelude.Types.Left', E103} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V131) -> begin (V138 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> ('dn--un--reflect_Reflect_ImpClause'(V132, V133, V134, V135, V136, V137)) end end end end end end, V0, V1, V2, V3, V4, V121))(V122))), case V138 of {'Idris.Prelude.Types.Left', E105} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V140) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ICase"/utf8>>)), [V125 | [V128 | [V131 | [V140 | []]]]], V122)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E95, E96, E97, E98)); {'Idris.TTImp.TTImp.ILocal', E107, E108, E109} -> (fun (V141, V142, V143) -> fun (V144) -> begin (V145 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V141))(V144))), case V145 of {'Idris.Prelude.Types.Left', E110} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V147) -> begin (V154 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> ('dn--un--reflect_Reflect_ImpDecl'(V148, V149, V150, V151, V152, V153)) end end end end end end, V0, V1, V2, V3, V4, V142))(V144))), case V154 of {'Idris.Prelude.Types.Left', E112} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V156) -> begin (V157 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V143))(V144))), case V157 of {'Idris.Prelude.Types.Left', E114} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V159) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILocal"/utf8>>)), [V147 | [V156 | [V159 | []]]], V144)) end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E107, E108, E109)); {'Idris.TTImp.TTImp.ICaseLocal', E116, E117, E118, E119, E120} -> (fun (V160, V161, V162, V163, V164) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V164)) end(E116, E117, E118, E119, E120)); {'Idris.TTImp.TTImp.IUpdate', E121, E122, E123} -> (fun (V165, V166, V167) -> fun (V168) -> begin (V169 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V165))(V168))), case V169 of {'Idris.Prelude.Types.Left', E124} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V171) -> begin (V178 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V172, V173, V174, V175, V176, V177)) end end end end end end, V0, V1, V2, V3, V4, V166))(V168))), case V178 of {'Idris.Prelude.Types.Left', E126} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V180) -> begin (V181 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V167))(V168))), case V181 of {'Idris.Prelude.Types.Left', E128} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V183) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IUpdate"/utf8>>)), [V171 | [V180 | [V183 | []]]], V168)) end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E121, E122, E123)); {'Idris.TTImp.TTImp.IApp', E130, E131, E132} -> (fun (V184, V185, V186) -> fun (V187) -> begin (V188 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V184))(V187))), case V188 of {'Idris.Prelude.Types.Left', E133} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V190) -> begin (V191 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V185))(V187))), case V191 of {'Idris.Prelude.Types.Left', E135} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V193) -> begin (V194 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V186))(V187))), case V194 of {'Idris.Prelude.Types.Left', E137} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V196) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IApp"/utf8>>)), [V190 | [V193 | [V196 | []]]], V187)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130, E131, E132)); {'Idris.TTImp.TTImp.IAutoApp', E139, E140, E141} -> (fun (V197, V198, V199) -> fun (V200) -> begin (V201 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V197))(V200))), case V201 of {'Idris.Prelude.Types.Left', E142} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V203) -> begin (V204 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V198))(V200))), case V204 of {'Idris.Prelude.Types.Left', E144} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V206) -> begin (V207 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V199))(V200))), case V207 of {'Idris.Prelude.Types.Left', E146} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V209) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAutoApp"/utf8>>)), [V203 | [V206 | [V209 | []]]], V200)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E139, E140, E141)); {'Idris.TTImp.TTImp.INamedApp', E148, E149, E150, E151} -> (fun (V210, V211, V212, V213) -> fun (V214) -> begin (V215 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V210))(V214))), case V215 of {'Idris.Prelude.Types.Left', E152} -> (fun (V216) -> {'Idris.Prelude.Types.Left', V216} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V217) -> begin (V218 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V211))(V214))), case V218 of {'Idris.Prelude.Types.Left', E154} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V220) -> begin (V221 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V212))(V214))), case V221 of {'Idris.Prelude.Types.Left', E156} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V223) -> begin (V224 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V213))(V214))), case V224 of {'Idris.Prelude.Types.Left', E158} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V226) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamedApp"/utf8>>)), [V217 | [V220 | [V223 | [V226 | []]]]], V214)) end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E148, E149, E150, E151)); {'Idris.TTImp.TTImp.IWithApp', E160, E161, E162} -> (fun (V227, V228, V229) -> fun (V230) -> begin (V231 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V227))(V230))), case V231 of {'Idris.Prelude.Types.Left', E163} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V233) -> begin (V234 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V228))(V230))), case V234 of {'Idris.Prelude.Types.Left', E165} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V236) -> begin (V237 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V229))(V230))), case V237 of {'Idris.Prelude.Types.Left', E167} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V239) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithApp"/utf8>>)), [V233 | [V236 | [V239 | []]]], V230)) end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E160, E161, E162)); {'Idris.TTImp.TTImp.ISearch', E169, E170} -> (fun (V240, V241) -> fun (V242) -> begin (V243 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V240))(V242))), case V243 of {'Idris.Prelude.Types.Left', E171} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V245) -> begin (V246 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V0, V1, V2, V3, V4, V241))(V242))), case V246 of {'Idris.Prelude.Types.Left', E173} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V248) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISearch"/utf8>>)), [V245 | [V248 | []]], V242)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E169, E170)); {'Idris.TTImp.TTImp.IAlternative', E175, E176, E177} -> (fun (V249, V250, V251) -> fun (V252) -> begin (V253 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V249))(V252))), case V253 of {'Idris.Prelude.Types.Left', E178} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V255) -> begin (V256 = (('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V250))(V252))), case V256 of {'Idris.Prelude.Types.Left', E180} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V258) -> begin (V265 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> fun (V264) -> ('dn--un--reflect_Reflect_RawImp'(V259, V260, V261, V262, V263, V264)) end end end end end end, V0, V1, V2, V3, V4, V251))(V252))), case V265 of {'Idris.Prelude.Types.Left', E182} -> (fun (V266) -> {'Idris.Prelude.Types.Left', V266} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V267) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAlternative"/utf8>>)), [V255 | [V258 | [V267 | []]]], V252)) end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E175, E176, E177)); {'Idris.TTImp.TTImp.IRewrite', E184, E185, E186} -> (fun (V268, V269, V270) -> fun (V271) -> begin (V272 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V268))(V271))), case V272 of {'Idris.Prelude.Types.Left', E187} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V274) -> begin (V275 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V269))(V271))), case V275 of {'Idris.Prelude.Types.Left', E189} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V277) -> begin (V278 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V270))(V271))), case V278 of {'Idris.Prelude.Types.Left', E191} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V280) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRewrite"/utf8>>)), [V274 | [V277 | [V280 | []]]], V271)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186)); {'Idris.TTImp.TTImp.ICoerced', E193, E194} -> (fun (V281, V282) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V282)) end(E193, E194)); {'Idris.TTImp.TTImp.IBindHere', E195, E196, E197} -> (fun (V283, V284, V285) -> fun (V286) -> begin (V287 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V283))(V286))), case V287 of {'Idris.Prelude.Types.Left', E198} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V289) -> begin (V290 = (('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V284))(V286))), case V290 of {'Idris.Prelude.Types.Left', E200} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V292) -> begin (V293 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V285))(V286))), case V293 of {'Idris.Prelude.Types.Left', E202} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V295) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindHere"/utf8>>)), [V289 | [V292 | [V295 | []]]], V286)) end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E195, E196, E197)); {'Idris.TTImp.TTImp.IBindVar', E204, E205} -> (fun (V296, V297) -> fun (V298) -> begin (V299 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V296))(V298))), case V299 of {'Idris.Prelude.Types.Left', E206} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V301) -> begin (V302 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V297, V298))), case V302 of {'Idris.Prelude.Types.Left', E208} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V304) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindVar"/utf8>>)), [V301 | [V304 | []]], V298)) end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E204, E205)); {'Idris.TTImp.TTImp.IAs', E210, E211, E212, E213, E214} -> (fun (V305, V306, V307, V308, V309) -> fun (V310) -> begin (V311 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V305))(V310))), case V311 of {'Idris.Prelude.Types.Left', E215} -> (fun (V312) -> {'Idris.Prelude.Types.Left', V312} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V313) -> begin (V314 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V306))(V310))), case V314 of {'Idris.Prelude.Types.Left', E217} -> (fun (V315) -> {'Idris.Prelude.Types.Left', V315} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V316) -> begin (V317 = (('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V307))(V310))), case V317 of {'Idris.Prelude.Types.Left', E219} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V319) -> begin (V320 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V308))(V310))), case V320 of {'Idris.Prelude.Types.Left', E221} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V322) -> begin (V323 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V309))(V310))), case V323 of {'Idris.Prelude.Types.Left', E223} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V325) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAs"/utf8>>)), [V313 | [V316 | [V319 | [V322 | [V325 | []]]]]], V310)) end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211, E212, E213, E214)); {'Idris.TTImp.TTImp.IMustUnify', E225, E226, E227} -> (fun (V326, V327, V328) -> fun (V329) -> begin (V330 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V326))(V329))), case V330 of {'Idris.Prelude.Types.Left', E228} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V332) -> begin (V333 = (('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V327))(V329))), case V333 of {'Idris.Prelude.Types.Left', E230} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V335) -> begin (V336 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V328))(V329))), case V336 of {'Idris.Prelude.Types.Left', E232} -> (fun (V337) -> {'Idris.Prelude.Types.Left', V337} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V338) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IMustUnify"/utf8>>)), [V332 | [V335 | [V338 | []]]], V329)) end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E225, E226, E227)); {'Idris.TTImp.TTImp.IDelayed', E234, E235, E236} -> (fun (V339, V340, V341) -> fun (V342) -> begin (V343 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V339))(V342))), case V343 of {'Idris.Prelude.Types.Left', E237} -> (fun (V344) -> {'Idris.Prelude.Types.Left', V344} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V345) -> begin (V346 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_LazyReason'(V0, V1, V2, V3, V4, V340))(V342))), case V346 of {'Idris.Prelude.Types.Left', E239} -> (fun (V347) -> {'Idris.Prelude.Types.Left', V347} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V348) -> begin (V349 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V341))(V342))), case V349 of {'Idris.Prelude.Types.Left', E241} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V351) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelayed"/utf8>>)), [V345 | [V348 | [V351 | []]]], V342)) end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E234, E235, E236)); {'Idris.TTImp.TTImp.IDelay', E243, E244} -> (fun (V352, V353) -> fun (V354) -> begin (V355 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V352))(V354))), case V355 of {'Idris.Prelude.Types.Left', E245} -> (fun (V356) -> {'Idris.Prelude.Types.Left', V356} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V357) -> begin (V358 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V353))(V354))), case V358 of {'Idris.Prelude.Types.Left', E247} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V360) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelay"/utf8>>)), [V357 | [V360 | []]], V354)) end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E243, E244)); {'Idris.TTImp.TTImp.IForce', E249, E250} -> (fun (V361, V362) -> fun (V363) -> begin (V364 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V361))(V363))), case V364 of {'Idris.Prelude.Types.Left', E251} -> (fun (V365) -> {'Idris.Prelude.Types.Left', V365} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V366) -> begin (V367 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V362))(V363))), case V367 of {'Idris.Prelude.Types.Left', E253} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V369) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IForce"/utf8>>)), [V366 | [V369 | []]], V363)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E249, E250)); {'Idris.TTImp.TTImp.IQuote', E255, E256} -> (fun (V370, V371) -> fun (V372) -> begin (V373 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V370))(V372))), case V373 of {'Idris.Prelude.Types.Left', E257} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V375) -> begin (V376 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V371))(V372))), case V376 of {'Idris.Prelude.Types.Left', E259} -> (fun (V377) -> {'Idris.Prelude.Types.Left', V377} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V378) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuote"/utf8>>)), [V375 | [V378 | []]], V372)) end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E255, E256)); {'Idris.TTImp.TTImp.IQuoteName', E261, E262} -> (fun (V379, V380) -> fun (V381) -> begin (V382 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V379))(V381))), case V382 of {'Idris.Prelude.Types.Left', E263} -> (fun (V383) -> {'Idris.Prelude.Types.Left', V383} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V384) -> begin (V385 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V380))(V381))), case V385 of {'Idris.Prelude.Types.Left', E265} -> (fun (V386) -> {'Idris.Prelude.Types.Left', V386} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V387) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteName"/utf8>>)), [V384 | [V387 | []]], V381)) end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E261, E262)); {'Idris.TTImp.TTImp.IQuoteDecl', E267, E268} -> (fun (V388, V389) -> fun (V390) -> begin (V391 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V388))(V390))), case V391 of {'Idris.Prelude.Types.Left', E269} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V393) -> begin (V400 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> ('dn--un--reflect_Reflect_ImpDecl'(V394, V395, V396, V397, V398, V399)) end end end end end end, V0, V1, V2, V3, V4, V389))(V390))), case V400 of {'Idris.Prelude.Types.Left', E271} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V402) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteDecl"/utf8>>)), [V393 | [V402 | []]], V390)) end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E267, E268)); {'Idris.TTImp.TTImp.IUnquote', E273, E274} -> (fun (V403, V404) -> case V404 of {'Idris.TTImp.TTImp.IVar', E275, E276} -> (fun (V405, V406) -> fun (V407) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Ref', V403, {'Idris.Core.TT.Bound'}, V406}} end end(E275, E276)); _ -> fun (V408) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect an unquote: escapes should be lifted out"/utf8>>}, V408)) end end end(E273, E274)); {'Idris.TTImp.TTImp.IRunElab', E277, E278} -> (fun (V409, V410) -> fun (V411) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect a %runelab"/utf8>>}, V411)) end end(E277, E278)); {'Idris.TTImp.TTImp.IPrimVal', E279, E280} -> (fun (V412, V413) -> fun (V414) -> begin (V415 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V412))(V414))), case V415 of {'Idris.Prelude.Types.Left', E281} -> (fun (V416) -> {'Idris.Prelude.Types.Left', V416} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V417) -> begin (V418 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Constant'(V0, V1, V2, V3, V4, V413))(V414))), case V418 of {'Idris.Prelude.Types.Left', E283} -> (fun (V419) -> {'Idris.Prelude.Types.Left', V419} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V420) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPrimVal"/utf8>>)), [V417 | [V420 | []]], V414)) end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E279, E280)); {'Idris.TTImp.TTImp.IType', E285} -> (fun (V421) -> fun (V422) -> begin (V423 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V421))(V422))), case V423 of {'Idris.Prelude.Types.Left', E286} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V425) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IType"/utf8>>)), [V425 | []], V422)) end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E285)); {'Idris.TTImp.TTImp.IHole', E288, E289} -> (fun (V426, V427) -> fun (V428) -> begin (V429 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V426))(V428))), case V429 of {'Idris.Prelude.Types.Left', E290} -> (fun (V430) -> {'Idris.Prelude.Types.Left', V430} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V431) -> begin (V432 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V427, V428))), case V432 of {'Idris.Prelude.Types.Left', E292} -> (fun (V433) -> {'Idris.Prelude.Types.Left', V433} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V434) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IHole"/utf8>>)), [V431 | [V434 | []]], V428)) end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E288, E289)); {'Idris.TTImp.TTImp.IUnifyLog', E294, E295, E296} -> (fun (V435, V436, V437) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V437)) end(E294, E295, E296)); _ -> case V3 of 0 -> case V5 of {'Idris.TTImp.TTImp.Implicit', E30, E31} -> (fun (V438, V439) -> fun (V440) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Erased', V1, 1}} end end(E30, E31)); _ -> case V5 of {'Idris.TTImp.TTImp.Implicit', E15, E16} -> (fun (V441, V442) -> fun (V443) -> begin (V444 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V441))(V443))), case V444 of {'Idris.Prelude.Types.Left', E17} -> (fun (V445) -> {'Idris.Prelude.Types.Left', V445} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V446) -> begin (V447 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V442))(V443))), case V447 of {'Idris.Prelude.Types.Left', E19} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V449) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V446 | [V449 | []]], V443)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16)); {'Idris.TTImp.TTImp.IWithUnambigNames', E21, E22, E23} -> (fun (V450, V451, V452) -> fun (V453) -> begin (V454 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V450))(V453))), case V454 of {'Idris.Prelude.Types.Left', E24} -> (fun (V455) -> {'Idris.Prelude.Types.Left', V455} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V456) -> begin (V463 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V457) -> fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V457, V458, V459, V460, V461, V462)) end end end end end end, V0, V1, V2, V3, V4, V451))(V453))), case V463 of {'Idris.Prelude.Types.Left', E26} -> (fun (V464) -> {'Idris.Prelude.Types.Left', V464} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V465) -> begin (V466 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V452))(V453))), case V466 of {'Idris.Prelude.Types.Left', E28} -> (fun (V467) -> {'Idris.Prelude.Types.Left', V467} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V468) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V456 | [V465 | [V468 | []]]], V453)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V5 of {'Idris.TTImp.TTImp.Implicit', E0, E1} -> (fun (V469, V470) -> fun (V471) -> begin (V472 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V469))(V471))), case V472 of {'Idris.Prelude.Types.Left', E2} -> (fun (V473) -> {'Idris.Prelude.Types.Left', V473} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V474) -> begin (V475 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V470))(V471))), case V475 of {'Idris.Prelude.Types.Left', E4} -> (fun (V476) -> {'Idris.Prelude.Types.Left', V476} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V477) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V474 | [V477 | []]], V471)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.IWithUnambigNames', E6, E7, E8} -> (fun (V478, V479, V480) -> fun (V481) -> begin (V482 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V478))(V481))), case V482 of {'Idris.Prelude.Types.Left', E9} -> (fun (V483) -> {'Idris.Prelude.Types.Left', V483} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V484) -> begin (V491 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V485) -> fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V485, V486, V487, V488, V489, V490)) end end end end end end, V0, V1, V2, V3, V4, V479))(V481))), case V491 of {'Idris.Prelude.Types.Left', E11} -> (fun (V492) -> {'Idris.Prelude.Types.Left', V492} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V493) -> begin (V494 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V480))(V481))), case V494 of {'Idris.Prelude.Types.Left', E13} -> (fun (V495) -> {'Idris.Prelude.Types.Left', V495} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V496) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V484 | [V493 | [V496 | []]]], V481)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> fun (V10) -> begin (V11 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V10))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V10))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V8))(V10))), case V17 of {'Idris.Prelude.Types.Left', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V19) -> begin (V20 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V9))(V10))), case V20 of {'Idris.Prelude.Types.Left', E10} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V22) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkTy"/utf8>>)), [V13 | [V16 | [V19 | [V22 | []]]]], V10)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V66 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V24, V25, V26, V27, V28, V29)) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V36, V37, V38, V39, V40, V41)) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'('erased', fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('dn--un--reflect_Reflect_RawImp'(V54, V55, V56, V57, V58, V59)) end end end end end end, V48, V49, V50, V51, V52, V53)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('dn--un--reflect_Reflect_RawImp'(V60, V61, V62, V63, V64, V65)) end end end end end end}, V42, V43, V44, V45, V46, V47)) end end end end end end}, V30, V31, V32, V33, V34, V35)) end end end end end end}, V18, V19, V20, V21, V22, V23)) end end end end end end, V0, V1, V2, V3, V4, V8))(V11))), case V66 of {'Idris.Prelude.Types.Left', E9} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V68) -> begin (V69 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V9))(V11))), case V69 of {'Idris.Prelude.Types.Left', E11} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V71) -> begin (V78 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('dn--un--reflect_Reflect_IField'(V72, V73, V74, V75, V76, V77)) end end end end end end, V0, V1, V2, V3, V4, V10))(V11))), case V78 of {'Idris.Prelude.Types.Left', E13} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V80) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkRecord"/utf8>>)), [V14 | [V17 | [V68 | [V71 | [V80 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V8))(V11))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect_FnOpt'(V21, V22, V23, V24, V25, V26)) end end end end end end, V0, V1, V2, V3, V4, V9))(V11))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V30 = (('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V10))(V11))), case V30 of {'Idris.Prelude.Types.Left', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IClaim"/utf8>>)), [V14 | [V17 | [V20 | [V29 | [V32 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E15, E16, E17} -> (fun (V33, V34, V35) -> fun (V36) -> begin (V37 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V33))(V36))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V34))(V36))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V43 = (('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V35))(V36))), case V43 of {'Idris.Prelude.Types.Left', E22} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IData"/utf8>>)), [V39 | [V42 | [V45 | []]]], V36)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); {'Idris.TTImp.TTImp.IDef', E24, E25, E26} -> (fun (V46, V47, V48) -> fun (V49) -> begin (V50 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V46))(V49))), case V50 of {'Idris.Prelude.Types.Left', E27} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V52) -> begin (V53 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V47))(V49))), case V53 of {'Idris.Prelude.Types.Left', E29} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V55) -> begin (V62 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('dn--un--reflect_Reflect_ImpClause'(V56, V57, V58, V59, V60, V61)) end end end end end end, V0, V1, V2, V3, V4, V48))(V49))), case V62 of {'Idris.Prelude.Types.Left', E31} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDef"/utf8>>)), [V52 | [V55 | [V64 | []]]], V49)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26)); {'Idris.TTImp.TTImp.IParameters', E33, E34, E35} -> (fun (V65, V66, V67) -> fun (V68) -> begin (V69 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V65))(V68))), case V69 of {'Idris.Prelude.Types.Left', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V71) -> begin (V90 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V78, V79, V80, V81, V82, V83)) end end end end end end, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('dn--un--reflect_Reflect_RawImp'(V84, V85, V86, V87, V88, V89)) end end end end end end}, V72, V73, V74, V75, V76, V77)) end end end end end end, V0, V1, V2, V3, V4, V66))(V68))), case V90 of {'Idris.Prelude.Types.Left', E38} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V92) -> begin (V99 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> ('dn--un--reflect_Reflect_ImpDecl'(V93, V94, V95, V96, V97, V98)) end end end end end end, V0, V1, V2, V3, V4, V67))(V68))), case V99 of {'Idris.Prelude.Types.Left', E40} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IParameters"/utf8>>)), [V71 | [V92 | [V101 | []]]], V68)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35)); {'Idris.TTImp.TTImp.IRecord', E42, E43, E44, E45} -> (fun (V102, V103, V104, V105) -> fun (V106) -> begin (V107 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V102))(V106))), case V107 of {'Idris.Prelude.Types.Left', E46} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V109) -> begin (V110 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V104))(V106))), case V110 of {'Idris.Prelude.Types.Left', E48} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V112) -> begin (V113 = (('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V105))(V106))), case V113 of {'Idris.Prelude.Types.Left', E50} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V115) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRecord"/utf8>>)), [V109 | [V112 | [V115 | []]]], V106)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44, E45)); {'Idris.TTImp.TTImp.INamespace', E52, E53, E54} -> (fun (V116, V117, V118) -> fun (V119) -> begin (V120 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V116))(V119))), case V120 of {'Idris.Prelude.Types.Left', E55} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V122) -> begin (V123 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Namespace'(V0, V1, V2, V3, V4, V117, V119))), case V123 of {'Idris.Prelude.Types.Left', E57} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V125) -> begin (V132 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--reflect_Reflect_ImpDecl'(V126, V127, V128, V129, V130, V131)) end end end end end end, V0, V1, V2, V3, V4, V118))(V119))), case V132 of {'Idris.Prelude.Types.Left', E59} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V134) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamespace"/utf8>>)), [V122 | [V125 | [V134 | []]]], V119)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); {'Idris.TTImp.TTImp.ITransform', E61, E62, E63, E64} -> (fun (V135, V136, V137, V138) -> fun (V139) -> begin (V140 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V135))(V139))), case V140 of {'Idris.Prelude.Types.Left', E65} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V142) -> begin (V143 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V136))(V139))), case V143 of {'Idris.Prelude.Types.Left', E67} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V145) -> begin (V146 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V137))(V139))), case V146 of {'Idris.Prelude.Types.Left', E69} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V148) -> begin (V149 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V138))(V139))), case V149 of {'Idris.Prelude.Types.Left', E71} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V151) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ITransform"/utf8>>)), [V142 | [V145 | [V148 | [V151 | []]]]], V139)) end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E61, E62, E63, E64)); {'Idris.TTImp.TTImp.IRunElabDecl', E73, E74} -> (fun (V152, V153) -> fun (V154) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %runElab"/utf8>>}, V154)) end end(E73, E74)); {'Idris.TTImp.TTImp.IPragma', E75, E76} -> (fun (V155, V156) -> fun (V157) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a pragma"/utf8>>}, V157)) end end(E75, E76)); {'Idris.TTImp.TTImp.ILog', E77} -> (fun (V158) -> fun (V159) -> begin (V185 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'('erased', fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V172, V173, V174, V175, V176, V177, V178)) end end end end end end end, V166, V167, V168, V169, V170, V171)) end end end end end end, fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V179, V180, V181, V182, V183, V184)) end end end end end end}, V160, V161, V162, V163, V164, V165)) end end end end end end, V0, V1, V2, V3, V4, V158))(V159))), case V185 of {'Idris.Prelude.Types.Left', E78} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V187) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILog"/utf8>>)), [V187 | []], V159)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V11))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect_DataOpt'(V21, V22, V23, V24, V25, V26)) end end end end end end, V0, V1, V2, V3, V4, V9))(V11))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V36 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--reflect_Reflect_ImpTy'(V30, V31, V32, V33, V34, V35)) end end end end end end, V0, V1, V2, V3, V4, V10))(V11))), case V36 of {'Idris.Prelude.Types.Left', E13} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V38) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkData"/utf8>>)), [V14 | [V17 | [V20 | [V29 | [V38 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E15, E16, E17} -> (fun (V39, V40, V41) -> fun (V42) -> begin (V43 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V39))(V42))), case V43 of {'Idris.Prelude.Types.Left', E18} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V45) -> begin (V46 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V40))(V42))), case V46 of {'Idris.Prelude.Types.Left', E20} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V48) -> begin (V49 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V41))(V42))), case V49 of {'Idris.Prelude.Types.Left', E22} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkLater"/utf8>>)), [V45 | [V48 | [V51 | []]]], V42)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V13 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V7))(V9))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V9))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PatClause"/utf8>>)), [V12 | [V15 | [V18 | []]]], V9)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E9, E10, E11, E12, E13, E14} -> (fun (V19, V20, V21, V22, V23, V24) -> fun (V25) -> begin (V26 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V19))(V25))), case V26 of {'Idris.Prelude.Types.Left', E15} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V28) -> begin (V29 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V20))(V25))), case V29 of {'Idris.Prelude.Types.Left', E17} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V31) -> begin (V32 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V21))(V25))), case V32 of {'Idris.Prelude.Types.Left', E19} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V34) -> begin (V41 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'('erased', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V35, V36, V37, V38, V39, V40)) end end end end end end, V0, V1, V2, V3, V4, V22))(V25))), case V41 of {'Idris.Prelude.Types.Left', E21} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V43) -> begin (V50 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('dn--un--reflect_Reflect_ImpClause'(V44, V45, V46, V47, V48, V49)) end end end end end end, V0, V1, V2, V3, V4, V24))(V25))), case V50 of {'Idris.Prelude.Types.Left', E23} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithClause"/utf8>>)), [V28 | [V31 | [V34 | [V43 | [V52 | []]]]]], V25)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10, E11, E12, E13, E14)); {'Idris.TTImp.TTImp.ImpossibleClause', E25, E26} -> (fun (V53, V54) -> fun (V55) -> begin (V56 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V53))(V55))), case V56 of {'Idris.Prelude.Types.Left', E27} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V58) -> begin (V59 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V54))(V55))), case V59 of {'Idris.Prelude.Types.Left', E29} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ImpossibleClause"/utf8>>)), [V58 | [V61 | []]], V55)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V16 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V9, V10, V11, V12, V13, V14, V15)) end end end end end end end, V0, V1, V2, V3, V4, V6))(V8))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> begin (V19 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V7))(V8))), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetField"/utf8>>)), [V18 | [V21 | []]], V8)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E6, E7} -> (fun (V22, V23) -> fun (V24) -> begin (V32 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V25, V26, V27, V28, V29, V30, V31)) end end end end end end end, V0, V1, V2, V3, V4, V22))(V24))), case V32 of {'Idris.Prelude.Types.Left', E8} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V34) -> begin (V35 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V23))(V24))), case V35 of {'Idris.Prelude.Types.Left', E10} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V37) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetFieldApp"/utf8>>)), [V34 | [V37 | []]], V24)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V24 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'('erased', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('dn--un--reflect_Reflect_RawImp'(V18, V19, V20, V21, V22, V23)) end end end end end end, V0, V1, V2, V3, V4, V8))(V11))), case V24 of {'Idris.Prelude.Types.Left', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V26) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V9))(V11))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V30 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V10))(V11))), case V30 of {'Idris.Prelude.Types.Left', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkIField"/utf8>>)), [V14 | [V17 | [V26 | [V29 | [V32 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Inline"/utf8>>)), V6)) end end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TCInline"/utf8>>)), V7)) end end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Hint"/utf8>>)), [V12 | []], V9)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E3} -> (fun (V13) -> fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"GlobalHint"/utf8>>)), [V17 | []], V14)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ExternFn"/utf8>>)), V18)) end end()); {'Idris.TTImp.TTImp.ForeignFn', E6} -> (fun (V19) -> fun (V20) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect_RawImp'(V21, V22, V23, V24, V25, V26)) end end end end end end, V0, V1, V2, V3, V4, V19))(V20))), case V27 of {'Idris.Prelude.Types.Left', E7} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ForeignFn"/utf8>>)), [V29 | []], V20)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Invertible"/utf8>>)), V30)) end end()); {'Idris.TTImp.TTImp.Totality', E9} -> (fun (V31) -> fun (V32) -> begin (V33 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_TotalReq'(V0, V1, V2, V3, V4, V31))(V32))), case V33 of {'Idris.Prelude.Types.Left', E10} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Totality"/utf8>>)), [V35 | []], V32)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> fun (V36) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Macro"/utf8>>)), V36)) end end()); {'Idris.TTImp.TTImp.SpecArgs', E12} -> (fun (V37) -> fun (V38) -> begin (V45 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V39, V40, V41, V42, V43, V44)) end end end end end end, V0, V1, V2, V3, V4, V37))(V38))), case V45 of {'Idris.Prelude.Types.Left', E13} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V47) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SpecArgs"/utf8>>)), [V47 | []], V38)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.Core.NonLinearVar'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NonLinearVar"/utf8>>)), V6)) end end()); {'Idris.Core.Core.VarApplied'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"VarApplied"/utf8>>)), V7)) end end()); {'Idris.Core.Core.NotConstructor'} -> (fun () -> fun (V8) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NotConstructor"/utf8>>)), V8)) end end()); {'Idris.Core.Core.ErasedArg'} -> (fun () -> fun (V9) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ErasedArg"/utf8>>)), V9)) end end()); {'Idris.Core.Core.UserDotted'} -> (fun () -> fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UserDotted"/utf8>>)), V10)) end end()); {'Idris.Core.Core.UnknownDot'} -> (fun () -> fun (V11) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnknownDot"/utf8>>)), V11)) end end()); {'Idris.Core.Core.UnderAppliedCon'} -> (fun () -> fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnderAppliedCon"/utf8>>)), V12)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.SearchBy', E0} -> (fun (V6) -> fun (V7) -> begin (V14 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V8, V9, V10, V11, V12, V13)) end end end end end end, V0, V1, V2, V3, V4, V6))(V7))), case V14 of {'Idris.Prelude.Types.Left', E1} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V16) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SearchBy"/utf8>>)), [V16 | []], V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> fun (V17) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoHints"/utf8>>)), V17)) end end()); {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueSearch"/utf8>>)), V18)) end end()); {'Idris.TTImp.TTImp.External'} -> (fun () -> fun (V19) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"External"/utf8>>)), V19)) end end()); {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> fun (V20) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoNewtype"/utf8>>)), V20)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.PI', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PI"/utf8>>)), [V10 | []], V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.PATTERN'} -> (fun () -> fun (V11) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PATTERN"/utf8>>)), V11)) end end()); {'Idris.TTImp.TTImp.NONE'} -> (fun () -> fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NONE"/utf8>>)), V12)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.FirstSuccess'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"FirstSuccess"/utf8>>)), V6)) end end()); {'Idris.TTImp.TTImp.Unique'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Unique"/utf8>>)), V7)) end end()); {'Idris.TTImp.TTImp.UniqueDefault', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueDefault"/utf8>>)), [V12 | []], V9)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Reify_UseSide'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_RawImp'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpTy'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpRecord'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpDecl'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpData'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpData'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpClause'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_IFieldUpdate'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_IField'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_IField'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_FnOpt'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_DotReason'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_DataOpt'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_BindMode'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_AltType'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_AltType'(V0, V1, V2, V3)).
'dn--un--__Impl_Reflect_UseSide'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpData'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_IField'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_DotReason'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_BindMode'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_AltType'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5)).
