-module('Idris.Idris2.TTImp.Reflect').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--reify_Reify_UseSide'/5,
  'dn--un--reify_Reify_RawImp'/5,
  'dn--un--reify_Reify_ImpTy'/5,
  'dn--un--reify_Reify_ImpRecord'/5,
  'dn--un--reify_Reify_ImpDecl'/5,
  'dn--un--reify_Reify_ImpData'/5,
  'dn--un--reify_Reify_ImpClause'/5,
  'dn--un--reify_Reify_IFieldUpdate'/5,
  'dn--un--reify_Reify_IField'/5,
  'dn--un--reify_Reify_FnOpt'/5,
  'dn--un--reify_Reify_DotReason'/5,
  'dn--un--reify_Reify_DataOpt'/5,
  'dn--un--reify_Reify_BindMode'/5,
  'dn--un--reify_Reify_AltType'/5,
  'dn--un--reflect_Reflect_UseSide'/7,
  'dn--un--reflect_Reflect_RawImp'/6,
  'dn--un--reflect_Reflect_ImpTy'/7,
  'dn--un--reflect_Reflect_ImpRecord'/7,
  'dn--un--reflect_Reflect_ImpDecl'/7,
  'dn--un--reflect_Reflect_ImpData'/7,
  'dn--un--reflect_Reflect_ImpClause'/7,
  'dn--un--reflect_Reflect_IFieldUpdate'/7,
  'dn--un--reflect_Reflect_IField'/7,
  'dn--un--reflect_Reflect_FnOpt'/7,
  'dn--un--reflect_Reflect_DotReason'/7,
  'dn--un--reflect_Reflect_DataOpt'/7,
  'dn--un--reflect_Reflect_BindMode'/7,
  'dn--un--reflect_Reflect_AltType'/7,
  'dn--un--__Impl_Reify_UseSide'/5,
  'dn--un--__Impl_Reify_RawImp'/5,
  'dn--un--__Impl_Reify_ImpTy'/5,
  'dn--un--__Impl_Reify_ImpRecord'/5,
  'dn--un--__Impl_Reify_ImpDecl'/5,
  'dn--un--__Impl_Reify_ImpData'/5,
  'dn--un--__Impl_Reify_ImpClause'/5,
  'dn--un--__Impl_Reify_IFieldUpdate'/5,
  'dn--un--__Impl_Reify_IField'/5,
  'dn--un--__Impl_Reify_FnOpt'/5,
  'dn--un--__Impl_Reify_DotReason'/5,
  'dn--un--__Impl_Reify_DataOpt'/5,
  'dn--un--__Impl_Reify_BindMode'/5,
  'dn--un--__Impl_Reify_AltType'/5,
  'dn--un--__Impl_Reflect_UseSide'/7,
  'dn--un--__Impl_Reflect_RawImp'/6,
  'dn--un--__Impl_Reflect_ImpTy'/7,
  'dn--un--__Impl_Reflect_ImpRecord'/7,
  'dn--un--__Impl_Reflect_ImpDecl'/7,
  'dn--un--__Impl_Reflect_ImpData'/7,
  'dn--un--__Impl_Reflect_ImpClause'/7,
  'dn--un--__Impl_Reflect_IFieldUpdate'/7,
  'dn--un--__Impl_Reflect_IField'/7,
  'dn--un--__Impl_Reflect_FnOpt'/7,
  'dn--un--__Impl_Reflect_DotReason'/7,
  'dn--un--__Impl_Reflect_DataOpt'/7,
  'dn--un--__Impl_Reflect_BindMode'/7,
  'dn--un--__Impl_Reflect_AltType'/7
]).
'dn--un--reify_Reify_UseSide'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"UseLeft"/utf8>> -> {'Idris.Prelude.Types.Right', 0}; <<"UseRight"/utf8>> -> {'Idris.Prelude.Types.Right', 1}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"UseSide"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"UseSide"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"UseSide"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"UseSide"/utf8>>, V4)) end.
'dn--un--reify_Reify_RawImp'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"IVar"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [] -> begin (V53 = begin (V50 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V50 of {'Idris.Prelude.Types.Left', E42} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V52, V4)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V53 of {'Idris.Prelude.Types.Left', E44} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V55) -> begin (V59 = begin (V56 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V56 of {'Idris.Prelude.Types.Left', E46} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V58, V4)) end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E48} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V55, V61}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IPi"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V62) -> ('Idris.Idris2.Builtin':'un--snd'(V62)) end, V9)) of [E50 | E51] -> (fun (V63, V64) -> case V64 of [E52 | E53] -> (fun (V65, V66) -> case V66 of [E54 | E55] -> (fun (V67, V68) -> case V68 of [E56 | E57] -> (fun (V69, V70) -> case V70 of [E58 | E59] -> (fun (V71, V72) -> case V72 of [E60 | E61] -> (fun (V73, V74) -> case V74 of [] -> begin (V78 = begin (V75 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V63))(V4))), case V75 of {'Idris.Prelude.Types.Left', E62} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V77, V4)) end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V78 of {'Idris.Prelude.Types.Left', E64} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V80) -> begin (V84 = begin (V81 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V65))(V4))), case V81 of {'Idris.Prelude.Types.Left', E66} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V83, V4)) end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V84 of {'Idris.Prelude.Types.Left', E68} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V86) -> begin (V95 = begin (V87 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V67))(V4))), case V87 of {'Idris.Prelude.Types.Left', E70} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V89) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> ('dn--un--reify_Reify_RawImp'(V90, V91, V92, V93, V94)) end end end end end, V0, V1, V2, V89, V4)) end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V95 of {'Idris.Prelude.Types.Left', E72} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V97) -> begin (V106 = begin (V98 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V69))(V4))), case V98 of {'Idris.Prelude.Types.Left', E74} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V100) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V101, V102, V103, V104, V105)) end end end end end, V0, V1, V2, V100, V4)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V106 of {'Idris.Prelude.Types.Left', E76} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V108) -> begin (V112 = begin (V109 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V71))(V4))), case V109 of {'Idris.Prelude.Types.Left', E78} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V111) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V111, V4)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V112 of {'Idris.Prelude.Types.Left', E80} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V114) -> begin (V118 = begin (V115 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V73))(V4))), case V115 of {'Idris.Prelude.Types.Left', E82} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V117) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V117, V4)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V118 of {'Idris.Prelude.Types.Left', E84} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V80, V86, V97, V108, V114, V120}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E60, E61)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E58, E59)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E56, E57)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E54, E55)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E52, E53)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E50, E51)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"ILam"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V121) -> ('Idris.Idris2.Builtin':'un--snd'(V121)) end, V9)) of [E86 | E87] -> (fun (V122, V123) -> case V123 of [E88 | E89] -> (fun (V124, V125) -> case V125 of [E90 | E91] -> (fun (V126, V127) -> case V127 of [E92 | E93] -> (fun (V128, V129) -> case V129 of [E94 | E95] -> (fun (V130, V131) -> case V131 of [E96 | E97] -> (fun (V132, V133) -> case V133 of [] -> begin (V137 = begin (V134 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V122))(V4))), case V134 of {'Idris.Prelude.Types.Left', E98} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V136) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V136, V4)) end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V137 of {'Idris.Prelude.Types.Left', E100} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V139) -> begin (V143 = begin (V140 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V124))(V4))), case V140 of {'Idris.Prelude.Types.Left', E102} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V142) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V142, V4)) end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V143 of {'Idris.Prelude.Types.Left', E104} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V145) -> begin (V154 = begin (V146 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V126))(V4))), case V146 of {'Idris.Prelude.Types.Left', E106} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V148) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> ('dn--un--reify_Reify_RawImp'(V149, V150, V151, V152, V153)) end end end end end, V0, V1, V2, V148, V4)) end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V154 of {'Idris.Prelude.Types.Left', E108} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V156) -> begin (V165 = begin (V157 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V128))(V4))), case V157 of {'Idris.Prelude.Types.Left', E110} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V159) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V160, V161, V162, V163, V164)) end end end end end, V0, V1, V2, V159, V4)) end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V165 of {'Idris.Prelude.Types.Left', E112} -> (fun (V166) -> {'Idris.Prelude.Types.Left', V166} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V167) -> begin (V171 = begin (V168 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V130))(V4))), case V168 of {'Idris.Prelude.Types.Left', E114} -> (fun (V169) -> {'Idris.Prelude.Types.Left', V169} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V170) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V170, V4)) end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V171 of {'Idris.Prelude.Types.Left', E116} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V173) -> begin (V177 = begin (V174 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V132))(V4))), case V174 of {'Idris.Prelude.Types.Left', E118} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V176) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V176, V4)) end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V177 of {'Idris.Prelude.Types.Left', E120} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V179) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V139, V145, V156, V167, V173, V179}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E96, E97)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E94, E95)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E92, E93)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E90, E91)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E88, E89)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E86, E87)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"ILet"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V180) -> ('Idris.Idris2.Builtin':'un--snd'(V180)) end, V9)) of [E122 | E123] -> (fun (V181, V182) -> case V182 of [E124 | E125] -> (fun (V183, V184) -> case V184 of [E126 | E127] -> (fun (V185, V186) -> case V186 of [E128 | E129] -> (fun (V187, V188) -> case V188 of [E130 | E131] -> (fun (V189, V190) -> case V190 of [E132 | E133] -> (fun (V191, V192) -> case V192 of [E134 | E135] -> (fun (V193, V194) -> case V194 of [] -> begin (V198 = begin (V195 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V181))(V4))), case V195 of {'Idris.Prelude.Types.Left', E136} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V197) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V197, V4)) end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V198 of {'Idris.Prelude.Types.Left', E138} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V200) -> begin (V204 = begin (V201 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V183))(V4))), case V201 of {'Idris.Prelude.Types.Left', E140} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V203) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V203, V4)) end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V204 of {'Idris.Prelude.Types.Left', E142} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V206) -> begin (V210 = begin (V207 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V185))(V4))), case V207 of {'Idris.Prelude.Types.Left', E144} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V209) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V209, V4)) end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V210 of {'Idris.Prelude.Types.Left', E146} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V212) -> begin (V216 = begin (V213 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V187))(V4))), case V213 of {'Idris.Prelude.Types.Left', E148} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V215) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V215, V4)) end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V216 of {'Idris.Prelude.Types.Left', E150} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V218) -> begin (V222 = begin (V219 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V189))(V4))), case V219 of {'Idris.Prelude.Types.Left', E152} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V221) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V221, V4)) end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V222 of {'Idris.Prelude.Types.Left', E154} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V224) -> begin (V228 = begin (V225 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V191))(V4))), case V225 of {'Idris.Prelude.Types.Left', E156} -> (fun (V226) -> {'Idris.Prelude.Types.Left', V226} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V227) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V227, V4)) end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V228 of {'Idris.Prelude.Types.Left', E158} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V230) -> begin (V234 = begin (V231 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V193))(V4))), case V231 of {'Idris.Prelude.Types.Left', E160} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V233) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V233, V4)) end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V234 of {'Idris.Prelude.Types.Left', E162} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V236) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V200, V206, V212, V218, V224, V230, V236}} end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E134, E135)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E132, E133)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E130, E131)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E128, E129)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E126, E127)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E124, E125)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E122, E123)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"ICase"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V237) -> ('Idris.Idris2.Builtin':'un--snd'(V237)) end, V9)) of [E164 | E165] -> (fun (V238, V239) -> case V239 of [E166 | E167] -> (fun (V240, V241) -> case V241 of [E168 | E169] -> (fun (V242, V243) -> case V243 of [E170 | E171] -> (fun (V244, V245) -> case V245 of [] -> begin (V249 = begin (V246 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V238))(V4))), case V246 of {'Idris.Prelude.Types.Left', E172} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V248) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V248, V4)) end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V249 of {'Idris.Prelude.Types.Left', E174} -> (fun (V250) -> {'Idris.Prelude.Types.Left', V250} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V251) -> begin (V255 = begin (V252 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V240))(V4))), case V252 of {'Idris.Prelude.Types.Left', E176} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V254) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V254, V4)) end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V255 of {'Idris.Prelude.Types.Left', E178} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V257) -> begin (V261 = begin (V258 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V242))(V4))), case V258 of {'Idris.Prelude.Types.Left', E180} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V260) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V260, V4)) end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V261 of {'Idris.Prelude.Types.Left', E182} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V263) -> begin (V272 = begin (V264 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V244))(V4))), case V264 of {'Idris.Prelude.Types.Left', E184} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V266) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> ('dn--un--reify_Reify_ImpClause'(V267, V268, V269, V270, V271)) end end end end end, V0, V1, V2, V266, V4)) end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V272 of {'Idris.Prelude.Types.Left', E186} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V274) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V251, V257, V263, V274}} end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E170, E171)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E168, E169)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E166, E167)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E164, E165)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"ILocal"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V275) -> ('Idris.Idris2.Builtin':'un--snd'(V275)) end, V9)) of [E188 | E189] -> (fun (V276, V277) -> case V277 of [E190 | E191] -> (fun (V278, V279) -> case V279 of [E192 | E193] -> (fun (V280, V281) -> case V281 of [] -> begin (V285 = begin (V282 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V276))(V4))), case V282 of {'Idris.Prelude.Types.Left', E194} -> (fun (V283) -> {'Idris.Prelude.Types.Left', V283} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V284) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V284, V4)) end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V285 of {'Idris.Prelude.Types.Left', E196} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E196)); {'Idris.Prelude.Types.Right', E197} -> (fun (V287) -> begin (V296 = begin (V288 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V278))(V4))), case V288 of {'Idris.Prelude.Types.Left', E198} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V290) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> ('dn--un--reify_Reify_ImpDecl'(V291, V292, V293, V294, V295)) end end end end end, V0, V1, V2, V290, V4)) end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V296 of {'Idris.Prelude.Types.Left', E200} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V298) -> begin (V302 = begin (V299 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V280))(V4))), case V299 of {'Idris.Prelude.Types.Left', E202} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V301) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V301, V4)) end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V302 of {'Idris.Prelude.Types.Left', E204} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V304) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V287, V298, V304}} end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E192, E193)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E190, E191)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E188, E189)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IUpdate"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V305) -> ('Idris.Idris2.Builtin':'un--snd'(V305)) end, V9)) of [E206 | E207] -> (fun (V306, V307) -> case V307 of [E208 | E209] -> (fun (V308, V309) -> case V309 of [E210 | E211] -> (fun (V310, V311) -> case V311 of [] -> begin (V315 = begin (V312 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V306))(V4))), case V312 of {'Idris.Prelude.Types.Left', E212} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E212)); {'Idris.Prelude.Types.Right', E213} -> (fun (V314) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V314, V4)) end(E213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V315 of {'Idris.Prelude.Types.Left', E214} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V317) -> begin (V326 = begin (V318 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V308))(V4))), case V318 of {'Idris.Prelude.Types.Left', E216} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V320) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> ('dn--un--reify_Reify_IFieldUpdate'(V321, V322, V323, V324, V325)) end end end end end, V0, V1, V2, V320, V4)) end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V326 of {'Idris.Prelude.Types.Left', E218} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V328) -> begin (V332 = begin (V329 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V310))(V4))), case V329 of {'Idris.Prelude.Types.Left', E220} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V331) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V331, V4)) end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V332 of {'Idris.Prelude.Types.Left', E222} -> (fun (V333) -> {'Idris.Prelude.Types.Left', V333} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V334) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V317, V328, V334}} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E210, E211)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E208, E209)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E206, E207)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V335) -> ('Idris.Idris2.Builtin':'un--snd'(V335)) end, V9)) of [E224 | E225] -> (fun (V336, V337) -> case V337 of [E226 | E227] -> (fun (V338, V339) -> case V339 of [E228 | E229] -> (fun (V340, V341) -> case V341 of [] -> begin (V345 = begin (V342 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V336))(V4))), case V342 of {'Idris.Prelude.Types.Left', E230} -> (fun (V343) -> {'Idris.Prelude.Types.Left', V343} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V344) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V344, V4)) end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V345 of {'Idris.Prelude.Types.Left', E232} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V347) -> begin (V351 = begin (V348 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V338))(V4))), case V348 of {'Idris.Prelude.Types.Left', E234} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V350) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V350, V4)) end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V351 of {'Idris.Prelude.Types.Left', E236} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V353) -> begin (V357 = begin (V354 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V340))(V4))), case V354 of {'Idris.Prelude.Types.Left', E238} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V356) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V356, V4)) end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V357 of {'Idris.Prelude.Types.Left', E240} -> (fun (V358) -> {'Idris.Prelude.Types.Left', V358} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V359) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V347, V353, V359}} end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E228, E229)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E226, E227)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E224, E225)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"INamedApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V360) -> ('Idris.Idris2.Builtin':'un--snd'(V360)) end, V9)) of [E242 | E243] -> (fun (V361, V362) -> case V362 of [E244 | E245] -> (fun (V363, V364) -> case V364 of [E246 | E247] -> (fun (V365, V366) -> case V366 of [E248 | E249] -> (fun (V367, V368) -> case V368 of [] -> begin (V372 = begin (V369 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V361))(V4))), case V369 of {'Idris.Prelude.Types.Left', E250} -> (fun (V370) -> {'Idris.Prelude.Types.Left', V370} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V371) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V371, V4)) end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V372 of {'Idris.Prelude.Types.Left', E252} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E252)); {'Idris.Prelude.Types.Right', E253} -> (fun (V374) -> begin (V378 = begin (V375 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V363))(V4))), case V375 of {'Idris.Prelude.Types.Left', E254} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E254)); {'Idris.Prelude.Types.Right', E255} -> (fun (V377) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V377, V4)) end(E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V378 of {'Idris.Prelude.Types.Left', E256} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V380) -> begin (V384 = begin (V381 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V365))(V4))), case V381 of {'Idris.Prelude.Types.Left', E258} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V383) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V383, V4)) end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V384 of {'Idris.Prelude.Types.Left', E260} -> (fun (V385) -> {'Idris.Prelude.Types.Left', V385} end(E260)); {'Idris.Prelude.Types.Right', E261} -> (fun (V386) -> begin (V390 = begin (V387 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V367))(V4))), case V387 of {'Idris.Prelude.Types.Left', E262} -> (fun (V388) -> {'Idris.Prelude.Types.Left', V388} end(E262)); {'Idris.Prelude.Types.Right', E263} -> (fun (V389) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V389, V4)) end(E263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V390 of {'Idris.Prelude.Types.Left', E264} -> (fun (V391) -> {'Idris.Prelude.Types.Left', V391} end(E264)); {'Idris.Prelude.Types.Right', E265} -> (fun (V392) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V374, V380, V386, V392}} end(E265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E261)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E253)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E248, E249)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E246, E247)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E244, E245)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E242, E243)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IAutoApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V393) -> ('Idris.Idris2.Builtin':'un--snd'(V393)) end, V9)) of [E266 | E267] -> (fun (V394, V395) -> case V395 of [E268 | E269] -> (fun (V396, V397) -> case V397 of [E270 | E271] -> (fun (V398, V399) -> case V399 of [] -> begin (V403 = begin (V400 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V394))(V4))), case V400 of {'Idris.Prelude.Types.Left', E272} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E272)); {'Idris.Prelude.Types.Right', E273} -> (fun (V402) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V402, V4)) end(E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V403 of {'Idris.Prelude.Types.Left', E274} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V405) -> begin (V409 = begin (V406 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V396))(V4))), case V406 of {'Idris.Prelude.Types.Left', E276} -> (fun (V407) -> {'Idris.Prelude.Types.Left', V407} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V408) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V408, V4)) end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V409 of {'Idris.Prelude.Types.Left', E278} -> (fun (V410) -> {'Idris.Prelude.Types.Left', V410} end(E278)); {'Idris.Prelude.Types.Right', E279} -> (fun (V411) -> begin (V415 = begin (V412 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V398))(V4))), case V412 of {'Idris.Prelude.Types.Left', E280} -> (fun (V413) -> {'Idris.Prelude.Types.Left', V413} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V414) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V414, V4)) end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V415 of {'Idris.Prelude.Types.Left', E282} -> (fun (V416) -> {'Idris.Prelude.Types.Left', V416} end(E282)); {'Idris.Prelude.Types.Right', E283} -> (fun (V417) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V405, V411, V417}} end(E283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E270, E271)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E268, E269)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E266, E267)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IWithApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V418) -> ('Idris.Idris2.Builtin':'un--snd'(V418)) end, V9)) of [E284 | E285] -> (fun (V419, V420) -> case V420 of [E286 | E287] -> (fun (V421, V422) -> case V422 of [E288 | E289] -> (fun (V423, V424) -> case V424 of [] -> begin (V428 = begin (V425 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V419))(V4))), case V425 of {'Idris.Prelude.Types.Left', E290} -> (fun (V426) -> {'Idris.Prelude.Types.Left', V426} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V427) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V427, V4)) end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V428 of {'Idris.Prelude.Types.Left', E292} -> (fun (V429) -> {'Idris.Prelude.Types.Left', V429} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V430) -> begin (V434 = begin (V431 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V421))(V4))), case V431 of {'Idris.Prelude.Types.Left', E294} -> (fun (V432) -> {'Idris.Prelude.Types.Left', V432} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V433) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V433, V4)) end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V434 of {'Idris.Prelude.Types.Left', E296} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V436) -> begin (V440 = begin (V437 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V423))(V4))), case V437 of {'Idris.Prelude.Types.Left', E298} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E298)); {'Idris.Prelude.Types.Right', E299} -> (fun (V439) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V439, V4)) end(E299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V440 of {'Idris.Prelude.Types.Left', E300} -> (fun (V441) -> {'Idris.Prelude.Types.Left', V441} end(E300)); {'Idris.Prelude.Types.Right', E301} -> (fun (V442) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V430, V436, V442}} end(E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E288, E289)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E286, E287)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E284, E285)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"ISearch"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V443) -> ('Idris.Idris2.Builtin':'un--snd'(V443)) end, V9)) of [E302 | E303] -> (fun (V444, V445) -> case V445 of [E304 | E305] -> (fun (V446, V447) -> case V447 of [] -> begin (V451 = begin (V448 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V444))(V4))), case V448 of {'Idris.Prelude.Types.Left', E306} -> (fun (V449) -> {'Idris.Prelude.Types.Left', V449} end(E306)); {'Idris.Prelude.Types.Right', E307} -> (fun (V450) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V450, V4)) end(E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V451 of {'Idris.Prelude.Types.Left', E308} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V453) -> begin (V457 = begin (V454 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V446))(V4))), case V454 of {'Idris.Prelude.Types.Left', E310} -> (fun (V455) -> {'Idris.Prelude.Types.Left', V455} end(E310)); {'Idris.Prelude.Types.Right', E311} -> (fun (V456) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V0, V1, V2, V456, V4)) end(E311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V457 of {'Idris.Prelude.Types.Left', E312} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V459) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V453, V459}} end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E304, E305)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E302, E303)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IAlternative"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V460) -> ('Idris.Idris2.Builtin':'un--snd'(V460)) end, V9)) of [E314 | E315] -> (fun (V461, V462) -> case V462 of [E316 | E317] -> (fun (V463, V464) -> case V464 of [E318 | E319] -> (fun (V465, V466) -> case V466 of [] -> begin (V470 = begin (V467 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V461))(V4))), case V467 of {'Idris.Prelude.Types.Left', E320} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E320)); {'Idris.Prelude.Types.Right', E321} -> (fun (V469) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V469, V4)) end(E321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V470 of {'Idris.Prelude.Types.Left', E322} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E322)); {'Idris.Prelude.Types.Right', E323} -> (fun (V472) -> begin (V476 = begin (V473 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V463))(V4))), case V473 of {'Idris.Prelude.Types.Left', E324} -> (fun (V474) -> {'Idris.Prelude.Types.Left', V474} end(E324)); {'Idris.Prelude.Types.Right', E325} -> (fun (V475) -> ('dn--un--reify_Reify_AltType'(V0, V1, V2, V475, V4)) end(E325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V476 of {'Idris.Prelude.Types.Left', E326} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E326)); {'Idris.Prelude.Types.Right', E327} -> (fun (V478) -> begin (V487 = begin (V479 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V465))(V4))), case V479 of {'Idris.Prelude.Types.Left', E328} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E328)); {'Idris.Prelude.Types.Right', E329} -> (fun (V481) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V482) -> fun (V483) -> fun (V484) -> fun (V485) -> fun (V486) -> ('dn--un--reify_Reify_RawImp'(V482, V483, V484, V485, V486)) end end end end end, V0, V1, V2, V481, V4)) end(E329)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V487 of {'Idris.Prelude.Types.Left', E330} -> (fun (V488) -> {'Idris.Prelude.Types.Left', V488} end(E330)); {'Idris.Prelude.Types.Right', E331} -> (fun (V489) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V472, V478, V489}} end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E318, E319)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E316, E317)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E314, E315)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IRewrite"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V490) -> ('Idris.Idris2.Builtin':'un--snd'(V490)) end, V9)) of [E332 | E333] -> (fun (V491, V492) -> case V492 of [E334 | E335] -> (fun (V493, V494) -> case V494 of [E336 | E337] -> (fun (V495, V496) -> case V496 of [] -> begin (V500 = begin (V497 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V491))(V4))), case V497 of {'Idris.Prelude.Types.Left', E338} -> (fun (V498) -> {'Idris.Prelude.Types.Left', V498} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V499) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V499, V4)) end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V500 of {'Idris.Prelude.Types.Left', E340} -> (fun (V501) -> {'Idris.Prelude.Types.Left', V501} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V502) -> begin (V506 = begin (V503 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V493))(V4))), case V503 of {'Idris.Prelude.Types.Left', E342} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V505) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V505, V4)) end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V506 of {'Idris.Prelude.Types.Left', E344} -> (fun (V507) -> {'Idris.Prelude.Types.Left', V507} end(E344)); {'Idris.Prelude.Types.Right', E345} -> (fun (V508) -> begin (V512 = begin (V509 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V495))(V4))), case V509 of {'Idris.Prelude.Types.Left', E346} -> (fun (V510) -> {'Idris.Prelude.Types.Left', V510} end(E346)); {'Idris.Prelude.Types.Right', E347} -> (fun (V511) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V511, V4)) end(E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V512 of {'Idris.Prelude.Types.Left', E348} -> (fun (V513) -> {'Idris.Prelude.Types.Left', V513} end(E348)); {'Idris.Prelude.Types.Right', E349} -> (fun (V514) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V502, V508, V514}} end(E349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E336, E337)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E334, E335)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E332, E333)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IBindHere"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V515) -> ('Idris.Idris2.Builtin':'un--snd'(V515)) end, V9)) of [E350 | E351] -> (fun (V516, V517) -> case V517 of [E352 | E353] -> (fun (V518, V519) -> case V519 of [E354 | E355] -> (fun (V520, V521) -> case V521 of [] -> begin (V525 = begin (V522 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V516))(V4))), case V522 of {'Idris.Prelude.Types.Left', E356} -> (fun (V523) -> {'Idris.Prelude.Types.Left', V523} end(E356)); {'Idris.Prelude.Types.Right', E357} -> (fun (V524) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V524, V4)) end(E357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V525 of {'Idris.Prelude.Types.Left', E358} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E358)); {'Idris.Prelude.Types.Right', E359} -> (fun (V527) -> begin (V531 = begin (V528 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V518))(V4))), case V528 of {'Idris.Prelude.Types.Left', E360} -> (fun (V529) -> {'Idris.Prelude.Types.Left', V529} end(E360)); {'Idris.Prelude.Types.Right', E361} -> (fun (V530) -> ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V530, V4)) end(E361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V531 of {'Idris.Prelude.Types.Left', E362} -> (fun (V532) -> {'Idris.Prelude.Types.Left', V532} end(E362)); {'Idris.Prelude.Types.Right', E363} -> (fun (V533) -> begin (V537 = begin (V534 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V520))(V4))), case V534 of {'Idris.Prelude.Types.Left', E364} -> (fun (V535) -> {'Idris.Prelude.Types.Left', V535} end(E364)); {'Idris.Prelude.Types.Right', E365} -> (fun (V536) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V536, V4)) end(E365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V537 of {'Idris.Prelude.Types.Left', E366} -> (fun (V538) -> {'Idris.Prelude.Types.Left', V538} end(E366)); {'Idris.Prelude.Types.Right', E367} -> (fun (V539) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V527, V533, V539}} end(E367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E363)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E354, E355)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E352, E353)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E350, E351)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IBindVar"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V540) -> ('Idris.Idris2.Builtin':'un--snd'(V540)) end, V9)) of [E368 | E369] -> (fun (V541, V542) -> case V542 of [E370 | E371] -> (fun (V543, V544) -> case V544 of [] -> begin (V548 = begin (V545 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V541))(V4))), case V545 of {'Idris.Prelude.Types.Left', E372} -> (fun (V546) -> {'Idris.Prelude.Types.Left', V546} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V547) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V547, V4)) end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V548 of {'Idris.Prelude.Types.Left', E374} -> (fun (V549) -> {'Idris.Prelude.Types.Left', V549} end(E374)); {'Idris.Prelude.Types.Right', E375} -> (fun (V550) -> begin (V554 = begin (V551 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V543))(V4))), case V551 of {'Idris.Prelude.Types.Left', E376} -> (fun (V552) -> {'Idris.Prelude.Types.Left', V552} end(E376)); {'Idris.Prelude.Types.Right', E377} -> (fun (V553) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V0, V1, V2, V553))(V4)) end(E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V554 of {'Idris.Prelude.Types.Left', E378} -> (fun (V555) -> {'Idris.Prelude.Types.Left', V555} end(E378)); {'Idris.Prelude.Types.Right', E379} -> (fun (V556) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindVar', V550, V556}} end(E379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E370, E371)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E368, E369)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IAs"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V557) -> ('Idris.Idris2.Builtin':'un--snd'(V557)) end, V9)) of [E380 | E381] -> (fun (V558, V559) -> case V559 of [E382 | E383] -> (fun (V560, V561) -> case V561 of [E384 | E385] -> (fun (V562, V563) -> case V563 of [E386 | E387] -> (fun (V564, V565) -> case V565 of [E388 | E389] -> (fun (V566, V567) -> case V567 of [] -> begin (V571 = begin (V568 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V558))(V4))), case V568 of {'Idris.Prelude.Types.Left', E390} -> (fun (V569) -> {'Idris.Prelude.Types.Left', V569} end(E390)); {'Idris.Prelude.Types.Right', E391} -> (fun (V570) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V570, V4)) end(E391)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V571 of {'Idris.Prelude.Types.Left', E392} -> (fun (V572) -> {'Idris.Prelude.Types.Left', V572} end(E392)); {'Idris.Prelude.Types.Right', E393} -> (fun (V573) -> begin (V577 = begin (V574 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V560))(V4))), case V574 of {'Idris.Prelude.Types.Left', E394} -> (fun (V575) -> {'Idris.Prelude.Types.Left', V575} end(E394)); {'Idris.Prelude.Types.Right', E395} -> (fun (V576) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V576, V4)) end(E395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V577 of {'Idris.Prelude.Types.Left', E396} -> (fun (V578) -> {'Idris.Prelude.Types.Left', V578} end(E396)); {'Idris.Prelude.Types.Right', E397} -> (fun (V579) -> begin (V583 = begin (V580 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V562))(V4))), case V580 of {'Idris.Prelude.Types.Left', E398} -> (fun (V581) -> {'Idris.Prelude.Types.Left', V581} end(E398)); {'Idris.Prelude.Types.Right', E399} -> (fun (V582) -> ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V582, V4)) end(E399)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V583 of {'Idris.Prelude.Types.Left', E400} -> (fun (V584) -> {'Idris.Prelude.Types.Left', V584} end(E400)); {'Idris.Prelude.Types.Right', E401} -> (fun (V585) -> begin (V589 = begin (V586 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V564))(V4))), case V586 of {'Idris.Prelude.Types.Left', E402} -> (fun (V587) -> {'Idris.Prelude.Types.Left', V587} end(E402)); {'Idris.Prelude.Types.Right', E403} -> (fun (V588) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V588, V4)) end(E403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V589 of {'Idris.Prelude.Types.Left', E404} -> (fun (V590) -> {'Idris.Prelude.Types.Left', V590} end(E404)); {'Idris.Prelude.Types.Right', E405} -> (fun (V591) -> begin (V595 = begin (V592 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V566))(V4))), case V592 of {'Idris.Prelude.Types.Left', E406} -> (fun (V593) -> {'Idris.Prelude.Types.Left', V593} end(E406)); {'Idris.Prelude.Types.Right', E407} -> (fun (V594) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V594, V4)) end(E407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V595 of {'Idris.Prelude.Types.Left', E408} -> (fun (V596) -> {'Idris.Prelude.Types.Left', V596} end(E408)); {'Idris.Prelude.Types.Right', E409} -> (fun (V597) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V573, V579, V585, V591, V597}} end(E409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E405)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E393)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E388, E389)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E386, E387)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E384, E385)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E382, E383)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E380, E381)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IMustUnify"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V598) -> ('Idris.Idris2.Builtin':'un--snd'(V598)) end, V9)) of [E410 | E411] -> (fun (V599, V600) -> case V600 of [E412 | E413] -> (fun (V601, V602) -> case V602 of [E414 | E415] -> (fun (V603, V604) -> case V604 of [] -> begin (V608 = begin (V605 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V599))(V4))), case V605 of {'Idris.Prelude.Types.Left', E416} -> (fun (V606) -> {'Idris.Prelude.Types.Left', V606} end(E416)); {'Idris.Prelude.Types.Right', E417} -> (fun (V607) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V607, V4)) end(E417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V608 of {'Idris.Prelude.Types.Left', E418} -> (fun (V609) -> {'Idris.Prelude.Types.Left', V609} end(E418)); {'Idris.Prelude.Types.Right', E419} -> (fun (V610) -> begin (V614 = begin (V611 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V601))(V4))), case V611 of {'Idris.Prelude.Types.Left', E420} -> (fun (V612) -> {'Idris.Prelude.Types.Left', V612} end(E420)); {'Idris.Prelude.Types.Right', E421} -> (fun (V613) -> ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V613, V4)) end(E421)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V614 of {'Idris.Prelude.Types.Left', E422} -> (fun (V615) -> {'Idris.Prelude.Types.Left', V615} end(E422)); {'Idris.Prelude.Types.Right', E423} -> (fun (V616) -> begin (V620 = begin (V617 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V603))(V4))), case V617 of {'Idris.Prelude.Types.Left', E424} -> (fun (V618) -> {'Idris.Prelude.Types.Left', V618} end(E424)); {'Idris.Prelude.Types.Right', E425} -> (fun (V619) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V619, V4)) end(E425)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V620 of {'Idris.Prelude.Types.Left', E426} -> (fun (V621) -> {'Idris.Prelude.Types.Left', V621} end(E426)); {'Idris.Prelude.Types.Right', E427} -> (fun (V622) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V610, V616, V622}} end(E427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E423)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E419)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E414, E415)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E412, E413)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E410, E411)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IDelayed"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V623) -> ('Idris.Idris2.Builtin':'un--snd'(V623)) end, V9)) of [E428 | E429] -> (fun (V624, V625) -> case V625 of [E430 | E431] -> (fun (V626, V627) -> case V627 of [E432 | E433] -> (fun (V628, V629) -> case V629 of [] -> begin (V633 = begin (V630 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V624))(V4))), case V630 of {'Idris.Prelude.Types.Left', E434} -> (fun (V631) -> {'Idris.Prelude.Types.Left', V631} end(E434)); {'Idris.Prelude.Types.Right', E435} -> (fun (V632) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V632, V4)) end(E435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V633 of {'Idris.Prelude.Types.Left', E436} -> (fun (V634) -> {'Idris.Prelude.Types.Left', V634} end(E436)); {'Idris.Prelude.Types.Right', E437} -> (fun (V635) -> begin (V639 = begin (V636 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V626))(V4))), case V636 of {'Idris.Prelude.Types.Left', E438} -> (fun (V637) -> {'Idris.Prelude.Types.Left', V637} end(E438)); {'Idris.Prelude.Types.Right', E439} -> (fun (V638) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_LazyReason'(V0, V1, V2, V638, V4)) end(E439)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V639 of {'Idris.Prelude.Types.Left', E440} -> (fun (V640) -> {'Idris.Prelude.Types.Left', V640} end(E440)); {'Idris.Prelude.Types.Right', E441} -> (fun (V641) -> begin (V645 = begin (V642 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V628))(V4))), case V642 of {'Idris.Prelude.Types.Left', E442} -> (fun (V643) -> {'Idris.Prelude.Types.Left', V643} end(E442)); {'Idris.Prelude.Types.Right', E443} -> (fun (V644) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V644, V4)) end(E443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V645 of {'Idris.Prelude.Types.Left', E444} -> (fun (V646) -> {'Idris.Prelude.Types.Left', V646} end(E444)); {'Idris.Prelude.Types.Right', E445} -> (fun (V647) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V635, V641, V647}} end(E445)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E441)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E437)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E432, E433)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E430, E431)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E428, E429)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IDelay"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V648) -> ('Idris.Idris2.Builtin':'un--snd'(V648)) end, V9)) of [E446 | E447] -> (fun (V649, V650) -> case V650 of [E448 | E449] -> (fun (V651, V652) -> case V652 of [] -> begin (V656 = begin (V653 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V649))(V4))), case V653 of {'Idris.Prelude.Types.Left', E450} -> (fun (V654) -> {'Idris.Prelude.Types.Left', V654} end(E450)); {'Idris.Prelude.Types.Right', E451} -> (fun (V655) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V655, V4)) end(E451)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V656 of {'Idris.Prelude.Types.Left', E452} -> (fun (V657) -> {'Idris.Prelude.Types.Left', V657} end(E452)); {'Idris.Prelude.Types.Right', E453} -> (fun (V658) -> begin (V662 = begin (V659 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V651))(V4))), case V659 of {'Idris.Prelude.Types.Left', E454} -> (fun (V660) -> {'Idris.Prelude.Types.Left', V660} end(E454)); {'Idris.Prelude.Types.Right', E455} -> (fun (V661) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V661, V4)) end(E455)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V662 of {'Idris.Prelude.Types.Left', E456} -> (fun (V663) -> {'Idris.Prelude.Types.Left', V663} end(E456)); {'Idris.Prelude.Types.Right', E457} -> (fun (V664) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V658, V664}} end(E457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E453)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E448, E449)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E446, E447)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IForce"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V665) -> ('Idris.Idris2.Builtin':'un--snd'(V665)) end, V9)) of [E458 | E459] -> (fun (V666, V667) -> case V667 of [E460 | E461] -> (fun (V668, V669) -> case V669 of [] -> begin (V673 = begin (V670 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V666))(V4))), case V670 of {'Idris.Prelude.Types.Left', E462} -> (fun (V671) -> {'Idris.Prelude.Types.Left', V671} end(E462)); {'Idris.Prelude.Types.Right', E463} -> (fun (V672) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V672, V4)) end(E463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V673 of {'Idris.Prelude.Types.Left', E464} -> (fun (V674) -> {'Idris.Prelude.Types.Left', V674} end(E464)); {'Idris.Prelude.Types.Right', E465} -> (fun (V675) -> begin (V679 = begin (V676 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V668))(V4))), case V676 of {'Idris.Prelude.Types.Left', E466} -> (fun (V677) -> {'Idris.Prelude.Types.Left', V677} end(E466)); {'Idris.Prelude.Types.Right', E467} -> (fun (V678) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V678, V4)) end(E467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V679 of {'Idris.Prelude.Types.Left', E468} -> (fun (V680) -> {'Idris.Prelude.Types.Left', V680} end(E468)); {'Idris.Prelude.Types.Right', E469} -> (fun (V681) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V675, V681}} end(E469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E460, E461)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E458, E459)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IQuote"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V682) -> ('Idris.Idris2.Builtin':'un--snd'(V682)) end, V9)) of [E470 | E471] -> (fun (V683, V684) -> case V684 of [E472 | E473] -> (fun (V685, V686) -> case V686 of [] -> begin (V690 = begin (V687 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V683))(V4))), case V687 of {'Idris.Prelude.Types.Left', E474} -> (fun (V688) -> {'Idris.Prelude.Types.Left', V688} end(E474)); {'Idris.Prelude.Types.Right', E475} -> (fun (V689) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V689, V4)) end(E475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V690 of {'Idris.Prelude.Types.Left', E476} -> (fun (V691) -> {'Idris.Prelude.Types.Left', V691} end(E476)); {'Idris.Prelude.Types.Right', E477} -> (fun (V692) -> begin (V696 = begin (V693 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V685))(V4))), case V693 of {'Idris.Prelude.Types.Left', E478} -> (fun (V694) -> {'Idris.Prelude.Types.Left', V694} end(E478)); {'Idris.Prelude.Types.Right', E479} -> (fun (V695) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V695, V4)) end(E479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V696 of {'Idris.Prelude.Types.Left', E480} -> (fun (V697) -> {'Idris.Prelude.Types.Left', V697} end(E480)); {'Idris.Prelude.Types.Right', E481} -> (fun (V698) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V692, V698}} end(E481)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E477)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E472, E473)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E470, E471)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IQuoteName"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V699) -> ('Idris.Idris2.Builtin':'un--snd'(V699)) end, V9)) of [E482 | E483] -> (fun (V700, V701) -> case V701 of [E484 | E485] -> (fun (V702, V703) -> case V703 of [] -> begin (V707 = begin (V704 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V700))(V4))), case V704 of {'Idris.Prelude.Types.Left', E486} -> (fun (V705) -> {'Idris.Prelude.Types.Left', V705} end(E486)); {'Idris.Prelude.Types.Right', E487} -> (fun (V706) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V706, V4)) end(E487)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V707 of {'Idris.Prelude.Types.Left', E488} -> (fun (V708) -> {'Idris.Prelude.Types.Left', V708} end(E488)); {'Idris.Prelude.Types.Right', E489} -> (fun (V709) -> begin (V713 = begin (V710 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V702))(V4))), case V710 of {'Idris.Prelude.Types.Left', E490} -> (fun (V711) -> {'Idris.Prelude.Types.Left', V711} end(E490)); {'Idris.Prelude.Types.Right', E491} -> (fun (V712) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V712, V4)) end(E491)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V713 of {'Idris.Prelude.Types.Left', E492} -> (fun (V714) -> {'Idris.Prelude.Types.Left', V714} end(E492)); {'Idris.Prelude.Types.Right', E493} -> (fun (V715) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V709, V715}} end(E493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E484, E485)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E482, E483)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IQuoteDecl"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V716) -> ('Idris.Idris2.Builtin':'un--snd'(V716)) end, V9)) of [E494 | E495] -> (fun (V717, V718) -> case V718 of [E496 | E497] -> (fun (V719, V720) -> case V720 of [] -> begin (V724 = begin (V721 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V717))(V4))), case V721 of {'Idris.Prelude.Types.Left', E498} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E498)); {'Idris.Prelude.Types.Right', E499} -> (fun (V723) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V723, V4)) end(E499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V724 of {'Idris.Prelude.Types.Left', E500} -> (fun (V725) -> {'Idris.Prelude.Types.Left', V725} end(E500)); {'Idris.Prelude.Types.Right', E501} -> (fun (V726) -> begin (V735 = begin (V727 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V719))(V4))), case V727 of {'Idris.Prelude.Types.Left', E502} -> (fun (V728) -> {'Idris.Prelude.Types.Left', V728} end(E502)); {'Idris.Prelude.Types.Right', E503} -> (fun (V729) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V730) -> fun (V731) -> fun (V732) -> fun (V733) -> fun (V734) -> ('dn--un--reify_Reify_ImpDecl'(V730, V731, V732, V733, V734)) end end end end end, V0, V1, V2, V729, V4)) end(E503)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V735 of {'Idris.Prelude.Types.Left', E504} -> (fun (V736) -> {'Idris.Prelude.Types.Left', V736} end(E504)); {'Idris.Prelude.Types.Right', E505} -> (fun (V737) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V726, V737}} end(E505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E496, E497)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E494, E495)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IUnquote"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V738) -> ('Idris.Idris2.Builtin':'un--snd'(V738)) end, V9)) of [E506 | E507] -> (fun (V739, V740) -> case V740 of [E508 | E509] -> (fun (V741, V742) -> case V742 of [] -> begin (V746 = begin (V743 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V739))(V4))), case V743 of {'Idris.Prelude.Types.Left', E510} -> (fun (V744) -> {'Idris.Prelude.Types.Left', V744} end(E510)); {'Idris.Prelude.Types.Right', E511} -> (fun (V745) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V745, V4)) end(E511)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V746 of {'Idris.Prelude.Types.Left', E512} -> (fun (V747) -> {'Idris.Prelude.Types.Left', V747} end(E512)); {'Idris.Prelude.Types.Right', E513} -> (fun (V748) -> begin (V752 = begin (V749 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V741))(V4))), case V749 of {'Idris.Prelude.Types.Left', E514} -> (fun (V750) -> {'Idris.Prelude.Types.Left', V750} end(E514)); {'Idris.Prelude.Types.Right', E515} -> (fun (V751) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V751, V4)) end(E515)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V752 of {'Idris.Prelude.Types.Left', E516} -> (fun (V753) -> {'Idris.Prelude.Types.Left', V753} end(E516)); {'Idris.Prelude.Types.Right', E517} -> (fun (V754) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V748, V754}} end(E517)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E513)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E508, E509)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E506, E507)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IPrimVal"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V755) -> ('Idris.Idris2.Builtin':'un--snd'(V755)) end, V9)) of [E518 | E519] -> (fun (V756, V757) -> case V757 of [E520 | E521] -> (fun (V758, V759) -> case V759 of [] -> begin (V763 = begin (V760 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V756))(V4))), case V760 of {'Idris.Prelude.Types.Left', E522} -> (fun (V761) -> {'Idris.Prelude.Types.Left', V761} end(E522)); {'Idris.Prelude.Types.Right', E523} -> (fun (V762) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V762, V4)) end(E523)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V763 of {'Idris.Prelude.Types.Left', E524} -> (fun (V764) -> {'Idris.Prelude.Types.Left', V764} end(E524)); {'Idris.Prelude.Types.Right', E525} -> (fun (V765) -> begin (V769 = begin (V766 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V758))(V4))), case V766 of {'Idris.Prelude.Types.Left', E526} -> (fun (V767) -> {'Idris.Prelude.Types.Left', V767} end(E526)); {'Idris.Prelude.Types.Right', E527} -> (fun (V768) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Constant'(V0, V1, V2, V768, V4)) end(E527)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V769 of {'Idris.Prelude.Types.Left', E528} -> (fun (V770) -> {'Idris.Prelude.Types.Left', V770} end(E528)); {'Idris.Prelude.Types.Right', E529} -> (fun (V771) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V765, V771}} end(E529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E525)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E520, E521)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E518, E519)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IType"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V772) -> ('Idris.Idris2.Builtin':'un--snd'(V772)) end, V9)) of [E530 | E531] -> (fun (V773, V774) -> case V774 of [] -> begin (V778 = begin (V775 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V773))(V4))), case V775 of {'Idris.Prelude.Types.Left', E532} -> (fun (V776) -> {'Idris.Prelude.Types.Left', V776} end(E532)); {'Idris.Prelude.Types.Right', E533} -> (fun (V777) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V777, V4)) end(E533)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V778 of {'Idris.Prelude.Types.Left', E534} -> (fun (V779) -> {'Idris.Prelude.Types.Left', V779} end(E534)); {'Idris.Prelude.Types.Right', E535} -> (fun (V780) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V780}} end(E535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E530, E531)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IHole"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V781) -> ('Idris.Idris2.Builtin':'un--snd'(V781)) end, V9)) of [E536 | E537] -> (fun (V782, V783) -> case V783 of [E538 | E539] -> (fun (V784, V785) -> case V785 of [] -> begin (V789 = begin (V786 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V782))(V4))), case V786 of {'Idris.Prelude.Types.Left', E540} -> (fun (V787) -> {'Idris.Prelude.Types.Left', V787} end(E540)); {'Idris.Prelude.Types.Right', E541} -> (fun (V788) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V788, V4)) end(E541)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V789 of {'Idris.Prelude.Types.Left', E542} -> (fun (V790) -> {'Idris.Prelude.Types.Left', V790} end(E542)); {'Idris.Prelude.Types.Right', E543} -> (fun (V791) -> begin (V795 = begin (V792 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V784))(V4))), case V792 of {'Idris.Prelude.Types.Left', E544} -> (fun (V793) -> {'Idris.Prelude.Types.Left', V793} end(E544)); {'Idris.Prelude.Types.Right', E545} -> (fun (V794) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V0, V1, V2, V794))(V4)) end(E545)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V795 of {'Idris.Prelude.Types.Left', E546} -> (fun (V796) -> {'Idris.Prelude.Types.Left', V796} end(E546)); {'Idris.Prelude.Types.Right', E547} -> (fun (V797) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V791, V797}} end(E547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E543)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E538, E539)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E536, E537)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"Implicit"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V798) -> ('Idris.Idris2.Builtin':'un--snd'(V798)) end, V9)) of [E548 | E549] -> (fun (V799, V800) -> case V800 of [E550 | E551] -> (fun (V801, V802) -> case V802 of [] -> begin (V806 = begin (V803 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V799))(V4))), case V803 of {'Idris.Prelude.Types.Left', E552} -> (fun (V804) -> {'Idris.Prelude.Types.Left', V804} end(E552)); {'Idris.Prelude.Types.Right', E553} -> (fun (V805) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V805, V4)) end(E553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V806 of {'Idris.Prelude.Types.Left', E554} -> (fun (V807) -> {'Idris.Prelude.Types.Left', V807} end(E554)); {'Idris.Prelude.Types.Right', E555} -> (fun (V808) -> begin (V812 = begin (V809 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V801))(V4))), case V809 of {'Idris.Prelude.Types.Left', E556} -> (fun (V810) -> {'Idris.Prelude.Types.Left', V810} end(E556)); {'Idris.Prelude.Types.Right', E557} -> (fun (V811) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V811, V4)) end(E557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V812 of {'Idris.Prelude.Types.Left', E558} -> (fun (V813) -> {'Idris.Prelude.Types.Left', V813} end(E558)); {'Idris.Prelude.Types.Right', E559} -> (fun (V814) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V808, V814}} end(E559)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E555)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E550, E551)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E548, E549)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; <<"IWithUnambigNames"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V815) -> ('Idris.Idris2.Builtin':'un--snd'(V815)) end, V9)) of [E560 | E561] -> (fun (V816, V817) -> case V817 of [E562 | E563] -> (fun (V818, V819) -> case V819 of [E564 | E565] -> (fun (V820, V821) -> case V821 of [] -> begin (V825 = begin (V822 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V816))(V4))), case V822 of {'Idris.Prelude.Types.Left', E566} -> (fun (V823) -> {'Idris.Prelude.Types.Left', V823} end(E566)); {'Idris.Prelude.Types.Right', E567} -> (fun (V824) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V824, V4)) end(E567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V825 of {'Idris.Prelude.Types.Left', E568} -> (fun (V826) -> {'Idris.Prelude.Types.Left', V826} end(E568)); {'Idris.Prelude.Types.Right', E569} -> (fun (V827) -> begin (V836 = begin (V828 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V818))(V4))), case V828 of {'Idris.Prelude.Types.Left', E570} -> (fun (V829) -> {'Idris.Prelude.Types.Left', V829} end(E570)); {'Idris.Prelude.Types.Right', E571} -> (fun (V830) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V831) -> fun (V832) -> fun (V833) -> fun (V834) -> fun (V835) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V831, V832, V833, V834, V835)) end end end end end, V0, V1, V2, V830, V4)) end(E571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V836 of {'Idris.Prelude.Types.Left', E572} -> (fun (V837) -> {'Idris.Prelude.Types.Left', V837} end(E572)); {'Idris.Prelude.Types.Right', E573} -> (fun (V838) -> begin (V842 = begin (V839 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V820))(V4))), case V839 of {'Idris.Prelude.Types.Left', E574} -> (fun (V840) -> {'Idris.Prelude.Types.Left', V840} end(E574)); {'Idris.Prelude.Types.Right', E575} -> (fun (V841) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V841, V4)) end(E575)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V842 of {'Idris.Prelude.Types.Left', E576} -> (fun (V843) -> {'Idris.Prelude.Types.Left', V843} end(E576)); {'Idris.Prelude.Types.Right', E577} -> (fun (V844) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V827, V838, V844}} end(E577)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E564, E565)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E562, E563)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E560, E561)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"TTImp"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"TTImp"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"MkTy"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [E42 | E43] -> (fun (V50, V51) -> case V51 of [E44 | E45] -> (fun (V52, V53) -> case V53 of [] -> begin (V57 = begin (V54 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V54 of {'Idris.Prelude.Types.Left', E46} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V56) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V56, V4)) end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V57 of {'Idris.Prelude.Types.Left', E48} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V59) -> begin (V63 = begin (V60 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V60 of {'Idris.Prelude.Types.Left', E50} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V62) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V62, V4)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V63 of {'Idris.Prelude.Types.Left', E52} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V65) -> begin (V69 = begin (V66 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V50))(V4))), case V66 of {'Idris.Prelude.Types.Left', E54} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V68) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V68, V4)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V69 of {'Idris.Prelude.Types.Left', E56} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V71) -> begin (V75 = begin (V72 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V52))(V4))), case V72 of {'Idris.Prelude.Types.Left', E58} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V74) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V74, V4)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V75 of {'Idris.Prelude.Types.Left', E60} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V77) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V59, V65, V71, V77}} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"ITy"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"ITy"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"MkRecord"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [E42 | E43] -> (fun (V50, V51) -> case V51 of [E44 | E45] -> (fun (V52, V53) -> case V53 of [E46 | E47] -> (fun (V54, V55) -> case V55 of [] -> begin (V59 = begin (V56 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V56 of {'Idris.Prelude.Types.Left', E48} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V58, V4)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E50} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V61) -> begin (V65 = begin (V62 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V62 of {'Idris.Prelude.Types.Left', E52} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V64, V4)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V65 of {'Idris.Prelude.Types.Left', E54} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V67) -> begin (V108 = begin (V68 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V50))(V4))), case V68 of {'Idris.Prelude.Types.Left', E56} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V70) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V75, V76, V77, V78, V79)) end end end end end, fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V84, V85, V86, V87, V88)) end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('dn--un--reify_Reify_RawImp'(V98, V99, V100, V101, V102)) end end end end end, V93, V94, V95, V96, V97)) end end end end end, fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> ('dn--un--reify_Reify_RawImp'(V103, V104, V105, V106, V107)) end end end end end}, V89, V90, V91, V92)) end end end end}, V80, V81, V82, V83)) end end end end}, V71, V72, V73, V74)) end end end end, V0, V1, V2, V70, V4)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V108 of {'Idris.Prelude.Types.Left', E58} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V110) -> begin (V114 = begin (V111 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V52))(V4))), case V111 of {'Idris.Prelude.Types.Left', E60} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V113) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V113, V4)) end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V114 of {'Idris.Prelude.Types.Left', E62} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V116) -> begin (V125 = begin (V117 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V54))(V4))), case V117 of {'Idris.Prelude.Types.Left', E64} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V119) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> ('dn--un--reify_Reify_IField'(V120, V121, V122, V123, V124)) end end end end end, V0, V1, V2, V119, V4)) end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V125 of {'Idris.Prelude.Types.Left', E66} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V127) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V61, V67, V110, V116, V127}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Record"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Record"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"IClaim"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [E42 | E43] -> (fun (V50, V51) -> case V51 of [E44 | E45] -> (fun (V52, V53) -> case V53 of [E46 | E47] -> (fun (V54, V55) -> case V55 of [] -> begin (V59 = begin (V56 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V56 of {'Idris.Prelude.Types.Left', E48} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V58, V4)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E50} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V61) -> begin (V65 = begin (V62 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V62 of {'Idris.Prelude.Types.Left', E52} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V64, V4)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V65 of {'Idris.Prelude.Types.Left', E54} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V67) -> begin (V71 = begin (V68 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V50))(V4))), case V68 of {'Idris.Prelude.Types.Left', E56} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V70) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V70, V4)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V71 of {'Idris.Prelude.Types.Left', E58} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V73) -> begin (V82 = begin (V74 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V52))(V4))), case V74 of {'Idris.Prelude.Types.Left', E60} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V76) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('dn--un--reify_Reify_FnOpt'(V77, V78, V79, V80, V81)) end end end end end, V0, V1, V2, V76, V4)) end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V82 of {'Idris.Prelude.Types.Left', E62} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V84) -> begin (V88 = begin (V85 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V54))(V4))), case V85 of {'Idris.Prelude.Types.Left', E64} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V87) -> ('dn--un--reify_Reify_ImpTy'(V0, V1, V2, V87, V4)) end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V88 of {'Idris.Prelude.Types.Left', E66} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V61, V67, V73, V84, V90}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"IData"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V91) -> ('Idris.Idris2.Builtin':'un--snd'(V91)) end, V9)) of [E68 | E69] -> (fun (V92, V93) -> case V93 of [E70 | E71] -> (fun (V94, V95) -> case V95 of [E72 | E73] -> (fun (V96, V97) -> case V97 of [] -> begin (V101 = begin (V98 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V92))(V4))), case V98 of {'Idris.Prelude.Types.Left', E74} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V100) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V100, V4)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V101 of {'Idris.Prelude.Types.Left', E76} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V103) -> begin (V107 = begin (V104 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V94))(V4))), case V104 of {'Idris.Prelude.Types.Left', E78} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V106) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V106, V4)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V107 of {'Idris.Prelude.Types.Left', E80} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V109) -> begin (V113 = begin (V110 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V96))(V4))), case V110 of {'Idris.Prelude.Types.Left', E82} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V112) -> ('dn--un--reify_Reify_ImpData'(V0, V1, V2, V112, V4)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V113 of {'Idris.Prelude.Types.Left', E84} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V115) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V103, V109, V115}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E72, E73)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E70, E71)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E68, E69)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"IDef"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V116) -> ('Idris.Idris2.Builtin':'un--snd'(V116)) end, V9)) of [E86 | E87] -> (fun (V117, V118) -> case V118 of [E88 | E89] -> (fun (V119, V120) -> case V120 of [E90 | E91] -> (fun (V121, V122) -> case V122 of [] -> begin (V126 = begin (V123 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V117))(V4))), case V123 of {'Idris.Prelude.Types.Left', E92} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V125) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V125, V4)) end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V126 of {'Idris.Prelude.Types.Left', E94} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V128) -> begin (V132 = begin (V129 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V119))(V4))), case V129 of {'Idris.Prelude.Types.Left', E96} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V131) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V131, V4)) end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V132 of {'Idris.Prelude.Types.Left', E98} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V134) -> begin (V143 = begin (V135 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V121))(V4))), case V135 of {'Idris.Prelude.Types.Left', E100} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V137) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('dn--un--reify_Reify_ImpClause'(V138, V139, V140, V141, V142)) end end end end end, V0, V1, V2, V137, V4)) end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V143 of {'Idris.Prelude.Types.Left', E102} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V145) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V128, V134, V145}} end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E90, E91)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E88, E89)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E86, E87)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"IParameters"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V146) -> ('Idris.Idris2.Builtin':'un--snd'(V146)) end, V9)) of [E104 | E105] -> (fun (V147, V148) -> case V148 of [E106 | E107] -> (fun (V149, V150) -> case V150 of [E108 | E109] -> (fun (V151, V152) -> case V152 of [] -> begin (V156 = begin (V153 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V147))(V4))), case V153 of {'Idris.Prelude.Types.Left', E110} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V155) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V155, V4)) end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V156 of {'Idris.Prelude.Types.Left', E112} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V158) -> begin (V199 = begin (V159 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V149))(V4))), case V159 of {'Idris.Prelude.Types.Left', E114} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V161) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V166, V167, V168, V169, V170)) end end end end end, fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V175, V176, V177, V178, V179)) end end end end end, fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> ('dn--un--reify_Reify_RawImp'(V189, V190, V191, V192, V193)) end end end end end, V184, V185, V186, V187, V188)) end end end end end, fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> ('dn--un--reify_Reify_RawImp'(V194, V195, V196, V197, V198)) end end end end end}, V180, V181, V182, V183)) end end end end}, V171, V172, V173, V174)) end end end end}, V162, V163, V164, V165)) end end end end, V0, V1, V2, V161, V4)) end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V199 of {'Idris.Prelude.Types.Left', E116} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V201) -> begin (V210 = begin (V202 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V151))(V4))), case V202 of {'Idris.Prelude.Types.Left', E118} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V204) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('dn--un--reify_Reify_ImpDecl'(V205, V206, V207, V208, V209)) end end end end end, V0, V1, V2, V204, V4)) end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V210 of {'Idris.Prelude.Types.Left', E120} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V212) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V158, V201, V212}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E108, E109)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E106, E107)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E104, E105)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"IRecord"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V213) -> ('Idris.Idris2.Builtin':'un--snd'(V213)) end, V9)) of [E122 | E123] -> (fun (V214, V215) -> case V215 of [E124 | E125] -> (fun (V216, V217) -> case V217 of [E126 | E127] -> (fun (V218, V219) -> case V219 of [] -> begin (V223 = begin (V220 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V214))(V4))), case V220 of {'Idris.Prelude.Types.Left', E128} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V222) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V222, V4)) end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V223 of {'Idris.Prelude.Types.Left', E130} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V225) -> begin (V229 = begin (V226 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V216))(V4))), case V226 of {'Idris.Prelude.Types.Left', E132} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V228) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V228, V4)) end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V229 of {'Idris.Prelude.Types.Left', E134} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V231) -> begin (V235 = begin (V232 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V218))(V4))), case V232 of {'Idris.Prelude.Types.Left', E136} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V234) -> ('dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V234, V4)) end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V235 of {'Idris.Prelude.Types.Left', E138} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V237) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V225, {'Idris.Prelude.Types.Nothing'}, V231, V237}} end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E126, E127)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E124, E125)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E122, E123)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"INamespace"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V238) -> ('Idris.Idris2.Builtin':'un--snd'(V238)) end, V9)) of [E140 | E141] -> (fun (V239, V240) -> case V240 of [E142 | E143] -> (fun (V241, V242) -> case V242 of [E144 | E145] -> (fun (V243, V244) -> case V244 of [] -> begin (V248 = begin (V245 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V239))(V4))), case V245 of {'Idris.Prelude.Types.Left', E146} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V247) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V247, V4)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V248 of {'Idris.Prelude.Types.Left', E148} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V250) -> begin (V254 = begin (V251 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V241))(V4))), case V251 of {'Idris.Prelude.Types.Left', E150} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V253) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Namespace'(V0, V1, V2, V253))(V4)) end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V254 of {'Idris.Prelude.Types.Left', E152} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V256) -> begin (V265 = begin (V257 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V243))(V4))), case V257 of {'Idris.Prelude.Types.Left', E154} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V259) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> fun (V264) -> ('dn--un--reify_Reify_ImpDecl'(V260, V261, V262, V263, V264)) end end end end end, V0, V1, V2, V259, V4)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V265 of {'Idris.Prelude.Types.Left', E156} -> (fun (V266) -> {'Idris.Prelude.Types.Left', V266} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V267) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V250, V256, V267}} end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E144, E145)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E142, E143)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E140, E141)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"ITransform"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V268) -> ('Idris.Idris2.Builtin':'un--snd'(V268)) end, V9)) of [E158 | E159] -> (fun (V269, V270) -> case V270 of [E160 | E161] -> (fun (V271, V272) -> case V272 of [E162 | E163] -> (fun (V273, V274) -> case V274 of [E164 | E165] -> (fun (V275, V276) -> case V276 of [] -> begin (V280 = begin (V277 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V269))(V4))), case V277 of {'Idris.Prelude.Types.Left', E166} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V279) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V279, V4)) end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V280 of {'Idris.Prelude.Types.Left', E168} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V282) -> begin (V286 = begin (V283 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V271))(V4))), case V283 of {'Idris.Prelude.Types.Left', E170} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V285) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V285, V4)) end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V286 of {'Idris.Prelude.Types.Left', E172} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V288) -> begin (V292 = begin (V289 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V273))(V4))), case V289 of {'Idris.Prelude.Types.Left', E174} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V291) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V291, V4)) end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V292 of {'Idris.Prelude.Types.Left', E176} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V294) -> begin (V298 = begin (V295 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V275))(V4))), case V295 of {'Idris.Prelude.Types.Left', E178} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V297) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V297, V4)) end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V298 of {'Idris.Prelude.Types.Left', E180} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V300) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V282, V288, V294, V300}} end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E164, E165)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E162, E163)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E160, E161)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E158, E159)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; <<"ILog"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V301) -> ('Idris.Idris2.Builtin':'un--snd'(V301)) end, V9)) of [E182 | E183] -> (fun (V302, V303) -> case V303 of [] -> begin (V325 = begin (V304 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V302))(V4))), case V304 of {'Idris.Prelude.Types.Left', E184} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V306) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V311) -> fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V316, V317, V318, V319)) end end end end, V311, V312, V313, V314, V315)) end end end end end, fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V320, V321, V322, V323, V324)) end end end end end}, V307, V308, V309, V310)) end end end end, V0, V1, V2, V306, V4)) end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V325 of {'Idris.Prelude.Types.Left', E186} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V327) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILog', V327}} end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E182, E183)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Decl"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Decl"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpData'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"MkData"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [E42 | E43] -> (fun (V50, V51) -> case V51 of [E44 | E45] -> (fun (V52, V53) -> case V53 of [E46 | E47] -> (fun (V54, V55) -> case V55 of [] -> begin (V59 = begin (V56 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V56 of {'Idris.Prelude.Types.Left', E48} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V58, V4)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E50} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V61) -> begin (V65 = begin (V62 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V62 of {'Idris.Prelude.Types.Left', E52} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V64, V4)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V65 of {'Idris.Prelude.Types.Left', E54} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V67) -> begin (V71 = begin (V68 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V50))(V4))), case V68 of {'Idris.Prelude.Types.Left', E56} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V70) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V70, V4)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V71 of {'Idris.Prelude.Types.Left', E58} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V73) -> begin (V82 = begin (V74 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V52))(V4))), case V74 of {'Idris.Prelude.Types.Left', E60} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V76) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('dn--un--reify_Reify_DataOpt'(V77, V78, V79, V80, V81)) end end end end end, V0, V1, V2, V76, V4)) end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V82 of {'Idris.Prelude.Types.Left', E62} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V84) -> begin (V93 = begin (V85 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V54))(V4))), case V85 of {'Idris.Prelude.Types.Left', E64} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V87) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('dn--un--reify_Reify_ImpTy'(V88, V89, V90, V91, V92)) end end end end end, V0, V1, V2, V87, V4)) end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E66} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V61, V67, V73, V84, V95}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end; <<"MkLater"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V96) -> ('Idris.Idris2.Builtin':'un--snd'(V96)) end, V9)) of [E68 | E69] -> (fun (V97, V98) -> case V98 of [E70 | E71] -> (fun (V99, V100) -> case V100 of [E72 | E73] -> (fun (V101, V102) -> case V102 of [] -> begin (V106 = begin (V103 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V97))(V4))), case V103 of {'Idris.Prelude.Types.Left', E74} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V105) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V105, V4)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V106 of {'Idris.Prelude.Types.Left', E76} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V108) -> begin (V112 = begin (V109 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V99))(V4))), case V109 of {'Idris.Prelude.Types.Left', E78} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V111) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V111, V4)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V112 of {'Idris.Prelude.Types.Left', E80} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V114) -> begin (V118 = begin (V115 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V101))(V4))), case V115 of {'Idris.Prelude.Types.Left', E82} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V117) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V117, V4)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V118 of {'Idris.Prelude.Types.Left', E84} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V108, V114, V120}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E72, E73)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E70, E71)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E68, E69)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Data"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Data"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"PatClause"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [E42 | E43] -> (fun (V50, V51) -> case V51 of [] -> begin (V55 = begin (V52 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V52 of {'Idris.Prelude.Types.Left', E44} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V54) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V54, V4)) end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V55 of {'Idris.Prelude.Types.Left', E46} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V57) -> begin (V61 = begin (V58 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V58 of {'Idris.Prelude.Types.Left', E48} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V60) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V60, V4)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V61 of {'Idris.Prelude.Types.Left', E50} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V63) -> begin (V67 = begin (V64 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V50))(V4))), case V64 of {'Idris.Prelude.Types.Left', E52} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V66) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V66, V4)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V67 of {'Idris.Prelude.Types.Left', E54} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V69) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V57, V63, V69}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end; <<"WithClause"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V70) -> ('Idris.Idris2.Builtin':'un--snd'(V70)) end, V9)) of [E56 | E57] -> (fun (V71, V72) -> case V72 of [E58 | E59] -> (fun (V73, V74) -> case V74 of [E60 | E61] -> (fun (V75, V76) -> case V76 of [E62 | E63] -> (fun (V77, V78) -> case V78 of [E64 | E65] -> (fun (V79, V80) -> case V80 of [] -> begin (V84 = begin (V81 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V71))(V4))), case V81 of {'Idris.Prelude.Types.Left', E66} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V83, V4)) end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V84 of {'Idris.Prelude.Types.Left', E68} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V86) -> begin (V90 = begin (V87 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V73))(V4))), case V87 of {'Idris.Prelude.Types.Left', E70} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V89) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V89, V4)) end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E72} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V92) -> begin (V96 = begin (V93 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V75))(V4))), case V93 of {'Idris.Prelude.Types.Left', E74} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V95) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V95, V4)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V96 of {'Idris.Prelude.Types.Left', E76} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V98) -> begin (V107 = begin (V99 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V77))(V4))), case V99 of {'Idris.Prelude.Types.Left', E78} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V101) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V102, V103, V104, V105, V106)) end end end end end, V0, V1, V2, V101, V4)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V107 of {'Idris.Prelude.Types.Left', E80} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V109) -> begin (V118 = begin (V110 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V79))(V4))), case V110 of {'Idris.Prelude.Types.Left', E82} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V112) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('dn--un--reify_Reify_ImpClause'(V113, V114, V115, V116, V117)) end end end end end, V0, V1, V2, V112, V4)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V118 of {'Idris.Prelude.Types.Left', E84} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V86, V92, V98, V109, [], V120}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E64, E65)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E62, E63)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E60, E61)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E58, E59)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E56, E57)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end; <<"ImpossibleClause"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V121) -> ('Idris.Idris2.Builtin':'un--snd'(V121)) end, V9)) of [E86 | E87] -> (fun (V122, V123) -> case V123 of [E88 | E89] -> (fun (V124, V125) -> case V125 of [] -> begin (V129 = begin (V126 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V122))(V4))), case V126 of {'Idris.Prelude.Types.Left', E90} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V128) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V128, V4)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V129 of {'Idris.Prelude.Types.Left', E92} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V131) -> begin (V135 = begin (V132 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V124))(V4))), case V132 of {'Idris.Prelude.Types.Left', E94} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V134) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V134, V4)) end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V135 of {'Idris.Prelude.Types.Left', E96} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V137) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V131, V137}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E88, E89)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E86, E87)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"Clause"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Clause"/utf8>>, V4)) end.
'dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"ISetField"/utf8>> -> case V9 of [E38 | E39] -> (fun (V45, V46) -> case V45 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V47, V48) -> case V46 of [E42 | E43] -> (fun (V49, V50) -> case V49 of {'Idris.Builtin.MkPair', E44, E45} -> (fun (V51, V52) -> case V50 of [] -> begin (V60 = begin (V53 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V53 of {'Idris.Prelude.Types.Left', E46} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V55) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V56, V57, V58, V59)) end end end end, V0, V1, V2, V55, V4)) end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V60 of {'Idris.Prelude.Types.Left', E48} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V62) -> begin (V66 = begin (V63 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V52))(V4))), case V63 of {'Idris.Prelude.Types.Left', E50} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V65) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V65, V4)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V66 of {'Idris.Prelude.Types.Left', E52} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V62, V68}} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end; <<"ISetFieldApp"/utf8>> -> case V9 of [E54 | E55] -> (fun (V69, V70) -> case V69 of {'Idris.Builtin.MkPair', E56, E57} -> (fun (V71, V72) -> case V70 of [E58 | E59] -> (fun (V73, V74) -> case V73 of {'Idris.Builtin.MkPair', E60, E61} -> (fun (V75, V76) -> case V74 of [] -> begin (V84 = begin (V77 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V72))(V4))), case V77 of {'Idris.Prelude.Types.Left', E62} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V79) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V80, V81, V82, V83)) end end end end, V0, V1, V2, V79, V4)) end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V84 of {'Idris.Prelude.Types.Left', E64} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V86) -> begin (V90 = begin (V87 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V76))(V4))), case V87 of {'Idris.Prelude.Types.Left', E66} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V89) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V89, V4)) end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E68} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V86, V92}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E60, E61)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E58, E59)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E56, E57)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E54, E55)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IFieldUpdate"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"IFieldUpdate"/utf8>>, V4)) end.
'dn--un--reify_Reify_IField'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"MkIField"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Builtin':'un--snd'(V45)) end, V9)) of [E38 | E39] -> (fun (V46, V47) -> case V47 of [E40 | E41] -> (fun (V48, V49) -> case V49 of [E42 | E43] -> (fun (V50, V51) -> case V51 of [E44 | E45] -> (fun (V52, V53) -> case V53 of [E46 | E47] -> (fun (V54, V55) -> case V55 of [] -> begin (V59 = begin (V56 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V46))(V4))), case V56 of {'Idris.Prelude.Types.Left', E48} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V58, V4)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V59 of {'Idris.Prelude.Types.Left', E50} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V61) -> begin (V65 = begin (V62 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V62 of {'Idris.Prelude.Types.Left', E52} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V64, V4)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V65 of {'Idris.Prelude.Types.Left', E54} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V67) -> begin (V76 = begin (V68 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V50))(V4))), case V68 of {'Idris.Prelude.Types.Left', E56} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V70) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('dn--un--reify_Reify_RawImp'(V71, V72, V73, V74, V75)) end end end end end, V0, V1, V2, V70, V4)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V76 of {'Idris.Prelude.Types.Left', E58} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V78) -> begin (V82 = begin (V79 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V52))(V4))), case V79 of {'Idris.Prelude.Types.Left', E60} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V81) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V81, V4)) end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V82 of {'Idris.Prelude.Types.Left', E62} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V84) -> begin (V88 = begin (V85 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V54))(V4))), case V85 of {'Idris.Prelude.Types.Left', E64} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V87) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V87, V4)) end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V88 of {'Idris.Prelude.Types.Left', E66} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V61, V67, V78, V84, V90}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"IField"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"IField"/utf8>>, V4)) end.
'dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"Inline"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Inline'}}; <<"TCInline"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.TCInline'}}; <<"Hint"/utf8>> -> case V9 of [E38 | E39] -> (fun (V45, V46) -> case V45 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V47, V48) -> case V46 of [] -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V49 of {'Idris.Prelude.Types.Left', E42} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V51, V4)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E44} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Hint', V54}} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end; <<"GlobalHint"/utf8>> -> case V9 of [E46 | E47] -> (fun (V55, V56) -> case V55 of {'Idris.Builtin.MkPair', E48, E49} -> (fun (V57, V58) -> case V56 of [] -> begin (V62 = begin (V59 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V58))(V4))), case V59 of {'Idris.Prelude.Types.Left', E50} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V61) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V61, V4)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V62 of {'Idris.Prelude.Types.Left', E52} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.GlobalHint', V64}} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E48, E49)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end; <<"ExternFn"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ExternFn'}}; <<"ForeignFn"/utf8>> -> case V9 of [E54 | E55] -> (fun (V65, V66) -> case V65 of {'Idris.Builtin.MkPair', E56, E57} -> (fun (V67, V68) -> case V66 of [] -> begin (V77 = begin (V69 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V68))(V4))), case V69 of {'Idris.Prelude.Types.Left', E58} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V71) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> ('dn--un--reify_Reify_RawImp'(V72, V73, V74, V75, V76)) end end end end end, V0, V1, V2, V71, V4)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V77 of {'Idris.Prelude.Types.Left', E60} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V79}} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E56, E57)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E54, E55)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end; <<"Invertible"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Invertible'}}; <<"Totality"/utf8>> -> case V9 of [E62 | E63] -> (fun (V80, V81) -> case V80 of {'Idris.Builtin.MkPair', E64, E65} -> (fun (V82, V83) -> case V81 of [] -> begin (V87 = begin (V84 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V83))(V4))), case V84 of {'Idris.Prelude.Types.Left', E66} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V86) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_TotalReq'(V0, V1, V2, V86, V4)) end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V87 of {'Idris.Prelude.Types.Left', E68} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V89) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', V89}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E64, E65)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E62, E63)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end; <<"Macro"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Macro'}}; <<"SpecArgs"/utf8>> -> case V9 of [E70 | E71] -> (fun (V90, V91) -> case V90 of {'Idris.Builtin.MkPair', E72, E73} -> (fun (V92, V93) -> case V91 of [] -> begin (V102 = begin (V94 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V93))(V4))), case V94 of {'Idris.Prelude.Types.Left', E74} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V96) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V97, V98, V99, V100, V101)) end end end end end, V0, V1, V2, V96, V4)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V102 of {'Idris.Prelude.Types.Left', E76} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V104) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SpecArgs', V104}} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E72, E73)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E70, E71)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"FnOpt"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"FnOpt"/utf8>>, V4)) end.
'dn--un--reify_Reify_DotReason'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"NonLinearVar"/utf8>> -> {'Idris.Prelude.Types.Right', 0}; <<"VarApplied"/utf8>> -> {'Idris.Prelude.Types.Right', 1}; <<"NotConstructor"/utf8>> -> {'Idris.Prelude.Types.Right', 2}; <<"ErasedArg"/utf8>> -> {'Idris.Prelude.Types.Right', 3}; <<"UserDotted"/utf8>> -> {'Idris.Prelude.Types.Right', 4}; <<"UnknownDot"/utf8>> -> {'Idris.Prelude.Types.Right', 5}; <<"UnderAppliedCon"/utf8>> -> {'Idris.Prelude.Types.Right', 6}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DotReason"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DotReason"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DotReason"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"DotReason"/utf8>>, V4)) end.
'dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"SearchBy"/utf8>> -> case V9 of [E38 | E39] -> (fun (V45, V46) -> case V45 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V47, V48) -> case V46 of [] -> begin (V57 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V49 of {'Idris.Prelude.Types.Left', E42} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V52, V53, V54, V55, V56)) end end end end end, V0, V1, V2, V51, V4)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V57 of {'Idris.Prelude.Types.Left', E44} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SearchBy', V59}} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DataOpt"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DataOpt"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DataOpt"/utf8>>, V4)) end; <<"NoHints"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoHints'}}; <<"UniqueSearch"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueSearch'}}; <<"External"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.External'}}; <<"NoNewtype"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoNewtype'}}; <<"NoEnum"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoEnum'}}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DataOpt"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DataOpt"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"DataOpt"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"DataOpt"/utf8>>, V4)) end.
'dn--un--reify_Reify_BindMode'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"PI"/utf8>> -> case V9 of [E38 | E39] -> (fun (V45, V46) -> case V45 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V47, V48) -> case V46 of [] -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V49 of {'Idris.Prelude.Types.Left', E42} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V51, V4)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E44} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PI', V54}} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"BindMode"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"BindMode"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"BindMode"/utf8>>, V4)) end; <<"PATTERN"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PATTERN'}}; <<"NONE"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NONE'}}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"BindMode"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"BindMode"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"BindMode"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"BindMode"/utf8>>, V4)) end.
'dn--un--reify_Reify_AltType'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> begin (V41 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case V40 of {'Idris.Core.Name.NS', E35, E36} -> (fun (V42, V43) -> case V43 of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of <<"FirstSuccess"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.FirstSuccess'}}; <<"Unique"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Unique'}}; <<"UniqueDefault"/utf8>> -> case V9 of [E38 | E39] -> (fun (V45, V46) -> case V45 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V47, V48) -> case V46 of [] -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, V1, V2, V48))(V4))), case V49 of {'Idris.Prelude.Types.Left', E42} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V51) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V51, V4)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E44} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueDefault', V54}} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"AltType"/utf8>>, V4)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"AltType"/utf8>>, V4)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"AltType"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"AltType"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"AltType"/utf8>>, V4)) end end(E35, E36)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V41, <<"AltType"/utf8>>, V4)) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"AltType"/utf8>>, V4)) end.
'dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseLeft"/utf8>>)), V6)); 1 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseRight"/utf8>>)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V8))), case V9 of {'Idris.Prelude.Types.Left', E34} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7, V8))), case V12 of {'Idris.Prelude.Types.Left', E36} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V14) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IVar"/utf8>>)), [V11 | [V14 | []]], V8)) end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33)); {'Idris.TTImp.TTImp.IPi', E38, E39, E40, E41, E42, E43} -> (fun (V15, V16, V17, V18, V19, V20) -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V15))(V21))), case V22 of {'Idris.Prelude.Types.Left', E44} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V16))(V21))), case V25 of {'Idris.Prelude.Types.Left', E46} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V27) -> begin (V34 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('dn--un--reflect_Reflect_RawImp'(V28, V29, V30, V31, V32, V33)) end end end end end end, V0, V1, V2, V3, V4, V17, V21))), case V34 of {'Idris.Prelude.Types.Left', E48} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V36) -> begin (V44 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V37, V38, V39, V40, V41, V42, V43)) end end end end end end end, V0, V1, V2, V3, V4, V18, V21))), case V44 of {'Idris.Prelude.Types.Left', E50} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V46) -> begin (V47 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V19))(V21))), case V47 of {'Idris.Prelude.Types.Left', E52} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V49) -> begin (V50 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V20))(V21))), case V50 of {'Idris.Prelude.Types.Left', E54} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPi"/utf8>>)), [V24 | [V27 | [V36 | [V46 | [V49 | [V52 | []]]]]]], V21)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E38, E39, E40, E41, E42, E43)); {'Idris.TTImp.TTImp.ILam', E56, E57, E58, E59, E60, E61} -> (fun (V53, V54, V55, V56, V57, V58) -> fun (V59) -> begin (V60 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V53))(V59))), case V60 of {'Idris.Prelude.Types.Left', E62} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V62) -> begin (V63 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V54))(V59))), case V63 of {'Idris.Prelude.Types.Left', E64} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V65) -> begin (V72 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('dn--un--reflect_Reflect_RawImp'(V66, V67, V68, V69, V70, V71)) end end end end end end, V0, V1, V2, V3, V4, V55, V59))), case V72 of {'Idris.Prelude.Types.Left', E66} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V74) -> begin (V82 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V75, V76, V77, V78, V79, V80, V81)) end end end end end end end, V0, V1, V2, V3, V4, V56, V59))), case V82 of {'Idris.Prelude.Types.Left', E68} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V84) -> begin (V85 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V57))(V59))), case V85 of {'Idris.Prelude.Types.Left', E70} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V87) -> begin (V88 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V58))(V59))), case V88 of {'Idris.Prelude.Types.Left', E72} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V90) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILam"/utf8>>)), [V62 | [V65 | [V74 | [V84 | [V87 | [V90 | []]]]]]], V59)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58, E59, E60, E61)); {'Idris.TTImp.TTImp.ILet', E74, E75, E76, E77, E78, E79, E80} -> (fun (V91, V92, V93, V94, V95, V96, V97) -> fun (V98) -> begin (V99 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V91))(V98))), case V99 of {'Idris.Prelude.Types.Left', E81} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V101) -> begin (V102 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V92))(V98))), case V102 of {'Idris.Prelude.Types.Left', E83} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V104) -> begin (V105 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V93))(V98))), case V105 of {'Idris.Prelude.Types.Left', E85} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V107) -> begin (V108 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V94, V98))), case V108 of {'Idris.Prelude.Types.Left', E87} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V110) -> begin (V111 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V95))(V98))), case V111 of {'Idris.Prelude.Types.Left', E89} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V113) -> begin (V114 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V96))(V98))), case V114 of {'Idris.Prelude.Types.Left', E91} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V116) -> begin (V117 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V97))(V98))), case V117 of {'Idris.Prelude.Types.Left', E93} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V119) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILet"/utf8>>)), [V101 | [V104 | [V107 | [V110 | [V113 | [V116 | [V119 | []]]]]]]], V98)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E74, E75, E76, E77, E78, E79, E80)); {'Idris.TTImp.TTImp.ICase', E95, E96, E97, E98} -> (fun (V120, V121, V122, V123) -> fun (V124) -> begin (V125 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V120))(V124))), case V125 of {'Idris.Prelude.Types.Left', E99} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V127) -> begin (V128 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V121))(V124))), case V128 of {'Idris.Prelude.Types.Left', E101} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V130) -> begin (V131 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V122))(V124))), case V131 of {'Idris.Prelude.Types.Left', E103} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V133) -> begin (V141 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> ('dn--un--reflect_Reflect_ImpClause'(V134, V135, V136, V137, V138, V139, V140)) end end end end end end end, V0, V1, V2, V3, V4, V123, V124))), case V141 of {'Idris.Prelude.Types.Left', E105} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V143) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ICase"/utf8>>)), [V127 | [V130 | [V133 | [V143 | []]]]], V124)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E95, E96, E97, E98)); {'Idris.TTImp.TTImp.ILocal', E107, E108, E109} -> (fun (V144, V145, V146) -> fun (V147) -> begin (V148 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V144))(V147))), case V148 of {'Idris.Prelude.Types.Left', E110} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V150) -> begin (V158 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('dn--un--reflect_Reflect_ImpDecl'(V151, V152, V153, V154, V155, V156, V157)) end end end end end end end, V0, V1, V2, V3, V4, V145, V147))), case V158 of {'Idris.Prelude.Types.Left', E112} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V160) -> begin (V161 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V146))(V147))), case V161 of {'Idris.Prelude.Types.Left', E114} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V163) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILocal"/utf8>>)), [V150 | [V160 | [V163 | []]]], V147)) end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E107, E108, E109)); {'Idris.TTImp.TTImp.ICaseLocal', E116, E117, E118, E119, E120} -> (fun (V164, V165, V166, V167, V168) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V168)) end(E116, E117, E118, E119, E120)); {'Idris.TTImp.TTImp.IUpdate', E121, E122, E123} -> (fun (V169, V170, V171) -> fun (V172) -> begin (V173 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V169))(V172))), case V173 of {'Idris.Prelude.Types.Left', E124} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V175) -> begin (V183 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V176, V177, V178, V179, V180, V181, V182)) end end end end end end end, V0, V1, V2, V3, V4, V170, V172))), case V183 of {'Idris.Prelude.Types.Left', E126} -> (fun (V184) -> {'Idris.Prelude.Types.Left', V184} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V185) -> begin (V186 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V171))(V172))), case V186 of {'Idris.Prelude.Types.Left', E128} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V188) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IUpdate"/utf8>>)), [V175 | [V185 | [V188 | []]]], V172)) end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E121, E122, E123)); {'Idris.TTImp.TTImp.IApp', E130, E131, E132} -> (fun (V189, V190, V191) -> fun (V192) -> begin (V193 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V189))(V192))), case V193 of {'Idris.Prelude.Types.Left', E133} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V195) -> begin (V196 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V190))(V192))), case V196 of {'Idris.Prelude.Types.Left', E135} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V198) -> begin (V199 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V191))(V192))), case V199 of {'Idris.Prelude.Types.Left', E137} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V201) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IApp"/utf8>>)), [V195 | [V198 | [V201 | []]]], V192)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130, E131, E132)); {'Idris.TTImp.TTImp.IAutoApp', E139, E140, E141} -> (fun (V202, V203, V204) -> fun (V205) -> begin (V206 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V202))(V205))), case V206 of {'Idris.Prelude.Types.Left', E142} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V208) -> begin (V209 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V203))(V205))), case V209 of {'Idris.Prelude.Types.Left', E144} -> (fun (V210) -> {'Idris.Prelude.Types.Left', V210} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V211) -> begin (V212 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V204))(V205))), case V212 of {'Idris.Prelude.Types.Left', E146} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V214) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAutoApp"/utf8>>)), [V208 | [V211 | [V214 | []]]], V205)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E139, E140, E141)); {'Idris.TTImp.TTImp.INamedApp', E148, E149, E150, E151} -> (fun (V215, V216, V217, V218) -> fun (V219) -> begin (V220 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V215))(V219))), case V220 of {'Idris.Prelude.Types.Left', E152} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V222) -> begin (V223 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V216))(V219))), case V223 of {'Idris.Prelude.Types.Left', E154} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V225) -> begin (V226 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V217, V219))), case V226 of {'Idris.Prelude.Types.Left', E156} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V228) -> begin (V229 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V218))(V219))), case V229 of {'Idris.Prelude.Types.Left', E158} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V231) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamedApp"/utf8>>)), [V222 | [V225 | [V228 | [V231 | []]]]], V219)) end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E148, E149, E150, E151)); {'Idris.TTImp.TTImp.IWithApp', E160, E161, E162} -> (fun (V232, V233, V234) -> fun (V235) -> begin (V236 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V232))(V235))), case V236 of {'Idris.Prelude.Types.Left', E163} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V238) -> begin (V239 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V233))(V235))), case V239 of {'Idris.Prelude.Types.Left', E165} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V241) -> begin (V242 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V234))(V235))), case V242 of {'Idris.Prelude.Types.Left', E167} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V244) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithApp"/utf8>>)), [V238 | [V241 | [V244 | []]]], V235)) end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E160, E161, E162)); {'Idris.TTImp.TTImp.ISearch', E169, E170} -> (fun (V245, V246) -> fun (V247) -> begin (V248 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V245))(V247))), case V248 of {'Idris.Prelude.Types.Left', E171} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V250) -> begin (V251 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V0, V1, V2, V3, V4, V246))(V247))), case V251 of {'Idris.Prelude.Types.Left', E173} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V253) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISearch"/utf8>>)), [V250 | [V253 | []]], V247)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E169, E170)); {'Idris.TTImp.TTImp.IAlternative', E175, E176, E177} -> (fun (V254, V255, V256) -> fun (V257) -> begin (V258 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V254))(V257))), case V258 of {'Idris.Prelude.Types.Left', E178} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V260) -> begin (V261 = ('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V255, V257))), case V261 of {'Idris.Prelude.Types.Left', E180} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V263) -> begin (V270 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> ('dn--un--reflect_Reflect_RawImp'(V264, V265, V266, V267, V268, V269)) end end end end end end, V0, V1, V2, V3, V4, V256, V257))), case V270 of {'Idris.Prelude.Types.Left', E182} -> (fun (V271) -> {'Idris.Prelude.Types.Left', V271} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V272) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAlternative"/utf8>>)), [V260 | [V263 | [V272 | []]]], V257)) end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E175, E176, E177)); {'Idris.TTImp.TTImp.IRewrite', E184, E185, E186} -> (fun (V273, V274, V275) -> fun (V276) -> begin (V277 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V273))(V276))), case V277 of {'Idris.Prelude.Types.Left', E187} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V279) -> begin (V280 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V274))(V276))), case V280 of {'Idris.Prelude.Types.Left', E189} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V282) -> begin (V283 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V275))(V276))), case V283 of {'Idris.Prelude.Types.Left', E191} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V285) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRewrite"/utf8>>)), [V279 | [V282 | [V285 | []]]], V276)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186)); {'Idris.TTImp.TTImp.ICoerced', E193, E194} -> (fun (V286, V287) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V287)) end(E193, E194)); {'Idris.TTImp.TTImp.IBindHere', E195, E196, E197} -> (fun (V288, V289, V290) -> fun (V291) -> begin (V292 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V288))(V291))), case V292 of {'Idris.Prelude.Types.Left', E198} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V294) -> begin (V295 = ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V289, V291))), case V295 of {'Idris.Prelude.Types.Left', E200} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V297) -> begin (V298 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V290))(V291))), case V298 of {'Idris.Prelude.Types.Left', E202} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V300) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindHere"/utf8>>)), [V294 | [V297 | [V300 | []]]], V291)) end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E195, E196, E197)); {'Idris.TTImp.TTImp.IBindVar', E204, E205} -> (fun (V301, V302) -> fun (V303) -> begin (V304 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V301))(V303))), case V304 of {'Idris.Prelude.Types.Left', E206} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V306) -> begin (V307 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V302, V303))), case V307 of {'Idris.Prelude.Types.Left', E208} -> (fun (V308) -> {'Idris.Prelude.Types.Left', V308} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V309) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindVar"/utf8>>)), [V306 | [V309 | []]], V303)) end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E204, E205)); {'Idris.TTImp.TTImp.IAs', E210, E211, E212, E213, E214} -> (fun (V310, V311, V312, V313, V314) -> fun (V315) -> begin (V316 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V310))(V315))), case V316 of {'Idris.Prelude.Types.Left', E215} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V318) -> begin (V319 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V311))(V315))), case V319 of {'Idris.Prelude.Types.Left', E217} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V321) -> begin (V322 = ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V312, V315))), case V322 of {'Idris.Prelude.Types.Left', E219} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V324) -> begin (V325 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V313, V315))), case V325 of {'Idris.Prelude.Types.Left', E221} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V327) -> begin (V328 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V314))(V315))), case V328 of {'Idris.Prelude.Types.Left', E223} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V330) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAs"/utf8>>)), [V318 | [V321 | [V324 | [V327 | [V330 | []]]]]], V315)) end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211, E212, E213, E214)); {'Idris.TTImp.TTImp.IMustUnify', E225, E226, E227} -> (fun (V331, V332, V333) -> fun (V334) -> begin (V335 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V331))(V334))), case V335 of {'Idris.Prelude.Types.Left', E228} -> (fun (V336) -> {'Idris.Prelude.Types.Left', V336} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V337) -> begin (V338 = ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V332, V334))), case V338 of {'Idris.Prelude.Types.Left', E230} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V340) -> begin (V341 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V333))(V334))), case V341 of {'Idris.Prelude.Types.Left', E232} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V343) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IMustUnify"/utf8>>)), [V337 | [V340 | [V343 | []]]], V334)) end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E225, E226, E227)); {'Idris.TTImp.TTImp.IDelayed', E234, E235, E236} -> (fun (V344, V345, V346) -> fun (V347) -> begin (V348 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V344))(V347))), case V348 of {'Idris.Prelude.Types.Left', E237} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V350) -> begin (V351 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_LazyReason'(V0, V1, V2, V3, V4, V345, V347))), case V351 of {'Idris.Prelude.Types.Left', E239} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V353) -> begin (V354 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V346))(V347))), case V354 of {'Idris.Prelude.Types.Left', E241} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V356) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelayed"/utf8>>)), [V350 | [V353 | [V356 | []]]], V347)) end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E234, E235, E236)); {'Idris.TTImp.TTImp.IDelay', E243, E244} -> (fun (V357, V358) -> fun (V359) -> begin (V360 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V357))(V359))), case V360 of {'Idris.Prelude.Types.Left', E245} -> (fun (V361) -> {'Idris.Prelude.Types.Left', V361} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V362) -> begin (V363 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V358))(V359))), case V363 of {'Idris.Prelude.Types.Left', E247} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V365) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelay"/utf8>>)), [V362 | [V365 | []]], V359)) end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E243, E244)); {'Idris.TTImp.TTImp.IForce', E249, E250} -> (fun (V366, V367) -> fun (V368) -> begin (V369 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V366))(V368))), case V369 of {'Idris.Prelude.Types.Left', E251} -> (fun (V370) -> {'Idris.Prelude.Types.Left', V370} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V371) -> begin (V372 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V367))(V368))), case V372 of {'Idris.Prelude.Types.Left', E253} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V374) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IForce"/utf8>>)), [V371 | [V374 | []]], V368)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E249, E250)); {'Idris.TTImp.TTImp.IQuote', E255, E256} -> (fun (V375, V376) -> fun (V377) -> begin (V378 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V375))(V377))), case V378 of {'Idris.Prelude.Types.Left', E257} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V380) -> begin (V381 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V376))(V377))), case V381 of {'Idris.Prelude.Types.Left', E259} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V383) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuote"/utf8>>)), [V380 | [V383 | []]], V377)) end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E255, E256)); {'Idris.TTImp.TTImp.IQuoteName', E261, E262} -> (fun (V384, V385) -> fun (V386) -> begin (V387 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V384))(V386))), case V387 of {'Idris.Prelude.Types.Left', E263} -> (fun (V388) -> {'Idris.Prelude.Types.Left', V388} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V389) -> begin (V390 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V385, V386))), case V390 of {'Idris.Prelude.Types.Left', E265} -> (fun (V391) -> {'Idris.Prelude.Types.Left', V391} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V392) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteName"/utf8>>)), [V389 | [V392 | []]], V386)) end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E261, E262)); {'Idris.TTImp.TTImp.IQuoteDecl', E267, E268} -> (fun (V393, V394) -> fun (V395) -> begin (V396 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V393))(V395))), case V396 of {'Idris.Prelude.Types.Left', E269} -> (fun (V397) -> {'Idris.Prelude.Types.Left', V397} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V398) -> begin (V406 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> ('dn--un--reflect_Reflect_ImpDecl'(V399, V400, V401, V402, V403, V404, V405)) end end end end end end end, V0, V1, V2, V3, V4, V394, V395))), case V406 of {'Idris.Prelude.Types.Left', E271} -> (fun (V407) -> {'Idris.Prelude.Types.Left', V407} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V408) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteDecl"/utf8>>)), [V398 | [V408 | []]], V395)) end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E267, E268)); {'Idris.TTImp.TTImp.IUnquote', E273, E274} -> (fun (V409, V410) -> fun (V411) -> case V410 of {'Idris.TTImp.TTImp.IVar', E275, E276} -> (fun (V412, V413) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Ref', V409, {'Idris.Core.TT.Bound'}, V413}} end(E275, E276)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect an unquote: escapes should be lifted out"/utf8>>}, V411)) end end end(E273, E274)); {'Idris.TTImp.TTImp.IRunElab', E277, E278} -> (fun (V414, V415) -> fun (V416) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect a %runelab"/utf8>>}, V416)) end end(E277, E278)); {'Idris.TTImp.TTImp.IPrimVal', E279, E280} -> (fun (V417, V418) -> fun (V419) -> begin (V420 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V417))(V419))), case V420 of {'Idris.Prelude.Types.Left', E281} -> (fun (V421) -> {'Idris.Prelude.Types.Left', V421} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V422) -> begin (V423 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Constant'(V0, V1, V2, V3, V4, V418, V419))), case V423 of {'Idris.Prelude.Types.Left', E283} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V425) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPrimVal"/utf8>>)), [V422 | [V425 | []]], V419)) end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E279, E280)); {'Idris.TTImp.TTImp.IType', E285} -> (fun (V426) -> fun (V427) -> begin (V428 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V426))(V427))), case V428 of {'Idris.Prelude.Types.Left', E286} -> (fun (V429) -> {'Idris.Prelude.Types.Left', V429} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V430) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IType"/utf8>>)), [V430 | []], V427)) end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E285)); {'Idris.TTImp.TTImp.IHole', E288, E289} -> (fun (V431, V432) -> fun (V433) -> begin (V434 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V431))(V433))), case V434 of {'Idris.Prelude.Types.Left', E290} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V436) -> begin (V437 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V432, V433))), case V437 of {'Idris.Prelude.Types.Left', E292} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V439) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IHole"/utf8>>)), [V436 | [V439 | []]], V433)) end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E288, E289)); {'Idris.TTImp.TTImp.IUnifyLog', E294, E295, E296} -> (fun (V440, V441, V442) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V442)) end(E294, E295, E296)); _ -> case V3 of 1 -> fun (V443) -> case V5 of {'Idris.TTImp.TTImp.Implicit', E30, E31} -> (fun (V444, V445) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Erased', V1, 0}} end(E30, E31)); _ -> case V5 of {'Idris.TTImp.TTImp.Implicit', E15, E16} -> (fun (V446, V447) -> begin (V448 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V446))(V443))), case V448 of {'Idris.Prelude.Types.Left', E17} -> (fun (V449) -> {'Idris.Prelude.Types.Left', V449} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V450) -> begin (V451 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V447, V443))), case V451 of {'Idris.Prelude.Types.Left', E19} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V453) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V450 | [V453 | []]], V443)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16)); {'Idris.TTImp.TTImp.IWithUnambigNames', E21, E22, E23} -> (fun (V454, V455, V456) -> begin (V457 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V454))(V443))), case V457 of {'Idris.Prelude.Types.Left', E24} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V459) -> begin (V467 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V460, V461, V462, V463, V464, V465, V466)) end end end end end end end, V0, V1, V2, V3, V4, V455, V443))), case V467 of {'Idris.Prelude.Types.Left', E26} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V469) -> begin (V470 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V456))(V443))), case V470 of {'Idris.Prelude.Types.Left', E28} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V472) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V459 | [V469 | [V472 | []]]], V443)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V473) -> case V5 of {'Idris.TTImp.TTImp.Implicit', E0, E1} -> (fun (V474, V475) -> begin (V476 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V474))(V473))), case V476 of {'Idris.Prelude.Types.Left', E2} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V478) -> begin (V479 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V475, V473))), case V479 of {'Idris.Prelude.Types.Left', E4} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V481) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V478 | [V481 | []]], V473)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.IWithUnambigNames', E6, E7, E8} -> (fun (V482, V483, V484) -> begin (V485 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V482))(V473))), case V485 of {'Idris.Prelude.Types.Left', E9} -> (fun (V486) -> {'Idris.Prelude.Types.Left', V486} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V487) -> begin (V495 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V488) -> fun (V489) -> fun (V490) -> fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V488, V489, V490, V491, V492, V493, V494)) end end end end end end end, V0, V1, V2, V3, V4, V483, V473))), case V495 of {'Idris.Prelude.Types.Left', E11} -> (fun (V496) -> {'Idris.Prelude.Types.Left', V496} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V497) -> begin (V498 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V484))(V473))), case V498 of {'Idris.Prelude.Types.Left', E13} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V500) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V487 | [V497 | [V500 | []]]], V473)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> begin (V11 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V8))(V6))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V9, V6))), case V17 of {'Idris.Prelude.Types.Left', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V19) -> begin (V20 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V10))(V6))), case V20 of {'Idris.Prelude.Types.Left', E10} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V22) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkTy"/utf8>>)), [V13 | [V16 | [V19 | [V22 | []]]]], V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V8, V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V71 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V25, V26, V27, V28, V29, V30, V31)) end end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V39, V40, V41, V42, V43, V44)) end end end end end end, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> ('dn--un--reflect_Reflect_RawImp'(V59, V60, V61, V62, V63, V64)) end end end end end end, V52, V53, V54, V55, V56, V57, V58)) end end end end end end end, fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('dn--un--reflect_Reflect_RawImp'(V65, V66, V67, V68, V69, V70)) end end end end end end}, V45, V46, V47, V48, V49, V50, V51)) end end end end end end end}, V32, V33, V34, V35, V36, V37, V38)) end end end end end end end}, V18, V19, V20, V21, V22, V23, V24)) end end end end end end end, V0, V1, V2, V3, V4, V9, V6))), case V71 of {'Idris.Prelude.Types.Left', E9} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V73) -> begin (V74 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V10, V6))), case V74 of {'Idris.Prelude.Types.Left', E11} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V76) -> begin (V84 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('dn--un--reflect_Reflect_IField'(V77, V78, V79, V80, V81, V82, V83)) end end end end end end end, V0, V1, V2, V3, V4, V11, V6))), case V84 of {'Idris.Prelude.Types.Left', E13} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V86) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkRecord"/utf8>>)), [V14 | [V17 | [V73 | [V76 | [V86 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V8))(V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V9, V6))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V28 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('dn--un--reflect_Reflect_FnOpt'(V21, V22, V23, V24, V25, V26, V27)) end end end end end end end, V0, V1, V2, V3, V4, V10, V6))), case V28 of {'Idris.Prelude.Types.Left', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V30) -> begin (V31 = ('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V11, V6))), case V31 of {'Idris.Prelude.Types.Left', E13} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IClaim"/utf8>>)), [V14 | [V17 | [V20 | [V30 | [V33 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E15, E16, E17} -> (fun (V34, V35, V36) -> begin (V37 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V34))(V6))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V35, V6))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V43 = ('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V36, V6))), case V43 of {'Idris.Prelude.Types.Left', E22} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IData"/utf8>>)), [V39 | [V42 | [V45 | []]]], V6)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16, E17)); {'Idris.TTImp.TTImp.IDef', E24, E25, E26} -> (fun (V46, V47, V48) -> begin (V49 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V46))(V6))), case V49 of {'Idris.Prelude.Types.Left', E27} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V51) -> begin (V52 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V47, V6))), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V62 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('dn--un--reflect_Reflect_ImpClause'(V55, V56, V57, V58, V59, V60, V61)) end end end end end end end, V0, V1, V2, V3, V4, V48, V6))), case V62 of {'Idris.Prelude.Types.Left', E31} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDef"/utf8>>)), [V51 | [V54 | [V64 | []]]], V6)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26)); {'Idris.TTImp.TTImp.IParameters', E33, E34, E35} -> (fun (V65, V66, V67) -> begin (V68 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V65))(V6))), case V68 of {'Idris.Prelude.Types.Left', E36} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V70) -> begin (V124 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V78, V79, V80, V81, V82, V83, V84)) end end end end end end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V92, V93, V94, V95, V96, V97)) end end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('dn--un--reflect_Reflect_RawImp'(V112, V113, V114, V115, V116, V117)) end end end end end end, V105, V106, V107, V108, V109, V110, V111)) end end end end end end end, fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('dn--un--reflect_Reflect_RawImp'(V118, V119, V120, V121, V122, V123)) end end end end end end}, V98, V99, V100, V101, V102, V103, V104)) end end end end end end end}, V85, V86, V87, V88, V89, V90, V91)) end end end end end end end}, V71, V72, V73, V74, V75, V76, V77)) end end end end end end end, V0, V1, V2, V3, V4, V66, V6))), case V124 of {'Idris.Prelude.Types.Left', E38} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V126) -> begin (V134 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('dn--un--reflect_Reflect_ImpDecl'(V127, V128, V129, V130, V131, V132, V133)) end end end end end end end, V0, V1, V2, V3, V4, V67, V6))), case V134 of {'Idris.Prelude.Types.Left', E40} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V136) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IParameters"/utf8>>)), [V70 | [V126 | [V136 | []]]], V6)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33, E34, E35)); {'Idris.TTImp.TTImp.IRecord', E42, E43, E44, E45} -> (fun (V137, V138, V139, V140) -> begin (V141 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V137))(V6))), case V141 of {'Idris.Prelude.Types.Left', E46} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V143) -> begin (V144 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V139, V6))), case V144 of {'Idris.Prelude.Types.Left', E48} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V146) -> begin (V147 = ('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V140, V6))), case V147 of {'Idris.Prelude.Types.Left', E50} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V149) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRecord"/utf8>>)), [V143 | [V146 | [V149 | []]]], V6)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42, E43, E44, E45)); {'Idris.TTImp.TTImp.INamespace', E52, E53, E54} -> (fun (V150, V151, V152) -> begin (V153 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V150))(V6))), case V153 of {'Idris.Prelude.Types.Left', E55} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V155) -> begin (V156 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Namespace'(V0, V1, V2, V3, V4, V151, V6))), case V156 of {'Idris.Prelude.Types.Left', E57} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V158) -> begin (V166 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('dn--un--reflect_Reflect_ImpDecl'(V159, V160, V161, V162, V163, V164, V165)) end end end end end end end, V0, V1, V2, V3, V4, V152, V6))), case V166 of {'Idris.Prelude.Types.Left', E59} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V168) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamespace"/utf8>>)), [V155 | [V158 | [V168 | []]]], V6)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52, E53, E54)); {'Idris.TTImp.TTImp.ITransform', E61, E62, E63, E64} -> (fun (V169, V170, V171, V172) -> begin (V173 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V169))(V6))), case V173 of {'Idris.Prelude.Types.Left', E65} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V175) -> begin (V176 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V170, V6))), case V176 of {'Idris.Prelude.Types.Left', E67} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V178) -> begin (V179 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V171))(V6))), case V179 of {'Idris.Prelude.Types.Left', E69} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V181) -> begin (V182 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V172))(V6))), case V182 of {'Idris.Prelude.Types.Left', E71} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V184) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ITransform"/utf8>>)), [V175 | [V178 | [V181 | [V184 | []]]]], V6)) end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61, E62, E63, E64)); {'Idris.TTImp.TTImp.IRunElabDecl', E73, E74} -> (fun (V185, V186) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %runElab"/utf8>>}, V6)) end(E73, E74)); {'Idris.TTImp.TTImp.IPragma', E75, E76} -> (fun (V187, V188) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a pragma"/utf8>>}, V6)) end(E75, E76)); {'Idris.TTImp.TTImp.ILog', E77} -> (fun (V189) -> begin (V217 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V197) -> fun (V198) -> fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V204, V205, V206, V207, V208, V209, V210)) end end end end end end end, V197, V198, V199, V200, V201, V202, V203)) end end end end end end end, fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V211, V212, V213, V214, V215, V216)) end end end end end end}, V190, V191, V192, V193, V194, V195, V196)) end end end end end end end, V0, V1, V2, V3, V4, V189, V6))), case V217 of {'Idris.Prelude.Types.Left', E78} -> (fun (V218) -> {'Idris.Prelude.Types.Left', V218} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V219) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILog"/utf8>>)), [V219 | []], V6)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); {'Idris.TTImp.TTImp.IBuiltin', E80, E81, E82} -> (fun (V220, V221, V222) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %builtin"/utf8>>}, V6)) end(E80, E81, E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V8, V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V9))(V6))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V28 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('dn--un--reflect_Reflect_DataOpt'(V21, V22, V23, V24, V25, V26, V27)) end end end end end end end, V0, V1, V2, V3, V4, V10, V6))), case V28 of {'Idris.Prelude.Types.Left', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V30) -> begin (V38 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('dn--un--reflect_Reflect_ImpTy'(V31, V32, V33, V34, V35, V36, V37)) end end end end end end end, V0, V1, V2, V3, V4, V11, V6))), case V38 of {'Idris.Prelude.Types.Left', E13} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkData"/utf8>>)), [V14 | [V17 | [V20 | [V30 | [V40 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E15, E16, E17} -> (fun (V41, V42, V43) -> begin (V44 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V41))(V6))), case V44 of {'Idris.Prelude.Types.Left', E18} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V42, V6))), case V47 of {'Idris.Prelude.Types.Left', E20} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V49) -> begin (V50 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V43))(V6))), case V50 of {'Idris.Prelude.Types.Left', E22} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkLater"/utf8>>)), [V46 | [V49 | [V52 | []]]], V6)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V7, V8, V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V13 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V6))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V9))(V6))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PatClause"/utf8>>)), [V12 | [V15 | [V18 | []]]], V6)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E9, E10, E11, E12, E13, E14} -> (fun (V19, V20, V21, V22, V23, V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V19))(V6))), case V25 of {'Idris.Prelude.Types.Left', E15} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V27) -> begin (V28 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V20))(V6))), case V28 of {'Idris.Prelude.Types.Left', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V30) -> begin (V31 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V21))(V6))), case V31 of {'Idris.Prelude.Types.Left', E19} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V33) -> begin (V41 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V34, V35, V36, V37, V38, V39, V40)) end end end end end end end, V0, V1, V2, V3, V4, V22, V6))), case V41 of {'Idris.Prelude.Types.Left', E21} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V43) -> begin (V51 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('dn--un--reflect_Reflect_ImpClause'(V44, V45, V46, V47, V48, V49, V50)) end end end end end end end, V0, V1, V2, V3, V4, V24, V6))), case V51 of {'Idris.Prelude.Types.Left', E23} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V53) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithClause"/utf8>>)), [V27 | [V30 | [V33 | [V43 | [V53 | []]]]]], V6)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10, E11, E12, E13, E14)); {'Idris.TTImp.TTImp.ImpossibleClause', E25, E26} -> (fun (V54, V55) -> begin (V56 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V54))(V6))), case V56 of {'Idris.Prelude.Types.Left', E27} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V58) -> begin (V59 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V55))(V6))), case V59 of {'Idris.Prelude.Types.Left', E29} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ImpossibleClause"/utf8>>)), [V58 | [V61 | []]], V6)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V7, V8) -> begin (V16 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V9, V10, V11, V12, V13, V14, V15)) end end end end end end end, V0, V1, V2, V3, V4, V7, V6))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> begin (V19 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V6))), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetField"/utf8>>)), [V18 | [V21 | []]], V6)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E6, E7} -> (fun (V22, V23) -> begin (V31 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V24, V25, V26, V27, V28, V29, V30)) end end end end end end end, V0, V1, V2, V3, V4, V22, V6))), case V31 of {'Idris.Prelude.Types.Left', E8} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V33) -> begin (V34 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V23))(V6))), case V34 of {'Idris.Prelude.Types.Left', E10} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V36) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetFieldApp"/utf8>>)), [V33 | [V36 | []]], V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V8))(V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V24 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('dn--un--reflect_Reflect_RawImp'(V18, V19, V20, V21, V22, V23)) end end end end end end, V0, V1, V2, V3, V4, V9, V6))), case V24 of {'Idris.Prelude.Types.Left', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V10, V6))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V30 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V11))(V6))), case V30 of {'Idris.Prelude.Types.Left', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkIField"/utf8>>)), [V14 | [V17 | [V26 | [V29 | [V32 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Inline"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TCInline"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V7, V6))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Hint"/utf8>>)), [V10 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E3} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V11, V6))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"GlobalHint"/utf8>>)), [V14 | []], V6)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ExternFn"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.ForeignFn', E6} -> (fun (V15) -> begin (V22 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('dn--un--reflect_Reflect_RawImp'(V16, V17, V18, V19, V20, V21)) end end end end end end, V0, V1, V2, V3, V4, V15, V6))), case V22 of {'Idris.Prelude.Types.Left', E7} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V24) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ForeignFn"/utf8>>)), [V24 | []], V6)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Invertible"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.Totality', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_TotalReq'(V0, V1, V2, V3, V4, V25, V6))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Totality"/utf8>>)), [V28 | []], V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Macro"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.SpecArgs', E12} -> (fun (V29) -> begin (V37 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V30, V31, V32, V33, V34, V35, V36)) end end end end end end end, V0, V1, V2, V3, V4, V29, V6))), case V37 of {'Idris.Prelude.Types.Left', E13} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V39) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SpecArgs"/utf8>>)), [V39 | []], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NonLinearVar"/utf8>>)), V6)); 1 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"VarApplied"/utf8>>)), V6)); 2 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NotConstructor"/utf8>>)), V6)); 3 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ErasedArg"/utf8>>)), V6)); 4 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UserDotted"/utf8>>)), V6)); 5 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnknownDot"/utf8>>)), V6)); 6 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnderAppliedCon"/utf8>>)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.SearchBy', E0} -> (fun (V7) -> begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V8, V9, V10, V11, V12, V13, V14)) end end end end end end end, V0, V1, V2, V3, V4, V7, V6))), case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SearchBy"/utf8>>)), [V17 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoHints"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueSearch"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.External'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"External"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoNewtype"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.NoEnum'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoEnum"/utf8>>)), V6)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.PI', E0} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V7))(V6))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PI"/utf8>>)), [V10 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.PATTERN'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PATTERN"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.NONE'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NONE"/utf8>>)), V6)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.FirstSuccess'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"FirstSuccess"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.Unique'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Unique"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.UniqueDefault', E0} -> (fun (V7) -> begin (V8 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V7))(V6))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueDefault"/utf8>>)), [V10 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Reify_UseSide'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_RawImp'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpTy'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpRecord'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpDecl'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpData'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpData'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpClause'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_IFieldUpdate'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_IField'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_IField'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_FnOpt'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_DotReason'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_DataOpt'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_BindMode'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_AltType'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_AltType'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reflect_UseSide'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpData'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_IField'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_DotReason'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_BindMode'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_AltType'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5, V6)).
