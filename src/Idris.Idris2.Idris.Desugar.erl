-module('Idris.Idris2.Idris.Desugar').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'with--trimMultiline,dropLastNL-6868'/5,
  'with--trimMultiline,trimLast-6741'/6,
  'case--case block in case block in desugarDecl-10555'/19,
  'case--case block in desugarDecl-10511'/17,
  'case--case block in case block in case block in desugarDecl-10045'/27,
  'case--case block in case block in desugarDecl-9896'/24,
  'case--desugarDecl-9724'/20,
  'case--trimMultiline,trimLeft-6995'/9,
  'case--trimMultiline,trimLeft-6910'/8,
  'case--expandString,mergeStrLit-6530'/11,
  'case--toTokList-3758'/9,
  'nested--11454-6737--in--un--trimLeft'/5,
  'nested--11454-6735--in--un--trimLast'/5,
  'nested--11443-6454--in--un--toRawImp'/10,
  'nested--11394-5987--in--un--toPure'/11,
  'nested--11533-8671--in--un--toIDef'/10,
  'nested--11533-9173--in--un--pairToCons'/15,
  'nested--11443-6456--in--un--notEmpty'/10,
  'nested--11533-10342--in--un--mkConName'/13,
  'nested--11443-6455--in--un--mergeStrLit'/10,
  'nested--11533-10343--in--un--mapDesugarPiInfo'/15,
  'nested--11533-9619--in--un--isNamed'/17,
  'nested--11394-5986--in--un--guard'/11,
  'nested--11533-10341--in--un--fname'/13,
  'nested--11533-9174--in--un--expandConstraint'/15,
  'nested--11454-6736--in--un--dropLastNL'/4,
  'nested--11443-6457--in--un--concatStr'/11,
  'nested--10978-3741--in--un--backtickPrec'/6,
  'dn--un--__Impl_Eq_Side'/0,
  'dn--un--==_Eq_Side'/2,
  'dn--un--/=_Eq_Side'/2,
  'un--trimMultiline'/4,
  'un--toTokList'/3,
  'un--seqFun'/4,
  'un--pairname'/0,
  'un--mkpairname'/0,
  'un--mkdpairname'/0,
  'un--mkPrec'/2,
  'un--initBangs'/0,
  'un--idiomise'/2,
  'un--getClauseFn'/1,
  'un--extendSyn'/3,
  'un--expandString'/10,
  'un--expandSnocList'/10,
  'un--expandList'/10,
  'un--expandDo'/9,
  'un--dpairname'/0,
  'un--desugarUpdate'/9,
  'un--desugarType'/7,
  'un--desugarTree'/8,
  'un--desugarLHS'/8,
  'un--desugarFnOpt'/7,
  'un--desugarField'/8,
  'un--desugarDecl'/6,
  'un--desugarData'/8,
  'un--desugarClause'/8,
  'un--desugarB'/8,
  'un--desugar'/8,
  'un--bindFun'/4,
  'un--bindBangs'/2,
  'un--addNS'/2,
  'un--addFromString'/4
]).
'with--trimMultiline,dropLastNL-6868'(V0, V1, V2, V3, V4) -> case V3 of [] -> case V4 of {'Idris.Data.List.Views.Empty'} -> (fun () -> [] end()); _ -> case V4 of {'Idris.Data.List.Views.Snoc', E5, E6, E7} -> (fun (V5, V6, V7) -> case V5 of {'Idris.Idris.Syntax.StrLiteral', E8, E9} -> (fun (V8, V9) -> ('Idris.Idris2.Data.List':'un--snoc'(V6, {'Idris.Idris.Syntax.StrLiteral', V8, ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Data.String':'un--break'(fun (V10) -> ('Idris.Idris2.Prelude.Types':'un--isNL'(V10)) end, V9))))})) end(E8, E9)); _ -> V3 end end(E5, E6, E7)); _ -> V3 end end; _ -> case V4 of {'Idris.Data.List.Views.Snoc', E0, E1, E2} -> (fun (V11, V12, V13) -> case V11 of {'Idris.Idris.Syntax.StrLiteral', E3, E4} -> (fun (V14, V15) -> ('Idris.Idris2.Data.List':'un--snoc'(V12, {'Idris.Idris.Syntax.StrLiteral', V14, ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Data.String':'un--break'(fun (V16) -> ('Idris.Idris2.Prelude.Types':'un--isNL'(V16)) end, V15))))})) end(E3, E4)); _ -> V3 end end(E0, E1, E2)); _ -> V3 end end.
'with--trimMultiline,trimLast-6741'(V0, V1, V2, V3, V4, V5) -> case V3 of [] -> case V4 of {'Idris.Data.List.Views.Empty'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V5, <<"Expected line wrap"/utf8>>}, V6)) end end()); _ -> case V4 of {'Idris.Data.List.Views.Snoc', E7, E8, E9} -> (fun (V7, V8, V9) -> case V7 of [] -> fun (V10) -> {'Idris.Prelude.Types.Right', V0} end; [E10 | E11] -> (fun (V11, V12) -> case V11 of {'Idris.Idris.Syntax.StrLiteral', E12, E13} -> (fun (V13, V14) -> case V12 of [] -> fun (V15) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V23, V24, V25)) end end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V27)) end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V31, V32, V33, V34)) end end end end end end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V36)) end end, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V39, V40, V41)) end end end end end}, fun (V42) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V42)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V14)))) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V13, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V15)); 0 -> {'Idris.Prelude.Types.Right', V8}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V44 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V43) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V43)) end, V7))))), fun (V45) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V44, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V45)) end end end end(E12, E13)); _ -> begin (V47 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V46) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V46)) end, V7))))), fun (V48) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V47, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V48)) end end end end(E10, E11)); _ -> begin (V50 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V49) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V49)) end, V7))))), fun (V51) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V50, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V51)) end end end end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V4 of {'Idris.Data.List.Views.Snoc', E0, E1, E2} -> (fun (V52, V53, V54) -> case V52 of [] -> fun (V55) -> {'Idris.Prelude.Types.Right', V0} end; [E3 | E4] -> (fun (V56, V57) -> case V56 of {'Idris.Idris.Syntax.StrLiteral', E5, E6} -> (fun (V58, V59) -> case V57 of [] -> fun (V60) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V63, V64, V65)) end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V68, V69, V70)) end end end end end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V72)) end end, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V76, V77, V78, V79)) end end end end end end end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V81)) end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V84, V85, V86)) end end end end end}, fun (V87) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V87)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V59)))) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V58, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V60)); 0 -> {'Idris.Prelude.Types.Right', V53}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V89 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V88) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V88)) end, V52))))), fun (V90) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V89, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V90)) end end end end(E5, E6)); _ -> begin (V92 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V91) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V91)) end, V52))))), fun (V93) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V92, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V93)) end end end end(E3, E4)); _ -> begin (V95 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V94) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V94)) end, V52))))), fun (V96) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V95, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V96)) end end end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in case block in desugarDecl-10555'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> begin (V26 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V20, V21) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V24, V25) -> {'Idris.Builtin.MkPair', V20, {'Idris.Builtin.MkPair', V22, {'Idris.Builtin.MkPair', V24, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V17, V25))}}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V12))), begin (V27 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V3))), fun (V28) -> begin (V33 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V29) -> fun (V30) -> ('un--desugarField'(V11, V10, V9, V8, ('Idris.Idris2.Prelude.Types.List':'un--++'(V7, ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V31) -> ('nested--11533-10341--in--un--fname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V31)) end, V0)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V32) -> ('Idris.Idris2.Builtin':'un--fst'(V32)) end, V2)))))), ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V27)), V29, V30)) end end, V0, [], V28))), case V33 of {'Idris.Prelude.Types.Left', E6} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V35) -> begin (V37 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('nested--11533-10342--in--un--mkConName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V3)) end, fun () -> fun (V36) -> V36 end end, V1))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IRecord', V6, {'Idris.Prelude.Types.Just', V27}, V4, {'Idris.TTImp.TTImp.MkImpRecord', V6, V3, V26, V37, V35}} | []]} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'case--case block in desugarDecl-10511'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> begin (V17 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V10, V16))), case V17 of {'Idris.Prelude.Types.Left', E0} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V19) -> begin (V57 = case V19 of 1 -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V22, V23, V24)) end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V35, V36, V37, V38)) end end end end end end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V40)) end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V43, V44, V45)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V46, V47)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V48) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V7, ('Idris.Idris2.Prelude.Types.List':'un--++'(V14, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V49) -> ('Idris.Idris2.Builtin':'un--fst'(V49)) end, V2)))))), [], V48)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V50) -> case V50 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V51, V52) -> case V52 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V53, V54) -> case V54 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V55, V56) -> V56 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V12)))); 0 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), (('case--case block in case block in desugarDecl-10555'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V57, V57))(V16)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in case block in case block in desugarDecl-10045'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> begin (V30 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V27) -> case V27 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V28, V29) -> {'Idris.Builtin.MkPair', V28, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V23, V29))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V19))), fun (V31) -> begin (V67 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end, fun () -> fun (V33) -> fun (V34) -> begin (V36 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> ('un--desugarDecl'(V15, V14, V13, V12, V11, V35)) end, V33, [], V34))), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V46, V47, V48)) end end end end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V50)) end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V54, V55, V56, V57)) end end end end end end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V59)) end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V62, V63, V64)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V65, V66)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V38))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V0))(V31))), case V67 of {'Idris.Prelude.Types.Left', E4} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V69) -> begin (V71 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Idris.Elab.Implementation':'un--mkImplName'(V10, V4, V24)) end, fun () -> fun (V70) -> V70 end end, V2))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [V71 | []], fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Idris.Elab.Implementation':'un--elabImplementation'(V72, V14, V13, V15, V12, V10, V9, V16, V7, V74, V73, V25, V30, V4, V24, ('nested--11533-9619--in--un--isNamed'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V2)), V71, V1, V69)) end end end} | []]} end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in desugarDecl-9896'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> begin (V63 = begin (V24 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V14, V23))), case V24 of {'Idris.Prelude.Types.Left', E0} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V26) -> case V26 of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V27) -> case V27 of {'Idris.Prelude.Types.Left', E2} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V29) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V41)) end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V45, V46, V47, V48)) end end end end end end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V50)) end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V53, V54, V55)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V56, V57)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V29))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V58, V59, [], V60)) end end end, ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V61) -> ('Idris.Idris2.Builtin':'un--snd'(V61)) end, V19)), V21)), fun (V62) -> ('Idris.Idris2.TTImp.Utils':'un--findUniqueBindableNames'(V14, V10, 1, V11, [], V62)) end)), V23)); 0 -> {'Idris.Prelude.Types.Right', []}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V63 of {'Idris.Prelude.Types.Left', E4} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V65) -> begin (V67 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V66) -> ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V65, V66)) end, V21))), begin (V73 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V68) -> case V68 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V69, V70) -> case V70 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V71, V72) -> {'Idris.Builtin.MkPair', V69, {'Idris.Builtin.MkPair', V71, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V65, V72))}} end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V17))), (('case--case block in case block in case block in desugarDecl-10045'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V65, V67, V73, V73))(V23)) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--desugarDecl-9724'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> begin (V27 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V20) -> fun (V21) -> case V20 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V22, V23) -> begin (V24 = ('un--desugar'(V15, V14, V12, V13, 1, V11, V23, V21))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V22, V26}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5, [], V19))), case V27 of {'Idris.Prelude.Types.Left', E4} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V29) -> begin (V32 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V30) -> fun (V31) -> ('un--desugar'(V15, V14, V12, V13, 1, V11, V30, V31)) end end, V3, [], V19))), case V32 of {'Idris.Prelude.Types.Left', E6} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V34) -> ('case--case block in case block in desugarDecl-9896'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V29, V29, V34, V34, V19)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--trimMultiline,trimLeft-6995'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V22)) end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V26, V27, V28, V29)) end end end end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V34, V35, V36)) end end end end end}, fun (V37) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V37)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V9)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un--<_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V9)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V4, <<"Line is less indented than the closing delimiter"/utf8>>}, V8)); 0 -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.StrLiteral', V4, ('Idris.Idris2.Prelude.Types':'un--fastPack'(V10))} | V5]}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--trimMultiline,trimLeft-6910'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V21)) end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V25, V26, V27, V28)) end end end end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V30)) end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V33, V34, V35)) end end end end end}, fun (V36) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V36)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V8)) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V4, <<"Line is less indented than the closing delimiter"/utf8>>}, V7)); 0 -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.StrLiteral', V4, ('Idris.Idris2.Prelude.Types':'un--fastPack'(V9))} | []]}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--expandString,mergeStrLit-6530'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of [] -> case V12 of [] -> []; [E2 | E3] -> (fun (V13, V14) -> [V13 | ('nested--11443-6455--in--un--mergeStrLit'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V14))] end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E4 | E5] -> (fun (V15, V16) -> [{'Idris.Idris.Syntax.StrLiteral', ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Data.List':'un--head'(V11)))), ('Idris.Idris2.Prelude.Types':'un--fastConcat'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V19, V20)) end end end end, fun (V21) -> ('Idris.Idris2.Builtin':'un--snd'(V21)) end, V11))))} | ('nested--11443-6455--in--un--mergeStrLit'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12))] end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toTokList-3758'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V9) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V21)) end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V25, V26, V27, V28)) end end end end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V30)) end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V33, V34, V35)) end end end end end}, fun (V36) -> ('Idris.Idris2.Parser.Lexer.Source':'un--isOpChar'(V36)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V7)))) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unknown operator \x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V7, <<"\x{27}"/utf8>>))))}, V9)); 0 -> begin (V37 = ('un--toTokList'(V5, V0, V9))), case V37 of {'Idris.Prelude.Types.Left', E0} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V39) -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Expr', V1} | [{'Idris.Libraries.Utils.Shunting.Op', V4, V3, V2, ('nested--10978-3741--in--un--backtickPrec'(V0, V1, V2, V3, V4, V5))} | V39]]} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V40) -> fun (V41) -> case V40 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V42, V43) -> case V42 of 3 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V7, <<"\x{27} is a prefix operator"/utf8>>))))}, V41)); _ -> begin (V44 = ('un--toTokList'(V5, V0, V41))), case V44 of {'Idris.Prelude.Types.Left', E5} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V46) -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Expr', V1} | [{'Idris.Libraries.Utils.Shunting.Op', V4, V3, V2, ('un--mkPrec'(V42, V43))} | V46]]} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11454-6737--in--un--trimLeft'(V0, V1, V2, V3, V4) -> case V4 of [] -> fun (V5) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Idris.Syntax.StrLiteral', E2, E3} -> (fun (V8, V9) -> case V7 of [] -> fun (V10) -> ('case--trimMultiline,trimLeft-6910'(V0, V1, V2, V9, V8, V3, ('Idris.Idris2.Data.List':'un--splitAt'(V3, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V9)))), V10)) end; _ -> fun (V11) -> ('case--trimMultiline,trimLeft-6995'(V0, V1, V2, V9, V8, V7, V3, ('Idris.Idris2.Data.List':'un--splitAt'(V3, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V9)))), V11)) end end end(E2, E3)); _ -> fun (V12) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V2, <<"Line is less indented than the closing delimiter"/utf8>>}, V12)) end end end(E0, E1)); _ -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V2, <<"Line is less indented than the closing delimiter"/utf8>>}, V13)) end end.
'nested--11454-6735--in--un--trimLast'(V0, V1, V2, V3, V4) -> ('with--trimMultiline,trimLast-6741'(V4, V1, V3, V4, ('Idris.Idris2.Data.List.Views':'un--snocList'(V4)), V3)).
'nested--11443-6454--in--un--toRawImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Idris.Syntax.StrLiteral', E0, E1} -> (fun (V10, V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V10, {'Idris.Core.TT.Str', V11}}} end end(E0, E1)); {'Idris.Idris.Syntax.StrInterp', E2, E3} -> (fun (V13, V14) -> ('un--desugarB'(V8, V7, V6, V5, V4, V3, V2, V14)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11394-5987--in--un--toPure'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> {'Idris.Idris.Syntax.DoExp', V2, {'Idris.Idris.Syntax.PApp', V2, {'Idris.Idris.Syntax.PRef', V2, {'Idris.Core.Name.UN', <<"pure"/utf8>>}}, V10}}.
'nested--11533-8671--in--un--toIDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V10, V11, V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V10, V7, [{'Idris.TTImp.TTImp.PatClause', V10, V11, V12} | []]}} end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E3, E4, E5, E6, E7, E8} -> (fun (V13, V14, V15, V16, V17, V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V13, V7, [{'Idris.TTImp.TTImp.WithClause', V13, V14, V15, V16, V17, V18} | []]}} end(E3, E4, E5, E6, E7, E8)); {'Idris.TTImp.TTImp.ImpossibleClause', E9, E10} -> (fun (V19, V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V19, V7, [{'Idris.TTImp.TTImp.ImpossibleClause', V19, V20} | []]}} end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11533-9173--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Idris.Syntax.PPair', E0, E1, E2} -> (fun (V15, V16, V17) -> ('Idris.Idris2.Prelude.Types.List':'un--++'(('nested--11533-9173--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16)), ('nested--11533-9173--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17)))) end(E0, E1, E2)); _ -> [V14 | []] end.
'nested--11443-6456--in--un--notEmpty'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Idris.Syntax.StrLiteral', E0, E1} -> (fun (V10, V11) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V11, <<""/utf8>>)) end(E0, E1)); {'Idris.Idris.Syntax.StrInterp', E2, E3} -> (fun (V12, V13) -> 1 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11533-10342--in--un--mkConName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E2} -> (fun (V15) -> {'Idris.Core.Name.NS', V13, {'Idris.Core.Name.DN', V15, {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__mk"/utf8>>, V15)), 0}}} end(E2)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)), {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__mk"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)))), 0}} end end(E0, E1)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)), {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__mk"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)))), 0}} end.
'nested--11443-6455--in--un--mergeStrLit'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('case--expandString,mergeStrLit-6530'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, ('Idris.Idris2.Data.List':'un--spanBy'(fun (V10) -> case V10 of {'Idris.Idris.Syntax.StrLiteral', E0, E1} -> (fun (V11, V12) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V11, V12}} end(E0, E1)); _ -> {'Idris.Prelude.Types.Nothing'} end end, V9)))).
'nested--11533-10343--in--un--mapDesugarPiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V15) -> fun (V16) -> ('un--desugar'(V11, V10, V8, V9, 1, V12, V15, V16)) end end, V13, V14)).
'nested--11533-9619--in--un--isNamed'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> 0 end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V17) -> 1 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11394-5986--in--un--guard'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Idris.Syntax.DoExp', E0, E1} -> (fun (V11, V12) -> {'Idris.Idris.Syntax.DoExp', V11, {'Idris.Idris.Syntax.PApp', V11, {'Idris.Idris.Syntax.PRef', V11, {'Idris.Core.Name.UN', <<"guard"/utf8>>}}, V12}} end(E0, E1)); _ -> V10 end.
'nested--11533-10341--in--un--fname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Idris.Syntax.MkField', E0, E1, E2, E3, E4, E5} -> (fun (V13, V14, V15, V16, V17, V18) -> V17 end(E0, E1, E2, E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11533-9174--in--un--expandConstraint'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> case V15 of {'Idris.Prelude.Types.Just', E2} -> (fun (V17) -> [{'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', V17}, V16} | []] end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V18) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, V18} end, ('nested--11533-9173--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16)))) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11454-6736--in--un--dropLastNL'(V0, V1, V2, V3) -> ('with--trimMultiline,dropLastNL-6868'(V0, V1, V2, V3, ('Idris.Idris2.Data.List.Views':'un--snocList'(V3)))).
'nested--11443-6457--in--un--concatStr'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> begin (V11 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V9))))), begin (V12 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V10))))), {'Idris.TTImp.TTImp.IApp', V11, {'Idris.TTImp.TTImp.IApp', V12, {'Idris.TTImp.TTImp.IVar', V12, {'Idris.Core.Name.UN', <<"++"/utf8>>}}, V9}, V10} end end.
'nested--10978-3741--in--un--backtickPrec'(V0, V1, V2, V3, V4, V5) -> {'Idris.Libraries.Utils.Shunting.NonAssoc', (1 + 0)}.
'dn--un--__Impl_Eq_Side'() -> {'Idris.Prelude.EqOrd.MkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_Side'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_Side'(V2, V3)) end end}.
'dn--un--==_Eq_Side'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--/=_Eq_Side'(V0, V1) -> case ('dn--un--==_Eq_Side'(V0, V1)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--trimMultiline'(V0, V1, V2, V3) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)))) of 1 -> {'Idris.Prelude.Types.Right', ('nested--11454-6736--in--un--dropLastNL'(V2, V1, V0, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V6, V7, V8)) end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V11, V12, V13)) end end end end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V15)) end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V19, V20, V21, V22)) end end end end end end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V24)) end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V27, V28, V29)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V30, V31)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V2))))}; 0 -> begin (V32 = (('nested--11454-6735--in--un--trimLast'(V2, V1, V0, V0, V2))(V3))), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> begin (V36 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> ('nested--11454-6737--in--un--trimLeft'(V2, V1, V0, V1, V35)) end, V34, [], V3))), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> {'Idris.Prelude.Types.Right', ('nested--11454-6736--in--un--dropLastNL'(V2, V1, V0, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V46, V47, V48)) end end end end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V50)) end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V54, V55, V56, V57)) end end end end end end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V59)) end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V62, V63, V64)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V65, V66)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V38))))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toTokList'(V0, V1, V2) -> case V1 of {'Idris.Idris.Syntax.POp', E0, E1, E2, E3, E4} -> (fun (V3, V4, V5, V6, V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V5))), (('case--toTokList-3758'(V7, V6, V5, V4, V3, V0, V11, V12, ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(V12, case V11 of {'Idris.Idris.Syntax.MkSyntax', E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21) -> V13 end(E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V2)) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.PPrefixOp', E16, E17, E18, E19} -> (fun (V22, V23, V24, V25) -> begin (V27 = begin (V26 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V26} end), case V27 of {'Idris.Prelude.Types.Left', E20} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V29) -> begin (V30 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V24))), case ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(V30, case V29 of {'Idris.Idris.Syntax.MkSyntax', E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V32 end(E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V22, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V30, <<"\x{27} is not a prefix operator"/utf8>>))))}, V2)) end()); {'Idris.Prelude.Types.Just', E22} -> (fun (V40) -> begin (V41 = ('un--toTokList'(V0, V25, V2))), case V41 of {'Idris.Prelude.Types.Left', E23} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V43) -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Op', V22, V23, V24, {'Idris.Libraries.Utils.Shunting.Prefix', V40}} | V43]} end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17, E18, E19)); _ -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Expr', V1} | []]} end.
'un--seqFun'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IVar', V4, ('un--addNS'(V1, {'Idris.Core.Name.UN', <<">>"/utf8>>}))}, V2}, V3} end.
'un--pairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--builtinNS'()), {'Idris.Core.Name.UN', <<"Pair"/utf8>>}}.
'un--mkpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--builtinNS'()), {'Idris.Core.Name.UN', <<"MkPair"/utf8>>}}.
'un--mkdpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--dpairNS'()), {'Idris.Core.Name.UN', <<"MkDPair"/utf8>>}}.
'un--mkPrec'(V0, V1) -> case V0 of 0 -> {'Idris.Libraries.Utils.Shunting.AssocL', V1}; 1 -> {'Idris.Libraries.Utils.Shunting.AssocR', V1}; 2 -> {'Idris.Libraries.Utils.Shunting.NonAssoc', V1}; 3 -> {'Idris.Libraries.Utils.Shunting.Prefix', V1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--initBangs'() -> {'Idris.Idris.Desugar.MkBangData', 0, []}.
'un--idiomise'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.TTImp.TTImp.IAlternative', V2, ('Idris.Idris2.TTImp.TTImp':'un--mapAltType'(fun (V5) -> ('un--idiomise'(V2, V5)) end, V3)), ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V8, V9)) end end end end, fun (V10) -> ('un--idiomise'(V2, V10)) end, V4))} end(E0, E1, E2)); {'Idris.TTImp.TTImp.IApp', E3, E4, E5} -> (fun (V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V14, {'Idris.TTImp.TTImp.IApp', V14, {'Idris.TTImp.TTImp.IVar', V14, {'Idris.Core.Name.UN', <<"<*>"/utf8>>}}, ('un--idiomise'(V11, V12))}, V13} end end(E3, E4, E5)); _ -> begin (V15 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V15, {'Idris.TTImp.TTImp.IVar', V15, {'Idris.Core.Name.UN', <<"pure"/utf8>>}}, V1} end end.
'un--getClauseFn'(V0) -> case V0 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V1, V2) -> fun (V3) -> {'Idris.Prelude.Types.Right', V2} end end(E2, E3)); {'Idris.TTImp.TTImp.IApp', E4, E5, E6} -> (fun (V4, V5, V6) -> ('un--getClauseFn'(V5)) end(E4, E5, E6)); {'Idris.TTImp.TTImp.IAutoApp', E7, E8, E9} -> (fun (V7, V8, V9) -> ('un--getClauseFn'(V8)) end(E7, E8, E9)); {'Idris.TTImp.TTImp.INamedApp', E10, E11, E12, E13} -> (fun (V10, V11, V12, V13) -> ('un--getClauseFn'(V11)) end(E10, E11, E12, E13)); _ -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(case V0 of {'Idris.TTImp.TTImp.Implicit', E0, E1} -> (fun (V15, V16) -> {'Idris.Core.Core.GenericMsg', V15, <<"Invalid name for a declaration"/utf8>>} end(E0, E1)); _ -> {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V0)), <<" is not a function application"/utf8>>))} end, V14)) end end.
'un--extendSyn'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V61 = ('erlang':'put'(V0, case V6 of {'Idris.Idris.Syntax.MkSyntax', E2, E3, E4, E5, E6, E7, E8, E9, E10} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--mergeLeft'(case V1 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V16 end(E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7)), ('Idris.Idris2.Libraries.Data.StringMap':'un--mergeLeft'(case V1 of {'Idris.Idris.Syntax.MkSyntax', E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V26 end(E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8)), ('Idris.Idris2.Libraries.Data.ANameMap':'un--merge'(case V1 of {'Idris.Idris.Syntax.MkSyntax', E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V36 end(E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V9)), V10, ('Idris.Idris2.Libraries.Data.ANameMap':'un--merge'(case V1 of {'Idris.Idris.Syntax.MkSyntax', E38, E39, E40, E41, E42, E43, E44, E45, E46} -> (fun (V43, V44, V45, V46, V47, V48, V49, V50, V51) -> V47 end(E38, E39, E40, E41, E42, E43, E44, E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V11)), V12, ('Idris.Idris2.Prelude.Types.List':'un--++'(case V1 of {'Idris.Idris.Syntax.MkSyntax', E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V58 end(E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V13)), V14, V15} end(E2, E3, E4, E5, E6, E7, E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V61} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expandString'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V12 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V10) -> ('nested--11443-6454--in--un--toRawImp'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V10)) end, ('Idris.Idris2.Data.List':'un--filter'(fun (V11) -> ('nested--11443-6456--in--un--notEmpty'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V11)) end, ('nested--11443-6455--in--un--mergeStrLit'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V8)))), [], V9))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Right', case V14 of [] -> {'Idris.TTImp.TTImp.IPrimVal', V7, {'Idris.Core.TT.Str', <<""/utf8>>}}; [E2 | E3] -> (fun (V15, V16) -> ('Idris.Idris2.Data.List':'un--foldr1'(fun (V17) -> fun (V18) -> ('nested--11443-6457--in--un--concatStr'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V17, V18)) end end, V14)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expandSnocList'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of [] -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V7, {'Idris.Core.Name.UN', <<"Lin"/utf8>>}}}; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V12, V13) -> begin (V14 = ('un--expandSnocList'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V9))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V13))(V9))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V12, {'Idris.Core.Name.UN', <<":<"/utf8>>}}, [V16 | [V19 | []]]))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--expandList'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of [] -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V7, {'Idris.Core.Name.UN', <<"Nil"/utf8>>}}}; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V12, V13) -> begin (V14 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V13))(V9))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('un--expandList'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V9))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V12, {'Idris.Core.Name.UN', <<"::"/utf8>>}}, [V16 | [V19 | []]]))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> fun (V9) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6, <<"Do block cannot be empty"/utf8>>}, V9)) end; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Idris.Syntax.DoExp', E99, E100} -> (fun (V12, V13) -> case V11 of [] -> fun (V14) -> ('un--desugar'(V0, V1, V3, V2, V4, V5, V13, V14)) end; _ -> fun (V15) -> case V11 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Idris.Syntax':'un--getLoc'(V10)), <<"Last statement in do block must be an expression"/utf8>>}, V15)); _ -> case V10 of {'Idris.Idris.Syntax.DoExp', E101, E102} -> (fun (V16, V17) -> begin (V18 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V17, V15))), case V18 of {'Idris.Prelude.Types.Left', E103} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V20) -> begin (V21 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V21 of {'Idris.Prelude.Types.Left', E105} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V23) -> begin (V25 = begin (V24 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V24} end), case V25 of {'Idris.Prelude.Types.Left', E107} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V27) -> {'Idris.Prelude.Types.Right', ('un--seqFun'(V16, V7, V20, V23))} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101, E102)); {'Idris.Idris.Syntax.DoBind', E109, E110, E111, E112} -> (fun (V28, V29, V30, V31) -> begin (V32 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V31, V15))), case V32 of {'Idris.Prelude.Types.Left', E113} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V34) -> begin (V35 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V35 of {'Idris.Prelude.Types.Left', E115} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V37) -> begin (V39 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V29)) of {'Idris.Prelude.Types.Just', E117} -> (fun (V38) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V38, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V30}}} | []], V15)) end(E117)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V39 of {'Idris.Prelude.Types.Left', E118} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V41) -> {'Idris.Prelude.Types.Right', ('un--bindFun'(V28, V7, V34, {'Idris.TTImp.TTImp.ILam', V29, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V30}, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V28)), 0}, V37}))} end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109, E110, E111, E112)); {'Idris.Idris.Syntax.DoBindPat', E120, E121, E122, E123} -> (fun (V42, V43, V44, V45) -> begin (V46 = ('un--desugar'(V0, V1, V3, V2, 0, V5, V43, V15))), case V46 of {'Idris.Prelude.Types.Left', E124} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V48) -> begin (V49 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V48, V15))), case V49 of {'Idris.Prelude.Types.Left', E126} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V51) -> case V51 of {'Idris.Builtin.MkPair', E128, E129} -> (fun (V52, V53) -> begin (V54 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V44, V15))), case V54 of {'Idris.Prelude.Types.Left', E130} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V56) -> begin (V63 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V59) -> case V59 of {'Idris.Prelude.Types.Left', E132} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V61) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V61))} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V62) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V57, V62)) end, V58)) end end, V45, [], V15))), case V63 of {'Idris.Prelude.Types.Left', E134} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V65) -> begin (V66 = ('Idris.Idris2.Prelude.Types.List':'un--++'(V52, V5))), begin (V67 = (('un--expandDo'(V0, V1, V2, V3, V4, V66, V6, V7, V11))(V15))), case V67 of {'Idris.Prelude.Types.Left', E136} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V69) -> begin (V70 = V42), begin (V71 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V42))), {'Idris.Prelude.Types.Right', ('un--bindFun'(V71, V7, V56, {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V71, 0}, {'Idris.TTImp.TTImp.ICase', V71, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V71, 0}, [{'Idris.TTImp.TTImp.PatClause', V70, V53, V69} | V65]}}))} end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128, E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120, E121, E122, E123)); {'Idris.Idris.Syntax.DoLet', E138, E139, E140, E141, E142, E143} -> (fun (V72, V73, V74, V75, V76, V77) -> begin (V78 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V15))), case V78 of {'Idris.Prelude.Types.Left', E144} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V80) -> begin (V81 = (('un--desugarB'(V0, V80, V1, V3, V2, V4, V5, V77))(V15))), case V81 of {'Idris.Prelude.Types.Left', E146} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V83) -> begin (V84 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V76, V15))), case V84 of {'Idris.Prelude.Types.Left', E148} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V86) -> begin (V87 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V87 of {'Idris.Prelude.Types.Left', E150} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V89) -> begin (V91 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V73)) of {'Idris.Prelude.Types.Just', E152} -> (fun (V90) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V90, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V74}}} | []], V15)) end(E152)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V91 of {'Idris.Prelude.Types.Left', E153} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V93) -> begin (V94 = {'Idris.TTImp.TTImp.ILet', V72, ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V73)), V75, V74, V86, V83, V89}), begin (V96 = begin (V95 = ('erlang':'get'(V80))), {'Idris.Prelude.Types.Right', V95} end), case V96 of {'Idris.Prelude.Types.Left', E155} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V98) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V98 of {'Idris.Idris.Desugar.MkBangData', E157, E158} -> (fun (V99, V100) -> V100 end(E157, E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V94))} end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E138, E139, E140, E141, E142, E143)); {'Idris.Idris.Syntax.DoLetPat', E159, E160, E161, E162, E163} -> (fun (V101, V102, V103, V104, V105) -> begin (V106 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V15))), case V106 of {'Idris.Prelude.Types.Left', E164} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V108) -> begin (V109 = ('un--desugar'(V0, V1, V3, V2, 0, V5, V102, V15))), case V109 of {'Idris.Prelude.Types.Left', E166} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V111) -> begin (V112 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V103, V15))), case V112 of {'Idris.Prelude.Types.Left', E168} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V114) -> begin (V115 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V111, V15))), case V115 of {'Idris.Prelude.Types.Left', E170} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V117) -> case V117 of {'Idris.Builtin.MkPair', E172, E173} -> (fun (V118, V119) -> begin (V120 = (('un--desugarB'(V0, V108, V1, V3, V2, V4, V5, V104))(V15))), case V120 of {'Idris.Prelude.Types.Left', E174} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V122) -> begin (V129 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V123) -> fun (V124) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V125) -> case V125 of {'Idris.Prelude.Types.Left', E176} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V127) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V127))} end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V128) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V123, V128)) end, V124)) end end, V105, [], V15))), case V129 of {'Idris.Prelude.Types.Left', E178} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V131) -> begin (V132 = ('Idris.Idris2.Prelude.Types.List':'un--++'(V118, V5))), begin (V133 = (('un--expandDo'(V0, V1, V2, V3, V4, V132, V6, V7, V11))(V15))), case V133 of {'Idris.Prelude.Types.Left', E180} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V135) -> begin (V137 = begin (V136 = ('erlang':'get'(V108))), {'Idris.Prelude.Types.Right', V136} end), case V137 of {'Idris.Prelude.Types.Left', E182} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V139) -> begin (V140 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V101))), {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V139 of {'Idris.Idris.Desugar.MkBangData', E184, E185} -> (fun (V141, V142) -> V142 end(E184, E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.TTImp.TTImp.ICase', V140, V122, V114, [{'Idris.TTImp.TTImp.PatClause', V140, V119, V135} | V131]}))} end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172, E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159, E160, E161, E162, E163)); {'Idris.Idris.Syntax.DoLetLocal', E186, E187} -> (fun (V143, V144) -> begin (V145 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V145 of {'Idris.Prelude.Types.Left', E188} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V147) -> begin (V149 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V148) -> ('un--desugarDecl'(V0, V1, V2, V3, V5, V148)) end, V144, [], V15))), case V149 of {'Idris.Prelude.Types.Left', E190} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V151) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V143, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V154, V155, V156)) end end end end end, fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V159, V160, V161)) end end end end end, fun (V162) -> fun (V163) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V163)) end end, fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V167, V168, V169, V170)) end end end end end end end, fun (V171) -> fun (V172) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V172)) end end, fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V175, V176, V177)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V178) -> fun (V179) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V178, V179)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V151)), V147}} end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E186, E187)); {'Idris.Idris.Syntax.DoRewrite', E192, E193} -> (fun (V180, V181) -> begin (V182 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V182 of {'Idris.Prelude.Types.Left', E194} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V184) -> begin (V185 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V181, V15))), case V185 of {'Idris.Prelude.Types.Left', E196} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E196)); {'Idris.Prelude.Types.Right', E197} -> (fun (V187) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V180, V187, V184}} end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192, E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E99, E100)); _ -> fun (V188) -> case V11 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Idris.Syntax':'un--getLoc'(V10)), <<"Last statement in do block must be an expression"/utf8>>}, V188)); _ -> case V10 of {'Idris.Idris.Syntax.DoExp', E2, E3} -> (fun (V189, V190) -> begin (V191 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V190, V188))), case V191 of {'Idris.Prelude.Types.Left', E4} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V193) -> begin (V194 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V188))), case V194 of {'Idris.Prelude.Types.Left', E6} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V196) -> begin (V198 = begin (V197 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V197} end), case V198 of {'Idris.Prelude.Types.Left', E8} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V200) -> {'Idris.Prelude.Types.Right', ('un--seqFun'(V189, V7, V193, V196))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); {'Idris.Idris.Syntax.DoBind', E10, E11, E12, E13} -> (fun (V201, V202, V203, V204) -> begin (V205 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V204, V188))), case V205 of {'Idris.Prelude.Types.Left', E14} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V207) -> begin (V208 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V188))), case V208 of {'Idris.Prelude.Types.Left', E16} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V210) -> begin (V212 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V202)) of {'Idris.Prelude.Types.Just', E18} -> (fun (V211) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V211, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V203}}} | []], V188)) end(E18)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V212 of {'Idris.Prelude.Types.Left', E19} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V214) -> {'Idris.Prelude.Types.Right', ('un--bindFun'(V201, V7, V207, {'Idris.TTImp.TTImp.ILam', V202, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V203}, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V201)), 0}, V210}))} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11, E12, E13)); {'Idris.Idris.Syntax.DoBindPat', E21, E22, E23, E24} -> (fun (V215, V216, V217, V218) -> begin (V219 = ('un--desugar'(V0, V1, V3, V2, 0, V5, V216, V188))), case V219 of {'Idris.Prelude.Types.Left', E25} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V221) -> begin (V222 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V221, V188))), case V222 of {'Idris.Prelude.Types.Left', E27} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V224) -> case V224 of {'Idris.Builtin.MkPair', E29, E30} -> (fun (V225, V226) -> begin (V227 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V217, V188))), case V227 of {'Idris.Prelude.Types.Left', E31} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V229) -> begin (V236 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V230) -> fun (V231) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V232) -> case V232 of {'Idris.Prelude.Types.Left', E33} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V234) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V234))} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V235) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V230, V235)) end, V231)) end end, V218, [], V188))), case V236 of {'Idris.Prelude.Types.Left', E35} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V238) -> begin (V239 = ('Idris.Idris2.Prelude.Types.List':'un--++'(V225, V5))), begin (V240 = (('un--expandDo'(V0, V1, V2, V3, V4, V239, V6, V7, V11))(V188))), case V240 of {'Idris.Prelude.Types.Left', E37} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V242) -> begin (V243 = V215), begin (V244 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V215))), {'Idris.Prelude.Types.Right', ('un--bindFun'(V244, V7, V229, {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V244, 0}, {'Idris.TTImp.TTImp.ICase', V244, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V244, 0}, [{'Idris.TTImp.TTImp.PatClause', V243, V226, V242} | V238]}}))} end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21, E22, E23, E24)); {'Idris.Idris.Syntax.DoLet', E39, E40, E41, E42, E43, E44} -> (fun (V245, V246, V247, V248, V249, V250) -> begin (V251 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V188))), case V251 of {'Idris.Prelude.Types.Left', E45} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V253) -> begin (V254 = (('un--desugarB'(V0, V253, V1, V3, V2, V4, V5, V250))(V188))), case V254 of {'Idris.Prelude.Types.Left', E47} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V256) -> begin (V257 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V249, V188))), case V257 of {'Idris.Prelude.Types.Left', E49} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V259) -> begin (V260 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V188))), case V260 of {'Idris.Prelude.Types.Left', E51} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V262) -> begin (V264 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V246)) of {'Idris.Prelude.Types.Just', E53} -> (fun (V263) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V263, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V247}}} | []], V188)) end(E53)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V264 of {'Idris.Prelude.Types.Left', E54} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V266) -> begin (V267 = {'Idris.TTImp.TTImp.ILet', V245, ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V246)), V248, V247, V259, V256, V262}), begin (V269 = begin (V268 = ('erlang':'get'(V253))), {'Idris.Prelude.Types.Right', V268} end), case V269 of {'Idris.Prelude.Types.Left', E56} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V271) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V271 of {'Idris.Idris.Desugar.MkBangData', E58, E59} -> (fun (V272, V273) -> V273 end(E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V267))} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39, E40, E41, E42, E43, E44)); {'Idris.Idris.Syntax.DoLetPat', E60, E61, E62, E63, E64} -> (fun (V274, V275, V276, V277, V278) -> begin (V279 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V188))), case V279 of {'Idris.Prelude.Types.Left', E65} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V281) -> begin (V282 = ('un--desugar'(V0, V1, V3, V2, 0, V5, V275, V188))), case V282 of {'Idris.Prelude.Types.Left', E67} -> (fun (V283) -> {'Idris.Prelude.Types.Left', V283} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V284) -> begin (V285 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V276, V188))), case V285 of {'Idris.Prelude.Types.Left', E69} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V287) -> begin (V288 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V284, V188))), case V288 of {'Idris.Prelude.Types.Left', E71} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V290) -> case V290 of {'Idris.Builtin.MkPair', E73, E74} -> (fun (V291, V292) -> begin (V293 = (('un--desugarB'(V0, V281, V1, V3, V2, V4, V5, V277))(V188))), case V293 of {'Idris.Prelude.Types.Left', E75} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V295) -> begin (V302 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V296) -> fun (V297) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V298) -> case V298 of {'Idris.Prelude.Types.Left', E77} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V300) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V300))} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V301) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V296, V301)) end, V297)) end end, V278, [], V188))), case V302 of {'Idris.Prelude.Types.Left', E79} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V304) -> begin (V305 = ('Idris.Idris2.Prelude.Types.List':'un--++'(V291, V5))), begin (V306 = (('un--expandDo'(V0, V1, V2, V3, V4, V305, V6, V7, V11))(V188))), case V306 of {'Idris.Prelude.Types.Left', E81} -> (fun (V307) -> {'Idris.Prelude.Types.Left', V307} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V308) -> begin (V310 = begin (V309 = ('erlang':'get'(V281))), {'Idris.Prelude.Types.Right', V309} end), case V310 of {'Idris.Prelude.Types.Left', E83} -> (fun (V311) -> {'Idris.Prelude.Types.Left', V311} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V312) -> begin (V313 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V274))), {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V312 of {'Idris.Idris.Desugar.MkBangData', E85, E86} -> (fun (V314, V315) -> V315 end(E85, E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.TTImp.TTImp.ICase', V313, V295, V287, [{'Idris.TTImp.TTImp.PatClause', V313, V292, V308} | V304]}))} end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60, E61, E62, E63, E64)); {'Idris.Idris.Syntax.DoLetLocal', E87, E88} -> (fun (V316, V317) -> begin (V318 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V188))), case V318 of {'Idris.Prelude.Types.Left', E89} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V320) -> begin (V322 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V321) -> ('un--desugarDecl'(V0, V1, V2, V3, V5, V321)) end, V317, [], V188))), case V322 of {'Idris.Prelude.Types.Left', E91} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V324) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V316, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V327, V328, V329)) end end end end end, fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V332, V333, V334)) end end end end end, fun (V335) -> fun (V336) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V336)) end end, fun (V337) -> fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> fun (V343) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V340, V341, V342, V343)) end end end end end end end, fun (V344) -> fun (V345) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V345)) end end, fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> fun (V350) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V348, V349, V350)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V351) -> fun (V352) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V351, V352)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V324)), V320}} end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87, E88)); {'Idris.Idris.Syntax.DoRewrite', E93, E94} -> (fun (V353, V354) -> begin (V355 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V188))), case V355 of {'Idris.Prelude.Types.Left', E95} -> (fun (V356) -> {'Idris.Prelude.Types.Left', V356} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V357) -> begin (V358 = ('un--desugar'(V0, V1, V3, V2, V4, V5, V354, V188))), case V358 of {'Idris.Prelude.Types.Left', E97} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V360) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V353, V360, V357}} end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93, E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--dpairNS'()), {'Idris.Core.Name.UN', <<"DPair"/utf8>>}}.
'un--desugarUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Idris.Syntax.PSetField', E0, E1} -> (fun (V9, V10) -> begin (V11 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V10))(V8))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V9, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.Idris.Syntax.PSetFieldApp', E4, E5} -> (fun (V14, V15) -> begin (V16 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V15))(V8))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V14, V18}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarType'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.Syntax.MkPTy', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V9, V10, V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> begin (V19 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V11, V6))), case V19 of {'Idris.Prelude.Types.Left', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V21) -> begin (V31 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V7, case V18 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V22, V23, V24, V25, V26, V27, V28, V29, V30) -> V29 end(E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V21, V6))), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V7, V8, V9, V33}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Libraries.Utils.Shunting.Infix', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> fun (V13) -> case V10 of {'Idris.Core.Name.UN', E9} -> (fun (V14) -> case V14 of <<"="/utf8>> -> begin (V15 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V13))), case V15 of {'Idris.Prelude.Types.Left', E14} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V17) -> begin (V18 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V13))), case V18 of {'Idris.Prelude.Types.Left', E16} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V8, {'Idris.TTImp.TTImp.FirstSuccess'}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V9, {'Idris.Core.Name.UN', <<"==="/utf8>>}}, [V17 | [V20 | []]])) | [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V9, {'Idris.Core.Name.UN', <<"~=~"/utf8>>}}, [V17 | [V20 | []]])) | []]]}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; <<"$"/utf8>> -> begin (V21 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V13))), case V21 of {'Idris.Prelude.Types.Left', E18} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V23) -> begin (V24 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V13))), case V24 of {'Idris.Prelude.Types.Left', E20} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, V23, V26}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V27 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V13))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V13))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V9, V10}, V29}, V32}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); _ -> begin (V33 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V13))), case V33 of {'Idris.Prelude.Types.Left', E5} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V35) -> begin (V36 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V13))), case V36 of {'Idris.Prelude.Types.Left', E7} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V9, V10}, V35}, V38}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1, E2, E3, E4)); {'Idris.Libraries.Utils.Shunting.Pre', E22, E23, E24, E25} -> (fun (V39, V40, V41, V42) -> case V41 of {'Idris.Core.Name.UN', E28} -> (fun (V43) -> case V43 of <<"-"/utf8>> -> case V42 of {'Idris.Libraries.Utils.Shunting.Leaf', E33} -> (fun (V44) -> case V44 of {'Idris.Idris.Syntax.PPrimVal', E36, E37} -> (fun (V45, V46) -> begin (V47 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.FC.EmptyFC'} end, ('Idris.Idris2.Core.FC':'un--mergeFC'(V39, V45))))), begin (V49 = fun (V48) -> ('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Libraries.Utils.Shunting.Leaf', {'Idris.Idris.Syntax.PPrimVal', V47, V48}})) end), case V46 of {'Idris.Core.TT.I', E40} -> (fun (V50) -> (V49({'Idris.Core.TT.I', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg_Int'(V50))})) end(E40)); {'Idris.Core.TT.I8', E41} -> (fun (V51) -> (V49({'Idris.Core.TT.I8', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg_Integer'(V51))})) end(E41)); {'Idris.Core.TT.I16', E42} -> (fun (V52) -> (V49({'Idris.Core.TT.I16', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg_Integer'(V52))})) end(E42)); {'Idris.Core.TT.I32', E43} -> (fun (V53) -> (V49({'Idris.Core.TT.I32', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg_Integer'(V53))})) end(E43)); {'Idris.Core.TT.I64', E44} -> (fun (V54) -> (V49({'Idris.Core.TT.I64', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg_Integer'(V54))})) end(E44)); {'Idris.Core.TT.BI', E45} -> (fun (V55) -> (V49({'Idris.Core.TT.BI', ('Idris.Idris2.Prelude.Num':'dn--un--negate_Neg_Integer'(V55))})) end(E45)); _ -> fun (V56) -> begin (V57 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Libraries.Utils.Shunting.Leaf', {'Idris.Idris.Syntax.PPrimVal', V45, V46}}))(V56))), case V57 of {'Idris.Prelude.Types.Left', E38} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V39, {'Idris.TTImp.TTImp.IVar', V40, {'Idris.Core.Name.UN', <<"negate"/utf8>>}}, V59}} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E36, E37)); _ -> fun (V60) -> begin (V61 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V42))(V60))), case V61 of {'Idris.Prelude.Types.Left', E34} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V39, {'Idris.TTImp.TTImp.IVar', V40, {'Idris.Core.Name.UN', <<"negate"/utf8>>}}, V63}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33)); _ -> fun (V64) -> begin (V65 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V42))(V64))), case V65 of {'Idris.Prelude.Types.Left', E31} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V67) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V39, {'Idris.TTImp.TTImp.IVar', V40, {'Idris.Core.Name.UN', <<"negate"/utf8>>}}, V67}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V68) -> begin (V69 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V42))(V68))), case V69 of {'Idris.Prelude.Types.Left', E29} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V39, {'Idris.TTImp.TTImp.IVar', V40, V41}, V71}} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E28)); _ -> fun (V72) -> begin (V73 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V42))(V72))), case V73 of {'Idris.Prelude.Types.Left', E26} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V75) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V39, {'Idris.TTImp.TTImp.IVar', V40, V41}, V75}} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E22, E23, E24, E25)); {'Idris.Libraries.Utils.Shunting.Leaf', E46} -> (fun (V76) -> ('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V76)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarLHS'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('un--desugar'(V0, V1, V2, V3, 0, V4, V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Core':'un--iunless'(V5, fun () -> ('un--getClauseFn'(V10)) end, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, V5, V10, V7))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V17, V18) -> begin (V55 = (('Idris.Idris2.Core.Core':'un--iwhenJust'(V13, fun (V19) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V22, V23)) end end}, V19, V17)) of 1 -> (begin (V24 = ('Idris.Idris2.Idris.Syntax':'un--getPTermLoc'(V6))), fun () -> fun (V25) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V24, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V41, V42, V43, V44)) end end end end end end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V49, V50, V51)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V52, V53)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}, [<<"Declaration name ("/utf8>> | [('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)) | [<<") shadowed by a pattern variable."/utf8>> | []]]]))}, V25)) end end end()); 0 -> fun (V54) -> {'Idris.Prelude.Types.Right', 0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end))(V7))), case V55 of {'Idris.Prelude.Types.Left', E8} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V13, {'Idris.Builtin.MkPair', V17, V18}}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--desugarFnOpt'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.Syntax.IFnOpt', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Right', V7} end(E0)); {'Idris.Idris.Syntax.PForeign', E1} -> (fun (V8) -> begin (V11 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V9) -> fun (V10) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V9, V10)) end end, V8, [], V6))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarField'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Idris.Syntax.MkField', E0, E1, E2, E3, E4, E5} -> (fun (V8, V9, V10, V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Idris.Doc.String':'un--addDocStringNS'(V1, V0, V5, V12, V9, V7))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V23 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V21) -> fun (V22) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V21, V22)) end end, V11, V7))), case V23 of {'Idris.Prelude.Types.Left', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V25) -> begin (V26 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V13, V7))), case V26 of {'Idris.Prelude.Types.Left', E12} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V28) -> begin (V38 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V8, case V20 of {'Idris.Idris.Syntax.MkSyntax', E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V36 end(E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V28, V7))), case V38 of {'Idris.Prelude.Types.Left', E23} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V8, V10, V25, V12, V40}} end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarDecl'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.PClaim', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V14 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V12) -> fun (V13) -> ('un--desugarFnOpt'(V0, V1, V2, V3, V4, V12, V13)) end end, V9, [], V11))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> begin (V17 = ('un--desugarType'(V0, V1, V2, V3, V4, V10, V11))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IClaim', V6, V7, V8, V16, V19} | []]} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.PDef', E9, E10} -> (fun (V20, V21) -> fun (V22) -> begin (V25 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V23) -> fun (V24) -> ('un--desugarClause'(V0, V1, V2, V3, V4, 0, V23, V24)) end end, V21, [], V22))), case V25 of {'Idris.Prelude.Types.Left', E11} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V27) -> begin (V32 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V28) -> ('Idris.Idris2.Prelude.Basics':'un--uncurry'(fun (V29) -> fun (V30) -> fun (V31) -> ('nested--11533-8671--in--un--toIDef'(V21, V20, V4, V3, V2, V1, V0, ('Idris.Idris2.Libraries.Data.IMaybe':'un--fromJust'(V29)), V30, V31)) end end end, V28)) end, V27, [], V22))), case V32 of {'Idris.Prelude.Types.Left', E13} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.Parser':'un--collectDefs'(V34))} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10)); {'Idris.Idris.Syntax.PData', E15, E16, E17, E18} -> (fun (V35, V36, V37, V38) -> fun (V39) -> begin (V40 = ('un--desugarData'(V0, V1, V2, V3, V4, V36, V38, V39))), case V40 of {'Idris.Prelude.Types.Left', E19} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V42) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IData', V35, V37, V42} | []]} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17, E18)); {'Idris.Idris.Syntax.PParameters', E21, E22, E23} -> (fun (V43, V44, V45) -> fun (V46) -> begin (V49 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V47) -> ('un--desugarDecl'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V48) -> ('Idris.Idris2.Builtin':'un--fst'(V48)) end, V44)))), V47)) end, V45, [], V46))), case V49 of {'Idris.Prelude.Types.Left', E24} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V51) -> begin (V68 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V52) -> case V52 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V53, V54) -> fun (V55) -> case V54 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V56, V57) -> case V57 of {'Idris.Builtin.MkPair', E30, E31} -> (fun (V58, V59) -> begin (V60 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V59, V55))), case V60 of {'Idris.Prelude.Types.Left', E32} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V62) -> begin (V65 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V63) -> fun (V64) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V63, V64)) end end, V58, V55))), case V65 of {'Idris.Prelude.Types.Left', E34} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V67) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V53, {'Idris.Builtin.MkPair', V56, {'Idris.Builtin.MkPair', V67, V62}}}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V44, [], V46))), case V68 of {'Idris.Prelude.Types.Left', E36} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V70) -> begin (V111 = begin (V71 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V46))), case V71 of {'Idris.Prelude.Types.Left', E38} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V73) -> case V73 of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V74) -> case V74 of {'Idris.Prelude.Types.Left', E40} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V76) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V79, V80, V81)) end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V84, V85, V86)) end end end end end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V88)) end end, fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V92, V93, V94, V95)) end end end end end end end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V97)) end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V100, V101, V102)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V103, V104)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V76))} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V105) -> fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V105, V106, [], V107)) end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V108) -> ('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(V108)))))) end, V70)), fun (V109) -> ('Idris.Idris2.TTImp.Utils':'un--findUniqueBindableNames'(V1, V43, 1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V110) -> ('Idris.Idris2.Builtin':'un--fst'(V110)) end, V44)))), [], V109)) end)), V46)); 0 -> {'Idris.Prelude.Types.Right', []}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V111 of {'Idris.Prelude.Types.Left', E42} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V113) -> begin (V121 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V114) -> case V114 of {'Idris.Builtin.MkPair', E44, E45} -> (fun (V115, V116) -> case V116 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V117, V118) -> case V118 of {'Idris.Builtin.MkPair', E48, E49} -> (fun (V119, V120) -> {'Idris.Builtin.MkPair', V115, {'Idris.Builtin.MkPair', V117, {'Idris.Builtin.MkPair', V119, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V113, V120))}}} end(E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V70))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IParameters', V43, V121, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V124, V125, V126)) end end end end end, fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V129, V130, V131)) end end end end end, fun (V132) -> fun (V133) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V133)) end end, fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V137, V138, V139, V140)) end end end end end end end, fun (V141) -> fun (V142) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V142)) end end, fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V145, V146, V147)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V148, V149)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V51))} | []]} end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23)); {'Idris.Idris.Syntax.PUsing', E50, E51, E52} -> (fun (V150, V151, V152) -> fun (V153) -> begin (V155 = begin (V154 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V154} end), case V155 of {'Idris.Prelude.Types.Left', E53} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V157) -> begin (V167 = case V157 of {'Idris.Idris.Syntax.MkSyntax', E55, E56, E57, E58, E59, E60, E61, E62, E63} -> (fun (V158, V159, V160, V161, V162, V163, V164, V165, V166) -> V165 end(E55, E56, E57, E58, E59, E60, E61, E62, E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V176 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V168) -> fun (V169) -> begin (V170 = ('un--desugar'(V0, V1, V3, V2, 1, V4, ('Idris.Idris2.Builtin':'un--snd'(V168)), V169))), case V170 of {'Idris.Prelude.Types.Left', E64} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V172) -> begin (V173 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V150, V167, V4, V172, V169))), case V173 of {'Idris.Prelude.Types.Left', E66} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V175) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'(V168)), V175}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V151, [], V153))), case V176 of {'Idris.Prelude.Types.Left', E68} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V178) -> begin (V189 = begin (V188 = ('erlang':'put'(V0, case V157 of {'Idris.Idris.Syntax.MkSyntax', E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V179, V180, V181, V182, V183, V184, V185, V186, V187) -> {'Idris.Idris.Syntax.MkSyntax', V179, V180, V181, V182, V183, V184, V185, ('Idris.Idris2.Prelude.Types.List':'un--++'(V178, V167)), V187} end(E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V188} end), case V189 of {'Idris.Prelude.Types.Left', E79} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V191) -> begin (V193 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V192) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V192)) end, V152, [], V153))), case V193 of {'Idris.Prelude.Types.Left', E81} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V195) -> begin (V197 = begin (V196 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V196} end), case V197 of {'Idris.Prelude.Types.Left', E83} -> (fun (V198) -> {'Idris.Prelude.Types.Left', V198} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V199) -> begin (V210 = begin (V209 = ('erlang':'put'(V0, case V199 of {'Idris.Idris.Syntax.MkSyntax', E85, E86, E87, E88, E89, E90, E91, E92, E93} -> (fun (V200, V201, V202, V203, V204, V205, V206, V207, V208) -> {'Idris.Idris.Syntax.MkSyntax', V200, V201, V202, V203, V204, V205, V206, V167, V208} end(E85, E86, E87, E88, E89, E90, E91, E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V209} end), case V210 of {'Idris.Prelude.Types.Left', E94} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V212) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V215, V216, V217)) end end end end end, fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V220, V221, V222)) end end end end end, fun (V223) -> fun (V224) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V224)) end end, fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V228, V229, V230, V231)) end end end end end end end, fun (V232) -> fun (V233) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V233)) end end, fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V236, V237, V238)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V239) -> fun (V240) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V239, V240)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V195))} end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51, E52)); {'Idris.Idris.Syntax.PReflect', E96, E97} -> (fun (V241, V242) -> fun (V243) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V241, <<"Reflection not implemented yet"/utf8>>}, V243)) end end(E96, E97)); {'Idris.Idris.Syntax.PInterface', E98, E99, E100, E101, E102, E103, E104, E105, E106} -> (fun (V244, V245, V246, V247, V248, V249, V250, V251, V252) -> fun (V253) -> begin (V254 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V247, V248, V253))), case V254 of {'Idris.Prelude.Types.Left', E107} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V256) -> begin (V258 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V257) -> ('Idris.Idris2.Builtin':'un--fst'(V257)) end, V249))), begin (V288 = ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V261, V262, V263)) end end end end end, fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V266, V267, V268)) end end end end end, fun (V269) -> fun (V270) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V270)) end end, fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V274, V275, V276, V277)) end end end end end end end, fun (V278) -> fun (V279) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V279)) end end, fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V282, V283, V284)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V285) -> fun (V286) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V285, V286)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V287) -> ('nested--11533-9174--in--un--expandConstraint'(V252, V251, V250, V249, V248, V247, V246, V245, V244, V4, V3, V2, V1, V0, V287)) end, V246))), begin (V294 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V289) -> fun (V290) -> begin (V291 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4, V258)), ('Idris.Idris2.Builtin':'un--snd'(V289)), V290))), case V291 of {'Idris.Prelude.Types.Left', E109} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V293) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'(V289)), V293}} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V288, [], V253))), case V294 of {'Idris.Prelude.Types.Left', E111} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V296) -> begin (V306 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V297) -> fun (V298) -> case V297 of {'Idris.Builtin.MkPair', E113, E114} -> (fun (V299, V300) -> case V300 of {'Idris.Builtin.MkPair', E115, E116} -> (fun (V301, V302) -> begin (V303 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V302, V298))), case V303 of {'Idris.Prelude.Types.Left', E117} -> (fun (V304) -> {'Idris.Prelude.Types.Left', V304} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V305) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V299, {'Idris.Builtin.MkPair', V301, V305}}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115, E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E113, E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V249, [], V253))), case V306 of {'Idris.Prelude.Types.Left', E119} -> (fun (V307) -> {'Idris.Prelude.Types.Left', V307} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V308) -> begin (V310 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V309) -> ('Idris.Idris2.Core.Name':'un--dropNS'(V309)) end, ('Idris.Idris2.Idris.Syntax':'un--definedIn'(V252))))), begin (V351 = begin (V311 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V253))), case V311 of {'Idris.Prelude.Types.Left', E121} -> (fun (V312) -> {'Idris.Prelude.Types.Left', V312} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V313) -> case V313 of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V314) -> case V314 of {'Idris.Prelude.Types.Left', E123} -> (fun (V315) -> {'Idris.Prelude.Types.Left', V315} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V316) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V319, V320, V321)) end end end end end, fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V324, V325, V326)) end end end end end, fun (V327) -> fun (V328) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V328)) end end, fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> fun (V335) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V332, V333, V334, V335)) end end end end end end end, fun (V336) -> fun (V337) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V337)) end end, fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V340, V341, V342)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V343) -> fun (V344) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V343, V344)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V316))} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V345) -> fun (V346) -> fun (V347) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V345, V346, [], V347)) end end end, ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V348) -> ('Idris.Idris2.Builtin':'un--snd'(V348)) end, V296)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V349) -> ('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(V349)))) end, V308)))), fun (V350) -> ('Idris.Idris2.TTImp.Utils':'un--findUniqueBindableNames'(V1, V244, 1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4, ('Idris.Idris2.Prelude.Types.List':'un--++'(V310, V258)))), [], V350)) end)), V253)); 0 -> {'Idris.Prelude.Types.Right', []}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V351 of {'Idris.Prelude.Types.Left', E125} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V353) -> begin (V360 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V354) -> case V354 of {'Idris.Builtin.MkPair', E127, E128} -> (fun (V355, V356) -> case V356 of {'Idris.Builtin.MkPair', E129, E130} -> (fun (V357, V358) -> begin (V359 = ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V353, V358))), {'Idris.Builtin.MkPair', V355, {'Idris.Builtin.MkPair', V357, V359}} end end(E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E127, E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V308))), begin (V364 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V361) -> case V361 of {'Idris.Builtin.MkPair', E131, E132} -> (fun (V362, V363) -> {'Idris.Builtin.MkPair', V362, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V353, V363))} end(E131, E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V296))), begin (V366 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V365) -> ('un--desugarDecl'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4, ('Idris.Idris2.Prelude.Types.List':'un--++'(V310, V258)))), V365)) end, V252, [], V253))), case V366 of {'Idris.Prelude.Types.Left', E133} -> (fun (V367) -> {'Idris.Prelude.Types.Left', V367} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V368) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [V247 | []] end, fun () -> fun (V369) -> [V247 | [V369 | []]] end end, V251)), fun (V370) -> fun (V371) -> fun (V372) -> fun (V373) -> ('Idris.Idris2.Idris.Elab.Interface':'un--elabInterface'(V370, V1, V2, V0, V3, V244, V245, V372, V371, V364, V247, V360, V250, V251, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V374) -> fun (V375) -> fun (V376) -> fun (V377) -> fun (V378) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V376, V377, V378)) end end end end end, fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V381, V382, V383)) end end end end end, fun (V384) -> fun (V385) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V385)) end end, fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> fun (V392) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V389, V390, V391, V392)) end end end end end end end, fun (V393) -> fun (V394) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V394)) end end, fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V397, V398, V399)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V400) -> fun (V401) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V400, V401)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V368)), V373)) end end end end} | []]} end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E98, E99, E100, E101, E102, E103, E104, E105, E106)); {'Idris.Idris.Syntax.PImplementation', E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145} -> (fun (V402, V403, V404, V405, V406, V407, V408, V409, V410, V411, V412) -> fun (V413) -> begin (V416 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V414) -> fun (V415) -> ('un--desugarFnOpt'(V0, V1, V2, V3, V4, V414, V415)) end end, V404, [], V413))), case V416 of {'Idris.Prelude.Types.Left', E146} -> (fun (V417) -> {'Idris.Prelude.Types.Left', V417} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V418) -> begin (V428 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V419) -> fun (V420) -> case V419 of {'Idris.Builtin.MkPair', E148, E149} -> (fun (V421, V422) -> case V422 of {'Idris.Builtin.MkPair', E150, E151} -> (fun (V423, V424) -> begin (V425 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V424, V420))), case V425 of {'Idris.Prelude.Types.Left', E152} -> (fun (V426) -> {'Idris.Prelude.Types.Left', V426} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V427) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V421, {'Idris.Builtin.MkPair', V423, V427}}} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E150, E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E148, E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V406, [], V413))), case V428 of {'Idris.Prelude.Types.Left', E154} -> (fun (V429) -> {'Idris.Prelude.Types.Left', V429} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V430) -> ('case--desugarDecl-9724'(V412, V411, V410, V409, V408, V407, V406, V405, V404, V403, V402, V4, V3, V2, V1, V0, V418, V430, V430, V413)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145)); {'Idris.Idris.Syntax.PRecord', E156, E157, E158, E159, E160, E161, E162} -> (fun (V431, V432, V433, V434, V435, V436, V437) -> fun (V438) -> begin (V439 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V434, V432, V438))), case V439 of {'Idris.Prelude.Types.Left', E163} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V441) -> begin (V456 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V442) -> case V442 of {'Idris.Builtin.MkPair', E165, E166} -> (fun (V443, V444) -> fun (V445) -> case V444 of {'Idris.Builtin.MkPair', E167, E168} -> (fun (V446, V447) -> case V447 of {'Idris.Builtin.MkPair', E169, E170} -> (fun (V448, V449) -> begin (V450 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V449, V445))), case V450 of {'Idris.Prelude.Types.Left', E171} -> (fun (V451) -> {'Idris.Prelude.Types.Left', V451} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V452) -> begin (V453 = ('nested--11533-10343--in--un--mapDesugarPiInfo'(V437, V436, V435, V434, V433, V432, V431, V4, V3, V2, V1, V0, V4, V448, V445))), case V453 of {'Idris.Prelude.Types.Left', E173} -> (fun (V454) -> {'Idris.Prelude.Types.Left', V454} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V455) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V443, {'Idris.Builtin.MkPair', V446, {'Idris.Builtin.MkPair', V455, V452}}}} end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169, E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E167, E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165, E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V435, [], V438))), case V456 of {'Idris.Prelude.Types.Left', E175} -> (fun (V457) -> {'Idris.Prelude.Types.Left', V457} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V458) -> begin (V460 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V459) -> ('nested--11533-10341--in--un--fname'(V437, V436, V435, V434, V433, V432, V431, V4, V3, V2, V1, V0, V459)) end, V437))), ('case--case block in desugarDecl-10511'(V437, V436, V435, V434, V433, V432, V431, V4, V3, V2, V1, V0, V458, V458, V460, V460, V438)) end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E156, E157, E158, E159, E160, E161, E162)); {'Idris.Idris.Syntax.PFixity', E177, E178, E179, E180} -> (fun (V461, V462, V463, V464) -> case V462 of 3 -> fun (V465) -> case V464 of {'Idris.Core.Name.UN', E209} -> (fun (V466) -> begin (V468 = begin (V467 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V467} end), case V468 of {'Idris.Prelude.Types.Left', E210} -> (fun (V469) -> {'Idris.Prelude.Types.Left', V469} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V470) -> begin (V481 = begin (V480 = ('erlang':'put'(V0, case V470 of {'Idris.Idris.Syntax.MkSyntax', E212, E213, E214, E215, E216, E217, E218, E219, E220} -> (fun (V471, V472, V473, V474, V475, V476, V477, V478, V479) -> {'Idris.Idris.Syntax.MkSyntax', V471, ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V466, V463, V472)), V473, V474, V475, V476, V477, V478, V479} end(E212, E213, E214, E215, E216, E217, E218, E219, E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V480} end), case V481 of {'Idris.Prelude.Types.Left', E221} -> (fun (V482) -> {'Idris.Prelude.Types.Left', V482} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V483) -> {'Idris.Prelude.Types.Right', []} end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E209)); _ -> case V464 of {'Idris.Core.Name.UN', E195} -> (fun (V484) -> begin (V486 = begin (V485 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V485} end), case V486 of {'Idris.Prelude.Types.Left', E196} -> (fun (V487) -> {'Idris.Prelude.Types.Left', V487} end(E196)); {'Idris.Prelude.Types.Right', E197} -> (fun (V488) -> begin (V499 = begin (V498 = ('erlang':'put'(V0, case V488 of {'Idris.Idris.Syntax.MkSyntax', E198, E199, E200, E201, E202, E203, E204, E205, E206} -> (fun (V489, V490, V491, V492, V493, V494, V495, V496, V497) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V484, {'Idris.Builtin.MkPair', V462, V463}, V489)), V490, V491, V492, V493, V494, V495, V496, V497} end(E198, E199, E200, E201, E202, E203, E204, E205, E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V498} end), case V499 of {'Idris.Prelude.Types.Left', E207} -> (fun (V500) -> {'Idris.Prelude.Types.Left', V500} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V501) -> {'Idris.Prelude.Types.Right', []} end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V461, <<"Fixity declarations must be for unqualified names"/utf8>>}, V465)) end end end; _ -> fun (V502) -> case V464 of {'Idris.Core.Name.UN', E181} -> (fun (V503) -> begin (V505 = begin (V504 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V504} end), case V505 of {'Idris.Prelude.Types.Left', E182} -> (fun (V506) -> {'Idris.Prelude.Types.Left', V506} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V507) -> begin (V518 = begin (V517 = ('erlang':'put'(V0, case V507 of {'Idris.Idris.Syntax.MkSyntax', E184, E185, E186, E187, E188, E189, E190, E191, E192} -> (fun (V508, V509, V510, V511, V512, V513, V514, V515, V516) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V503, {'Idris.Builtin.MkPair', V462, V463}, V508)), V509, V510, V511, V512, V513, V514, V515, V516} end(E184, E185, E186, E187, E188, E189, E190, E191, E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V517} end), case V518 of {'Idris.Prelude.Types.Left', E193} -> (fun (V519) -> {'Idris.Prelude.Types.Left', V519} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V520) -> {'Idris.Prelude.Types.Right', []} end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V461, <<"Fixity declarations must be for unqualified names"/utf8>>}, V502)) end end end end(E177, E178, E179, E180)); {'Idris.Idris.Syntax.PMutual', E223, E224} -> (fun (V521, V522) -> fun (V523) -> case ('Idris.Idris2.Idris.Desugar.Mutual':'un--splitMutual'(V522)) of {'Idris.Builtin.MkPair', E225, E226} -> (fun (V524, V525) -> begin (V527 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V526) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V526)) end, ('Idris.Idris2.Prelude.Types.List':'un--++'(V524, V525)), [], V523))), case V527 of {'Idris.Prelude.Types.Left', E227} -> (fun (V528) -> {'Idris.Prelude.Types.Left', V528} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V529) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V530) -> fun (V531) -> fun (V532) -> fun (V533) -> fun (V534) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V532, V533, V534)) end end end end end, fun (V535) -> fun (V536) -> fun (V537) -> fun (V538) -> fun (V539) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V537, V538, V539)) end end end end end, fun (V540) -> fun (V541) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V541)) end end, fun (V542) -> fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V545, V546, V547, V548)) end end end end end end end, fun (V549) -> fun (V550) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V550)) end end, fun (V551) -> fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V553, V554, V555)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V556) -> fun (V557) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V556, V557)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V529))} end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E225, E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E223, E224)); {'Idris.Idris.Syntax.PNamespace', E229, E230, E231} -> (fun (V558, V559, V560) -> fun (V561) -> ('Idris.Idris2.Core.Context':'un--withExtendedNS'(V1, V559, fun (V562) -> begin (V564 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V563) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V563)) end, V560, [], V562))), case V564 of {'Idris.Prelude.Types.Left', E232} -> (fun (V565) -> {'Idris.Prelude.Types.Left', V565} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V566) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.INamespace', V558, V559, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V567) -> fun (V568) -> fun (V569) -> fun (V570) -> fun (V571) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V569, V570, V571)) end end end end end, fun (V572) -> fun (V573) -> fun (V574) -> fun (V575) -> fun (V576) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V574, V575, V576)) end end end end end, fun (V577) -> fun (V578) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V578)) end end, fun (V579) -> fun (V580) -> fun (V581) -> fun (V582) -> fun (V583) -> fun (V584) -> fun (V585) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V582, V583, V584, V585)) end end end end end end end, fun (V586) -> fun (V587) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V587)) end end, fun (V588) -> fun (V589) -> fun (V590) -> fun (V591) -> fun (V592) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V590, V591, V592)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V593) -> fun (V594) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V593, V594)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V566))} | []]} end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V561)) end end(E229, E230, E231)); {'Idris.Idris.Syntax.PTransform', E234, E235, E236, E237} -> (fun (V595, V596, V597, V598) -> fun (V599) -> begin (V603 = begin (V600 = ('un--desugar'(V0, V1, V3, V2, 0, V4, V597, V599))), case V600 of {'Idris.Prelude.Types.Left', E238} -> (fun (V601) -> {'Idris.Prelude.Types.Left', V601} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V602) -> ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V602, V599)) end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V603 of {'Idris.Prelude.Types.Left', E240} -> (fun (V604) -> {'Idris.Prelude.Types.Left', V604} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V605) -> case V605 of {'Idris.Builtin.MkPair', E242, E243} -> (fun (V606, V607) -> begin (V608 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V606, V4)), V598, V599))), case V608 of {'Idris.Prelude.Types.Left', E244} -> (fun (V609) -> {'Idris.Prelude.Types.Left', V609} end(E244)); {'Idris.Prelude.Types.Right', E245} -> (fun (V610) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ITransform', V595, {'Idris.Core.Name.UN', V596}, V607, V610} | []]} end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E242, E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E234, E235, E236, E237)); {'Idris.Idris.Syntax.PRunElabDecl', E246, E247} -> (fun (V611, V612) -> fun (V613) -> begin (V614 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V612, V613))), case V614 of {'Idris.Prelude.Types.Left', E248} -> (fun (V615) -> {'Idris.Prelude.Types.Left', V615} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V616) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IRunElabDecl', V611, V616} | []]} end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E246, E247)); {'Idris.Idris.Syntax.PDirective', E250, E251} -> (fun (V617, V618) -> fun (V619) -> case V618 of {'Idris.Idris.Syntax.Hide', E252} -> (fun (V620) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V621) -> fun (V622) -> fun (V623) -> fun (V624) -> ('Idris.Idris2.Core.Context':'un--hide'(V1, V617, V620, V624)) end end end end} | []]} end(E252)); {'Idris.Idris.Syntax.Logging', E253} -> (fun (V625) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ILog', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V626) -> fun (V627) -> fun (V628) -> fun (V629) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V628, V629)) end end end end, fun (V630) -> {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Options.Log':'un--topics'(V630)), ('Idris.Idris2.Core.Options.Log':'un--verbosity'(V630))} end, V625))} | []]} end(E253)); {'Idris.Idris.Syntax.LazyOn', E254} -> (fun (V631) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V632) -> fun (V633) -> fun (V634) -> fun (V635) -> ('Idris.Idris2.Core.Context':'un--lazyActive'(V1, V631, V635)) end end end end} | []]} end(E254)); {'Idris.Idris.Syntax.UnboundImplicits', E255} -> (fun (V636) -> begin (V637 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V636, V619))), case V637 of {'Idris.Prelude.Types.Left', E256} -> (fun (V638) -> {'Idris.Prelude.Types.Left', V638} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V639) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V640) -> fun (V641) -> fun (V642) -> fun (V643) -> ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V636, V643)) end end end end} | []]} end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E255)); {'Idris.Idris.Syntax.PrefixRecordProjections', E258} -> (fun (V644) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V645) -> fun (V646) -> fun (V647) -> fun (V648) -> ('Idris.Idris2.Core.Context':'un--setPrefixRecordProjections'(V1, V644, V648)) end end end end} | []]} end(E258)); {'Idris.Idris.Syntax.AmbigDepth', E259} -> (fun (V649) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V650) -> fun (V651) -> fun (V652) -> fun (V653) -> ('Idris.Idris2.Core.Context':'un--setAmbigLimit'(V1, V649, V653)) end end end end} | []]} end(E259)); {'Idris.Idris.Syntax.AutoImplicitDepth', E260} -> (fun (V654) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V655) -> fun (V656) -> fun (V657) -> fun (V658) -> ('Idris.Idris2.Core.Context':'un--setAutoImplicitLimit'(V1, V654, V658)) end end end end} | []]} end(E260)); {'Idris.Idris.Syntax.NFMetavarThreshold', E261} -> (fun (V659) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V660) -> fun (V661) -> fun (V662) -> fun (V663) -> ('Idris.Idris2.Core.Context':'un--setNFThreshold'(V1, V659, V663)) end end end end} | []]} end(E261)); {'Idris.Idris.Syntax.PairNames', E262, E263, E264} -> (fun (V664, V665, V666) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V667) -> fun (V668) -> fun (V669) -> fun (V670) -> ('Idris.Idris2.Core.Context':'un--setPair'(V1, V617, V664, V665, V666, V670)) end end end end} | []]} end(E262, E263, E264)); {'Idris.Idris.Syntax.RewriteName', E265, E266} -> (fun (V671, V672) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V673) -> fun (V674) -> fun (V675) -> fun (V676) -> ('Idris.Idris2.Core.Context':'un--setRewrite'(V1, V617, V671, V672, V676)) end end end end} | []]} end(E265, E266)); {'Idris.Idris.Syntax.PrimInteger', E267} -> (fun (V677) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V678) -> fun (V679) -> fun (V680) -> fun (V681) -> ('Idris.Idris2.Core.Context':'un--setFromInteger'(V1, V677, V681)) end end end end} | []]} end(E267)); {'Idris.Idris.Syntax.PrimString', E268} -> (fun (V682) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V683) -> fun (V684) -> fun (V685) -> fun (V686) -> ('Idris.Idris2.Core.Context':'un--setFromString'(V1, V682, V686)) end end end end} | []]} end(E268)); {'Idris.Idris.Syntax.PrimChar', E269} -> (fun (V687) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V688) -> fun (V689) -> fun (V690) -> fun (V691) -> ('Idris.Idris2.Core.Context':'un--setFromChar'(V1, V687, V691)) end end end end} | []]} end(E269)); {'Idris.Idris.Syntax.PrimDouble', E270} -> (fun (V692) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V693) -> fun (V694) -> fun (V695) -> fun (V696) -> ('Idris.Idris2.Core.Context':'un--setFromDouble'(V1, V692, V696)) end end end end} | []]} end(E270)); {'Idris.Idris.Syntax.CGAction', E271, E272} -> (fun (V697, V698) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V699) -> fun (V700) -> fun (V701) -> fun (V702) -> ('Idris.Idris2.Core.Context':'un--addDirective'(V1, V697, V698, V702)) end end end end} | []]} end(E271, E272)); {'Idris.Idris.Syntax.Names', E273, E274} -> (fun (V703, V704) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V705) -> fun (V706) -> fun (V707) -> fun (V708) -> ('Idris.Idris2.Core.Context':'un--addNameDirective'(V1, V617, V703, V704, V708)) end end end end} | []]} end(E273, E274)); {'Idris.Idris.Syntax.StartExpr', E275} -> (fun (V709) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V710) -> fun (V711) -> fun (V712) -> fun (V713) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"%start not implemented"/utf8>>}, V713)) end end end end} | []]} end(E275)); {'Idris.Idris.Syntax.Overloadable', E276} -> (fun (V714) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V715) -> fun (V716) -> fun (V717) -> fun (V718) -> ('Idris.Idris2.Core.Context':'un--setNameFlag'(V1, V617, V714, {'Idris.Core.Context.Overloadable'}, V718)) end end end end} | []]} end(E276)); {'Idris.Idris.Syntax.Extension', E277} -> (fun (V719) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V720) -> fun (V721) -> fun (V722) -> fun (V723) -> ('Idris.Idris2.Core.Context':'un--setExtension'(V1, V719, V723)) end end end end} | []]} end(E277)); {'Idris.Idris.Syntax.DefaultTotality', E278} -> (fun (V724) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V725) -> fun (V726) -> fun (V727) -> fun (V728) -> ('Idris.Idris2.Core.Context':'un--setDefaultTotalityOption'(V1, V724, V728)) end end end end} | []]} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E250, E251)); {'Idris.Idris.Syntax.PBuiltin', E279, E280, E281} -> (fun (V729, V730, V731) -> fun (V732) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IBuiltin', V729, V730, V731} | []]} end end(E279, E280, E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarData'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Idris.Syntax.MkPData', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> begin (V13 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V9, V5, V7))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> begin (V20 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V10, V7))), case V20 of {'Idris.Prelude.Types.Left', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V22) -> begin (V32 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V8, case V19 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31) -> V30 end(E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V22, V7))), case V32 of {'Idris.Prelude.Types.Left', E20} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V34) -> begin (V37 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> fun (V36) -> ('un--desugarType'(V0, V1, V2, V3, V4, V35, V36)) end end, V12, [], V7))), case V37 of {'Idris.Prelude.Types.Left', E22} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V8, V9, V34, V11, V39}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.MkPLater', E24, E25, E26} -> (fun (V40, V41, V42) -> begin (V43 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V41, V5, V7))), case V43 of {'Idris.Prelude.Types.Left', E27} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V45) -> begin (V47 = begin (V46 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E29} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V49) -> begin (V50 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V42, V7))), case V50 of {'Idris.Prelude.Types.Left', E31} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V52) -> begin (V62 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V40, case V49 of {'Idris.Idris.Syntax.MkSyntax', E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V60 end(E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V52, V7))), case V62 of {'Idris.Prelude.Types.Left', E42} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V40, V41, V64}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarClause'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Idris.Syntax.MkPatClause', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> begin (V13 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V12) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V12)) end, V11, [], V7))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V16 = ('un--desugarLHS'(V0, V1, V3, V2, V4, V5, V9, V7))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> case V18 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V21, V22) -> begin (V23 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V21, V4)), V10, V7))), case V23 of {'Idris.Prelude.Types.Left', E12} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V25) -> begin (V54 = case V15 of [] -> V25; _ -> {'Idris.TTImp.TTImp.ILocal', V8, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V41, V42, V43, V44)) end end end end end end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V49, V50, V51)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V52, V53)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V15)), V25} end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V19, {'Idris.TTImp.TTImp.PatClause', V8, V22, V54}}} end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); {'Idris.Idris.Syntax.MkWithClause', E14, E15, E16, E17, E18, E19} -> (fun (V55, V56, V57, V58, V59, V60) -> begin (V67 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V63) -> case V63 of {'Idris.Prelude.Types.Left', E20} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V65) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V65))} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V66) -> ('un--desugarClause'(V0, V1, V2, V3, V4, V5, V61, V66)) end, V62)) end end, V60, [], V7))), case V67 of {'Idris.Prelude.Types.Left', E22} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V69) -> begin (V70 = ('un--desugarLHS'(V0, V1, V3, V2, V4, V5, V56, V7))), case V70 of {'Idris.Prelude.Types.Left', E24} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V72) -> case V72 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V73, V74) -> case V74 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V75, V76) -> begin (V77 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--++'(V75, V4)), V57, V7))), case V77 of {'Idris.Prelude.Types.Left', E30} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V73, {'Idris.TTImp.TTImp.WithClause', V55, V76, V79, V58, V59, V69}}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15, E16, E17, E18, E19)); {'Idris.Idris.Syntax.MkImpossible', E32, E33} -> (fun (V80, V81) -> begin (V82 = ('un--desugarLHS'(V0, V1, V3, V2, V4, V5, V81, V7))), case V82 of {'Idris.Prelude.Types.Left', E34} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V84) -> case V84 of {'Idris.Builtin.MkPair', E36, E37} -> (fun (V85, V86) -> case V86 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V87, V88) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V85, {'Idris.TTImp.TTImp.ImpossibleClause', V80, V88}}} end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Idris.Syntax.PRef', E0, E1} -> (fun (V8, V9) -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V8, V9}} end end(E0, E1)); {'Idris.Idris.Syntax.PPi', E2, E3, E4, E5, E6, E7} -> (fun (V11, V12, V13, V14, V15, V16) -> begin (V18 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V6 end, fun () -> fun (V17) -> [V17 | V6] end end, V14))), fun (V19) -> begin (V22 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V20) -> fun (V21) -> ('un--desugar'(V0, V2, V3, V4, V5, V18, V20, V21)) end end, V13, V19))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V25 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V15))(V19))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> begin (V28 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V18, V16))(V19))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V11, V12, V24, V14, V27, V30}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3, E4, E5, E6, E7)); {'Idris.Idris.Syntax.PLam', E14, E15, E16, E17, E18, E19} -> (fun (V31, V32, V33, V34, V35, V36) -> case V34 of {'Idris.Idris.Syntax.PRef', E26, E27} -> (fun (V37, V38) -> case V38 of {'Idris.Core.Name.UN', E34} -> (fun (V39) -> begin (V40 = {'Idris.Idris.Syntax.PRef', V37, {'Idris.Core.Name.UN', V39}}), begin (V41 = {'Idris.Core.Name.UN', V39}), fun (V42) -> case case ('Idris.Idris2.Libraries.Utils.String':'un--lowerFirst'(V39)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V39, <<"_"/utf8>>)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> begin (V44 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V37)) of {'Idris.Prelude.Types.Just', E35} -> (fun (V43) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V2, [{'Idris.Builtin.MkPair', V43, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V41}}} | []], V42)) end(E35)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V44 of {'Idris.Prelude.Types.Left', E36} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V46) -> begin (V49 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V47) -> fun (V48) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V47, V48)) end end, V33, V42))), case V49 of {'Idris.Prelude.Types.Left', E38} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V51) -> begin (V52 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V42))), case V52 of {'Idris.Prelude.Types.Left', E40} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V54) -> begin (V55 = ('un--desugar'(V0, V2, V3, V4, 1, [V41 | V6], V36, V42))), case V55 of {'Idris.Prelude.Types.Left', E42} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V51, {'Idris.Prelude.Types.Just', V41}, V54, V57}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V60 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V58) -> fun (V59) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V58, V59)) end end, V33, V42))), case V60 of {'Idris.Prelude.Types.Left', E44} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V62) -> begin (V63 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V42))), case V63 of {'Idris.Prelude.Types.Left', E46} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V65) -> begin (V66 = ('un--desugarClause'(V0, V2, V4, V3, V6, 1, {'Idris.Idris.Syntax.MkPatClause', V31, V40, V36, []}, V42))), case V66 of {'Idris.Prelude.Types.Left', E48} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V32, V62, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V65, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 0}, [('Idris.Idris2.Builtin':'un--snd'(V68)) | []]}}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E34)); {'Idris.Core.Name.MN', E50, E51} -> (fun (V69, V70) -> fun (V71) -> begin (V74 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V72) -> fun (V73) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V72, V73)) end end, V33, V71))), case V74 of {'Idris.Prelude.Types.Left', E52} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V76) -> begin (V77 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V71))), case V77 of {'Idris.Prelude.Types.Left', E54} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V79) -> begin (V80 = ('un--desugar'(V0, V2, V3, V4, 1, [V38 | V6], V36, V71))), case V80 of {'Idris.Prelude.Types.Left', E56} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V82) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V76, {'Idris.Prelude.Types.Just', V38}, V79, V82}} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51)); _ -> fun (V83) -> begin (V86 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V84) -> fun (V85) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V84, V85)) end end, V33, V83))), case V86 of {'Idris.Prelude.Types.Left', E28} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V88) -> begin (V89 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V83))), case V89 of {'Idris.Prelude.Types.Left', E30} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V91) -> begin (V92 = ('un--desugarClause'(V0, V2, V4, V3, V6, 1, {'Idris.Idris.Syntax.MkPatClause', V31, V34, V36, []}, V83))), case V92 of {'Idris.Prelude.Types.Left', E32} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V94) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V32, V88, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V91, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 0}, [('Idris.Idris2.Builtin':'un--snd'(V94)) | []]}}} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E26, E27)); {'Idris.Idris.Syntax.PImplicit', E58} -> (fun (V95) -> fun (V96) -> begin (V99 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V97) -> fun (V98) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V97, V98)) end end, V33, V96))), case V99 of {'Idris.Prelude.Types.Left', E59} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V101) -> begin (V102 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V96))), case V102 of {'Idris.Prelude.Types.Left', E61} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V104) -> begin (V105 = ('un--desugar'(V0, V2, V3, V4, 1, V6, V36, V96))), case V105 of {'Idris.Prelude.Types.Left', E63} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V101, {'Idris.Prelude.Types.Nothing'}, V104, V107}} end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E58)); _ -> fun (V108) -> begin (V111 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V109) -> fun (V110) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V109, V110)) end end, V33, V108))), case V111 of {'Idris.Prelude.Types.Left', E20} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V113) -> begin (V114 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V108))), case V114 of {'Idris.Prelude.Types.Left', E22} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V116) -> begin (V117 = ('un--desugarClause'(V0, V2, V4, V3, V6, 1, {'Idris.Idris.Syntax.MkPatClause', V31, V34, V36, []}, V108))), case V117 of {'Idris.Prelude.Types.Left', E24} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V32, V113, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V116, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 0}, [('Idris.Idris2.Builtin':'un--snd'(V119)) | []]}}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E14, E15, E16, E17, E18, E19)); {'Idris.Idris.Syntax.PLet', E65, E66, E67, E68, E69, E70, E71} -> (fun (V120, V121, V122, V123, V124, V125, V126) -> fun (V127) -> case V122 of {'Idris.Idris.Syntax.PRef', E80, E81} -> (fun (V128, V129) -> case V126 of [] -> begin (V131 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V128)) of {'Idris.Prelude.Types.Just', E90} -> (fun (V130) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V2, [{'Idris.Builtin.MkPair', V130, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V129}}} | []], V127)) end(E90)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V131 of {'Idris.Prelude.Types.Left', E91} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V133) -> begin (V134 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V123))(V127))), case V134 of {'Idris.Prelude.Types.Left', E93} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V136) -> begin (V137 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V124))(V127))), case V137 of {'Idris.Prelude.Types.Left', E95} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V139) -> begin (V140 = ('un--desugar'(V0, V2, V3, V4, V5, [V129 | V6], V125, V127))), case V140 of {'Idris.Prelude.Types.Left', E97} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V142) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V120, V128, V121, V129, V136, V139, V142}} end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V143 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V124))(V127))), case V143 of {'Idris.Prelude.Types.Left', E82} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V145) -> begin (V146 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V123))(V127))), case V146 of {'Idris.Prelude.Types.Left', E84} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V148) -> begin (V155 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V149) -> fun (V150) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V151) -> case V151 of {'Idris.Prelude.Types.Left', E86} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V153) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V153))} end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V154) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 1, V149, V154)) end, V150)) end end, [{'Idris.Idris.Syntax.MkPatClause', V120, V122, V125, []} | V126], [], V127))), case V155 of {'Idris.Prelude.Types.Left', E88} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V157) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V120, V145, V148, V157}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E80, E81)); _ -> begin (V158 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V124))(V127))), case V158 of {'Idris.Prelude.Types.Left', E72} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V160) -> begin (V161 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V123))(V127))), case V161 of {'Idris.Prelude.Types.Left', E74} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V163) -> begin (V170 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V166) -> case V166 of {'Idris.Prelude.Types.Left', E76} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V168) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V168))} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V169) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 1, V164, V169)) end, V165)) end end, [{'Idris.Idris.Syntax.MkPatClause', V120, V122, V125, []} | V126], [], V127))), case V170 of {'Idris.Prelude.Types.Left', E78} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V172) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V120, V160, V163, V172}} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E65, E66, E67, E68, E69, E70, E71)); {'Idris.Idris.Syntax.PCase', E99, E100, E101} -> (fun (V173, V174, V175) -> fun (V176) -> begin (V177 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V174))(V176))), case V177 of {'Idris.Prelude.Types.Left', E102} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V179) -> begin (V186 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V180) -> fun (V181) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V182) -> case V182 of {'Idris.Prelude.Types.Left', E104} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V184) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V184))} end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V185) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 1, V180, V185)) end, V181)) end end, V175, [], V176))), case V186 of {'Idris.Prelude.Types.Left', E106} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V188) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V173, V179, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V173)), 0}, V188}} end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E99, E100, E101)); {'Idris.Idris.Syntax.PLocal', E108, E109, E110} -> (fun (V189, V190, V191) -> begin (V192 = ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Idris.Syntax':'un--definedIn'(V190)), V6))), fun (V193) -> begin (V195 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V194) -> ('un--desugarDecl'(V0, V2, V4, V3, V192, V194)) end, V190, [], V193))), case V195 of {'Idris.Prelude.Types.Left', E111} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V197) -> begin (V198 = ('un--desugar'(V0, V2, V3, V4, V5, V192, V191, V193))), case V198 of {'Idris.Prelude.Types.Left', E113} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V200) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V189, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V203, V204, V205)) end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V208, V209, V210)) end end end end end, fun (V211) -> fun (V212) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V212)) end end, fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V216, V217, V218, V219)) end end end end end end end, fun (V220) -> fun (V221) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V221)) end end, fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V224, V225, V226)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V227) -> fun (V228) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V227, V228)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V197)), V200}} end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E108, E109, E110)); {'Idris.Idris.Syntax.PApp', E115, E116, E117} -> (fun (V229, V230, V231) -> fun (V232) -> case V230 of {'Idris.Idris.Syntax.PUpdate', E122, E123} -> (fun (V233, V234) -> begin (V237 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V235) -> fun (V236) -> ('un--desugarUpdate'(V0, V1, V2, V4, V3, V5, V6, V235, V236)) end end, V234, [], V232))), case V237 of {'Idris.Prelude.Types.Left', E124} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V239) -> begin (V240 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V231))(V232))), case V240 of {'Idris.Prelude.Types.Left', E126} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V242) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V229, V239, V242}} end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E122, E123)); _ -> begin (V243 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V230))(V232))), case V243 of {'Idris.Prelude.Types.Left', E118} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V245) -> begin (V246 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V231))(V232))), case V246 of {'Idris.Prelude.Types.Left', E120} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V248) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V229, V245, V248}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E115, E116, E117)); {'Idris.Idris.Syntax.PUpdate', E128, E129} -> (fun (V249, V250) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, begin (V251 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V249))), {'Idris.Idris.Syntax.PLam', V251, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V251, {'Idris.Core.Name.MN', <<"rec"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V251}, {'Idris.Idris.Syntax.PApp', V251, {'Idris.Idris.Syntax.PUpdate', V249, V250}, {'Idris.Idris.Syntax.PRef', V251, {'Idris.Core.Name.MN', <<"rec"/utf8>>, 0}}}} end)) end(E128, E129)); {'Idris.Idris.Syntax.PAutoApp', E130, E131, E132} -> (fun (V252, V253, V254) -> fun (V255) -> begin (V256 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V253))(V255))), case V256 of {'Idris.Prelude.Types.Left', E133} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V258) -> begin (V259 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V254))(V255))), case V259 of {'Idris.Prelude.Types.Left', E135} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V261) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V252, V258, V261}} end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130, E131, E132)); {'Idris.Idris.Syntax.PWithApp', E137, E138, E139} -> (fun (V262, V263, V264) -> fun (V265) -> begin (V266 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V263))(V265))), case V266 of {'Idris.Prelude.Types.Left', E140} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V268) -> begin (V269 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V264))(V265))), case V269 of {'Idris.Prelude.Types.Left', E142} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V271) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V262, V268, V271}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E137, E138, E139)); {'Idris.Idris.Syntax.PNamedApp', E144, E145, E146, E147} -> (fun (V272, V273, V274, V275) -> fun (V276) -> begin (V277 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V273))(V276))), case V277 of {'Idris.Prelude.Types.Left', E148} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V279) -> begin (V280 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V275))(V276))), case V280 of {'Idris.Prelude.Types.Left', E150} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V282) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V272, V279, V274, V282}} end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E144, E145, E146, E147)); {'Idris.Idris.Syntax.PDelayed', E152, E153, E154} -> (fun (V283, V284, V285) -> fun (V286) -> begin (V287 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V285))(V286))), case V287 of {'Idris.Prelude.Types.Left', E155} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V289) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V283, V284, V289}} end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152, E153, E154)); {'Idris.Idris.Syntax.PDelay', E157, E158} -> (fun (V290, V291) -> fun (V292) -> begin (V293 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V291))(V292))), case V293 of {'Idris.Prelude.Types.Left', E159} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V295) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V290, V295}} end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E157, E158)); {'Idris.Idris.Syntax.PForce', E161, E162} -> (fun (V296, V297) -> fun (V298) -> begin (V299 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V297))(V298))), case V299 of {'Idris.Prelude.Types.Left', E163} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V301) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V296, V301}} end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E161, E162)); {'Idris.Idris.Syntax.PEq', E165, E166, E167} -> (fun (V302, V303, V304) -> fun (V305) -> begin (V306 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V303))(V305))), case V306 of {'Idris.Prelude.Types.Left', E168} -> (fun (V307) -> {'Idris.Prelude.Types.Left', V307} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V308) -> begin (V309 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V304))(V305))), case V309 of {'Idris.Prelude.Types.Left', E170} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V311) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V302, {'Idris.TTImp.TTImp.FirstSuccess'}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V302, {'Idris.Core.Name.UN', <<"==="/utf8>>}}, [V308 | [V311 | []]])) | [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V302, {'Idris.Core.Name.UN', <<"~=~"/utf8>>}}, [V308 | [V311 | []]])) | []]]}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E165, E166, E167)); {'Idris.Idris.Syntax.PBracketed', E172, E173} -> (fun (V312, V313) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V313)) end(E172, E173)); {'Idris.Idris.Syntax.POp', E174, E175, E176, E177, E178} -> (fun (V314, V315, V316, V317, V318) -> fun (V319) -> begin (V320 = ('un--toTokList'(V0, {'Idris.Idris.Syntax.POp', V314, V315, V316, V317, V318}, V319))), case V320 of {'Idris.Prelude.Types.Left', E179} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V322) -> begin (V326 = ('Idris.Idris2.Libraries.Utils.Shunting':'un--parseOps'({'Idris.Prelude.Show.MkShow', fun (V323) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V323)) end, fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V324, V325)) end end}, V322, V319))), case V326 of {'Idris.Prelude.Types.Left', E181} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V328) -> (('un--desugarTree'(V0, V1, V2, V4, V3, V5, V6, V328))(V319)) end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E174, E175, E176, E177, E178)); {'Idris.Idris.Syntax.PPrefixOp', E183, E184, E185, E186} -> (fun (V329, V330, V331, V332) -> fun (V333) -> begin (V334 = ('un--toTokList'(V0, {'Idris.Idris.Syntax.PPrefixOp', V329, V330, V331, V332}, V333))), case V334 of {'Idris.Prelude.Types.Left', E187} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V336) -> begin (V340 = ('Idris.Idris2.Libraries.Utils.Shunting':'un--parseOps'({'Idris.Prelude.Show.MkShow', fun (V337) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V337)) end, fun (V338) -> fun (V339) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V338, V339)) end end}, V336, V333))), case V340 of {'Idris.Prelude.Types.Left', E189} -> (fun (V341) -> {'Idris.Prelude.Types.Left', V341} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V342) -> (('un--desugarTree'(V0, V1, V2, V4, V3, V5, V6, V342))(V333)) end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E183, E184, E185, E186)); {'Idris.Idris.Syntax.PSectionL', E191, E192, E193, E194} -> (fun (V343, V344, V345, V346) -> fun (V347) -> begin (V349 = begin (V348 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V348} end), case V349 of {'Idris.Prelude.Types.Left', E195} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V351) -> case ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(('Idris.Idris2.Core.Name':'un--nameRoot'(V345)), case V351 of {'Idris.Idris.Syntax.MkSyntax', E198, E199, E200, E201, E202, E203, E204, E205, E206} -> (fun (V352, V353, V354, V355, V356, V357, V358, V359, V360) -> V353 end(E198, E199, E200, E201, E202, E203, E204, E205, E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V343, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V343, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V343}, {'Idris.Idris.Syntax.POp', V343, V344, V345, {'Idris.Idris.Syntax.PRef', V343, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, V346}}))(V347)) end()); {'Idris.Prelude.Types.Just', E197} -> (fun (V361) -> (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PPrefixOp', V343, V344, V345, V346}))(V347)) end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E191, E192, E193, E194)); {'Idris.Idris.Syntax.PSectionR', E207, E208, E209, E210} -> (fun (V362, V363, V364, V365) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V362, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V362, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V362}, {'Idris.Idris.Syntax.POp', V362, V363, V365, V364, {'Idris.Idris.Syntax.PRef', V362, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}}})) end(E207, E208, E209, E210)); {'Idris.Idris.Syntax.PSearch', E211, E212} -> (fun (V366, V367) -> fun (V368) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V366, V367}} end end(E211, E212)); {'Idris.Idris.Syntax.PPrimVal', E213, E214} -> (fun (V369, V370) -> fun (V371) -> case V370 of {'Idris.Core.TT.BI', E215} -> (fun (V372) -> begin (V373 = ('Idris.Idris2.Core.Context':'un--fromIntegerName'(V2, V371))), case V373 of {'Idris.Prelude.Types.Left', E216} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V375) -> case V375 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V369, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.BI', V372}}}, [{'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.BI', V372}} | [{'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.I', V372}} | []]]}} end()); {'Idris.Prelude.Types.Just', E218} -> (fun (V376) -> begin (V377 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V369))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V377, {'Idris.TTImp.TTImp.IVar', V377, V376}, {'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.BI', V372}}}} end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E215)); {'Idris.Core.TT.Ch', E219} -> (fun (V378) -> begin (V379 = ('Idris.Idris2.Core.Context':'un--fromCharName'(V2, V371))), case V379 of {'Idris.Prelude.Types.Left', E220} -> (fun (V380) -> {'Idris.Prelude.Types.Left', V380} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V381) -> case V381 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.Ch', V378}}} end()); {'Idris.Prelude.Types.Just', E222} -> (fun (V382) -> begin (V383 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V369))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V383, {'Idris.TTImp.TTImp.IVar', V383, V382}, {'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.Ch', V378}}}} end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); {'Idris.Core.TT.Db', E223} -> (fun (V384) -> begin (V385 = ('Idris.Idris2.Core.Context':'un--fromDoubleName'(V2, V371))), case V385 of {'Idris.Prelude.Types.Left', E224} -> (fun (V386) -> {'Idris.Prelude.Types.Left', V386} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V387) -> case V387 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.Db', V384}}} end()); {'Idris.Prelude.Types.Just', E226} -> (fun (V388) -> begin (V389 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V369))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V389, {'Idris.TTImp.TTImp.IVar', V389, V388}, {'Idris.TTImp.TTImp.IPrimVal', V369, {'Idris.Core.TT.Db', V384}}}} end end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E223)); _ -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V369, V370}} end end end(E213, E214)); {'Idris.Idris.Syntax.PQuote', E227, E228} -> (fun (V390, V391) -> fun (V392) -> begin (V393 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V391))(V392))), case V393 of {'Idris.Prelude.Types.Left', E229} -> (fun (V394) -> {'Idris.Prelude.Types.Left', V394} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V395) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V390, V395}} end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E227, E228)); {'Idris.Idris.Syntax.PQuoteName', E231, E232} -> (fun (V396, V397) -> fun (V398) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V396, V397}} end end(E231, E232)); {'Idris.Idris.Syntax.PQuoteDecl', E233, E234} -> (fun (V399, V400) -> fun (V401) -> begin (V403 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V402) -> ('un--desugarDecl'(V0, V2, V4, V3, V6, V402)) end, V400, [], V401))), case V403 of {'Idris.Prelude.Types.Left', E235} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V405) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V399, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V406) -> fun (V407) -> fun (V408) -> fun (V409) -> fun (V410) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V408, V409, V410)) end end end end end, fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V413, V414, V415)) end end end end end, fun (V416) -> fun (V417) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V417)) end end, fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> fun (V424) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V421, V422, V423, V424)) end end end end end end end, fun (V425) -> fun (V426) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V426)) end end, fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V429, V430, V431)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V432) -> fun (V433) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V432, V433)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V405))}} end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E233, E234)); {'Idris.Idris.Syntax.PUnquote', E237, E238} -> (fun (V434, V435) -> fun (V436) -> begin (V437 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V435))(V436))), case V437 of {'Idris.Prelude.Types.Left', E239} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V439) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V434, V439}} end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E237, E238)); {'Idris.Idris.Syntax.PRunElab', E241, E242} -> (fun (V440, V441) -> fun (V442) -> begin (V443 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V441))(V442))), case V443 of {'Idris.Prelude.Types.Left', E243} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V445) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElab', V440, V445}} end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E241, E242)); {'Idris.Idris.Syntax.PHole', E245, E246, E247} -> (fun (V446, V447, V448) -> fun (V449) -> begin (V464 = case V447 of 1 -> begin (V451 = begin (V450 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V450} end), case V451 of {'Idris.Prelude.Types.Left', E248} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V453) -> begin (V463 = ('erlang':'put'(V0, case V453 of {'Idris.Idris.Syntax.MkSyntax', E250, E251, E252, E253, E254, E255, E256, E257, E258} -> (fun (V454, V455, V456, V457, V458, V459, V460, V461, V462) -> {'Idris.Idris.Syntax.MkSyntax', V454, V455, V456, V457, V458, V459, [{'Idris.Core.Name.UN', V448} | V460], V461, V462} end(E250, E251, E252, E253, E254, E255, E256, E257, E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V463} end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V464 of {'Idris.Prelude.Types.Left', E259} -> (fun (V465) -> {'Idris.Prelude.Types.Left', V465} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V466) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V446, V448}} end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E245, E246, E247)); {'Idris.Idris.Syntax.PType', E261} -> (fun (V467) -> fun (V468) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V467}} end end(E261)); {'Idris.Idris.Syntax.PAs', E262, E263, E264, E265} -> (fun (V469, V470, V471, V472) -> fun (V473) -> begin (V474 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V472))(V473))), case V474 of {'Idris.Prelude.Types.Left', E266} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V476) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V469, V470, 1, V471, V476}} end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E262, E263, E264, E265)); {'Idris.Idris.Syntax.PDotted', E268, E269} -> (fun (V477, V478) -> fun (V479) -> begin (V480 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V478))(V479))), case V480 of {'Idris.Prelude.Types.Left', E270} -> (fun (V481) -> {'Idris.Prelude.Types.Left', V481} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V482) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V477, 4, V482}} end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E268, E269)); {'Idris.Idris.Syntax.PImplicit', E272} -> (fun (V483) -> fun (V484) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V483, 1}} end end(E272)); {'Idris.Idris.Syntax.PInfer', E273} -> (fun (V485) -> fun (V486) -> begin (V487 = case ('dn--un--==_Eq_Side'(V5, 0)) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V485, <<"? is not a valid pattern"/utf8>>}, V486)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V487 of {'Idris.Prelude.Types.Left', E274} -> (fun (V488) -> {'Idris.Prelude.Types.Left', V488} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V489) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V485, 0}} end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E273)); {'Idris.Idris.Syntax.PMultiline', E276, E277, E278} -> (fun (V490, V491, V492) -> fun (V493) -> begin (V494 = ('un--trimMultiline'(V490, V491, V492, V493))), case V494 of {'Idris.Prelude.Types.Left', E279} -> (fun (V495) -> {'Idris.Prelude.Types.Left', V495} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V496) -> begin (V497 = ('un--expandString'(V0, V1, V2, V3, V4, V5, V6, V490, V496, V493))), case V497 of {'Idris.Prelude.Types.Left', E281} -> (fun (V498) -> {'Idris.Prelude.Types.Left', V498} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V499) -> ('un--addFromString'(V2, V490, V499, V493)) end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E276, E277, E278)); {'Idris.Idris.Syntax.PString', E283, E284} -> (fun (V500, V501) -> fun (V502) -> begin (V503 = ('un--expandString'(V0, V1, V2, V3, V4, V5, V6, V500, V501, V502))), case V503 of {'Idris.Prelude.Types.Left', E285} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V505) -> ('un--addFromString'(V2, V500, V505, V502)) end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E283, E284)); {'Idris.Idris.Syntax.PDoBlock', E287, E288, E289} -> (fun (V506, V507, V508) -> ('un--expandDo'(V0, V2, V4, V3, V5, V6, V506, V507, V508)) end(E287, E288, E289)); {'Idris.Idris.Syntax.PBang', E290, E291} -> (fun (V509, V510) -> fun (V511) -> begin (V512 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V510))(V511))), case V512 of {'Idris.Prelude.Types.Left', E292} -> (fun (V513) -> {'Idris.Prelude.Types.Left', V513} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V514) -> begin (V516 = begin (V515 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V515} end), case V516 of {'Idris.Prelude.Types.Left', E294} -> (fun (V517) -> {'Idris.Prelude.Types.Left', V517} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V518) -> begin (V521 = {'Idris.Core.Name.MN', <<"bind"/utf8>>, case V518 of {'Idris.Idris.Desugar.MkBangData', E296, E297} -> (fun (V519, V520) -> V519 end(E296, E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}), begin (V525 = begin (V524 = ('erlang':'put'(V1, case V518 of {'Idris.Idris.Desugar.MkBangData', E298, E299} -> (fun (V522, V523) -> {'Idris.Idris.Desugar.MkBangData', ((V522 + 1) rem 9223372036854775808), [{'Idris.Builtin.MkPair', V521, {'Idris.Builtin.MkPair', V509, V514}} | V523]} end(E298, E299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V524} end), case V525 of {'Idris.Prelude.Types.Left', E300} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E300)); {'Idris.Prelude.Types.Right', E301} -> (fun (V527) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V521}} end(E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E290, E291)); {'Idris.Idris.Syntax.PIdiom', E302, E303} -> (fun (V528, V529) -> fun (V530) -> begin (V531 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V529))(V530))), case V531 of {'Idris.Prelude.Types.Left', E304} -> (fun (V532) -> {'Idris.Prelude.Types.Left', V532} end(E304)); {'Idris.Prelude.Types.Right', E305} -> (fun (V533) -> begin (V534 = ('Idris.Idris2.TTImp.TTImp':'un--logRaw'(V2, <<"desugar.idiom"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Desugaring idiom for"/utf8>> end, V533, V530))), case V534 of {'Idris.Prelude.Types.Left', E306} -> (fun (V535) -> {'Idris.Prelude.Types.Left', V535} end(E306)); {'Idris.Prelude.Types.Right', E307} -> (fun (V536) -> begin (V537 = ('un--idiomise'(V528, V533))), begin (V538 = ('Idris.Idris2.TTImp.TTImp':'un--logRaw'(V2, <<"desugar.idiom"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Desugared to"/utf8>> end, V537, V530))), case V538 of {'Idris.Prelude.Types.Left', E308} -> (fun (V539) -> {'Idris.Prelude.Types.Left', V539} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V540) -> {'Idris.Prelude.Types.Right', V537} end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E302, E303)); {'Idris.Idris.Syntax.PList', E310, E311, E312} -> (fun (V541, V542, V543) -> fun (V544) -> ('un--expandList'(V0, V1, V2, V4, V3, V5, V6, V542, V543, V544)) end end(E310, E311, E312)); {'Idris.Idris.Syntax.PSnocList', E313, E314, E315} -> (fun (V545, V546, V547) -> fun (V548) -> ('un--expandSnocList'(V0, V1, V2, V4, V3, V5, V6, V546, ('Idris.Idris2.Data.List':'un--reverse'(V547)), V548)) end end(E313, E314, E315)); {'Idris.Idris.Syntax.PPair', E316, E317, E318} -> (fun (V549, V550, V551) -> fun (V552) -> begin (V553 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V550))(V552))), case V553 of {'Idris.Prelude.Types.Left', E319} -> (fun (V554) -> {'Idris.Prelude.Types.Left', V554} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V555) -> begin (V556 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V551))(V552))), case V556 of {'Idris.Prelude.Types.Left', E321} -> (fun (V557) -> {'Idris.Prelude.Types.Left', V557} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V558) -> begin (V559 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V549, ('un--mkpairname'())}, [V555 | [V558 | []]]))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V549, {'Idris.TTImp.TTImp.UniqueDefault', V559}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V549, ('un--pairname'())}, [V555 | [V558 | []]])) | [V559 | []]]}} end end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E316, E317, E318)); {'Idris.Idris.Syntax.PDPair', E323, E324, E325, E326, E327} -> (fun (V560, V561, V562, V563, V564) -> case V562 of {'Idris.Idris.Syntax.PRef', E333, E334} -> (fun (V565, V566) -> fun (V567) -> case V566 of {'Idris.Core.Name.UN', E340} -> (fun (V568) -> case V563 of {'Idris.Idris.Syntax.PImplicit', E345} -> (fun (V569) -> begin (V570 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V564))(V567))), case V570 of {'Idris.Prelude.Types.Left', E346} -> (fun (V571) -> {'Idris.Prelude.Types.Left', V571} end(E346)); {'Idris.Prelude.Types.Right', E347} -> (fun (V572) -> begin (V573 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V561, ('un--mkdpairname'())}, [{'Idris.TTImp.TTImp.IVar', V565, V566} | [V572 | []]]))), begin (V574 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V565))), begin (V576 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V565)) of {'Idris.Prelude.Types.Just', E348} -> (fun (V575) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDefault'(V3, {'Idris.Builtin.MkPair', V575, {'Idris.Builtin.MkPair', 4, {'Idris.Prelude.Types.Just', V566}}}, V567)) end(E348)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V576 of {'Idris.Prelude.Types.Left', E349} -> (fun (V577) -> {'Idris.Prelude.Types.Left', V577} end(E349)); {'Idris.Prelude.Types.Right', E350} -> (fun (V578) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V560, {'Idris.TTImp.TTImp.UniqueDefault', V573}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V561, ('un--dpairname'())}, [{'Idris.TTImp.TTImp.Implicit', V574, 0} | [{'Idris.TTImp.TTImp.ILam', V565, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V566}, {'Idris.TTImp.TTImp.Implicit', V574, 0}, V572} | []]])) | [V573 | []]]}} end(E350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E345)); _ -> begin (V579 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V563))(V567))), case V579 of {'Idris.Prelude.Types.Left', E341} -> (fun (V580) -> {'Idris.Prelude.Types.Left', V580} end(E341)); {'Idris.Prelude.Types.Right', E342} -> (fun (V581) -> begin (V582 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V564))(V567))), case V582 of {'Idris.Prelude.Types.Left', E343} -> (fun (V583) -> {'Idris.Prelude.Types.Left', V583} end(E343)); {'Idris.Prelude.Types.Right', E344} -> (fun (V584) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V561, ('un--dpairname'())}, [V581 | [{'Idris.TTImp.TTImp.ILam', V565, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V566}, V581, V584} | []]]))} end(E344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E340)); _ -> case V563 of {'Idris.Idris.Syntax.PImplicit', E335} -> (fun (V585) -> begin (V586 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V562))(V567))), case V586 of {'Idris.Prelude.Types.Left', E336} -> (fun (V587) -> {'Idris.Prelude.Types.Left', V587} end(E336)); {'Idris.Prelude.Types.Right', E337} -> (fun (V588) -> begin (V589 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V564))(V567))), case V589 of {'Idris.Prelude.Types.Left', E338} -> (fun (V590) -> {'Idris.Prelude.Types.Left', V590} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V591) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V561, ('un--mkdpairname'())}, [V588 | [V591 | []]]))} end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E335)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V560, <<"Invalid dependent pair type"/utf8>>}, V567)) end end end end(E333, E334)); _ -> fun (V592) -> case V563 of {'Idris.Idris.Syntax.PImplicit', E328} -> (fun (V593) -> begin (V594 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V562))(V592))), case V594 of {'Idris.Prelude.Types.Left', E329} -> (fun (V595) -> {'Idris.Prelude.Types.Left', V595} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V596) -> begin (V597 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V564))(V592))), case V597 of {'Idris.Prelude.Types.Left', E331} -> (fun (V598) -> {'Idris.Prelude.Types.Left', V598} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V599) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V561, ('un--mkdpairname'())}, [V596 | [V599 | []]]))} end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E328)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V560, <<"Invalid dependent pair type"/utf8>>}, V592)) end end end end(E323, E324, E325, E326, E327)); {'Idris.Idris.Syntax.PUnit', E351} -> (fun (V600) -> fun (V601) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V600, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IVar', V600, {'Idris.Core.Name.UN', <<"MkUnit"/utf8>>}}}, [{'Idris.TTImp.TTImp.IVar', V600, {'Idris.Core.Name.UN', <<"Unit"/utf8>>}} | [{'Idris.TTImp.TTImp.IVar', V600, {'Idris.Core.Name.UN', <<"MkUnit"/utf8>>}} | []]]}} end end(E351)); {'Idris.Idris.Syntax.PIfThenElse', E352, E353, E354, E355} -> (fun (V602, V603, V604, V605) -> begin (V606 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V602))), fun (V607) -> begin (V608 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V603))(V607))), case V608 of {'Idris.Prelude.Types.Left', E356} -> (fun (V609) -> {'Idris.Prelude.Types.Left', V609} end(E356)); {'Idris.Prelude.Types.Right', E357} -> (fun (V610) -> begin (V611 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V604, V607))), case V611 of {'Idris.Prelude.Types.Left', E358} -> (fun (V612) -> {'Idris.Prelude.Types.Left', V612} end(E358)); {'Idris.Prelude.Types.Right', E359} -> (fun (V613) -> begin (V614 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V605, V607))), case V614 of {'Idris.Prelude.Types.Left', E360} -> (fun (V615) -> {'Idris.Prelude.Types.Left', V615} end(E360)); {'Idris.Prelude.Types.Right', E361} -> (fun (V616) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V606, V610, {'Idris.TTImp.TTImp.IVar', V606, {'Idris.Core.Name.UN', <<"Bool"/utf8>>}}, [{'Idris.TTImp.TTImp.PatClause', V606, {'Idris.TTImp.TTImp.IVar', V606, {'Idris.Core.Name.UN', <<"True"/utf8>>}}, V613} | [{'Idris.TTImp.TTImp.PatClause', V606, {'Idris.TTImp.TTImp.IVar', V606, {'Idris.Core.Name.UN', <<"False"/utf8>>}}, V616} | []]]}} end(E361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E352, E353, E354, E355)); {'Idris.Idris.Syntax.PComprehension', E362, E363, E364} -> (fun (V617, V618, V619) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PDoBlock', V617, {'Idris.Prelude.Types.Nothing'}, ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V620) -> ('nested--11394-5986--in--un--guard'(V619, V618, V617, V6, V5, V4, V3, V2, V1, V0, V620)) end, V619)), [('nested--11394-5987--in--un--toPure'(V619, V618, V617, V6, V5, V4, V3, V2, V1, V0, V618)) | []]))})) end(E362, E363, E364)); {'Idris.Idris.Syntax.PRewrite', E365, E366, E367} -> (fun (V621, V622, V623) -> fun (V624) -> begin (V625 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V622))(V624))), case V625 of {'Idris.Prelude.Types.Left', E368} -> (fun (V626) -> {'Idris.Prelude.Types.Left', V626} end(E368)); {'Idris.Prelude.Types.Right', E369} -> (fun (V627) -> begin (V628 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V623))(V624))), case V628 of {'Idris.Prelude.Types.Left', E370} -> (fun (V629) -> {'Idris.Prelude.Types.Left', V629} end(E370)); {'Idris.Prelude.Types.Right', E371} -> (fun (V630) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V621, V627, V630}} end(E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E365, E366, E367)); {'Idris.Idris.Syntax.PRange', E372, E373, E374, E375} -> (fun (V631, V632, V633, V634) -> begin (V635 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V631))), ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, case V633 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V635, {'Idris.Idris.Syntax.PRef', V635, {'Idris.Core.Name.UN', <<"rangeFromTo"/utf8>>}}, [V632 | [V634 | []]])) end()); {'Idris.Prelude.Types.Just', E376} -> (fun (V636) -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V635, {'Idris.Idris.Syntax.PRef', V635, {'Idris.Core.Name.UN', <<"rangeFromThenTo"/utf8>>}}, [V632 | [V636 | [V634 | []]]])) end(E376)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E372, E373, E374, E375)); {'Idris.Idris.Syntax.PRangeStream', E377, E378, E379} -> (fun (V637, V638, V639) -> begin (V640 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V637))), ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, case V639 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V640, {'Idris.Idris.Syntax.PRef', V640, {'Idris.Core.Name.UN', <<"rangeFrom"/utf8>>}}, [V638 | []])) end()); {'Idris.Prelude.Types.Just', E380} -> (fun (V641) -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V640, {'Idris.Idris.Syntax.PRef', V640, {'Idris.Core.Name.UN', <<"rangeFromThen"/utf8>>}}, [V638 | [V641 | []]])) end(E380)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E377, E378, E379)); {'Idris.Idris.Syntax.PUnifyLog', E381, E382, E383} -> (fun (V642, V643, V644) -> fun (V645) -> begin (V646 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V644))(V645))), case V646 of {'Idris.Prelude.Types.Left', E384} -> (fun (V647) -> {'Idris.Prelude.Types.Left', V647} end(E384)); {'Idris.Prelude.Types.Right', E385} -> (fun (V648) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnifyLog', V642, V643, V648}} end(E385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E381, E382, E383)); {'Idris.Idris.Syntax.PPostfixApp', E386, E387, E388} -> (fun (V649, V650, V651) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V652) -> fun (V653) -> case V653 of {'Idris.Builtin.MkPair', E389, E390} -> (fun (V654, V655) -> {'Idris.Idris.Syntax.PApp', V654, {'Idris.Idris.Syntax.PRef', V654, V655}, V652} end(E389, E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V650, V651)))) end(E386, E387, E388)); {'Idris.Idris.Syntax.PPostfixAppPartial', E391, E392} -> (fun (V656, V657) -> begin (V658 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V656))), begin (V659 = {'Idris.Idris.Syntax.PRef', V658, {'Idris.Core.Name.MN', <<"paRoot"/utf8>>, 0}}), ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V656, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, V659, {'Idris.Idris.Syntax.PImplicit', V658}, ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V660) -> fun (V661) -> case V661 of {'Idris.Builtin.MkPair', E393, E394} -> (fun (V662, V663) -> {'Idris.Idris.Syntax.PApp', V662, {'Idris.Idris.Syntax.PRef', V662, V663}, V660} end(E393, E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V659, V657))})) end end end(E391, E392)); {'Idris.Idris.Syntax.PWithUnambigNames', E395, E396, E397} -> (fun (V664, V665, V666) -> fun (V667) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V668) -> case V668 of {'Idris.Prelude.Types.Left', E398} -> (fun (V669) -> {'Idris.Prelude.Types.Left', V669} end(E398)); {'Idris.Prelude.Types.Right', E399} -> (fun (V670) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V664, V665, V670}} end(E399)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V666)), V667)) end end(E395, E396, E397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugar'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'()), V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = (('un--desugarB'(V0, V10, V1, V2, V3, V4, V5, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V10))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V17 of {'Idris.Idris.Desugar.MkBangData', E6, E7} -> (fun (V18, V19) -> V19 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V13))} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--bindFun'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IVar', V4, ('un--addNS'(V1, {'Idris.Core.Name.UN', <<">>="/utf8>>}))}, V2}, V3} end.
'un--bindBangs'(V0, V1) -> case V0 of [] -> V1; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V6, V7) -> ('un--bindBangs'(V3, ('un--bindFun'(V6, {'Idris.Prelude.Types.Nothing'}, V7, {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V4}, {'Idris.TTImp.TTImp.Implicit', V6, 0}, V1})))) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addNS'(V0, V1) -> case V0 of {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> case V1 of {'Idris.Core.Name.NS', E1, E2} -> (fun (V3, V4) -> V1 end(E1, E2)); _ -> {'Idris.Core.Name.NS', V2, V1} end end(E0)); _ -> V1 end.
'un--addFromString'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.Context':'un--fromStringName'(V0, V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V2 end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V1))), {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V8, V7}, V2} end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
