-module('Idris.Idris2.Idris.SetOptions').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--preOptions-4782'/5,
  'case--preOptions-4739'/5,
  'case--preOptions-4696'/5,
  'case--preOptions-4653'/5,
  'case--preOptions-4610'/5,
  'case--preOptions-4569'/5,
  'case--preOptions-4530'/4,
  'case--preOptions-4491'/4,
  'case--preOptions-4450'/5,
  'case--preOptions-4334'/5,
  'case--preOptions-4232'/6,
  'case--preOptions-4210'/4,
  'case--preOptions-4163'/4,
  'case--preOptions-4122'/5,
  'case--preOptions-4081'/4,
  'case--preOptions-4040'/5,
  'case--preOptions-3997'/5,
  'case--preOptions-3956'/4,
  'case--case block in case block in addPkgDir-3770'/16,
  'case--case block in addPkgDir-3738'/15,
  'case--case block in addPkgDir-3652'/14,
  'case--addPkgDir-3605'/7,
  'case--candidateDirs-3541'/4,
  'case--case block in candidateDirs,getFile-3492'/7,
  'case--candidateDirs,getFile-3471'/5,
  'case--case block in candidateDirs,getVersion-3409'/7,
  'case--candidateDirs,getVersion-3366'/5,
  'nested--14311-3310--in--un--toVersion'/4,
  'nested--14311-3311--in--un--getVersion'/4,
  'nested--14311-3312--in--un--getFile'/4,
  'un--preOptions'/3,
  'un--postOptions'/7,
  'un--ideModeSocket'/1,
  'un--ideMode'/1,
  'un--dirOption'/2,
  'un--candidateDirs'/4,
  'un--addPkgDir'/4
]).
'case--preOptions-4782'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, (('Idris.Idris2.Core.Options.Log':'un--insertLogLevel'(V0))(V12)), V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4739'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.Prelude.Types.Just', V0}} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4696'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, {'Idris.Prelude.Types.Just', V0}, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4653'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, {'Idris.Prelude.Types.Just', V0}, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4610'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, {'Idris.Prelude.Types.Just', V0}, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4569'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V0, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4530'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V4, V5, V6, V7, V8, V9, V10, V11, V12, 0, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4491'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V4, V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4450'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4334'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, [V0 | V9], V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4232'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Context':'un--setCG'(V3, V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> (('un--preOptions'(V3, V2, V1))(V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> begin (V40 = begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, <<"No such code generator"/utf8>>))(V11))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E3} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V42) -> begin (V99 = begin (V98 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> V49 end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), begin (V57 = (V54(V55))), (V56(V57)) end end end end end end end}, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), ((V61(V63))(V62)) end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V65(V66))), (V67(V66)) end end end end}, fun (V68) -> fun (V69) -> V69 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Code generators available: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V70) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V70)) end, ('Idris.Idris2.Core.Options':'un--availableCGs'(case V4 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97) -> V75 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))))(V11))), {'Idris.Prelude.Types.Right', V98} end), case V99 of {'Idris.Prelude.Types.Left', E32} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V101) -> begin (V129 = (('Idris.Idris2.Libraries.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V104, V105, V106)) end end end end end, fun (V107) -> fun (V108) -> fun (V109) -> V108 end end end, fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> begin (V115 = (V112(V114))), begin (V116 = (V113(V114))), (V115(V116)) end end end end end end end}, fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> begin (V122 = (V119(V121))), ((V120(V122))(V121)) end end end end end end, fun (V123) -> fun (V124) -> fun (V125) -> begin (V126 = (V124(V125))), (V126(V125)) end end end end}, fun (V127) -> fun (V128) -> V128 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V11))), {'Idris.Prelude.Types.Right', V129} end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4210'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', 0, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4163'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4122'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4081'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-4040'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-3997'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-3956'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in addPkgDir-3770'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of 0 -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; 1 -> fun (V17) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.CantFindPackage', ('Idris.Idris2.Prelude.Types.String':'un--++'(V1, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.CommandLine':'dn--un--show_Show_PkgVersionBounds'(V0)), <<")"/utf8>>))))))}, V17)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in addPkgDir-3738'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of [] -> begin (V15 = []), ('case--case block in case block in addPkgDir-3770'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, case case case V3 of {'Idris.Core.Context.MkDefs', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V20 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V43, V44, V45, V46, V47, V48, V49, V50, V51) -> V45 end(E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66) -> V61 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end; [E51 | E52] -> (fun (V67, V68) -> case V67 of {'Idris.Builtin.MkPair', E53, E54} -> (fun (V69, V70) -> fun (V71) -> ('Idris.Idris2.Core.Context':'un--addExtraDir'(V2, V69, V71)) end end(E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in addPkgDir-3652'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V21, V22, V23)) end end end end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V25)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'('erased', V26, V27)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'('erased'))}}))(V12)))); 1 -> V9; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--addPkgDir-3605'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(V7, V5))), fun (V9) -> begin (V11 = begin (V10 = ('un--candidateDirs'(V8, V1, V0, V9))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V13) -> begin (V15 = begin (V14 = ('un--candidateDirs'(V4, V1, V0, V9))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E3} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V17) -> begin (V64 = case case case V3 of {'Idris.Core.Context.MkDefs', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50} -> (fun (V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V22 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V45 end(E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V61 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V83 = begin (V82 = (('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V67, V68, V69)) end end end end end, fun (V70) -> fun (V71) -> fun (V72) -> V71 end end end, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> begin (V78 = (V75(V77))), begin (V79 = (V76(V77))), (V78(V79)) end end end end end end end}, fun (V80) -> fun (V81) -> ('un--candidateDirs'(V80, V1, V0, V81)) end end, V64))(V9))), {'Idris.Prelude.Types.Right', V82} end), case V83 of {'Idris.Prelude.Types.Left', E51} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V85) -> begin (V87 = begin (V86 = {'Idris.Prelude.Types.Just', V7}), ('case--case block in addPkgDir-3652'(V0, V1, V2, V3, V4, V5, V7, V86, V8, V13, V17, V64, V85, ('Idris.Idris2.Data.List':'un--isNil'('erased', V13)))) end), begin (V90 = ('Idris.Idris2.Data.List':'un--sortBy'('erased', fun (V88) -> fun (V89) -> ('Idris.Idris2.Idris.CommandLine':'dn--un--compare_Ord_PkgVersion'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V89)), ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V88)))) end end, V87))), begin (V91 = {'Idris.Prelude.Types.Just', V7}), case V90 of [] -> begin (V92 = []), (('case--case block in case block in addPkgDir-3770'(V0, V1, V2, V3, V4, V5, V7, V91, V8, V13, V17, V64, V85, V87, V92, case case case V3 of {'Idris.Core.Context.MkDefs', E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103} -> (fun (V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119) -> V97 end(E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E68, E69, E70, E71, E72, E73, E74, E75, E76} -> (fun (V120, V121, V122, V123, V124, V125, V126, V127, V128) -> V122 end(E68, E69, E70, E71, E72, E73, E74, E75, E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkSessionOpts', E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67} -> (fun (V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143) -> V138 end(E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9)) end; [E104 | E105] -> (fun (V144, V145) -> case V144 of {'Idris.Builtin.MkPair', E106, E107} -> (fun (V146, V147) -> ('Idris.Idris2.Core.Context':'un--addExtraDir'(V2, V146, V9)) end(E106, E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E104, E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V148) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t get current directory"/utf8>>}, V148)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--candidateDirs-3541'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Right', E0} -> (fun (V4) -> fun (V5) -> ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V6) -> ('nested--14311-3312--in--un--getFile'(V0, V1, V2, V6)) end, V4)) end end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> fun (V8) -> [] end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in candidateDirs,getFile-3492'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(V2, V3)), V5}}; 1 -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--candidateDirs,getFile-3471'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> ('case--case block in candidateDirs,getFile-3492'(V0, V1, V2, V3, V5, V6, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V5, V1)), fun () -> ('Idris.Idris2.Idris.CommandLine':'un--inBounds'(V6, V0)) end)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in candidateDirs,getVersion-3409'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> {'Idris.Builtin.MkPair', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V15, V16, V17)) end end end end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V19)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V20, V21)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}))(('Idris.Idris2.Data.List':'un--intersperse'('erased', <<"-"/utf8>>, V4)))), V7} end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', V3, [0 | []]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--candidateDirs,getVersion-3366'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V5 of [] -> {'Idris.Builtin.MkPair', V6, [0 | []]}; _ -> ('case--case block in candidateDirs,getVersion-3409'(V0, V1, V2, V3, V5, V6, ('nested--14311-3310--in--un--toVersion'(V0, V1, V2, V6)))) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14311-3310--in--un--toVersion'(V0, V1, V2, V3) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', fun (V4) -> V4 end, ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V7, V8)) end end end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V10)) end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V13, V14)) end end end end}, fun (V15) -> ('Idris.Idris2.Data.String':'un--parsePositive'('erased', {'Idris.Prelude.Num.dn--un--__mkNum', fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--*_Num_Nat'(V18, V19)) end end, fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(V20)) end}, V15)) end, ('Idris.Idris2.Data.List1':'un--forget'('erased', ('Idris.Idris2.Data.String':'un--split'(fun (V21) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V21, $.)) end, V3)))))))).
'nested--14311-3311--in--un--getVersion'(V0, V1, V2, V3) -> ('case--candidateDirs,getVersion-3366'(V0, V1, V2, V3, ('Idris.Idris2.Libraries.Data.List1':'un--unsnoc'('erased', ('Idris.Idris2.Data.String':'un--split'(fun (V4) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V4, $-)) end, V3)))))).
'nested--14311-3312--in--un--getFile'(V0, V1, V2, V3) -> ('case--candidateDirs,getFile-3471'(V0, V1, V2, V3, ('nested--14311-3311--in--un--getVersion'(V0, V1, V2, V3)))).
'un--preOptions'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Idris.Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Idris.CommandLine.NoBanner'} -> (fun () -> fun (V6) -> begin (V25 = begin (V7 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V6))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V9 of {'Idris.Core.Options.MkSessionOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> {'Idris.Core.Options.MkSessionOpts', V10, 0, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24} end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V25 of {'Idris.Prelude.Types.Left', E19} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V27) -> (('un--preOptions'(V0, V1, V5))(V6)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.OutputFile', E21} -> (fun (V28) -> fun (V29) -> begin (V48 = begin (V30 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V29))), case V30 of {'Idris.Prelude.Types.Left', E22} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V32) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V32 of {'Idris.Core.Options.MkSessionOpts', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47) -> {'Idris.Core.Options.MkSessionOpts', V33, 0, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V48 of {'Idris.Prelude.Types.Left', E39} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V50) -> (('un--preOptions'(V0, V1, V5))(V29)) end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21)); {'Idris.Idris.CommandLine.ExecFn', E41} -> (fun (V51) -> fun (V52) -> begin (V71 = begin (V53 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V52))), case V53 of {'Idris.Prelude.Types.Left', E42} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V55) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V55 of {'Idris.Core.Options.MkSessionOpts', E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58} -> (fun (V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70) -> {'Idris.Core.Options.MkSessionOpts', V56, 0, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70} end(E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V52)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V71 of {'Idris.Prelude.Types.Left', E59} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V73) -> (('un--preOptions'(V0, V1, V5))(V52)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E41)); {'Idris.Idris.CommandLine.IdeMode'} -> (fun () -> fun (V74) -> begin (V93 = begin (V75 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V74))), case V75 of {'Idris.Prelude.Types.Left', E61} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V77) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V77 of {'Idris.Core.Options.MkSessionOpts', E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77} -> (fun (V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92) -> {'Idris.Core.Options.MkSessionOpts', V78, 0, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92} end(E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V74)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E78} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V95) -> (('un--preOptions'(V0, V1, V5))(V74)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.IdeModeSocket', E80} -> (fun (V96) -> fun (V97) -> begin (V116 = begin (V98 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V97))), case V98 of {'Idris.Prelude.Types.Left', E81} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V100) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V100 of {'Idris.Core.Options.MkSessionOpts', E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97} -> (fun (V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115) -> {'Idris.Core.Options.MkSessionOpts', V101, 0, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115} end(E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V97)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V116 of {'Idris.Prelude.Types.Left', E98} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V118) -> (('un--preOptions'(V0, V1, V5))(V97)) end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E80)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V119) -> begin (V138 = begin (V120 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V119))), case V120 of {'Idris.Prelude.Types.Left', E100} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V122) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V122 of {'Idris.Core.Options.MkSessionOpts', E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116} -> (fun (V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137) -> {'Idris.Core.Options.MkSessionOpts', V123, 0, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137} end(E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V119)) end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V138 of {'Idris.Prelude.Types.Left', E117} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V140) -> (('un--preOptions'(V0, V1, V5))(V119)) end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.Quiet'} -> (fun () -> fun (V141) -> begin (V142 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V1, {'Idris.Idris.REPLOpts.REPL', 0}, V141))), case V142 of {'Idris.Prelude.Types.Left', E119} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V144) -> (('un--preOptions'(V0, V1, V5))(V141)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.NoPrelude'} -> (fun () -> fun (V145) -> begin (V164 = begin (V146 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V145))), case V146 of {'Idris.Prelude.Types.Left', E121} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V148) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V148 of {'Idris.Core.Options.MkSessionOpts', E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137} -> (fun (V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163) -> {'Idris.Core.Options.MkSessionOpts', 0, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163} end(E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V145)) end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V164 of {'Idris.Prelude.Types.Left', E138} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V166) -> (('un--preOptions'(V0, V1, V5))(V145)) end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.SetCG', E140} -> (fun (V167) -> fun (V168) -> begin (V170 = begin (V169 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V169} end), case V170 of {'Idris.Prelude.Types.Left', E141} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V172) -> (('case--preOptions-4232'(V167, V5, V1, V0, V172, ('Idris.Idris2.Core.Options':'un--getCG'(case V172 of {'Idris.Core.Context.MkDefs', E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169} -> (fun (V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199) -> V177 end(E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168, E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V167))))(V168)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E140)); {'Idris.Idris.CommandLine.Directive', E170} -> (fun (V200) -> fun (V201) -> begin (V220 = begin (V202 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V201))), case V202 of {'Idris.Prelude.Types.Left', E171} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V204) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V204 of {'Idris.Core.Options.MkSessionOpts', E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187} -> (fun (V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219) -> {'Idris.Core.Options.MkSessionOpts', V205, V206, V207, V208, [V200 | V209], V210, V211, V212, V213, V214, V215, V216, V217, V218, V219} end(E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V201)) end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V220 of {'Idris.Prelude.Types.Left', E188} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V222) -> (('un--preOptions'(V0, V1, V5))(V201)) end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E170)); {'Idris.Idris.CommandLine.PkgPath', E190} -> (fun (V223) -> fun (V224) -> begin (V225 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, V223, V224))), case V225 of {'Idris.Prelude.Types.Left', E191} -> (fun (V226) -> {'Idris.Prelude.Types.Left', V226} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V227) -> (('un--preOptions'(V0, V1, V5))(V224)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E190)); {'Idris.Idris.CommandLine.SourceDir', E193} -> (fun (V228) -> fun (V229) -> begin (V230 = ('Idris.Idris2.Core.Context':'un--setSourceDir'(V0, {'Idris.Prelude.Types.Just', V228}, V229))), case V230 of {'Idris.Prelude.Types.Left', E194} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V232) -> (('un--preOptions'(V0, V1, V5))(V229)) end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E193)); {'Idris.Idris.CommandLine.BuildDir', E196} -> (fun (V233) -> fun (V234) -> begin (V235 = ('Idris.Idris2.Core.Context':'un--setBuildDir'(V0, V233, V234))), case V235 of {'Idris.Prelude.Types.Left', E197} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V237) -> (('un--preOptions'(V0, V1, V5))(V234)) end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E196)); {'Idris.Idris.CommandLine.OutputDir', E199} -> (fun (V238) -> fun (V239) -> begin (V240 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V0, {'Idris.Prelude.Types.Just', V238}, V239))), case V240 of {'Idris.Prelude.Types.Left', E200} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V242) -> (('un--preOptions'(V0, V1, V5))(V239)) end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E199)); {'Idris.Idris.CommandLine.Directory', E202} -> (fun (V243) -> fun (V244) -> begin (V246 = begin (V245 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V245} end), case V246 of {'Idris.Prelude.Types.Left', E203} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V248) -> begin (V285 = (('un--dirOption'(case case V248 of {'Idris.Core.Context.MkDefs', E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240} -> (fun (V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275) -> V253 end(E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E205, E206, E207, E208, E209, E210, E211, E212, E213} -> (fun (V276, V277, V278, V279, V280, V281, V282, V283, V284) -> V276 end(E205, E206, E207, E208, E209, E210, E211, E212, E213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V243))(V244))), case V285 of {'Idris.Prelude.Types.Left', E241} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V287) -> {'Idris.Prelude.Types.Right', 1} end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E202)); {'Idris.Idris.CommandLine.Timing'} -> (fun () -> fun (V288) -> begin (V289 = ('Idris.Idris2.Core.Context':'un--setLogTimings'(V0, 0, V288))), case V289 of {'Idris.Prelude.Types.Left', E243} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V291) -> (('un--preOptions'(V0, V1, V5))(V288)) end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.DebugElabCheck'} -> (fun () -> fun (V292) -> begin (V293 = ('Idris.Idris2.Core.Context':'un--setDebugElabCheck'(V0, 0, V292))), case V293 of {'Idris.Prelude.Types.Left', E245} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V295) -> (('un--preOptions'(V0, V1, V5))(V292)) end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E247} -> (fun (V296) -> fun (V297) -> begin (V298 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V1, {'Idris.Idris.REPLOpts.REPL', 0}, V297))), case V298 of {'Idris.Prelude.Types.Left', E248} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V300) -> begin (V319 = begin (V301 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V297))), case V301 of {'Idris.Prelude.Types.Left', E250} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V303) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V303 of {'Idris.Core.Options.MkSessionOpts', E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266} -> (fun (V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318) -> {'Idris.Core.Options.MkSessionOpts', V304, 0, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318} end(E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V297)) end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V319 of {'Idris.Prelude.Types.Left', E267} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V321) -> (('un--preOptions'(V0, V1, V5))(V297)) end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E247)); {'Idris.Idris.CommandLine.FindIPKG'} -> (fun () -> fun (V322) -> begin (V341 = begin (V323 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V322))), case V323 of {'Idris.Prelude.Types.Left', E269} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V325) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V325 of {'Idris.Core.Options.MkSessionOpts', E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285} -> (fun (V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340) -> {'Idris.Core.Options.MkSessionOpts', V326, V327, 0, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340} end(E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V322)) end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V341 of {'Idris.Prelude.Types.Left', E286} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V343) -> (('un--preOptions'(V0, V1, V5))(V322)) end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.IgnoreMissingIPKG'} -> (fun () -> fun (V344) -> begin (V363 = begin (V345 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V344))), case V345 of {'Idris.Prelude.Types.Left', E288} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E288)); {'Idris.Prelude.Types.Right', E289} -> (fun (V347) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V347 of {'Idris.Core.Options.MkSessionOpts', E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304} -> (fun (V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362) -> {'Idris.Core.Options.MkSessionOpts', V348, V349, V350, V351, V352, V353, V354, V355, V356, 0, V358, V359, V360, V361, V362} end(E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V344)) end(E289)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V363 of {'Idris.Prelude.Types.Left', E305} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E305)); {'Idris.Prelude.Types.Right', E306} -> (fun (V365) -> (('un--preOptions'(V0, V1, V5))(V344)) end(E306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.ChangedModules', E307} -> (fun (V366) -> fun (V367) -> begin (V386 = begin (V368 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V367))), case V368 of {'Idris.Prelude.Types.Left', E308} -> (fun (V369) -> {'Idris.Prelude.Types.Left', V369} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V370) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V370 of {'Idris.Core.Options.MkSessionOpts', E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324} -> (fun (V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385) -> {'Idris.Core.Options.MkSessionOpts', V371, V372, V373, V374, V375, V376, V366, V378, V379, V380, V381, V382, V383, V384, V385} end(E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V367)) end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V386 of {'Idris.Prelude.Types.Left', E325} -> (fun (V387) -> {'Idris.Prelude.Types.Left', V387} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V388) -> (('un--preOptions'(V0, V1, V5))(V367)) end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E307)); {'Idris.Idris.CommandLine.DumpCases', E327} -> (fun (V389) -> fun (V390) -> begin (V409 = begin (V391 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V390))), case V391 of {'Idris.Prelude.Types.Left', E328} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E328)); {'Idris.Prelude.Types.Right', E329} -> (fun (V393) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V393 of {'Idris.Core.Options.MkSessionOpts', E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344} -> (fun (V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405, V406, V407, V408) -> {'Idris.Core.Options.MkSessionOpts', V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, {'Idris.Prelude.Types.Just', V389}, V406, V407, V408} end(E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V390)) end(E329)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V409 of {'Idris.Prelude.Types.Left', E345} -> (fun (V410) -> {'Idris.Prelude.Types.Left', V410} end(E345)); {'Idris.Prelude.Types.Right', E346} -> (fun (V411) -> (('un--preOptions'(V0, V1, V5))(V390)) end(E346)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E327)); {'Idris.Idris.CommandLine.DumpLifted', E347} -> (fun (V412) -> fun (V413) -> begin (V432 = begin (V414 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V413))), case V414 of {'Idris.Prelude.Types.Left', E348} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E348)); {'Idris.Prelude.Types.Right', E349} -> (fun (V416) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V416 of {'Idris.Core.Options.MkSessionOpts', E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364} -> (fun (V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431) -> {'Idris.Core.Options.MkSessionOpts', V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, {'Idris.Prelude.Types.Just', V412}, V430, V431} end(E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V413)) end(E349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V432 of {'Idris.Prelude.Types.Left', E365} -> (fun (V433) -> {'Idris.Prelude.Types.Left', V433} end(E365)); {'Idris.Prelude.Types.Right', E366} -> (fun (V434) -> (('un--preOptions'(V0, V1, V5))(V413)) end(E366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E347)); {'Idris.Idris.CommandLine.DumpANF', E367} -> (fun (V435) -> fun (V436) -> begin (V455 = begin (V437 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V436))), case V437 of {'Idris.Prelude.Types.Left', E368} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E368)); {'Idris.Prelude.Types.Right', E369} -> (fun (V439) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V439 of {'Idris.Core.Options.MkSessionOpts', E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381, E382, E383, E384} -> (fun (V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454) -> {'Idris.Core.Options.MkSessionOpts', V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, {'Idris.Prelude.Types.Just', V435}, V454} end(E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381, E382, E383, E384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V436)) end(E369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V455 of {'Idris.Prelude.Types.Left', E385} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V457) -> (('un--preOptions'(V0, V1, V5))(V436)) end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E367)); {'Idris.Idris.CommandLine.DumpVMCode', E387} -> (fun (V458) -> fun (V459) -> begin (V478 = begin (V460 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V459))), case V460 of {'Idris.Prelude.Types.Left', E388} -> (fun (V461) -> {'Idris.Prelude.Types.Left', V461} end(E388)); {'Idris.Prelude.Types.Right', E389} -> (fun (V462) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V462 of {'Idris.Core.Options.MkSessionOpts', E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400, E401, E402, E403, E404} -> (fun (V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477) -> {'Idris.Core.Options.MkSessionOpts', V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, {'Idris.Prelude.Types.Just', V458}} end(E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400, E401, E402, E403, E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V459)) end(E389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V478 of {'Idris.Prelude.Types.Left', E405} -> (fun (V479) -> {'Idris.Prelude.Types.Left', V479} end(E405)); {'Idris.Prelude.Types.Right', E406} -> (fun (V480) -> (('un--preOptions'(V0, V1, V5))(V459)) end(E406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E387)); {'Idris.Idris.CommandLine.Logging', E407} -> (fun (V481) -> fun (V482) -> begin (V501 = begin (V483 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V482))), case V483 of {'Idris.Prelude.Types.Left', E408} -> (fun (V484) -> {'Idris.Prelude.Types.Left', V484} end(E408)); {'Idris.Prelude.Types.Right', E409} -> (fun (V485) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V485 of {'Idris.Core.Options.MkSessionOpts', E410, E411, E412, E413, E414, E415, E416, E417, E418, E419, E420, E421, E422, E423, E424} -> (fun (V486, V487, V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500) -> {'Idris.Core.Options.MkSessionOpts', V486, V487, V488, V489, V490, V491, V492, (('Idris.Idris2.Core.Options.Log':'un--insertLogLevel'(V481))(V493)), V494, V495, V496, V497, V498, V499, V500} end(E410, E411, E412, E413, E414, E415, E416, E417, E418, E419, E420, E421, E422, E423, E424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V482)) end(E409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V501 of {'Idris.Prelude.Types.Left', E425} -> (fun (V502) -> {'Idris.Prelude.Types.Left', V502} end(E425)); {'Idris.Prelude.Types.Right', E426} -> (fun (V503) -> (('un--preOptions'(V0, V1, V5))(V482)) end(E426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E407)); {'Idris.Idris.CommandLine.ConsoleWidth', E427} -> (fun (V504) -> fun (V505) -> begin (V506 = ('Idris.Idris2.Idris.REPLOpts':'un--setConsoleWidth'(V1, V504, V505))), case V506 of {'Idris.Prelude.Types.Left', E428} -> (fun (V507) -> {'Idris.Prelude.Types.Left', V507} end(E428)); {'Idris.Prelude.Types.Right', E429} -> (fun (V508) -> (('un--preOptions'(V0, V1, V5))(V505)) end(E429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E427)); {'Idris.Idris.CommandLine.Color', E430} -> (fun (V509) -> fun (V510) -> begin (V511 = ('Idris.Idris2.Idris.REPLOpts':'un--setColor'(V1, V509, V510))), case V511 of {'Idris.Prelude.Types.Left', E431} -> (fun (V512) -> {'Idris.Prelude.Types.Left', V512} end(E431)); {'Idris.Prelude.Types.Right', E432} -> (fun (V513) -> (('un--preOptions'(V0, V1, V5))(V510)) end(E432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E430)); _ -> ('un--preOptions'(V0, V1, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--postOptions'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of [] -> fun (V7) -> {'Idris.Prelude.Types.Right', 0} end; _ -> case V5 of {'Idris.Idris.REPL.ErrorLoadingFile', E27, E28} -> (fun (V8, V9) -> case V6 of [E56 | E57] -> (fun (V10, V11) -> case V10 of {'Idris.Idris.CommandLine.OutputFile', E85} -> (fun (V12) -> fun (V13) -> begin (V17 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V14) -> case V14 of {'Idris.Prelude.Types.Left', E86} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V11)), V13))), case V17 of {'Idris.Prelude.Types.Left', E88} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V19) -> {'Idris.Prelude.Types.Right', 1} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85)); _ -> case V6 of [E58 | E59] -> (fun (V20, V21) -> case V20 of {'Idris.Idris.CommandLine.OutputFile', E60} -> (fun (V22) -> fun (V23) -> begin (V28 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V24) -> case V24 of {'Idris.Prelude.Types.Left', E61} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V27) -> ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V22, V27)) end, V23))), case V28 of {'Idris.Prelude.Types.Left', E63} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V30) -> begin (V34 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V31) -> case V31 of {'Idris.Prelude.Types.Left', E65} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V21)), V23))), case V34 of {'Idris.Prelude.Types.Left', E67} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V36) -> {'Idris.Prelude.Types.Right', 1} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E60)); {'Idris.Idris.CommandLine.ExecFn', E69} -> (fun (V37) -> fun (V38) -> begin (V43 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V39) -> case V39 of {'Idris.Prelude.Types.Left', E70} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V42) -> ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V37}}, V42)) end, V38))), case V43 of {'Idris.Prelude.Types.Left', E72} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V45) -> begin (V49 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V46) -> case V46 of {'Idris.Prelude.Types.Left', E74} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V48) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V21)), V38))), case V49 of {'Idris.Prelude.Types.Left', E76} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V51) -> {'Idris.Prelude.Types.Right', 1} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E69)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V52) -> begin (V56 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V53) -> case V53 of {'Idris.Prelude.Types.Left', E78} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V21)), V52))), case V56 of {'Idris.Prelude.Types.Left', E80} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V58) -> {'Idris.Prelude.Types.Right', 1} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E82} -> (fun (V59) -> fun (V60) -> begin (V61 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V59))(V60))), case V61 of {'Idris.Prelude.Types.Left', E83} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V63) -> {'Idris.Prelude.Types.Right', 1} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E82)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V21)) end end(E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56, E57)); _ -> case V6 of [E29 | E30] -> (fun (V64, V65) -> case V64 of {'Idris.Idris.CommandLine.OutputFile', E31} -> (fun (V66) -> fun (V67) -> begin (V72 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V68) -> case V68 of {'Idris.Prelude.Types.Left', E32} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V70) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V71) -> ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V66, V71)) end, V67))), case V72 of {'Idris.Prelude.Types.Left', E34} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V74) -> begin (V78 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V75) -> case V75 of {'Idris.Prelude.Types.Left', E36} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V77) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V65)), V67))), case V78 of {'Idris.Prelude.Types.Left', E38} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V80) -> {'Idris.Prelude.Types.Right', 1} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31)); {'Idris.Idris.CommandLine.ExecFn', E40} -> (fun (V81) -> fun (V82) -> begin (V87 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V83) -> case V83 of {'Idris.Prelude.Types.Left', E41} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V85) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V86) -> ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V81}}, V86)) end, V82))), case V87 of {'Idris.Prelude.Types.Left', E43} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V89) -> begin (V93 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V90) -> case V90 of {'Idris.Prelude.Types.Left', E45} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V65)), V82))), case V93 of {'Idris.Prelude.Types.Left', E47} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V95) -> {'Idris.Prelude.Types.Right', 1} end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E40)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V96) -> begin (V100 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V97) -> case V97 of {'Idris.Prelude.Types.Left', E49} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V65)), V96))), case V100 of {'Idris.Prelude.Types.Left', E51} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V102) -> {'Idris.Prelude.Types.Right', 1} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E53} -> (fun (V103) -> fun (V104) -> begin (V105 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V103))(V104))), case V105 of {'Idris.Prelude.Types.Left', E54} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V107) -> {'Idris.Prelude.Types.Right', 1} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E53)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V65)) end end(E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27, E28)); _ -> case V6 of [E0 | E1] -> (fun (V108, V109) -> case V108 of {'Idris.Idris.CommandLine.OutputFile', E2} -> (fun (V110) -> fun (V111) -> begin (V116 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V112) -> case V112 of {'Idris.Prelude.Types.Left', E3} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V114) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V115) -> ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V110, V115)) end, V111))), case V116 of {'Idris.Prelude.Types.Left', E5} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V118) -> begin (V122 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V119) -> case V119 of {'Idris.Prelude.Types.Left', E7} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V121) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V109)), V111))), case V122 of {'Idris.Prelude.Types.Left', E9} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V124) -> {'Idris.Prelude.Types.Right', 1} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); {'Idris.Idris.CommandLine.ExecFn', E11} -> (fun (V125) -> fun (V126) -> begin (V131 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V127) -> case V127 of {'Idris.Prelude.Types.Left', E12} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V129) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V130) -> ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V125}}, V130)) end, V126))), case V131 of {'Idris.Prelude.Types.Left', E14} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V133) -> begin (V137 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V134) -> case V134 of {'Idris.Prelude.Types.Left', E16} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V136) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V109)), V126))), case V137 of {'Idris.Prelude.Types.Left', E18} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V139) -> {'Idris.Prelude.Types.Right', 1} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E11)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V140) -> begin (V144 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V141) -> case V141 of {'Idris.Prelude.Types.Left', E20} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V143) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--postOptions'(V0, V1, V2, V3, V4, V5, V109)), V140))), case V144 of {'Idris.Prelude.Types.Left', E22} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V146) -> {'Idris.Prelude.Types.Right', 1} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E24} -> (fun (V147) -> fun (V148) -> begin (V149 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V147))(V148))), case V149 of {'Idris.Prelude.Types.Left', E25} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V151) -> {'Idris.Prelude.Types.Right', 1} end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V109)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--ideModeSocket'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.IdeModeSocket', E2} -> (fun (V3) -> 0 end(E2)); _ -> ('un--ideModeSocket'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ideMode'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.IdeMode'} -> (fun () -> 0 end()); _ -> ('un--ideMode'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dirOption'(V0, V1) -> case V1 of {'Idris.Idris.CommandLine.LibDir'} -> (fun () -> fun (V2) -> begin (V40 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> V9 end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> begin (V16 = (V13(V15))), begin (V17 = (V14(V15))), (V16(V17)) end end end end end end end}, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), ((V21(V23))(V22)) end end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V25(V26))), (V27(V26)) end end end end}, fun (V28) -> fun (V29) -> V29 end end}, ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(case V0 of {'Idris.Core.Options.MkDirs', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V35 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"idris2-"/utf8>>, ('Idris.Idris2.Idris.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'())))))))))(V2))), {'Idris.Prelude.Types.Right', V40} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--candidateDirs'(V0, V1, V2, V3) -> begin (V31 = (('Idris.Idris2.Erlang.System.Directory':'un--dirEntries'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V6, V7, V8)) end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> V10 end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> begin (V17 = (V14(V16))), begin (V18 = (V15(V16))), (V17(V18)) end end end end end end end}, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), ((V22(V24))(V23)) end end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V26(V27))), (V28(V27)) end end end end}, fun (V29) -> fun (V30) -> V30 end end}, V0))(V3))), case V31 of {'Idris.Prelude.Types.Right', E0} -> (fun (V32) -> ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V33) -> ('nested--14311-3312--in--un--getFile'(V2, V1, V0, V33)) end, V32)) end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V34) -> [] end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--addPkgDir'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V54 = ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(case case case V7 of {'Idris.Core.Context.MkDefs', E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V12 end(E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E12, E13, E14, E15, E16, E17, E18, E19, E20} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V35 end(E12, E13, E14, E15, E16, E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V49 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"idris2-"/utf8>>, ('Idris.Idris2.Idris.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'())))))))), begin (V101 = case case case V7 of {'Idris.Core.Context.MkDefs', E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93} -> (fun (V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81) -> V59 end(E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E58, E59, E60, E61, E62, E63, E64, E65, E66} -> (fun (V82, V83, V84, V85, V86, V87, V88, V89, V90) -> V82 end(E58, E59, E60, E61, E62, E63, E64, E65, E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V91, V92, V93, V94, V95, V96, V97, V98, V99, V100) -> V94 end(E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V130 = begin (V129 = (('Idris.Idris2.Erlang.System.Directory':'un--currentDir'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V104, V105, V106)) end end end end end, fun (V107) -> fun (V108) -> fun (V109) -> V108 end end end, fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> begin (V115 = (V112(V114))), begin (V116 = (V113(V114))), (V115(V116)) end end end end end end end}, fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> begin (V122 = (V119(V121))), ((V120(V122))(V121)) end end end end end end, fun (V123) -> fun (V124) -> fun (V125) -> begin (V126 = (V124(V125))), (V126(V125)) end end end end}, fun (V127) -> fun (V128) -> V128 end end}))(V3))), {'Idris.Prelude.Types.Right', V129} end), case V130 of {'Idris.Prelude.Types.Left', E94} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V132) -> case V132 of {'Idris.Prelude.Types.Just', E96} -> (fun (V133) -> begin (V134 = ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(V133, V101))), begin (V136 = begin (V135 = ('un--candidateDirs'(V134, V1, V2, V3))), {'Idris.Prelude.Types.Right', V135} end), case V136 of {'Idris.Prelude.Types.Left', E97} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V138) -> begin (V140 = begin (V139 = ('un--candidateDirs'(V54, V1, V2, V3))), {'Idris.Prelude.Types.Right', V139} end), case V140 of {'Idris.Prelude.Types.Left', E99} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V142) -> begin (V189 = case case case V7 of {'Idris.Core.Context.MkDefs', E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146} -> (fun (V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169) -> V147 end(E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E111, E112, E113, E114, E115, E116, E117, E118, E119} -> (fun (V170, V171, V172, V173, V174, V175, V176, V177, V178) -> V170 end(E111, E112, E113, E114, E115, E116, E117, E118, E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkDirs', E101, E102, E103, E104, E105, E106, E107, E108, E109, E110} -> (fun (V179, V180, V181, V182, V183, V184, V185, V186, V187, V188) -> V186 end(E101, E102, E103, E104, E105, E106, E107, E108, E109, E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V208 = begin (V207 = (('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V192, V193, V194)) end end end end end, fun (V195) -> fun (V196) -> fun (V197) -> V196 end end end, fun (V198) -> fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> begin (V203 = (V200(V202))), begin (V204 = (V201(V202))), (V203(V204)) end end end end end end end}, fun (V205) -> fun (V206) -> ('un--candidateDirs'(V205, V1, V2, V206)) end end, V189))(V3))), {'Idris.Prelude.Types.Right', V207} end), case V208 of {'Idris.Prelude.Types.Left', E147} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V210) -> begin (V212 = begin (V211 = {'Idris.Prelude.Types.Just', V133}), ('case--case block in addPkgDir-3652'(V2, V1, V0, V7, V54, V101, V133, V211, V134, V138, V142, V189, V210, ('Idris.Idris2.Data.List':'un--isNil'('erased', V138)))) end), begin (V215 = ('Idris.Idris2.Data.List':'un--sortBy'('erased', fun (V213) -> fun (V214) -> ('Idris.Idris2.Idris.CommandLine':'dn--un--compare_Ord_PkgVersion'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V214)), ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V213)))) end end, V212))), begin (V216 = {'Idris.Prelude.Types.Just', V133}), case V215 of [] -> begin (V217 = []), (('case--case block in case block in addPkgDir-3770'(V2, V1, V0, V7, V54, V101, V133, V216, V134, V138, V142, V189, V210, V212, V217, case case case V7 of {'Idris.Core.Context.MkDefs', E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199} -> (fun (V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244) -> V222 end(E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E164, E165, E166, E167, E168, E169, E170, E171, E172} -> (fun (V245, V246, V247, V248, V249, V250, V251, V252, V253) -> V247 end(E164, E165, E166, E167, E168, E169, E170, E171, E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkSessionOpts', E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163} -> (fun (V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268) -> V263 end(E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3)) end; [E200 | E201] -> (fun (V269, V270) -> case V269 of {'Idris.Builtin.MkPair', E202, E203} -> (fun (V271, V272) -> ('Idris.Idris2.Core.Context':'un--addExtraDir'(V0, V271, V3)) end(E202, E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E200, E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E96)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t get current directory"/utf8>>}, V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
