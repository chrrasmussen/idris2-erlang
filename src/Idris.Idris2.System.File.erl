-module('Idris.Idris2.System.File').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--chmodRaw-2263'/6,
  'case--case block in readLinesOnto-1964'/7,
  'case--readLinesOnto-1948'/7,
  'case--withFile-1822'/9,
  'case--fileSize-1730'/5,
  'case--removeFile-1673'/5,
  'case--fileStatusTime-1618'/5,
  'case--fileModifiedTime-1563'/5,
  'case--fileAccessTime-1508'/5,
  'case--popen-1429'/6,
  'case--fPutStr-1302'/6,
  'case--fGetChar-1239'/6,
  'case--fGetChars-1169'/6,
  'case--fGetLine-1111'/5,
  'case--fSeekLine-1052'/5,
  'case--firstExists-961'/5,
  'case--exists-880'/4,
  'case--openFile-812'/6,
  'case--returnError-604'/4,
  'case--modeStr-573'/1,
  'case--modeStr-563'/1,
  'case--modeStr-553'/1,
  'case--modeStr-543'/1,
  'case--modeStr-533'/1,
  'case--modeStr-523'/1,
  'nested--4340-2193--in--un--getMs'/2,
  'nested--4340-2192--in--un--getM'/2,
  'dn--un--show_Show_FileError'/1,
  'dn--un--showPrec_Show_FileError'/2,
  'dn--un--__Impl_Show_FileError'/0,
  'un--writeFile'/4,
  'un--withFile'/8,
  'un--stdout'/0,
  'un--stdin'/0,
  'un--stderr'/0,
  'un--returnError'/3,
  'un--removeFile'/3,
  'un--readLinesOnto'/6,
  'un--readFilePage'/5,
  'un--readFile'/3,
  'un--prim__writeLine'/3,
  'un--prim__stdout'/0,
  'un--prim__stdin'/0,
  'un--prim__stderr'/0,
  'un--prim__seekLine'/2,
  'un--prim__removeFile'/2,
  'un--prim__readLine'/2,
  'un--prim__readChars'/3,
  'un--prim__readChar'/2,
  'un--prim__popen'/3,
  'un--prim__pclose'/2,
  'un--prim__open'/3,
  'un--prim__flush'/2,
  'un--prim__fileStatusTime'/2,
  'un--prim__fileSize'/2,
  'un--prim__fileModifiedTime'/2,
  'un--prim__fileErrno'/1,
  'un--prim__fileAccessTime'/2,
  'un--prim__fPoll'/2,
  'un--prim__error'/2,
  'un--prim__eof'/2,
  'un--prim__close'/2,
  'un--prim__chmod'/3,
  'un--popen'/4,
  'un--pclose'/3,
  'un--openFile'/4,
  'un--ok'/4,
  'un--modeStr'/1,
  'un--mkMode'/1,
  'un--firstExists'/3,
  'un--fileStatusTime'/3,
  'un--fileSize'/3,
  'un--fileModifiedTime'/3,
  'un--fileError'/3,
  'un--fileAccessTime'/3,
  'un--fflush'/3,
  'un--fSeekLine'/3,
  'un--fPutStrLn'/4,
  'un--fPutStr'/4,
  'un--fPoll'/3,
  'un--fGetLine'/3,
  'un--fGetChars'/4,
  'un--fGetChar'/3,
  'un--fEOF'/3,
  'un--exists'/3,
  'un--closeFile'/3,
  'un--chmodRaw'/4,
  'un--chmod'/4,
  'un--FilePtr'/0
]).
'case--chmodRaw-2263'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V6, V7) -> V6 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((V12('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in readLinesOnto-1964'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of 0 -> ('Idris.Idris2.Prelude.Interfaces.Monad':'dn--un-->>=_Monad_Compose((. $m) $t)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E50, E51} -> (fun (V7, V8) -> V7 end(E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> case V12 of {'Idris.Prelude.Types.Left', E52} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V14) -> {'Idris.Prelude.Types.Right', (V11(V14))} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', V16} end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> case V19 of {'Idris.Prelude.Types.Left', E54} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V22) -> case V20 of {'Idris.Prelude.Types.Right', E56} -> (fun (V23) -> {'Idris.Prelude.Types.Right', (V22(V23))} end(E56)); {'Idris.Prelude.Types.Left', E57} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_(Either $e)'('erased', 'erased', 'erased', V27, V28)) end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_(Either $e)'('erased', 'erased', V30)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkTraversable', fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> case V34 of {'Idris.Prelude.Types.Left', E58} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V36) -> {'Idris.Prelude.Types.Right', (V33(V36))} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_(Either $e)'('erased', 'erased', 'erased', V39, V40, V41)) end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_(Either $e)'('erased', 'erased', 'erased', V44, V45, V46)) end end end end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_(Either $e)'('erased', 'erased', V48)) end end}, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_(Either $e)'('erased', 'erased', 'erased', 'erased', V52, V53, V54)) end end end end end end}}}, ('un--fGetLine'('erased', V1, V3)), fun (V55) -> ('un--readLinesOnto'('erased', V1, [V55 | V5], 0, (V2()), V3)) end)); _ -> begin (V56 = (V4 - 1)), ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.Interfaces.Functor':'dn--un--map_Functor_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V61, V62) -> V61 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V63, V64, V65) -> V63 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> case V69 of {'Idris.Prelude.Types.Left', E8} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V71) -> {'Idris.Prelude.Types.Right', (V68(V71))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V72) -> fun (V73) -> {'Idris.Prelude.Types.Right', V73} end end, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> case V76 of {'Idris.Prelude.Types.Left', E10} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V79) -> case V77 of {'Idris.Prelude.Types.Right', E12} -> (fun (V80) -> {'Idris.Prelude.Types.Right', (V79(V80))} end(E12)); {'Idris.Prelude.Types.Left', E13} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V82, V83, V84) -> V82 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E20, E21} -> (fun (V85, V86) -> V85 end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E17, E18, E19} -> (fun (V87, V88, V89) -> V87 end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> case V93 of {'Idris.Prelude.Types.Left', E22} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V95) -> {'Idris.Prelude.Types.Right', (V92(V95))} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V96) -> fun (V97) -> {'Idris.Prelude.Types.Right', V97} end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> case V100 of {'Idris.Prelude.Types.Left', E24} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V103) -> case V101 of {'Idris.Prelude.Types.Right', E26} -> (fun (V104) -> {'Idris.Prelude.Types.Right', (V103(V104))} end(E26)); {'Idris.Prelude.Types.Left', E27} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E14, E15, E16} -> (fun (V106, V107, V108) -> V106 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V59, V60)) end end end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--pure_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E31, E32} -> (fun (V111, V112) -> V111 end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E28, E29, E30} -> (fun (V113, V114, V115) -> V113 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> case V119 of {'Idris.Prelude.Types.Left', E33} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V121) -> {'Idris.Prelude.Types.Right', (V118(V121))} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V122) -> fun (V123) -> {'Idris.Prelude.Types.Right', V123} end end, fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> case V126 of {'Idris.Prelude.Types.Left', E35} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V129) -> case V127 of {'Idris.Prelude.Types.Right', E37} -> (fun (V130) -> {'Idris.Prelude.Types.Right', (V129(V130))} end(E37)); {'Idris.Prelude.Types.Left', E38} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}}, V110)) end end, fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--<*>_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E42, E43} -> (fun (V136, V137) -> V136 end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E39, E40, E41} -> (fun (V138, V139, V140) -> V138 end(E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> case V144 of {'Idris.Prelude.Types.Left', E44} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V146) -> {'Idris.Prelude.Types.Right', (V143(V146))} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V147) -> fun (V148) -> {'Idris.Prelude.Types.Right', V148} end end, fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> case V151 of {'Idris.Prelude.Types.Left', E46} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V154) -> case V152 of {'Idris.Prelude.Types.Right', E48} -> (fun (V155) -> {'Idris.Prelude.Types.Right', (V154(V155))} end(E48)); {'Idris.Prelude.Types.Left', E49} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}}, V134, V135)) end end end end}, ('un--fSeekLine'('erased', V1, V3)), ('un--readLinesOnto'('erased', V1, V5, V56, {'Idris.Data.Fuel.More', V2}, V3)))) end end.
'case--readLinesOnto-1948'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 1 -> case V4 of 0 -> ('Idris.Idris2.Prelude.Interfaces.Monad':'dn--un-->>=_Monad_Compose((. $m) $t)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E50, E51} -> (fun (V7, V8) -> V7 end(E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> case V12 of {'Idris.Prelude.Types.Left', E52} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V14) -> {'Idris.Prelude.Types.Right', (V11(V14))} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', V16} end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> case V19 of {'Idris.Prelude.Types.Left', E54} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V22) -> case V20 of {'Idris.Prelude.Types.Right', E56} -> (fun (V23) -> {'Idris.Prelude.Types.Right', (V22(V23))} end(E56)); {'Idris.Prelude.Types.Left', E57} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_(Either $e)'('erased', 'erased', 'erased', V27, V28)) end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_(Either $e)'('erased', 'erased', V30)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkTraversable', fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> case V34 of {'Idris.Prelude.Types.Left', E58} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V36) -> {'Idris.Prelude.Types.Right', (V33(V36))} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_(Either $e)'('erased', 'erased', 'erased', V39, V40, V41)) end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_(Either $e)'('erased', 'erased', 'erased', V44, V45, V46)) end end end end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_(Either $e)'('erased', 'erased', V48)) end end}, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_(Either $e)'('erased', 'erased', 'erased', 'erased', V52, V53, V54)) end end end end end end}}}, ('un--fGetLine'('erased', V1, V3)), fun (V55) -> ('un--readLinesOnto'('erased', V1, [V55 | V5], 0, (V2()), V3)) end)); _ -> begin (V56 = (V4 - 1)), ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.Interfaces.Functor':'dn--un--map_Functor_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V61, V62) -> V61 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V63, V64, V65) -> V63 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> case V69 of {'Idris.Prelude.Types.Left', E8} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V71) -> {'Idris.Prelude.Types.Right', (V68(V71))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V72) -> fun (V73) -> {'Idris.Prelude.Types.Right', V73} end end, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> case V76 of {'Idris.Prelude.Types.Left', E10} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V79) -> case V77 of {'Idris.Prelude.Types.Right', E12} -> (fun (V80) -> {'Idris.Prelude.Types.Right', (V79(V80))} end(E12)); {'Idris.Prelude.Types.Left', E13} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V82, V83, V84) -> V82 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E20, E21} -> (fun (V85, V86) -> V85 end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E17, E18, E19} -> (fun (V87, V88, V89) -> V87 end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> case V93 of {'Idris.Prelude.Types.Left', E22} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V95) -> {'Idris.Prelude.Types.Right', (V92(V95))} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V96) -> fun (V97) -> {'Idris.Prelude.Types.Right', V97} end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> case V100 of {'Idris.Prelude.Types.Left', E24} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V103) -> case V101 of {'Idris.Prelude.Types.Right', E26} -> (fun (V104) -> {'Idris.Prelude.Types.Right', (V103(V104))} end(E26)); {'Idris.Prelude.Types.Left', E27} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E14, E15, E16} -> (fun (V106, V107, V108) -> V106 end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V59, V60)) end end end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--pure_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E31, E32} -> (fun (V111, V112) -> V111 end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E28, E29, E30} -> (fun (V113, V114, V115) -> V113 end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> case V119 of {'Idris.Prelude.Types.Left', E33} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V121) -> {'Idris.Prelude.Types.Right', (V118(V121))} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V122) -> fun (V123) -> {'Idris.Prelude.Types.Right', V123} end end, fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> case V126 of {'Idris.Prelude.Types.Left', E35} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V129) -> case V127 of {'Idris.Prelude.Types.Right', E37} -> (fun (V130) -> {'Idris.Prelude.Types.Right', (V129(V130))} end(E37)); {'Idris.Prelude.Types.Left', E38} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}}, V110)) end end, fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--<*>_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E42, E43} -> (fun (V136, V137) -> V136 end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E39, E40, E41} -> (fun (V138, V139, V140) -> V138 end(E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> case V144 of {'Idris.Prelude.Types.Left', E44} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V146) -> {'Idris.Prelude.Types.Right', (V143(V146))} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V147) -> fun (V148) -> {'Idris.Prelude.Types.Right', V148} end end, fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> case V151 of {'Idris.Prelude.Types.Left', E46} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V154) -> case V152 of {'Idris.Prelude.Types.Right', E48} -> (fun (V155) -> {'Idris.Prelude.Types.Right', (V154(V155))} end(E48)); {'Idris.Prelude.Types.Left', E49} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}}, V134, V135)) end end end end}, ('un--fSeekLine'('erased', V1, V3)), ('un--readLinesOnto'('erased', V1, V5, V56, {'Idris.Data.Fuel.More', V2}, V3)))) end end; 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E66, E67} -> (fun (V157, V158) -> V157 end(E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E63, E64, E65} -> (fun (V159, V160, V161) -> V159 end(E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E60, E61, E62} -> (fun (V162, V163, V164) -> ((V163('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', 0, ('Idris.Idris2.Data.List':'un--reverse'('erased', V5))}})) end(E60, E61, E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--withFile-1822'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Right', E0} -> (fun (V9) -> case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E14, E15} -> (fun (V10, V11) -> V10 end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E1, E2, E3} -> (fun (V12, V13, V14) -> ((((V13('erased'))('erased'))((V4(V9))))(fun (V15) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E4, E5} -> (fun (V16, V17) -> V16 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('un--closeFile'('erased', V3, V9)), fun () -> case case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V18, V19) -> V18 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E9, E10, E11} -> (fun (V20, V21, V22) -> V20 end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E6, E7, E8} -> (fun (V23, V24, V25) -> ((V24('erased'))(V15)) end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end)) end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Left', E16} -> (fun (V26) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', case case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E23, E24} -> (fun (V27, V28) -> V27 end(E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E20, E21, E22} -> (fun (V29, V30, V31) -> V29 end(E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E17, E18, E19} -> (fun (V32, V33, V34) -> V32 end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V35) -> {'Idris.Prelude.Types.Left', V35} end, (V5(V26)))) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileSize-1730'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--removeFile-1673'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, {'Idris.Builtin.MkUnit'})); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileStatusTime-1618'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileModifiedTime-1563'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fileAccessTime-1508'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--ok'('erased', 'erased', V1, V3)); 1 -> ('un--returnError'('erased', 'erased', V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--popen-1429'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V6, V7) -> V6 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((V12('erased'))({'Idris.Prelude.Types.Right', V4})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fPutStr-1302'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, {'Idris.Builtin.MkUnit'})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetChar-1239'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Char'(V3)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetChars-1169'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, ('Idris.Idris2.Prelude.IO':'un--prim__getString'(V4)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fGetLine-1111'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, ('Idris.Idris2.Prelude.IO':'un--prim__getString'(V3)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fSeekLine-1052'(V0, V1, V2, V3, V4) -> case V4 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, {'Idris.Builtin.MkUnit'})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--firstExists-961'(V0, V1, V2, V3, V4) -> case V4 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V5, V6) -> V5 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V7, V8, V9) -> V7 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V10, V11, V12) -> ((V11('erased'))({'Idris.Prelude.Types.Just', V2})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> ('un--firstExists'('erased', V1, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--exists-880'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Right', E0} -> (fun (V4) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E1, E2} -> (fun (V5, V6) -> V5 end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('un--closeFile'('erased', V1, V4)), fun () -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E9, E10} -> (fun (V7, V8) -> V7 end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V9, V10, V11) -> V9 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V12, V13, V14) -> ((V13('erased'))(0)) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0)); {'Idris.Prelude.Types.Left', E11} -> (fun (V15) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E18, E19} -> (fun (V16, V17) -> V16 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V18, V19, V20) -> V18 end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E12, E13, E14} -> (fun (V21, V22, V23) -> ((V22('erased'))(1)) end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--openFile-812'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--returnError'('erased', 'erased', V1)); 1 -> ('un--ok'('erased', 'erased', V1, V4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--returnError-604'(V0, V1, V2, V3) -> case V3 of 0 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E14, E15} -> (fun (V4, V5) -> V4 end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V6, V7, V8) -> V6 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V9, V10, V11) -> ((V10('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileReadError'}})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E22, E23} -> (fun (V12, V13) -> V12 end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V14, V15, V16) -> V14 end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E16, E17, E18} -> (fun (V17, V18, V19) -> ((V18('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileWriteError'}})) end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 2 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E30, E31} -> (fun (V20, V21) -> V20 end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E27, E28, E29} -> (fun (V22, V23, V24) -> V22 end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E24, E25, E26} -> (fun (V25, V26, V27) -> ((V26('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileNotFound'}})) end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 3 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E38, E39} -> (fun (V28, V29) -> V28 end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E35, E36, E37} -> (fun (V30, V31, V32) -> V30 end(E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E32, E33, E34} -> (fun (V33, V34, V35) -> ((V34('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.PermissionDenied'}})) end(E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 4 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E46, E47} -> (fun (V36, V37) -> V36 end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E43, E44, E45} -> (fun (V38, V39, V40) -> V38 end(E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E40, E41, E42} -> (fun (V41, V42, V43) -> ((V42('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileExists'}})) end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V44, V45) -> V44 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V46, V47, V48) -> V46 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V49, V50, V51) -> ((V50('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.GenericFileError', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V3, 5))}})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--modeStr-573'(V0) -> case V0 of 0 -> <<"ab+"/utf8>>; 1 -> <<"a+"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-563'(V0) -> case V0 of 0 -> <<"wb+"/utf8>>; 1 -> <<"w+"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-553'(V0) -> case V0 of 0 -> <<"rb+"/utf8>>; 1 -> <<"r+"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-543'(V0) -> case V0 of 0 -> <<"ab"/utf8>>; 1 -> <<"a"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-533'(V0) -> case V0 of 0 -> <<"wb"/utf8>>; 1 -> <<"w"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--modeStr-523'(V0) -> case V0 of 0 -> <<"rb"/utf8>>; 1 -> <<"r"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--4340-2193--in--un--getMs'(V0, V1) -> (('Idris.Idris2.Prelude.Interfaces':'un--sum'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V14)) end end}, {'Idris.Prelude.Num.dn--un--__mkNum', fun (V15) -> fun (V16) -> ((V15 + V16) rem 9223372036854775808) end end, fun (V17) -> fun (V18) -> ((V17 * V18) rem 9223372036854775808) end end, fun (V19) -> V19 end}}))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2) -> ('nested--4340-2192--in--un--getM'(V0, V2)) end, V1)))).
'nested--4340-2192--in--un--getM'(V0, V1) -> case V1 of {'Idris.System.File.FileMode.Read'} -> (fun () -> 4 end()); {'Idris.System.File.FileMode.Write'} -> (fun () -> 2 end()); {'Idris.System.File.FileMode.Execute'} -> (fun () -> 1 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_FileError'(V0) -> case V0 of {'Idris.System.File.GenericFileError', E0} -> (fun (V1) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"File error: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V1)))) end(E0)); {'Idris.System.File.FileReadError'} -> (fun () -> <<"File Read Error"/utf8>> end()); {'Idris.System.File.FileWriteError'} -> (fun () -> <<"File Write Error"/utf8>> end()); {'Idris.System.File.FileNotFound'} -> (fun () -> <<"File Not Found"/utf8>> end()); {'Idris.System.File.PermissionDenied'} -> (fun () -> <<"Permission Denied"/utf8>> end()); {'Idris.System.File.FileExists'} -> (fun () -> <<"File Exists"/utf8>> end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show_FileError'(V0, V1) -> ('dn--un--show_Show_FileError'(V1)).
'dn--un--__Impl_Show_FileError'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_FileError'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_FileError'(V1, V2)) end end}.
'un--writeFile'(V0, V1, V2, V3) -> ('un--withFile'('erased', 'erased', 'erased', V1, V2, {'Idris.System.File.WriteTruncate'}, case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V4, V5) -> V4 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V6, V7, V8) -> V6 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V9, V10, V11) -> fun (V12) -> ((V10('erased'))(V12)) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V13) -> ('Idris.Idris2.Prelude.Basics':'un--flip'('erased', 'erased', 'erased', fun (V14) -> fun (V15) -> ('un--fPutStr'('erased', V1, V14, V15)) end end, V3, V13)) end)).
'un--withFile'(V0, V1, V2, V3, V4, V5, V6, V7) -> case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E28, E29} -> (fun (V8, V9) -> V8 end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V10, V11, V12) -> ((((V11('erased'))('erased'))(('un--openFile'('erased', V3, V4, V5))))(fun (V13) -> case V13 of {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E17, E18} -> (fun (V15, V16) -> V15 end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E4, E5, E6} -> (fun (V17, V18, V19) -> ((((V18('erased'))('erased'))((V7(V14))))(fun (V20) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E7, E8} -> (fun (V21, V22) -> V21 end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('un--closeFile'('erased', V3, V14)), fun () -> case case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E15, E16} -> (fun (V23, V24) -> V23 end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E12, E13, E14} -> (fun (V25, V26, V27) -> V25 end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E9, E10, E11} -> (fun (V28, V29, V30) -> ((V29('erased'))(V20)) end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Prelude.Types.Left', E19} -> (fun (V31) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', case case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E26, E27} -> (fun (V32, V33) -> V32 end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E23, E24, E25} -> (fun (V34, V35, V36) -> V34 end(E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E20, E21, E22} -> (fun (V37, V38, V39) -> V37 end(E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V40) -> {'Idris.Prelude.Types.Left', V40} end, (V6(V31)))) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--stdout'() -> ('un--prim__stdout'()).
'un--stdin'() -> ('un--prim__stdin'()).
'un--stderr'() -> ('un--prim__stderr'()).
'un--returnError'(V0, V1, V2) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E53, E54} -> (fun (V3, V4) -> V3 end(E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V57, V58) -> ((V58('erased'))(fun (V59) -> ('un--prim__fileErrno'(V59)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case V8 of 0 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V9, V10) -> V9 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E16, E17, E18} -> (fun (V11, V12, V13) -> V11 end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E13, E14, E15} -> (fun (V14, V15, V16) -> ((V15('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileReadError'}})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E27, E28} -> (fun (V17, V18) -> V17 end(E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E24, E25, E26} -> (fun (V19, V20, V21) -> V19 end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E21, E22, E23} -> (fun (V22, V23, V24) -> ((V23('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileWriteError'}})) end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 2 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E35, E36} -> (fun (V25, V26) -> V25 end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E32, E33, E34} -> (fun (V27, V28, V29) -> V27 end(E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E29, E30, E31} -> (fun (V30, V31, V32) -> ((V31('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileNotFound'}})) end(E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 3 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E43, E44} -> (fun (V33, V34) -> V33 end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E40, E41, E42} -> (fun (V35, V36, V37) -> V35 end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E37, E38, E39} -> (fun (V38, V39, V40) -> ((V39('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.PermissionDenied'}})) end(E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 4 -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E51, E52} -> (fun (V41, V42) -> V41 end(E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E48, E49, E50} -> (fun (V43, V44, V45) -> V43 end(E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E45, E46, E47} -> (fun (V46, V47, V48) -> ((V47('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.FileExists'}})) end(E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V49, V50) -> V49 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V51, V52, V53) -> V51 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V54, V55, V56) -> ((V55('erased'))({'Idris.Prelude.Types.Left', {'Idris.System.File.GenericFileError', ('Idris.Idris2.Prelude.Num':'dn--un---_Neg_Int'(V8, 5))}})) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--removeFile'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__removeFile'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--removeFile-1673'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--readLinesOnto'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Data.Fuel.Dry'} -> (fun () -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V6, V7) -> V6 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((V12('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', 1, ('Idris.Idris2.Data.List':'un--reverse'('erased', V2))}})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); {'Idris.Data.Fuel.More', E8} -> (fun (V14) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E80, E81} -> (fun (V15, V16) -> V15 end(E80, E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E9, E10, E11} -> (fun (V17, V18, V19) -> ((((V18('erased'))('erased'))(('un--fEOF'('erased', V1, V5))))(fun (V20) -> case V20 of 1 -> case V3 of 0 -> ('Idris.Idris2.Prelude.Interfaces.Monad':'dn--un-->>=_Monad_Compose((. $m) $t)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E62, E63} -> (fun (V21, V22) -> V21 end(E62, E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> case V26 of {'Idris.Prelude.Types.Left', E64} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V28) -> {'Idris.Prelude.Types.Right', (V25(V28))} end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V29) -> fun (V30) -> {'Idris.Prelude.Types.Right', V30} end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> case V33 of {'Idris.Prelude.Types.Left', E66} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V36) -> case V34 of {'Idris.Prelude.Types.Right', E68} -> (fun (V37) -> {'Idris.Prelude.Types.Right', (V36(V37))} end(E68)); {'Idris.Prelude.Types.Left', E69} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}, fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_(Either $e)'('erased', 'erased', 'erased', V41, V42)) end end end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_(Either $e)'('erased', 'erased', V44)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkTraversable', fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> case V48 of {'Idris.Prelude.Types.Left', E70} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V50) -> {'Idris.Prelude.Types.Right', (V47(V50))} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_(Either $e)'('erased', 'erased', 'erased', V53, V54, V55)) end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_(Either $e)'('erased', 'erased', 'erased', V58, V59, V60)) end end end end end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_(Either $e)'('erased', 'erased', V62)) end end}, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_(Either $e)'('erased', 'erased', 'erased', 'erased', V66, V67, V68)) end end end end end end}}}, ('un--fGetLine'('erased', V1, V5)), fun (V69) -> ('un--readLinesOnto'('erased', V1, [V69 | V2], 0, (V14()), V5)) end)); _ -> begin (V70 = (V3 - 1)), ('Idris.Idris2.Prelude.Interfaces':'un--*>'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Interfaces.Functor':'dn--un--map_Functor_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E18, E19} -> (fun (V75, V76) -> V75 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V77, V78, V79) -> V77 end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> case V83 of {'Idris.Prelude.Types.Left', E20} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V85) -> {'Idris.Prelude.Types.Right', (V82(V85))} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V86) -> fun (V87) -> {'Idris.Prelude.Types.Right', V87} end end, fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> case V90 of {'Idris.Prelude.Types.Left', E22} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V93) -> case V91 of {'Idris.Prelude.Types.Right', E24} -> (fun (V94) -> {'Idris.Prelude.Types.Right', (V93(V94))} end(E24)); {'Idris.Prelude.Types.Left', E25} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E12, E13, E14} -> (fun (V96, V97, V98) -> V96 end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E32, E33} -> (fun (V99, V100) -> V99 end(E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E29, E30, E31} -> (fun (V101, V102, V103) -> V101 end(E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> case V107 of {'Idris.Prelude.Types.Left', E34} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V109) -> {'Idris.Prelude.Types.Right', (V106(V109))} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V110) -> fun (V111) -> {'Idris.Prelude.Types.Right', V111} end end, fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> case V114 of {'Idris.Prelude.Types.Left', E36} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V117) -> case V115 of {'Idris.Prelude.Types.Right', E38} -> (fun (V118) -> {'Idris.Prelude.Types.Right', (V117(V118))} end(E38)); {'Idris.Prelude.Types.Left', E39} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E26, E27, E28} -> (fun (V120, V121, V122) -> V120 end(E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V73, V74)) end end end end, fun (V123) -> fun (V124) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--pure_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E43, E44} -> (fun (V125, V126) -> V125 end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E40, E41, E42} -> (fun (V127, V128, V129) -> V127 end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> case V133 of {'Idris.Prelude.Types.Left', E45} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V135) -> {'Idris.Prelude.Types.Right', (V132(V135))} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V136) -> fun (V137) -> {'Idris.Prelude.Types.Right', V137} end end, fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> case V140 of {'Idris.Prelude.Types.Left', E47} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V143) -> case V141 of {'Idris.Prelude.Types.Right', E49} -> (fun (V144) -> {'Idris.Prelude.Types.Right', (V143(V144))} end(E49)); {'Idris.Prelude.Types.Left', E50} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}}, V124)) end end, fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--<*>_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E54, E55} -> (fun (V150, V151) -> V150 end(E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E51, E52, E53} -> (fun (V152, V153, V154) -> V152 end(E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> case V158 of {'Idris.Prelude.Types.Left', E56} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V160) -> {'Idris.Prelude.Types.Right', (V157(V160))} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V161) -> fun (V162) -> {'Idris.Prelude.Types.Right', V162} end end, fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> case V165 of {'Idris.Prelude.Types.Left', E58} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V168) -> case V166 of {'Idris.Prelude.Types.Right', E60} -> (fun (V169) -> {'Idris.Prelude.Types.Right', (V168(V169))} end(E60)); {'Idris.Prelude.Types.Left', E61} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end}}, V148, V149)) end end end end}, ('un--fSeekLine'('erased', V1, V5)), ('un--readLinesOnto'('erased', V1, V2, V70, {'Idris.Data.Fuel.More', V14}, V5)))) end end; 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E78, E79} -> (fun (V171, V172) -> V171 end(E78, E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E75, E76, E77} -> (fun (V173, V174, V175) -> V173 end(E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E72, E73, E74} -> (fun (V176, V177, V178) -> ((V177('erased'))({'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', 0, ('Idris.Idris2.Data.List':'un--reverse'('erased', V2))}})) end(E72, E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--readFilePage'(V0, V1, V2, V3, V4) -> ('un--withFile'('erased', 'erased', 'erased', V1, V4, {'Idris.System.File.Read'}, case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V5, V6) -> V5 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V7, V8, V9) -> V7 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V10, V11, V12) -> fun (V13) -> ((V11('erased'))(V13)) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> ('un--readLinesOnto'('erased', V1, [], V2, V3, V14)) end)).
'un--readFile'(V0, V1, V2) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E8, E9} -> (fun (V3, V4) -> V3 end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V5, V6, V7) -> V5 end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V8, V9, V10) -> ((((V8('erased'))('erased'))(fun (V11) -> case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.String':'un--fastConcat'(('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V13))))} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end))(('un--readFilePage'('erased', V1, 0, ('Idris.Idris2.Data.Fuel':'un--forever'()), V2)))) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--prim__writeLine'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__writeLine")).
'un--prim__stdout'() -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__stdout")).
'un--prim__stdin'() -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__stdin")).
'un--prim__stderr'() -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__stderr")).
'un--prim__seekLine'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__seekLine")).
'un--prim__removeFile'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__removeFile")).
'un--prim__readLine'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__readLine")).
'un--prim__readChars'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__readChars")).
'un--prim__readChar'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__readChar")).
'un--prim__popen'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__popen")).
'un--prim__pclose'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__pclose")).
'un--prim__open'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__open")).
'un--prim__flush'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__flush")).
'un--prim__fileStatusTime'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileStatusTime")).
'un--prim__fileSize'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileSize")).
'un--prim__fileModifiedTime'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileModifiedTime")).
'un--prim__fileErrno'(V0) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileErrno")).
'un--prim__fileAccessTime'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fileAccessTime")).
'un--prim__fPoll'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__fPoll")).
'un--prim__error'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__error")).
'un--prim__eof'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__eof")).
'un--prim__close'(V0, V1) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__close")).
'un--prim__chmod'(V0, V1, V2) -> ('erlang':'throw'("Error: Unsupported %foreign primitive System.File.prim__chmod")).
'un--popen'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__popen'(V2, ('un--modeStr'(V3)), V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--popen-1429'('erased', V1, V3, V2, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(V9)), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--pclose'(V0, V1, V2) -> case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E0, E1} -> (fun (V3, V4) -> ((V4('erased'))(fun (V5) -> ('un--prim__pclose'(V2, V5)) end)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--openFile'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__open'(V2, ('un--modeStr'(V3)), V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--openFile-812'('erased', V1, V3, V2, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(V9)), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ok'(V0, V1, V2, V3) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V4, V5) -> V4 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V6, V7, V8) -> V6 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V9, V10, V11) -> ((V10('erased'))({'Idris.Prelude.Types.Right', V3})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--modeStr'(V0) -> case V0 of {'Idris.System.File.Read'} -> (fun () -> ('case--modeStr-523'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.WriteTruncate'} -> (fun () -> ('case--modeStr-533'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.Append'} -> (fun () -> ('case--modeStr-543'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.ReadWrite'} -> (fun () -> ('case--modeStr-553'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.ReadWriteTruncate'} -> (fun () -> ('case--modeStr-563'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); {'Idris.System.File.ReadAppend'} -> (fun () -> ('case--modeStr-573'(('Idris.Idris2.System.Info':'un--isWindows'()))) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkMode'(V0) -> ((((((('nested--4340-2193--in--un--getMs'(V0, case V0 of {'Idris.System.File.MkPermissions', E0, E1, E2} -> (fun (V1, V2, V3) -> V1 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) * 64) rem 9223372036854775808) + ((('nested--4340-2193--in--un--getMs'(V0, case V0 of {'Idris.System.File.MkPermissions', E3, E4, E5} -> (fun (V4, V5, V6) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) * 8) rem 9223372036854775808)) rem 9223372036854775808) + ('nested--4340-2193--in--un--getMs'(V0, case V0 of {'Idris.System.File.MkPermissions', E6, E7, E8} -> (fun (V7, V8, V9) -> V9 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))) rem 9223372036854775808).
'un--firstExists'(V0, V1, V2) -> case V2 of [] -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V3, V4) -> V3 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V5, V6, V7) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V8, V9, V10) -> ((V9('erased'))({'Idris.Prelude.Types.Nothing'})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E8 | E9] -> (fun (V11, V12) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E21, E22} -> (fun (V13, V14) -> V13 end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E10, E11, E12} -> (fun (V15, V16, V17) -> ((((V16('erased'))('erased'))(('un--exists'('erased', V1, V11))))(fun (V18) -> case V18 of 0 -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E19, E20} -> (fun (V19, V20) -> V19 end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E16, E17, E18} -> (fun (V21, V22, V23) -> V21 end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E13, E14, E15} -> (fun (V24, V25, V26) -> ((V25('erased'))({'Idris.Prelude.Types.Just', V11})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> ('un--firstExists'('erased', V1, V12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileStatusTime'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileStatusTime'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileStatusTime-1618'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileSize'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileSize'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileSize-1730'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileModifiedTime'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileModifiedTime'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileModifiedTime-1563'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileError'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__error'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V8, 0)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fileAccessTime'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__fileAccessTime'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fileAccessTime-1508'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fflush'(V0, V1, V2) -> ('Idris.Idris2.Prelude.Interfaces':'un--ignore'('erased', 'erased', case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V3, V4) -> V3 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V5, V6, V7) -> V5 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V8, V9, V10) -> V8 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E8, E9} -> (fun (V11, V12) -> ((V12('erased'))(fun (V13) -> ('un--prim__flush'(V2, V13)) end)) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)).
'un--fSeekLine'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__seekLine'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fSeekLine-1052'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V8, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fPutStrLn'(V0, V1, V2, V3) -> ('un--fPutStr'('erased', V1, V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, <<"\x{a}"/utf8>>)))).
'un--fPutStr'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__writeLine'(V2, V3, V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--fPutStr-1302'('erased', V1, V2, V3, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V9, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fPoll'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__fPoll'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V8, 0)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetLine'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V3, V4) -> V3 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V9, V10) -> ((V10('erased'))(fun (V11) -> ('un--prim__readLine'(V2, V11)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> ('case--fGetLine-1111'('erased', V1, V2, V8, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(('Idris.Idris2.PrimIO':'un--prim__forgetPtr'('erased', V8)))), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetChars'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__readChars'(V3, V2, V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--fGetChars-1169'('erased', V1, V2, V3, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(('Idris.Idris2.PrimIO':'un--prim__nullAnyPtr'(('Idris.Idris2.PrimIO':'un--prim__forgetPtr'('erased', V9)))), 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fGetChar'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V3, V4) -> V3 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V18, V19) -> ((V19('erased'))(fun (V20) -> ('un--prim__readChar'(V2, V20)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E10, E11} -> (fun (V9, V10) -> V9 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V11, V12, V13) -> ((((V12('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E8, E9} -> (fun (V15, V16) -> ((V16('erased'))(fun (V17) -> ('un--prim__error'(V2, V17)) end)) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V14) -> ('case--fGetChar-1239'('erased', V1, V2, V8, V14, ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V14, 0)))) end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fEOF'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E13, E14} -> (fun (V3, V4) -> V3 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V17, V18) -> ((V18('erased'))(fun (V19) -> ('un--prim__eof'(V2, V19)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V8) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E11, E12} -> (fun (V9, V10) -> V9 end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E8, E9, E10} -> (fun (V11, V12, V13) -> V11 end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E5, E6, E7} -> (fun (V14, V15, V16) -> ((V15('erased'))(('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V8, 0)))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--exists'(V0, V1, V2) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E23, E24} -> (fun (V3, V4) -> V3 end(E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))(('un--openFile'('erased', V1, V2, {'Idris.System.File.Read'}))))(fun (V8) -> case V8 of {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E4, E5} -> (fun (V10, V11) -> V10 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('un--closeFile'('erased', V1, V9)), fun () -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E12, E13} -> (fun (V12, V13) -> V12 end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E9, E10, E11} -> (fun (V14, V15, V16) -> V14 end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E6, E7, E8} -> (fun (V17, V18, V19) -> ((V18('erased'))(0)) end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E3)); {'Idris.Prelude.Types.Left', E14} -> (fun (V20) -> case case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E21, E22} -> (fun (V21, V22) -> V21 end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E18, E19, E20} -> (fun (V23, V24, V25) -> V23 end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E15, E16, E17} -> (fun (V26, V27, V28) -> ((V27('erased'))(1)) end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--closeFile'(V0, V1, V2) -> case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E0, E1} -> (fun (V3, V4) -> ((V4('erased'))(fun (V5) -> ('un--prim__close'(V2, V5)) end)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chmodRaw'(V0, V1, V2, V3) -> case case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E5, E6} -> (fun (V4, V5) -> V4 end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))(case V1 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V10, V11) -> ((V11('erased'))(fun (V12) -> ('un--prim__chmod'(V2, V3, V12)) end)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(fun (V9) -> ('case--chmodRaw-2263'('erased', V1, V3, V2, V9, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V9, 0)))) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chmod'(V0, V1, V2, V3) -> ('un--chmodRaw'('erased', V1, V2, ('un--mkMode'(V3)))).
'un--FilePtr'() -> {'Idris.PrimIO.AnyPtr'}.
