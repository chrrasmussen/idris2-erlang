-module('Idris.Idris2.Compiler.ES.RemoveUnused').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--3809-533--in--un--f'/5,
  'un--usedNamesDef'/1,
  'un--usedNamesConstAlt'/1,
  'un--usedNamesConAlt'/1,
  'un--usedNames'/1,
  'un--defsUsedByNamedCExp'/2,
  'un--defsToUsedMap'/1,
  'un--calcUsedDefs'/2,
  'un--calcUsed'/3
]).
'nested--3809-533--in--un--f'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V3 end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(V3, V5)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedNamesDef'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkNmFun', E0, E1} -> (fun (V1, V2) -> ('un--usedNames'(V2)) end(E0, E1)); {'Idris.Core.CompileExpr.MkNmError', E2} -> (fun (V3) -> ('un--usedNames'(V3)) end(E2)); {'Idris.Core.CompileExpr.MkNmForeign', E3, E4, E5} -> (fun (V4, V5, V6) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V9, V10)) end end}, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V23, V24)) end end})) end(E3, E4, E5)); {'Idris.Core.CompileExpr.MkNmCon', E6, E7, E8} -> (fun (V25, V26, V27) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V28, V29)) end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V30, V31)) end end}, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V32, V33)) end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V38, V39)) end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V40, V41)) end end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V42, V43)) end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V44, V45)) end end})) end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedNamesConstAlt'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkNConstAlt', E0, E1} -> (fun (V1, V2) -> ('un--usedNames'(V2)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedNamesConAlt'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkNConAlt', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> ('un--usedNames'(V5)) end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedNames'(V0) -> case V0 of {'Idris.Core.CompileExpr.NmLocal', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V5, V6)) end end}, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V19, V20)) end end})) end(E0, E1)); {'Idris.Core.CompileExpr.NmRef', E2, E3} -> (fun (V21, V22) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--insert'(V22, ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V25, V26)) end end}, fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V37, V38)) end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V39, V40)) end end})))) end(E2, E3)); {'Idris.Core.CompileExpr.NmLam', E4, E5, E6} -> (fun (V41, V42, V43) -> ('un--usedNames'(V43)) end(E4, E5, E6)); {'Idris.Core.CompileExpr.NmApp', E7, E8, E9} -> (fun (V44, V45, V46) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(('un--usedNames'(V45)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V49, V50, V51)) end end end end end, fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V54, V55, V56)) end end end end end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V58)) end end, fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V62, V63, V64, V65)) end end end end end end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V67)) end end, fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V70, V71, V72)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V73) -> fun (V74) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V75, V76)) end end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V77, V78)) end end}, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V79, V80)) end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V81, V82)) end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V83, V84)) end end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V85, V86)) end end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V87, V88)) end end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V89, V90)) end end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V91, V92)) end end}, V73, V74)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V93, V94)) end end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V95, V96)) end end}, fun (V97) -> fun (V98) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V97, V98)) end end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V99, V100)) end end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V101, V102)) end end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V103, V104)) end end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V105, V106)) end end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V107, V108)) end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V109, V110)) end end}))}}, fun (V111) -> ('un--usedNames'(V111)) end, V46)))) end(E7, E8, E9)); {'Idris.Core.CompileExpr.NmPrimVal', E10, E11} -> (fun (V112, V113) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V114, V115)) end end, fun (V116) -> fun (V117) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V116, V117)) end end}, fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V118, V119)) end end, fun (V120) -> fun (V121) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V120, V121)) end end, fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V122, V123)) end end, fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V124, V125)) end end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V126, V127)) end end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V128, V129)) end end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V130, V131)) end end})) end(E10, E11)); {'Idris.Core.CompileExpr.NmOp', E12, E13, E14, E15} -> (fun (V132, V133, V134, V135) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'(V138, V139, V140)) end end end end end, fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> ('Idris.Idris2.Data.Vect':'dn--un--foldl_Foldable_(Vect $n)'(V143, V144, V145)) end end end end end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Data.Vect':'dn--un--null_Foldable_(Vect $n)'(V147)) end end, fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> ('Idris.Idris2.Data.Vect':'dn--un--foldlM_Foldable_(Vect $n)'(V151, V152, V153, V154)) end end end end end end end, fun (V155) -> fun (V156) -> ('Idris.Idris2.Data.Vect':'dn--un--toList_Foldable_(Vect $n)'(V156)) end end, fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> ('Idris.Idris2.Data.Vect':'dn--un--foldMap_Foldable_(Vect $n)'(V159, V160, V161)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V162) -> fun (V163) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V164, V165)) end end, fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V166, V167)) end end}, fun (V168) -> fun (V169) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V168, V169)) end end, fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V170, V171)) end end, fun (V172) -> fun (V173) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V172, V173)) end end, fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V174, V175)) end end, fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V176, V177)) end end, fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V178, V179)) end end, fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V180, V181)) end end}, V162, V163)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V182, V183)) end end, fun (V184) -> fun (V185) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V184, V185)) end end}, fun (V186) -> fun (V187) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V186, V187)) end end, fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V188, V189)) end end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V190, V191)) end end, fun (V192) -> fun (V193) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V192, V193)) end end, fun (V194) -> fun (V195) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V194, V195)) end end, fun (V196) -> fun (V197) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V196, V197)) end end, fun (V198) -> fun (V199) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V198, V199)) end end}))}}, fun (V200) -> ('un--usedNames'(V200)) end, V135)) end(E12, E13, E14, E15)); {'Idris.Core.CompileExpr.NmConCase', E16, E17, E18, E19} -> (fun (V201, V202, V203, V204) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(('un--usedNames'(V202)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V207, V208, V209)) end end end end end, fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V212, V213, V214)) end end end end end, fun (V215) -> fun (V216) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V216)) end end, fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V220, V221, V222, V223)) end end end end end end end, fun (V224) -> fun (V225) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V225)) end end, fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V228, V229, V230)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V231) -> fun (V232) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V233) -> fun (V234) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V233, V234)) end end, fun (V235) -> fun (V236) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V235, V236)) end end}, fun (V237) -> fun (V238) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V237, V238)) end end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V239, V240)) end end, fun (V241) -> fun (V242) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V241, V242)) end end, fun (V243) -> fun (V244) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V243, V244)) end end, fun (V245) -> fun (V246) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V245, V246)) end end, fun (V247) -> fun (V248) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V247, V248)) end end, fun (V249) -> fun (V250) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V249, V250)) end end}, V231, V232)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V251) -> fun (V252) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V251, V252)) end end, fun (V253) -> fun (V254) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V253, V254)) end end}, fun (V255) -> fun (V256) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V255, V256)) end end, fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V257, V258)) end end, fun (V259) -> fun (V260) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V259, V260)) end end, fun (V261) -> fun (V262) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V261, V262)) end end, fun (V263) -> fun (V264) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V263, V264)) end end, fun (V265) -> fun (V266) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V265, V266)) end end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V267, V268)) end end}))}}, fun (V269) -> ('un--usedNamesConAlt'(V269)) end, V203)))), ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V270) -> fun (V271) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V270, V271)) end end, fun (V272) -> fun (V273) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V272, V273)) end end}, fun (V274) -> fun (V275) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V274, V275)) end end, fun (V276) -> fun (V277) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V276, V277)) end end, fun (V278) -> fun (V279) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V278, V279)) end end, fun (V280) -> fun (V281) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V280, V281)) end end, fun (V282) -> fun (V283) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V282, V283)) end end, fun (V284) -> fun (V285) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V284, V285)) end end, fun (V286) -> fun (V287) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V286, V287)) end end})) end, fun () -> fun (V288) -> ('un--usedNames'(V288)) end end, V204)))) end(E16, E17, E18, E19)); {'Idris.Core.CompileExpr.NmConstCase', E20, E21, E22, E23} -> (fun (V289, V290, V291, V292) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(('un--usedNames'(V290)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> fun (V297) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V295, V296, V297)) end end end end end, fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V300, V301, V302)) end end end end end, fun (V303) -> fun (V304) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V304)) end end, fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V308, V309, V310, V311)) end end end end end end end, fun (V312) -> fun (V313) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V313)) end end, fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V316, V317, V318)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V319) -> fun (V320) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V321) -> fun (V322) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V321, V322)) end end, fun (V323) -> fun (V324) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V323, V324)) end end}, fun (V325) -> fun (V326) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V325, V326)) end end, fun (V327) -> fun (V328) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V327, V328)) end end, fun (V329) -> fun (V330) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V329, V330)) end end, fun (V331) -> fun (V332) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V331, V332)) end end, fun (V333) -> fun (V334) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V333, V334)) end end, fun (V335) -> fun (V336) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V335, V336)) end end, fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V337, V338)) end end}, V319, V320)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V339, V340)) end end, fun (V341) -> fun (V342) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V341, V342)) end end}, fun (V343) -> fun (V344) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V343, V344)) end end, fun (V345) -> fun (V346) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V345, V346)) end end, fun (V347) -> fun (V348) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V347, V348)) end end, fun (V349) -> fun (V350) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V349, V350)) end end, fun (V351) -> fun (V352) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V351, V352)) end end, fun (V353) -> fun (V354) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V353, V354)) end end, fun (V355) -> fun (V356) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V355, V356)) end end}))}}, fun (V357) -> ('un--usedNamesConstAlt'(V357)) end, V291)))), ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V358) -> fun (V359) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V358, V359)) end end, fun (V360) -> fun (V361) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V360, V361)) end end}, fun (V362) -> fun (V363) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V362, V363)) end end, fun (V364) -> fun (V365) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V364, V365)) end end, fun (V366) -> fun (V367) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V366, V367)) end end, fun (V368) -> fun (V369) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V368, V369)) end end, fun (V370) -> fun (V371) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V370, V371)) end end, fun (V372) -> fun (V373) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V372, V373)) end end, fun (V374) -> fun (V375) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V374, V375)) end end})) end, fun () -> fun (V376) -> ('un--usedNames'(V376)) end end, V292)))) end(E20, E21, E22, E23)); {'Idris.Core.CompileExpr.NmExtPrim', E24, E25, E26} -> (fun (V377, V378, V379) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V382, V383, V384)) end end end end end, fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V387, V388, V389)) end end end end end, fun (V390) -> fun (V391) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V391)) end end, fun (V392) -> fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V395, V396, V397, V398)) end end end end end end end, fun (V399) -> fun (V400) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V400)) end end, fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V403, V404, V405)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V406) -> fun (V407) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V408) -> fun (V409) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V408, V409)) end end, fun (V410) -> fun (V411) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V410, V411)) end end}, fun (V412) -> fun (V413) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V412, V413)) end end, fun (V414) -> fun (V415) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V414, V415)) end end, fun (V416) -> fun (V417) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V416, V417)) end end, fun (V418) -> fun (V419) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V418, V419)) end end, fun (V420) -> fun (V421) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V420, V421)) end end, fun (V422) -> fun (V423) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V422, V423)) end end, fun (V424) -> fun (V425) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V424, V425)) end end}, V406, V407)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V426) -> fun (V427) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V426, V427)) end end, fun (V428) -> fun (V429) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V428, V429)) end end}, fun (V430) -> fun (V431) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V430, V431)) end end, fun (V432) -> fun (V433) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V432, V433)) end end, fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V434, V435)) end end, fun (V436) -> fun (V437) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V436, V437)) end end, fun (V438) -> fun (V439) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V438, V439)) end end, fun (V440) -> fun (V441) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V440, V441)) end end, fun (V442) -> fun (V443) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V442, V443)) end end}))}}, fun (V444) -> ('un--usedNames'(V444)) end, V379)) end(E24, E25, E26)); {'Idris.Core.CompileExpr.NmCon', E27, E28, E29, E30, E31} -> (fun (V445, V446, V447, V448, V449) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V450) -> fun (V451) -> fun (V452) -> fun (V453) -> fun (V454) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V452, V453, V454)) end end end end end, fun (V455) -> fun (V456) -> fun (V457) -> fun (V458) -> fun (V459) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V457, V458, V459)) end end end end end, fun (V460) -> fun (V461) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V461)) end end, fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> fun (V468) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V465, V466, V467, V468)) end end end end end end end, fun (V469) -> fun (V470) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V470)) end end, fun (V471) -> fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V473, V474, V475)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V476) -> fun (V477) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V478) -> fun (V479) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V478, V479)) end end, fun (V480) -> fun (V481) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V480, V481)) end end}, fun (V482) -> fun (V483) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V482, V483)) end end, fun (V484) -> fun (V485) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V484, V485)) end end, fun (V486) -> fun (V487) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V486, V487)) end end, fun (V488) -> fun (V489) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V488, V489)) end end, fun (V490) -> fun (V491) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V490, V491)) end end, fun (V492) -> fun (V493) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V492, V493)) end end, fun (V494) -> fun (V495) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V494, V495)) end end}, V476, V477)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V496) -> fun (V497) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V496, V497)) end end, fun (V498) -> fun (V499) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V498, V499)) end end}, fun (V500) -> fun (V501) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V500, V501)) end end, fun (V502) -> fun (V503) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V502, V503)) end end, fun (V504) -> fun (V505) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V504, V505)) end end, fun (V506) -> fun (V507) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V506, V507)) end end, fun (V508) -> fun (V509) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V508, V509)) end end, fun (V510) -> fun (V511) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V510, V511)) end end, fun (V512) -> fun (V513) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V512, V513)) end end}))}}, fun (V514) -> ('un--usedNames'(V514)) end, V449)) end(E27, E28, E29, E30, E31)); {'Idris.Core.CompileExpr.NmDelay', E32, E33, E34} -> (fun (V515, V516, V517) -> ('un--usedNames'(V517)) end(E32, E33, E34)); {'Idris.Core.CompileExpr.NmForce', E35, E36, E37} -> (fun (V518, V519, V520) -> ('un--usedNames'(V520)) end(E35, E36, E37)); {'Idris.Core.CompileExpr.NmLet', E38, E39, E40, E41} -> (fun (V521, V522, V523, V524) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(('un--usedNames'(V523)), ('un--usedNames'(V524)))) end(E38, E39, E40, E41)); {'Idris.Core.CompileExpr.NmErased', E42} -> (fun (V525) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V526) -> fun (V527) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V526, V527)) end end, fun (V528) -> fun (V529) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V528, V529)) end end}, fun (V530) -> fun (V531) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V530, V531)) end end, fun (V532) -> fun (V533) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V532, V533)) end end, fun (V534) -> fun (V535) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V534, V535)) end end, fun (V536) -> fun (V537) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V536, V537)) end end, fun (V538) -> fun (V539) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V538, V539)) end end, fun (V540) -> fun (V541) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V540, V541)) end end, fun (V542) -> fun (V543) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V542, V543)) end end})) end(E42)); {'Idris.Core.CompileExpr.NmCrash', E43, E44} -> (fun (V544, V545) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V546) -> fun (V547) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V546, V547)) end end, fun (V548) -> fun (V549) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V548, V549)) end end}, fun (V550) -> fun (V551) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V550, V551)) end end, fun (V552) -> fun (V553) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V552, V553)) end end, fun (V554) -> fun (V555) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V554, V555)) end end, fun (V556) -> fun (V557) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V556, V557)) end end, fun (V558) -> fun (V559) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V558, V559)) end end, fun (V560) -> fun (V561) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V560, V561)) end end, fun (V562) -> fun (V563) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V562, V563)) end end})) end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--defsUsedByNamedCExp'(V0, V1) -> ('un--calcUsedDefs'(('Idris.Idris2.Libraries.Data.SortedSet':'un--toList'(('un--usedNames'(V0)))), V1)).
'un--defsToUsedMap'(V0) -> ('Idris.Idris2.Libraries.Data.SortedMap':'un--fromList'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V1) -> fun (V2) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1, V2)) end end, fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V3, V4)) end end}, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V17, V18)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V21, V22)) end end end end, fun (V23) -> case V23 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V26, V27) -> {'Idris.Builtin.MkPair', V24, ('un--usedNamesDef'(V27))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V0)))).
'un--calcUsedDefs'(V0, V1) -> begin (V20 = ('un--calcUsed'(('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2, V3)) end end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V4, V5)) end end}, fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V18, V19)) end end})), ('un--defsToUsedMap'(V1)), V0))), ('Idris.Idris2.Data.List':'un--filter'(fun (V21) -> case V21 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V24, V25) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--contains'(V22, V20)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1)) end.
'un--calcUsed'(V0, V1, V2) -> case V2 of [] -> V0; _ -> begin (V28 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V3) -> fun (V4) -> ('nested--3809-533--in--un--f'(V2, V1, V0, V3, V4)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V7, V8)) end end}, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V21, V22)) end end})), ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V25, V26)) end end end end, fun (V27) -> ('Idris.Idris2.Libraries.Data.SortedMap':'un--lookup'(V27, V1)) end, V2))))), begin (V47 = ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(V0, ('Idris.Idris2.Libraries.Data.SortedSet':'un--fromList'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V31, V32)) end end}, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V37, V38)) end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V45, V46)) end end}, V2))))), ('un--calcUsed'(V47, V1, ('Idris.Idris2.Libraries.Data.SortedSet':'un--toList'(('Idris.Idris2.Libraries.Data.SortedSet':'un--difference'(V28, V47)))))) end end end.
