-module('Idris.Idris2.TTImp.Elab.Quote').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in bindUnqs-7686'/19,
  'case--bindUnqs-7626'/16,
  'nested--12076-7483--in--un--unqPair'/7,
  'nested--12068-7357--in--un--unqPair'/9,
  'un--onLHS'/1,
  'un--getUnquoteUpdate'/4,
  'un--getUnquoteTy'/4,
  'un--getUnquoteRecord'/4,
  'un--getUnquoteField'/4,
  'un--getUnquoteDecl'/4,
  'un--getUnquoteData'/4,
  'un--getUnquoteClause'/4,
  'un--getUnquote'/4,
  'un--checkQuoteName'/13,
  'un--checkQuoteDecl'/13,
  'un--checkQuote'/13,
  'un--bindUnqs'/11
]).
'case--case block in bindUnqs-7686'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V19, V20) -> fun (V21) -> begin (V22 = (('un--bindUnqs'(V0, V13, V12, V11, V10, V4, V9, V8, V7, V6, V5))(V21))), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V20))(V21))), case V25 of {'Idris.Prelude.Types.Left', E4} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V2, V1, {'Idris.Core.TT.Let', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V9)), V19, V27}, ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V1, V1, V24))}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--bindUnqs-7626'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E0} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V17, V18) -> fun (V19) -> begin (V20 = (('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V13, V12, V11, V10, V9, V8, V7, V6, V3, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V6, {'Idris.Core.TT.Ref', V2, {'Idris.Core.TT.TyCon', 0, 0}, {'Idris.Core.Name.Resolved', V17}}))}))(V19))), case V20 of {'Idris.Prelude.Types.Left', E3} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V23, V24) -> begin (V25 = (('un--bindUnqs'(V0, V13, V12, V11, V10, V4, V9, V8, V7, V6, V5))(V19))), case V25 of {'Idris.Prelude.Types.Left', E7} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V27) -> begin (V28 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V24))(V19))), case V28 of {'Idris.Prelude.Types.Left', E9} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V2, V1, {'Idris.Core.TT.Let', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V9)), V23, V30}, ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V1, V1, V27))}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> fun (V31) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V31)) end end end(E0)); _ -> fun (V32) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V32)) end end.
'nested--12076-7483--in--un--unqPair'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquote'(V5, V4, V3, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V7, V12}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12068-7357--in--un--unqPair'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V13, V14) -> fun (V15) -> begin (V16 = (('un--getUnquote'(V7, V6, V5, V14))(V15))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V9, {'Idris.Builtin.MkPair', V11, {'Idris.Builtin.MkPair', V13, V18}}}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--onLHS'(V0) -> case V0 of {'Idris.TTImp.Elab.Check.InLHS', E0} -> (fun (V1) -> 0 end(E0)); _ -> 1 end.
'un--getUnquoteUpdate'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V4, V5) -> fun (V6) -> begin (V7 = (('un--getUnquote'(V0, V1, V2, V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V4, V9}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E4, E5} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = (('un--getUnquote'(V0, V1, V2, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V10, V15}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteTy'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> fun (V8) -> begin (V9 = (('un--getUnquote'(V0, V1, V2, V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V4, V5, V6, V11}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteRecord'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V11 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V10) -> ('nested--12068-7357--in--un--unqPair'(V8, V7, V6, V5, V4, V2, V1, V0, V10)) end, V6, []))(V9))), case V11 of {'Idris.Prelude.Types.Left', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V13) -> begin (V15 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V14) -> ('un--getUnquoteField'(V0, V1, V2, V14)) end, V8, []))(V9))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V4, V5, V13, V7, V17}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteField'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquote'(V0, V1, V2, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V4, V5, V6, V7, V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteDecl'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquoteTy'(V0, V1, V2, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V4, V5, V6, V7, V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E7, E8, E9} -> (fun (V13, V14, V15) -> fun (V16) -> begin (V17 = (('un--getUnquoteData'(V0, V1, V2, V15))(V16))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V13, V14, V19}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8, E9)); {'Idris.TTImp.TTImp.IDef', E12, E13, E14} -> (fun (V20, V21, V22) -> fun (V23) -> begin (V25 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V24) -> ('un--getUnquoteClause'(V0, V1, V2, V24)) end, V22, []))(V23))), case V25 of {'Idris.Prelude.Types.Left', E15} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V20, V21, V27}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12, E13, E14)); {'Idris.TTImp.TTImp.IParameters', E17, E18, E19} -> (fun (V28, V29, V30) -> fun (V31) -> begin (V33 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V32) -> ('nested--12076-7483--in--un--unqPair'(V30, V29, V28, V2, V1, V0, V32)) end, V29, []))(V31))), case V33 of {'Idris.Prelude.Types.Left', E20} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V35) -> begin (V37 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V36) -> ('un--getUnquoteDecl'(V0, V1, V2, V36)) end, V30, []))(V31))), case V37 of {'Idris.Prelude.Types.Left', E22} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V28, V35, V39}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E17, E18, E19)); {'Idris.TTImp.TTImp.IRecord', E24, E25, E26, E27} -> (fun (V40, V41, V42, V43) -> fun (V44) -> begin (V45 = (('un--getUnquoteRecord'(V0, V1, V2, V43))(V44))), case V45 of {'Idris.Prelude.Types.Left', E28} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V40, V41, V42, V47}} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26, E27)); {'Idris.TTImp.TTImp.INamespace', E30, E31, E32} -> (fun (V48, V49, V50) -> fun (V51) -> begin (V53 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V52) -> ('un--getUnquoteDecl'(V0, V1, V2, V52)) end, V50, []))(V51))), case V53 of {'Idris.Prelude.Types.Left', E33} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V48, V49, V55}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E30, E31, E32)); {'Idris.TTImp.TTImp.ITransform', E35, E36, E37, E38} -> (fun (V56, V57, V58, V59) -> fun (V60) -> begin (V61 = (('un--getUnquote'(V0, V1, V2, V58))(V60))), case V61 of {'Idris.Prelude.Types.Left', E39} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V63) -> begin (V64 = (('un--getUnquote'(V0, V1, V2, V59))(V60))), case V64 of {'Idris.Prelude.Types.Left', E41} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V56, V57, V63, V66}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E35, E36, E37, E38)); _ -> fun (V67) -> {'Idris.Prelude.Types.Right', V3} end end.
'un--getUnquoteData'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--getUnquote'(V0, V1, V2, V6))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> begin (V14 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V13) -> ('un--getUnquoteTy'(V0, V1, V2, V13)) end, V8, []))(V9))), case V14 of {'Idris.Prelude.Types.Left', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V4, V5, V12, V7, V16}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E9, E10, E11} -> (fun (V17, V18, V19) -> fun (V20) -> begin (V21 = (('un--getUnquote'(V0, V1, V2, V19))(V20))), case V21 of {'Idris.Prelude.Types.Left', E12} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V17, V18, V23}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteClause'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V4, V5, V6) -> fun (V7) -> begin (V8 = (('un--getUnquote'(V0, V1, V2, V5))(V7))), case V8 of {'Idris.Prelude.Types.Left', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V10) -> begin (V11 = (('un--getUnquote'(V0, V1, V2, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V4, V10, V13}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E7, E8, E9, E10, E11, E12} -> (fun (V14, V15, V16, V17, V18, V19) -> fun (V20) -> begin (V21 = (('un--getUnquote'(V0, V1, V2, V15))(V20))), case V21 of {'Idris.Prelude.Types.Left', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V23) -> begin (V24 = (('un--getUnquote'(V0, V1, V2, V16))(V20))), case V24 of {'Idris.Prelude.Types.Left', E15} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V26) -> begin (V28 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V27) -> ('un--getUnquoteClause'(V0, V1, V2, V27)) end, V19, []))(V20))), case V28 of {'Idris.Prelude.Types.Left', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V14, V23, V26, V17, V18, V30}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8, E9, E10, E11, E12)); {'Idris.TTImp.TTImp.ImpossibleClause', E19, E20} -> (fun (V31, V32) -> fun (V33) -> begin (V34 = (('un--getUnquote'(V0, V1, V2, V32))(V33))), case V34 of {'Idris.Prelude.Types.Left', E21} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V31, V36}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquote'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V4, V5, V6, V7, V8, V9) -> fun (V10) -> begin (V11 = (('un--getUnquote'(V0, V1, V2, V8))(V10))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> begin (V14 = (('un--getUnquote'(V0, V1, V2, V9))(V10))), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V4, V5, V6, V7, V13, V16}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V17, V18, V19, V20, V21, V22) -> fun (V23) -> begin (V24 = (('un--getUnquote'(V0, V1, V2, V21))(V23))), case V24 of {'Idris.Prelude.Types.Left', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V26) -> begin (V27 = (('un--getUnquote'(V0, V1, V2, V22))(V23))), case V27 of {'Idris.Prelude.Types.Left', E18} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V17, V18, V19, V20, V26, V29}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25, E26} -> (fun (V30, V31, V32, V33, V34, V35, V36) -> fun (V37) -> begin (V38 = (('un--getUnquote'(V0, V1, V2, V34))(V37))), case V38 of {'Idris.Prelude.Types.Left', E27} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V40) -> begin (V41 = (('un--getUnquote'(V0, V1, V2, V35))(V37))), case V41 of {'Idris.Prelude.Types.Left', E29} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V43) -> begin (V44 = (('un--getUnquote'(V0, V1, V2, V36))(V37))), case V44 of {'Idris.Prelude.Types.Left', E31} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V30, V31, V32, V33, V40, V43, V46}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25, E26)); {'Idris.TTImp.TTImp.ICase', E33, E34, E35, E36} -> (fun (V47, V48, V49, V50) -> fun (V51) -> begin (V52 = (('un--getUnquote'(V0, V1, V2, V48))(V51))), case V52 of {'Idris.Prelude.Types.Left', E37} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V54) -> begin (V55 = (('un--getUnquote'(V0, V1, V2, V49))(V51))), case V55 of {'Idris.Prelude.Types.Left', E39} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V57) -> begin (V59 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V58) -> ('un--getUnquoteClause'(V0, V1, V2, V58)) end, V50, []))(V51))), case V59 of {'Idris.Prelude.Types.Left', E41} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V47, V54, V57, V61}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35, E36)); {'Idris.TTImp.TTImp.ILocal', E43, E44, E45} -> (fun (V62, V63, V64) -> fun (V65) -> begin (V67 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V66) -> ('un--getUnquoteDecl'(V0, V1, V2, V66)) end, V63, []))(V65))), case V67 of {'Idris.Prelude.Types.Left', E46} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V69) -> begin (V70 = (('un--getUnquote'(V0, V1, V2, V64))(V65))), case V70 of {'Idris.Prelude.Types.Left', E48} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V72) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V62, V69, V72}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43, E44, E45)); {'Idris.TTImp.TTImp.IUpdate', E50, E51, E52} -> (fun (V73, V74, V75) -> fun (V76) -> begin (V78 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V77) -> ('un--getUnquoteUpdate'(V0, V1, V2, V77)) end, V74, []))(V76))), case V78 of {'Idris.Prelude.Types.Left', E53} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V80) -> begin (V81 = (('un--getUnquote'(V0, V1, V2, V75))(V76))), case V81 of {'Idris.Prelude.Types.Left', E55} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V83) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V73, V80, V83}} end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51, E52)); {'Idris.TTImp.TTImp.IApp', E57, E58, E59} -> (fun (V84, V85, V86) -> fun (V87) -> begin (V88 = (('un--getUnquote'(V0, V1, V2, V85))(V87))), case V88 of {'Idris.Prelude.Types.Left', E60} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V90) -> begin (V91 = (('un--getUnquote'(V0, V1, V2, V86))(V87))), case V91 of {'Idris.Prelude.Types.Left', E62} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V93) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V84, V90, V93}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E57, E58, E59)); {'Idris.TTImp.TTImp.IAutoApp', E64, E65, E66} -> (fun (V94, V95, V96) -> fun (V97) -> begin (V98 = (('un--getUnquote'(V0, V1, V2, V95))(V97))), case V98 of {'Idris.Prelude.Types.Left', E67} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V100) -> begin (V101 = (('un--getUnquote'(V0, V1, V2, V96))(V97))), case V101 of {'Idris.Prelude.Types.Left', E69} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V103) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V94, V100, V103}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E64, E65, E66)); {'Idris.TTImp.TTImp.INamedApp', E71, E72, E73, E74} -> (fun (V104, V105, V106, V107) -> fun (V108) -> begin (V109 = (('un--getUnquote'(V0, V1, V2, V105))(V108))), case V109 of {'Idris.Prelude.Types.Left', E75} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V111) -> begin (V112 = (('un--getUnquote'(V0, V1, V2, V107))(V108))), case V112 of {'Idris.Prelude.Types.Left', E77} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V114) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V104, V111, V106, V114}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E71, E72, E73, E74)); {'Idris.TTImp.TTImp.IWithApp', E79, E80, E81} -> (fun (V115, V116, V117) -> fun (V118) -> begin (V119 = (('un--getUnquote'(V0, V1, V2, V116))(V118))), case V119 of {'Idris.Prelude.Types.Left', E82} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V121) -> begin (V122 = (('un--getUnquote'(V0, V1, V2, V117))(V118))), case V122 of {'Idris.Prelude.Types.Left', E84} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V124) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V115, V121, V124}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E79, E80, E81)); {'Idris.TTImp.TTImp.IAlternative', E86, E87, E88} -> (fun (V125, V126, V127) -> fun (V128) -> begin (V130 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V129) -> ('un--getUnquote'(V0, V1, V2, V129)) end, V127, []))(V128))), case V130 of {'Idris.Prelude.Types.Left', E89} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V132) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V125, V126, V132}} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E86, E87, E88)); {'Idris.TTImp.TTImp.IRewrite', E91, E92, E93} -> (fun (V133, V134, V135) -> fun (V136) -> begin (V137 = (('un--getUnquote'(V0, V1, V2, V134))(V136))), case V137 of {'Idris.Prelude.Types.Left', E94} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V139) -> begin (V140 = (('un--getUnquote'(V0, V1, V2, V135))(V136))), case V140 of {'Idris.Prelude.Types.Left', E96} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V142) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V133, V139, V142}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E91, E92, E93)); {'Idris.TTImp.TTImp.ICoerced', E98, E99} -> (fun (V143, V144) -> fun (V145) -> begin (V146 = (('un--getUnquote'(V0, V1, V2, V144))(V145))), case V146 of {'Idris.Prelude.Types.Left', E100} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V148) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICoerced', V143, V148}} end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E98, E99)); {'Idris.TTImp.TTImp.IBindHere', E102, E103, E104} -> (fun (V149, V150, V151) -> fun (V152) -> begin (V153 = (('un--getUnquote'(V0, V1, V2, V151))(V152))), case V153 of {'Idris.Prelude.Types.Left', E105} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V155) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V149, V150, V155}} end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E102, E103, E104)); {'Idris.TTImp.TTImp.IAs', E107, E108, E109, E110, E111} -> (fun (V156, V157, V158, V159, V160) -> fun (V161) -> begin (V162 = (('un--getUnquote'(V0, V1, V2, V160))(V161))), case V162 of {'Idris.Prelude.Types.Left', E112} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V164) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V156, V157, V158, V159, V164}} end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E107, E108, E109, E110, E111)); {'Idris.TTImp.TTImp.IMustUnify', E114, E115, E116} -> (fun (V165, V166, V167) -> fun (V168) -> begin (V169 = (('un--getUnquote'(V0, V1, V2, V167))(V168))), case V169 of {'Idris.Prelude.Types.Left', E117} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V171) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V165, V166, V171}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E114, E115, E116)); {'Idris.TTImp.TTImp.IDelayed', E119, E120, E121} -> (fun (V172, V173, V174) -> fun (V175) -> begin (V176 = (('un--getUnquote'(V0, V1, V2, V174))(V175))), case V176 of {'Idris.Prelude.Types.Left', E122} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V178) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V172, V173, V178}} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E119, E120, E121)); {'Idris.TTImp.TTImp.IDelay', E124, E125} -> (fun (V179, V180) -> fun (V181) -> begin (V182 = (('un--getUnquote'(V0, V1, V2, V180))(V181))), case V182 of {'Idris.Prelude.Types.Left', E126} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V184) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V179, V184}} end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E124, E125)); {'Idris.TTImp.TTImp.IForce', E128, E129} -> (fun (V185, V186) -> fun (V187) -> begin (V188 = (('un--getUnquote'(V0, V1, V2, V186))(V187))), case V188 of {'Idris.Prelude.Types.Left', E130} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V190) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V185, V190}} end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E128, E129)); {'Idris.TTImp.TTImp.IQuote', E132, E133} -> (fun (V191, V192) -> fun (V193) -> begin (V194 = (('un--getUnquote'(V0, V1, V2, V192))(V193))), case V194 of {'Idris.Prelude.Types.Left', E134} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V196) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V191, V196}} end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E132, E133)); {'Idris.TTImp.TTImp.IUnquote', E136, E137} -> (fun (V197, V198) -> fun (V199) -> begin (V200 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V2, <<"q"/utf8>>, V199))), case V200 of {'Idris.Prelude.Types.Left', E138} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V202) -> begin (V204 = begin (V203 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V203} end), case V204 of {'Idris.Prelude.Types.Left', E140} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V206) -> begin (V208 = begin (V207 = ('erlang':'put'(V1, [{'Idris.Builtin.MkPair', V202, {'Idris.Builtin.MkPair', V197, V198}} | V206]))), {'Idris.Prelude.Types.Right', V207} end), case V208 of {'Idris.Prelude.Types.Left', E142} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V210) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V197, {'Idris.TTImp.TTImp.IVar', V197, V202}}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E136, E137)); _ -> fun (V211) -> {'Idris.Prelude.Types.Right', V3} end end.
'un--checkQuoteName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V23 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E2, E3, E4, E5, E6, E7} -> (fun (V17, V18, V19, V20, V21, V22) -> V17 end(E2, E3, E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V10))(V12))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectiontt'(<<"Name"/utf8>>)), V12))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V25, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V28)), V11))(V12)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkQuoteDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.TTImp.Elab.Quote.Unq'}, [], V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V21 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V20) -> ('un--getUnquoteDecl'(V1, V19, V3, V20)) end, V10, []))(V12))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> begin (V36 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'('erased', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect_ImpDecl'(V24, V25, V26, V27, V28, V29)) end end end end end end, V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E6, E7, E8, E9, E10, E11} -> (fun (V30, V31, V32, V33, V34, V35) -> V30 end(E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V23))(V12))), case V36 of {'Idris.Prelude.Types.Left', E12} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V38) -> begin (V40 = begin (V39 = ('erlang':'get'(V19))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E14} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V42) -> begin (V43 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Decl"/utf8>>)), V12))), case V43 of {'Idris.Prelude.Types.Left', E16} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V45) -> begin (V46 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--preludetypes'(<<"List"/utf8>>)), [V45 | []], V12))), case V46 of {'Idris.Prelude.Types.Left', E18} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V48) -> begin (V49 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V42, V5, V6, V7, V8, V38))(V12))), case V49 of {'Idris.Prelude.Types.Left', E20} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V51) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V51, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V48)), V11))(V12)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkQuote'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.TTImp.Elab.Quote.Unq'}, [], V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--getUnquote'(V1, V19, V3, V10))(V12))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V29 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect_RawImp'(V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E6, E7, E8, E9, E10, E11} -> (fun (V23, V24, V25, V26, V27, V28) -> V23 end(E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V22))(V12))), case V29 of {'Idris.Prelude.Types.Left', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V19))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V35) -> begin (V36 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>)), V12))), case V36 of {'Idris.Prelude.Types.Left', E16} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V38) -> begin (V39 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V35, V5, V6, V7, V8, V31))(V12))), case V39 of {'Idris.Prelude.Types.Left', E18} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V41) -> begin (V42 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V1, V0, V16, V8, V41, V12))), case V42 of {'Idris.Prelude.Types.Left', E20} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V44) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V44, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V38)), V11))(V12)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--bindUnqs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V5 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', V10} end; [E0 | E1] -> (fun (V12, V13) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V16, V17) -> fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E6} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V22) -> begin (V50 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExactI'(('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>)), case V22 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49) -> V23 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V18))), case V50 of {'Idris.Prelude.Types.Left', E35} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V52) -> case V52 of {'Idris.Prelude.Types.Just', E37} -> (fun (V53) -> case V53 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V54, V55) -> begin (V56 = (('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V6, V7, V8, V9, V17, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.TyCon', 0, 0}, {'Idris.Core.Name.Resolved', V54}}))}))(V18))), case V56 of {'Idris.Prelude.Types.Left', E40} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V58) -> case V58 of {'Idris.Builtin.MkPair', E42, E43} -> (fun (V59, V60) -> begin (V61 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V13, V6, V7, V8, V9, V10))(V18))), case V61 of {'Idris.Prelude.Types.Left', E44} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V63) -> begin (V64 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V60))(V18))), case V64 of {'Idris.Prelude.Types.Left', E46} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V16, V14, {'Idris.Core.TT.Let', V16, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V6)), V59, V66}, ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V14, V14, V63))}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38, E39)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V18)) end end(E37)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V18)) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
