-module('Idris.Idris2.Core.Unify').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--search'/11,
  'case--case block in case block in retryGuess-20217'/17,
  'case--case block in case block in retryGuess-19620'/17,
  'case--case block in retryGuess-19195'/11,
  'case--retry-18608'/7,
  'case--case block in unifyBothBinders-15587'/28,
  'case--case block in case block in unifyHole-13072'/23,
  'case--headsConvert-11032'/9,
  'case--occursCheck-8051'/10,
  'case--occursCheck,failOnStrongRigid-7913'/11,
  'case--case block in patternEnvTm-7788'/9,
  'case--patternEnvTm-7749'/8,
  'case--case block in patternEnv-7517'/10,
  'case--patternEnv-7474'/9,
  'case--chaseMetas-6499'/5,
  'nested--8268-7650--in--un--updateVars'/7,
  'nested--7936-7364--in--un--updateVars'/7,
  'nested--9116-9060--in--un--updateIVarsPi'/25,
  'nested--9116-9061--in--un--updateIVarsB'/25,
  'nested--9088-8384--in--un--updateIVars'/18,
  'nested--9088-8383--in--un--updateIVar'/16,
  'nested--11481-10515--in--un--tooBigArgs'/7,
  'nested--11712-12199--in--un--solutionHeadSame'/17,
  'nested--11732-14575--in--un--pv'/17,
  'nested--9088-8381--in--un--noMeta'/16,
  'nested--9088-8385--in--un--mkDef'/20,
  'nested--11732-14576--in--un--localsIn'/18,
  'nested--9088-8382--in--un--isSimple'/15,
  'nested--11700-11856--in--un--isPatName'/18,
  'nested--11481-10514--in--un--isFn'/5,
  'nested--11751-16917--in--un--isDelay'/9,
  'nested--11712-12198--in--un--inNoSolve'/18,
  'nested--7689-7153--in--un--inArgs'/8,
  'nested--23319-20972--in--un--getHoleName'/4,
  'nested--8483-7832--in--un--failOnStrongRigid'/10,
  'nested--22869-20571--in--un--constraintToHole'/4,
  'nested--7125-6621--in--un--checkDefined'/12,
  'nested--23319-20973--in--un--checkConstraint'/3,
  'nested--23004-20707--in--un--anySame'/7,
  'nested--7820-7262--in--un--anyFirst'/4,
  'nested--22811-20517--in--un--afterStart'/6,
  'dn--un--weaken_Weaken_(IVars $vs)'/1,
  'dn--un--unifyWithLazyD_Unify_Term'/9,
  'dn--un--unifyWithLazyD_Unify_NF'/8,
  'dn--un--unifyWithLazyD_Unify_Closure'/9,
  'dn--un--unifyD_Unify_Term'/9,
  'dn--un--unifyD_Unify_NF'/8,
  'dn--un--unifyD_Unify_Closure'/9,
  'dn--un--show_Show_UnifyMode'/1,
  'dn--un--show_Show_AddLazy'/1,
  'dn--un--showPrec_Show_AddLazy'/2,
  'dn--un--__Impl_Unify_Term'/0,
  'dn--un--__Impl_Unify_NF'/0,
  'dn--un--__Impl_Unify_Closure'/0,
  'dn--un--__Impl_Show_AddLazy'/0,
  'dn--un--==_Eq_UnifyMode'/2,
  'dn--un--==_Eq_SolveMode'/2,
  'dn--un--/=_Eq_UnifyMode'/2,
  'un--unionAll'/1,
  'un--union'/2,
  'un--unifyWithLazyD'/5,
  'un--unifyWithLazy'/7,
  'un--unifyNoEta'/8,
  'un--unifyInvertible'/15,
  'un--unifyIfEq'/10,
  'un--unifyHoleApp'/12,
  'un--unifyHole'/14,
  'un--unifyD'/5,
  'un--unifyBothBinders'/14,
  'un--unifyBothApps'/12,
  'un--unifyArgs'/9,
  'un--unifyApp'/11,
  'un--unify'/7,
  'un--ufail'/3,
  'un--tooBig'/4,
  'un--toSubVars'/2,
  'un--success'/0,
  'un--solvedHole'/1,
  'un--solveIfUndefined'/7,
  'un--solveHole'/17,
  'un--solveConstraintsAfter'/6,
  'un--solveConstraints'/5,
  'un--setInvertible'/4,
  'un--retryGuess'/6,
  'un--retry'/5,
  'un--postponeS'/11,
  'un--postponePatVar'/12,
  'un--postpone'/10,
  'un--patternEnvTm'/6,
  'un--patternEnv'/6,
  'un--occursCheck'/8,
  'un--lower'/1,
  'un--isHoleApp'/1,
  'un--isDefInvertible'/4,
  'un--instantiate'/15,
  'un--inTerm'/0,
  'un--inSearch'/0,
  'un--inMatch'/0,
  'un--inLHS'/0,
  'un--headsConvert'/8,
  'un--giveUpConstraints'/3,
  'un--getVarsTm'/2,
  'un--getVars'/3,
  'un--getMetaNames'/2,
  'un--getIVars'/1,
  'un--getArgTypes'/3,
  'un--forceMeta'/3,
  'un--dumpArg'/5,
  'un--delayMeta'/5,
  'un--convertErrorS'/8,
  'un--convertError'/7,
  'un--constrain'/1,
  'un--checkDots'/3,
  'un--checkArgsSame'/4,
  'un--chaseMetas'/3
]).
'un--search'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'(V0, V1, <<"auto"/utf8>>, (1 + (1 + (1 + 0))), fun () -> <<"Initial target: "/utf8>> end, V9, V8, V10))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"auto"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Running search with defaults "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(V5)))) end, V10))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.Core.AutoSearch':'un--searchType'(V0, V1, V2, V3, V4, V5, [], V6, V7, 1, ('Idris.Idris2.Core.Env':'un--abstractEnvType'(V0, V3, V9, V8)), V9, V8, V10))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'(V0, V1, <<"auto"/utf8>>, (1 + (1 + (1 + 0))), fun () -> <<"Result"/utf8>> end, V9, V23, V10))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V28 = begin (V27 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V27} end), case V28 of {'Idris.Prelude.Types.Left', E10} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V30) -> {'Idris.Prelude.Types.Right', V23} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in case block in retryGuess-20217'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of [] -> begin (V38 = case V8 of {'Idris.Core.Context.MkGlobalDef', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> {'Idris.Core.Context.MkGlobalDef', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, {'Idris.Core.Context.PMDef', {'Idris.Core.Context.MkPMDefInfo', {'Idris.Core.Context.NotHole'}, 1}, [], {'Idris.Core.CaseTree.STerm', 0, V12}, {'Idris.Core.CaseTree.STerm', 0, V12}, []}, V35, V36, V37} end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), fun (V39) -> begin (V40 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Resolved "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))) end, V12, V39))), case V40 of {'Idris.Prelude.Types.Left', E46} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V42) -> begin (V47 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V43) -> case V43 of {'Idris.Prelude.Types.Left', E48} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V45) -> {'Idris.Prelude.Types.Right', 0} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V46) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V38, V46)) end, V39))), case V47 of {'Idris.Prelude.Types.Left', E50} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V49) -> begin (V50 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0, V39))), case V50 of {'Idris.Prelude.Types.Left', E52} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V52) -> {'Idris.Prelude.Types.Right', case V15 of {'Idris.Core.Unify.MkUnifyResult', E54, E55, E56, E57} -> (fun (V53, V54, V55, V56) -> V54 end(E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> begin (V78 = case V8 of {'Idris.Core.Context.MkGlobalDef', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20} -> (fun (V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77) -> {'Idris.Core.Context.MkGlobalDef', V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, {'Idris.Core.Context.Guess', V12, V11, V16}, V75, V76, V77} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), fun (V79) -> begin (V84 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V80) -> case V80 of {'Idris.Prelude.Types.Left', E21} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V82) -> {'Idris.Prelude.Types.Right', 0} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V83) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V78, V83)) end, V79))), case V84 of {'Idris.Prelude.Types.Left', E23} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V86) -> {'Idris.Prelude.Types.Right', 0} end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'case--case block in case block in retryGuess-19620'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V15 of [] -> begin (V32 = case V14 of {'Idris.Core.Unify.MkUnifyResult', E39, E40, E41, E42} -> (fun (V17, V18, V19, V20) -> case V20 of {'Idris.Core.Unify.NoLazy'} -> (fun () -> {'Idris.Prelude.Types.Right', V12} end()); {'Idris.Core.Unify.AddForce', E43} -> (fun (V21) -> {'Idris.Prelude.Types.Right', ('un--forceMeta'(V21, V11, V12))} end(E43)); {'Idris.Core.Unify.AddDelay', E44} -> (fun (V22) -> begin (V23 = (('Idris.Idris2.Core.GetType':'un--getType'([], V6, {'Idris.Core.Env.Nil'}, V12))(V16))), case V23 of {'Idris.Prelude.Types.Left', E45} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Retry Delay"/utf8>> end, V12, V16))), case V26 of {'Idris.Prelude.Types.Left', E47} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V28) -> begin (V29 = (('Idris.Idris2.Core.Normalise':'un--getTerm'(V25))(V16))), case V29 of {'Idris.Prelude.Types.Left', E49} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V31) -> {'Idris.Prelude.Types.Right', ('un--delayMeta'([], V22, V11, V31, V12))} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39, E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V32 of {'Idris.Prelude.Types.Left', E51} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V34) -> begin (V56 = case V8 of {'Idris.Core.Context.MkGlobalDef', E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55) -> {'Idris.Core.Context.MkGlobalDef', V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, {'Idris.Core.Context.PMDef', {'Idris.Core.Context.MkPMDefInfo', {'Idris.Core.Context.NotHole'}, 1}, [], {'Idris.Core.CaseTree.STerm', 0, V34}, {'Idris.Core.CaseTree.STerm', 0, V34}, []}, V53, V54, V55} end(E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V57 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Resolved "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))) end, V34, V16))), case V57 of {'Idris.Prelude.Types.Left', E74} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V59) -> begin (V64 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V60) -> case V60 of {'Idris.Prelude.Types.Left', E76} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V62) -> {'Idris.Prelude.Types.Right', 0} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V63) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V56, V63)) end, V16))), case V64 of {'Idris.Prelude.Types.Left', E78} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V66) -> begin (V67 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0, V16))), case V67 of {'Idris.Prelude.Types.Left', E80} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V69) -> {'Idris.Prelude.Types.Right', case V14 of {'Idris.Core.Unify.MkUnifyResult', E82, E83, E84, E85} -> (fun (V70, V71, V72, V73) -> V71 end(E82, E83, E84, E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V89 = case V14 of {'Idris.Core.Unify.MkUnifyResult', E0, E1, E2, E3} -> (fun (V74, V75, V76, V77) -> case V77 of {'Idris.Core.Unify.NoLazy'} -> (fun () -> {'Idris.Prelude.Types.Right', V12} end()); {'Idris.Core.Unify.AddForce', E4} -> (fun (V78) -> {'Idris.Prelude.Types.Right', ('un--forceMeta'(V78, V11, V12))} end(E4)); {'Idris.Core.Unify.AddDelay', E5} -> (fun (V79) -> begin (V80 = (('Idris.Idris2.Core.GetType':'un--getType'([], V6, {'Idris.Core.Env.Nil'}, V12))(V16))), case V80 of {'Idris.Prelude.Types.Left', E6} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V82) -> begin (V83 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Retry Delay (constrained)"/utf8>> end, V12, V16))), case V83 of {'Idris.Prelude.Types.Left', E8} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V85) -> begin (V86 = (('Idris.Idris2.Core.Normalise':'un--getTerm'(V82))(V16))), case V86 of {'Idris.Prelude.Types.Left', E10} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V88) -> {'Idris.Prelude.Types.Right', ('un--delayMeta'([], V79, V11, V88, V12))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V89 of {'Idris.Prelude.Types.Left', E12} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V91) -> begin (V113 = case V8 of {'Idris.Core.Context.MkGlobalDef', E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112) -> {'Idris.Core.Context.MkGlobalDef', V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, {'Idris.Core.Context.Guess', V91, V11, V15}, V110, V111, V112} end(E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V118 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V114) -> case V114 of {'Idris.Prelude.Types.Left', E35} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V116) -> {'Idris.Prelude.Types.Right', 0} end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V117) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V113, V117)) end, V16))), case V118 of {'Idris.Prelude.Types.Left', E37} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V120) -> {'Idris.Prelude.Types.Right', 0} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'case--case block in retryGuess-19195'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Core.Context.BySearch', E0, E1, E2} -> (fun (V11, V12, V13) -> fun (V14) -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V6, V5, fun (V15) -> begin (V37 = ('un--search'([], V6, V5, V1, V11, ('dn--un--==_Eq_SolveMode'(V3, 1)), V12, V13, case V8 of {'Idris.Core.Context.MkGlobalDef', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V18 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Core.Env.Nil'}, V15))), case V37 of {'Idris.Prelude.Types.Left', E24} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V39) -> begin (V61 = case V8 of {'Idris.Core.Context.MkGlobalDef', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> {'Idris.Core.Context.MkGlobalDef', V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, {'Idris.Core.Context.PMDef', ('Idris.Idris2.Core.Context':'un--defaultPI'()), [], {'Idris.Core.CaseTree.STerm', 0, V39}, {'Idris.Core.CaseTree.STerm', 0, V39}, []}, V58, V59, V60} end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V62 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Solved "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))) end, {'Idris.Core.Env.Nil'}, V39, V15))), case V62 of {'Idris.Prelude.Types.Left', E47} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V64) -> begin (V69 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V65) -> case V65 of {'Idris.Prelude.Types.Left', E49} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V67) -> {'Idris.Prelude.Types.Right', 0} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V68) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V61, V68)) end, V15))), case V69 of {'Idris.Prelude.Types.Left', E51} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V71) -> begin (V72 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0, V15))), case V72 of {'Idris.Prelude.Types.Left', E53} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V74) -> {'Idris.Prelude.Types.Right', 1} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V75) -> fun (V76) -> case V75 of {'Idris.Core.Core.DeterminingArg', E80, E81, E82, E83, E84, E85} -> (fun (V77, V78, V79, V80, V81, V82) -> begin (V104 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Failed (det "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V79)), <<")"/utf8>>)))))))) end, case V8 of {'Idris.Core.Context.MkGlobalDef', E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106} -> (fun (V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103) -> V85 end(E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V76))), case V104 of {'Idris.Prelude.Types.Left', E107} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V106) -> begin (V107 = ('un--setInvertible'(V6, V1, {'Idris.Core.Name.Resolved', V80}, V76))), case V107 of {'Idris.Prelude.Types.Left', E109} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V109) -> {'Idris.Prelude.Types.Right', 0} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80, E81, E82, E83, E84, E85)); _ -> begin (V131 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Search failed at "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V11)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))))))) end, {'Idris.Core.Env.Nil'}, case V8 of {'Idris.Core.Context.MkGlobalDef', E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75} -> (fun (V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130) -> V112 end(E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V76))), case V131 of {'Idris.Prelude.Types.Left', E76} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V133) -> case V3 of 3 -> begin (V134 = ('Idris.Idris2.Core.Normalise':'un--normaliseErr'(V6, V75, V76))), case V134 of {'Idris.Prelude.Types.Left', E78} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V136) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(V136, V76)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', 0} end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V14)) end end(E0, E1, E2)); {'Idris.Core.Context.Guess', E111, E112, E113} -> (fun (V137, V138, V139) -> case V139 of [E120 | E121] -> (fun (V140, V141) -> case V141 of [] -> begin (V142 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), fun (V143) -> begin (V144 = ('un--retry'(V6, V5, V142, V140, V143))), case V144 of {'Idris.Prelude.Types.Left', E128} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V146) -> ('case--case block in case block in retryGuess-19620'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V140, V138, V137, V142, V146, case V146 of {'Idris.Core.Unify.MkUnifyResult', E130, E131, E132, E133} -> (fun (V147, V148, V149, V150) -> V147 end(E130, E131, E132, E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V143)) end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> begin (V151 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), fun (V152) -> begin (V155 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V153) -> fun (V154) -> ('un--retry'(V6, V5, V151, V153, V154)) end end, V139, [], V152))), case V155 of {'Idris.Prelude.Types.Left', E122} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V157) -> begin (V158 = ('un--unionAll'(V157))), (('case--case block in case block in retryGuess-20217'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V139, V138, V137, V151, V157, V158, case V158 of {'Idris.Core.Unify.MkUnifyResult', E124, E125, E126, E127} -> (fun (V159, V160, V161, V162) -> V159 end(E124, E125, E126, E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V152)) end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E120, E121)); _ -> begin (V163 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), fun (V164) -> begin (V167 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V165) -> fun (V166) -> ('un--retry'(V6, V5, V163, V165, V166)) end end, V139, [], V164))), case V167 of {'Idris.Prelude.Types.Left', E114} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V169) -> begin (V170 = ('un--unionAll'(V169))), (('case--case block in case block in retryGuess-20217'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V139, V138, V137, V163, V169, V170, case V170 of {'Idris.Core.Unify.MkUnifyResult', E116, E117, E118, E119} -> (fun (V171, V172, V173, V174) -> V171 end(E116, E117, E118, E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V164)) end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E111, E112, E113)); _ -> fun (V175) -> {'Idris.Prelude.Types.Right', 0} end end.
'case--retry-18608'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--success'())} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Core.UnifyState.Resolved'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--success'())} end()); {'Idris.Core.UnifyState.MkConstraint', E1, E2, E3, E4, E5, E6} -> (fun (V8, V9, V10, V11, V12, V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--continueNF'(V0, V8, V17, V11, V12))(V6))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.Normalise':'un--continueNF'(V0, V8, V17, V11, V13))(V6))), case V21 of {'Idris.Prelude.Types.Left', E11} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V23) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V24) -> begin (V27 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Retrying "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('dn--un--show_Show_UnifyMode'(case V2 of {'Idris.Core.Unify.MkUnifyInfo', E13, E14} -> (fun (V25, V26) -> V26 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))))) end, V11, V20, V24))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> begin (V30 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"....with"/utf8>> end, V11, V23, V24))), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V33 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), case V10 of 1 -> fun () -> <<"(lazy allowed)"/utf8>> end; 0 -> fun () -> <<"(no lazy)"/utf8>> end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V24))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> begin (V68 = case V10 of 1 -> (((('un--unifyWithLazy'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('dn--un--unifyD_Unify_NF'(V36, V37, V38, V39, V40, V41, V42, V43)) end end end end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('dn--un--unifyWithLazyD_Unify_NF'(V44, V45, V46, V47, V48, V49, V50, V51)) end end end end end end end end}, V8, V0, V3, V2, V9, V11))(V20))(V23))(V24)); 0 -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('dn--un--unifyD_Unify_NF'(V52, V53, V54, V55, V56, V57, V58, V59)) end end end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('dn--un--unifyWithLazyD_Unify_NF'(V60, V61, V62, V63, V64, V65, V66, V67)) end end end end end end end end}, V8, V0, V3, ('un--lower'(V2)), V9, V11))(V20))(V23))(V24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V68 of {'Idris.Prelude.Types.Left', E21} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V70) -> case V70 of {'Idris.Core.Unify.MkUnifyResult', E23, E24, E25, E26} -> (fun (V71, V72, V73, V74) -> case V71 of [] -> begin (V79 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Success "/utf8>>, ('dn--un--show_Show_AddLazy'(case V70 of {'Idris.Core.Unify.MkUnifyResult', E33, E34, E35, E36} -> (fun (V75, V76, V77, V78) -> V78 end(E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V24))), case V79 of {'Idris.Prelude.Types.Left', E37} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V81) -> begin (V82 = ('Idris.Idris2.Core.UnifyState':'un--deleteConstraint'(V3, V1, V24))), case V82 of {'Idris.Prelude.Types.Left', E39} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V84) -> {'Idris.Prelude.Types.Right', V70} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V89 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constraints "/utf8>>, ('dn--un--show_Show_AddLazy'(case V70 of {'Idris.Core.Unify.MkUnifyResult', E27, E28, E29, E30} -> (fun (V85, V86, V87, V88) -> V88 end(E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V24))), case V89 of {'Idris.Prelude.Types.Left', E31} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V91) -> {'Idris.Prelude.Types.Right', V70} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V92) -> fun (V93) -> begin (V95 = begin (V94 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V94} end), case V95 of {'Idris.Prelude.Types.Left', E41} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V97) -> begin (V98 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V97, V93))), case V98 of {'Idris.Prelude.Types.Left', E43} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V100) -> begin (V101 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V8, V100, V11, V20, V93))), case V101 of {'Idris.Prelude.Types.Left', E45} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V103) -> begin (V104 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V8, V100, V11, V23, V93))), case V104 of {'Idris.Prelude.Types.Left', E47} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V106) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.WhenUnifying', V8, V9, V11, V103, V106, V92}, V93)) end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V6)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2, E3, E4, E5, E6)); {'Idris.Core.UnifyState.MkSeqConstraint', E49, E50, E51, E52, E53} -> (fun (V107, V108, V109, V110, V111) -> begin (V113 = begin (V112 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V112} end), case V113 of {'Idris.Prelude.Types.Left', E54} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V115) -> begin (V117 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V116) -> ('Idris.Idris2.Core.Normalise':'un--continueNF'(V0, V107, V115, V109, V116)) end, V110, [], V6))), case V117 of {'Idris.Prelude.Types.Left', E56} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V119) -> begin (V121 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V120) -> ('Idris.Idris2.Core.Normalise':'un--continueNF'(V0, V107, V115, V109, V120)) end, V111, [], V6))), case V121 of {'Idris.Prelude.Types.Left', E58} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V123) -> begin (V153 = (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--unifyD_Unify_NF'(V124, V125, V126, V127, V128, V129, V130, V131)) end end end end end end end end, fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> ('dn--un--unifyWithLazyD_Unify_NF'(V132, V133, V134, V135, V136, V137, V138, V139)) end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V140, V141, V142, V143, V144, V145)) end end end end end end, fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_NF'(V146, V147, V148, V149, V150, V151, V152)) end end end end end end end}}, V107, V0, V3, V2, V108, V109, V119, V123))(V6))), case V153 of {'Idris.Prelude.Types.Left', E60} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V155) -> case V155 of {'Idris.Core.Unify.MkUnifyResult', E62, E63, E64, E65} -> (fun (V156, V157, V158, V159) -> case V156 of [] -> begin (V160 = ('Idris.Idris2.Core.UnifyState':'un--deleteConstraint'(V3, V1, V6))), case V160 of {'Idris.Prelude.Types.Left', E66} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V162) -> {'Idris.Prelude.Types.Right', V155} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', V155} end end(E62, E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unifyBothBinders-15587'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V26 of [] -> begin (V28 = (((V12(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}))))(V27))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> begin (V31 = (((V9(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}))))(V27))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> begin (V34 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V30, V27))), case V34 of {'Idris.Prelude.Types.Left', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V36) -> begin (V37 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V33, V27))), case V37 of {'Idris.Prelude.Types.Left', E22} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V39) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('dn--un--unifyD_Unify_Term'(V40, V41, V42, V43, V44, V45, V46, V47, V48)) end end end end end end end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('dn--un--unifyWithLazyD_Unify_Term'(V49, V50, V51, V52, V53, V54, V55, V56, V57)) end end end end end end end end end}, [V13 | V0], V19, V18, ('un--lower'(V17)), V16, V25))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V36))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V39))))(V27)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V58 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V1, V27))), case V58 of {'Idris.Prelude.Types.Left', E0} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V60) -> begin (V61 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V5, V27))), case V61 of {'Idris.Prelude.Types.Left', E2} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V63) -> begin (V68 = (('Idris.Idris2.Core.UnifyState':'un--newConstant'(V0, V18, V19, V16, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V64) -> fun (V65) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V64, V65)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V66) -> fun (V67) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V66, V67)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())})), V15, {'Idris.Core.TT.Bind', V14, V13, {'Idris.Core.TT.Lam', V8, V7, {'Idris.Core.TT.Explicit'}, V60}, {'Idris.Core.TT.Local', V14, {'Idris.Prelude.Types.Nothing'}, 0}}, {'Idris.Core.TT.Bind', V14, V13, {'Idris.Core.TT.Pi', V8, V7, {'Idris.Core.TT.Explicit'}, V60}, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V63))}, V26))(V27))), case V68 of {'Idris.Prelude.Types.Left', E4} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V70) -> begin (V71 = (((V12(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}))))(V27))), case V71 of {'Idris.Prelude.Types.Left', E6} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V73) -> begin (V74 = (((V9(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.App', V16, V70, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}}))))(V27))), case V74 of {'Idris.Prelude.Types.Left', E8} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V76) -> begin (V77 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V73, V27))), case V77 of {'Idris.Prelude.Types.Left', E10} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V79) -> begin (V80 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V76, V27))), case V80 of {'Idris.Prelude.Types.Left', E12} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V82) -> begin (V101 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('dn--un--unifyD_Unify_Term'(V83, V84, V85, V86, V87, V88, V89, V90, V91)) end end end end end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('dn--un--unifyWithLazyD_Unify_Term'(V92, V93, V94, V95, V96, V97, V98, V99, V100)) end end end end end end end end end}, [V13 | V0], V19, V18, ('un--lower'(V17)), V16, V25))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V79))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V82))))(V27))), case V101 of {'Idris.Prelude.Types.Left', E14} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V103) -> {'Idris.Prelude.Types.Right', ('un--union'(V23, V103))} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'case--case block in case block in unifyHole-13072'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of {'Idris.Core.Context.Hole', E0, E1} -> (fun (V23, V24) -> fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V12, V0, V14, V7, V1, V25))), case V26 of {'Idris.Prelude.Types.Left', E2} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V28) -> begin (V73 = case ('un--tooBig'(0, case V13 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56) -> case V33 of {'Idris.Core.Options.MkOptions', E32, E33, E34, E35, E36, E37, E38, E39, E40} -> (fun (V57, V58, V59, V60, V61, V62, V63, V64, V65) -> case V60 of {'Idris.Core.Options.MkElabDirectives', E41, E42, E43, E44, E45, E46, E47} -> (fun (V66, V67, V68, V69, V70, V71, V72) -> V71 end(E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E32, E33, E34, E35, E36, E37, E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, [], V28)) of 1 -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V12, V0, V13, V7, V1, V25)); 0 -> {'Idris.Prelude.Types.Right', V28}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V73 of {'Idris.Prelude.Types.Left', E48} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V75) -> begin (V76 = ('un--occursCheck'(V0, V12, V8, V7, V9, V5, V75, V25))), case V76 of {'Idris.Prelude.Types.Left', E50} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V78) -> case V78 of {'Idris.Prelude.Types.Just', E52} -> (fun (V79) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V79, V18)) of {'Idris.Prelude.Types.Just', E53} -> (fun (V80) -> ('un--solveHole'(V12, V11, V16, V0, V6, V9, V7, V5, V4, V3, V2, V17, V18, V79, V80, V1, V25)) end(E53)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V81 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V12, V0, V13, V7, V1, V25))), case V81 of {'Idris.Prelude.Types.Left', E54} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V83) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V83, V18)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Can\x{27}t shrink"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V84) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V84} end, V2))}, V1, V25)) end()); {'Idris.Prelude.Types.Just', E56} -> (fun (V85) -> ('un--solveHole'(V12, V11, V16, V0, V6, V9, V7, V5, V4, V3, V2, V17, V18, V79, V85, V1, V25)) end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E52)); _ -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Occurs check failed"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V86) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V86} end, V2))}, V1, V25)) end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V87) -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Delayed hole"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V88) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V88} end, V2))}, V1, V87)) end end.
'case--headsConvert-11032'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> case V9 of [E2 | E3] -> (fun (V12, V13) -> case V10 of [E4 | E5] -> (fun (V14, V15) -> begin (V16 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V7, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unifying head"/utf8>> end, V3, V12, V11))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V7, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<".........with"/utf8>> end, V3, V14, V11))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> begin (V38 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('dn--un--unifyD_Unify_NF'(V22, V23, V24, V25, V26, V27, V28, V29)) end end end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('dn--un--unifyWithLazyD_Unify_NF'(V30, V31, V32, V33, V34, V35, V36, V37)) end end end end end end end end}, V0, V7, V6, V5, V4, V3))(V12))(V14))(V11))), case V38 of {'Idris.Prelude.Types.Left', E10} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V40) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.List':'un--isNil'(case V40 of {'Idris.Core.Unify.MkUnifyResult', E12, E13, E14, E15} -> (fun (V41, V42, V43, V44) -> V41 end(E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E0, E1)); _ -> fun (V45) -> {'Idris.Prelude.Types.Right', 0} end end.
'case--occursCheck-8051'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V1}}; _ -> begin (V11 = begin (V10 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V6, V0, V13, V4, V1, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V17 = (('un--getMetaNames'(V6, V16))(V9))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V22, V23)) end end}, V2, V19)) of 1 -> begin (V25 = (('nested--8483-7832--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, 0, fun (V24) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.CyclicMeta', V0, V5, V4, V2, V16}, V24)) end, V16))(V9))), case V25 of {'Idris.Prelude.Types.Left', E6} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V16}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'case--occursCheck,failOnStrongRigid-7913'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V12 of [] -> fun (V13) -> {'Idris.Prelude.Types.Right', 0} end; _ -> fun (V14) -> case V11 of {'Idris.Core.TT.Ref', E2, E3, E4} -> (fun (V15, V16, V17) -> case V16 of {'Idris.Core.TT.Func'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V18) -> ('nested--8483-7832--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, 1, V8, V18)) end, V12, V14)) end end(E2, E3, E4)); _ -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V19) -> ('nested--8483-7832--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, V9, V8, V19)) end, V12, V14)) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in patternEnvTm-7788'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V9, V10) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.DPair.MkDPair', V9, {'Idris.Builtin.MkPair', ('nested--8268-7650--in--un--updateVars'(V0, V1, V2, V3, V4, V7, V10)), V10}}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--patternEnvTm-7749'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Nothing'} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> ('case--case block in patternEnvTm-7788'(V0, V1, V2, V3, V4, V5, V6, V8, ('un--toSubVars'(V0, V8)))) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in patternEnv-7517'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V10, V11) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.DPair.MkDPair', V10, {'Idris.Builtin.MkPair', ('nested--7936-7364--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V11)), V11}}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--patternEnv-7474'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Nothing'} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> ('case--case block in patternEnv-7517'(V0, V1, V2, V3, V4, V5, V6, V7, V9, ('un--toSubVars'(V0, V9)))) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--chaseMetas-6499'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Just', E40} -> (fun (V5) -> ('un--chaseMetas'(V3, V1, V2)) end(E40)); _ -> fun (V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V39 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V0, case V10 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V11 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V39 of {'Idris.Prelude.Types.Left', E30} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V41) -> case V41 of {'Idris.Prelude.Types.Just', E32} -> (fun (V42) -> case V42 of {'Idris.Core.Context.PMDef', E33, E34, E35, E36, E37} -> (fun (V43, V44, V45, V46, V47) -> case V45 of {'Idris.Core.CaseTree.STerm', E38, E39} -> (fun (V48, V49) -> begin (V50 = ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.TT':'un--getMetas'(V49))))), (('un--chaseMetas'(V3, ('Idris.Idris2.Prelude.Types.List':'un--++'(V50, V1)), ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E38, E39)); _ -> (('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E33, E34, E35, E36, E37)); _ -> (('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E32)); _ -> (('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--8268-7650--in--un--updateVars'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> []; [E0 | E1] -> (fun (V7, V8) -> case ('Idris.Idris2.Core.TT':'un--subElem'(V7, V6)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--8268-7650--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V9) -> [V9 | ('nested--8268-7650--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6))] end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7936-7364--in--un--updateVars'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> []; [E0 | E1] -> (fun (V7, V8) -> case ('Idris.Idris2.Core.TT':'un--subElem'(V7, V6)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--7936-7364--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V9) -> [V9 | ('nested--7936-7364--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6))] end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9116-9060--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Idris.Core.TT.Explicit'} -> (fun () -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Explicit'}} end()); {'Idris.Core.TT.Implicit'} -> (fun () -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Implicit'}} end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.AutoImplicit'}} end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V25)), fun (V26) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.DefImplicit', V26}} end)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9116-9061--in--un--updateIVarsB'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Idris.Core.TT.Lam', E0, E1, E2, E3} -> (fun (V25, V26, V27, V28) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9116-9060--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V27)), fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V28)), fun (V30) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Lam', V25, V26, V29, V30}} end)) end)) end(E0, E1, E2, E3)); {'Idris.Core.TT.Let', E4, E5, E6, E7} -> (fun (V31, V32, V33, V34) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V33)), fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V34)), fun (V36) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Let', V31, V32, V35, V36}} end)) end)) end(E4, E5, E6, E7)); {'Idris.Core.TT.Pi', E8, E9, E10, E11} -> (fun (V37, V38, V39, V40) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9116-9060--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V39)), fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V40)), fun (V42) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Pi', V37, V38, V41, V42}} end)) end)) end(E8, E9, E10, E11)); {'Idris.Core.TT.PVar', E12, E13, E14, E15} -> (fun (V43, V44, V45, V46) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9116-9060--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V45)), fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V46)), fun (V48) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PVar', V43, V44, V47, V48}} end)) end)) end(E12, E13, E14, E15)); {'Idris.Core.TT.PLet', E16, E17, E18, E19} -> (fun (V49, V50, V51, V52) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V51)), fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V52)), fun (V54) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PLet', V49, V50, V53, V54}} end)) end)) end(E16, E17, E18, E19)); {'Idris.Core.TT.PVTy', E20, E21, E22} -> (fun (V55, V56, V57) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V57)), fun (V58) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PVTy', V55, V56, V58}} end)) end(E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V18, V19, V20) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8383--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V20, V16)), fun (V21) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Local', V18, V19, V21}} end)) end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V22, V23, V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.TT.Ref', V22, V23, V24})) end(E3, E4, E5)); {'Idris.Core.TT.Meta', E6, E7, E8, E9} -> (fun (V25, V26, V27, V28) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'({'Idris.Prelude.Interfaces.MkApplicative', fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V31, V32)) end end end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V34)) end end, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V37, V38)) end end end end}, fun (V39) -> ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V39)) end, V28)), fun (V40) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.TT.Meta', V25, V26, V27, V40})) end)) end(E6, E7, E8, E9)); {'Idris.Core.TT.Bind', E10, E11, E12, E13} -> (fun (V41, V42, V43, V44) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9116-9061--in--un--updateIVarsB'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V42, V44, V43, V41, V14, V16, V14, V15, V16, V43)), fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V42 | V14], [V42 | V15], {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Just', 0}, ('dn--un--weaken_Weaken_(IVars $vs)'(V16))}, V44)), fun (V46) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Bind', V41, V42, V45, V46}} end)) end)) end(E10, E11, E12, E13)); {'Idris.Core.TT.App', E14, E15, E16} -> (fun (V47, V48, V49) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V48)), fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V49)), fun (V51) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.App', V47, V50, V51}} end)) end)) end(E14, E15, E16)); {'Idris.Core.TT.As', E17, E18, E19, E20} -> (fun (V52, V53, V54, V55) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V54)), fun (V56) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V55)), fun (V57) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.As', V52, V53, V56, V57}} end)) end)) end(E17, E18, E19, E20)); {'Idris.Core.TT.TDelayed', E21, E22, E23} -> (fun (V58, V59, V60) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V60)), fun (V61) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TDelayed', V58, V59, V61}} end)) end(E21, E22, E23)); {'Idris.Core.TT.TDelay', E24, E25, E26, E27} -> (fun (V62, V63, V64, V65) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V64)), fun (V66) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V65)), fun (V67) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TDelay', V62, V63, V66, V67}} end)) end)) end(E24, E25, E26, E27)); {'Idris.Core.TT.TForce', E28, E29, E30} -> (fun (V68, V69, V70) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V70)), fun (V71) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TForce', V68, V69, V71}} end)) end(E28, E29, E30)); {'Idris.Core.TT.PrimVal', E31, E32} -> (fun (V72, V73) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PrimVal', V72, V73}} end(E31, E32)); {'Idris.Core.TT.Erased', E33, E34} -> (fun (V74, V75) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Erased', V74, V75}} end(E33, E34)); {'Idris.Core.TT.TType', E35} -> (fun (V76) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TType', V76}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9088-8383--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Core.Unify.ICons', E0, E1} -> (fun (V16, V17) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8383--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V17)), fun (V18) -> {'Idris.Prelude.Types.Just', (1 + V18)} end)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V19) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V14, V19)) of 1 -> {'Idris.Prelude.Types.Just', 0}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9088-8383--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V17)), fun (V20) -> {'Idris.Prelude.Types.Just', (1 + V20)} end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--11481-10515--in--un--tooBigArgs'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> 1; _ -> case V6 of [] -> 0; _ -> case V5 of 0 -> ('erlang':'throw'("Nat case not covered")); _ -> begin (V7 = (V5 - 1)), case V6 of [E0 | E1] -> (fun (V8, V9) -> case ('un--tooBig'(V4, case V4 of 1 -> V7; 0 -> (1 + V7); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, [], V8)) of 1 -> 1; 0 -> ('nested--11481-10515--in--un--tooBigArgs'(V0, V1, V2, V3, V4, V7, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'nested--11712-12199--in--un--solutionHeadSame'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V17, V18, V19) -> case V18 of {'Idris.Core.Value.NMeta', E3, E4, E5} -> (fun (V20, V21, V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V21, V9)) end(E3, E4, E5)); _ -> 0 end end(E0, E1, E2)); _ -> 0 end.
'nested--11732-14575--in--un--pv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Core.Name.PV', E0, E1} -> (fun (V17, V18) -> 1 end(E0, E1)); _ -> 0 end.
'nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V14 of {'Idris.Core.TT.App', E0, E1, E2} -> (fun (V16, V17, V18) -> case V15 of 0 -> 0; _ -> begin (V19 = (V15 - 1)), case ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17, V19)) of 1 -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V18, V19)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.Core.TT.Bind', E3, E4, E5, E6} -> (fun (V20, V21, V22, V23) -> case V15 of 0 -> 0; _ -> begin (V24 = (V15 - 1)), case ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, ('Idris.Idris2.Core.TT':'un--binderType'(V22)), V24)) of 1 -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V23, V24)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5, E6)); {'Idris.Core.TT.Meta', E7, E8, E9, E10} -> (fun (V25, V26, V27, V28) -> 0 end(E7, E8, E9, E10)); {'Idris.Core.TT.TDelayed', E11, E12, E13} -> (fun (V29, V30, V31) -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V31, V15)) end(E11, E12, E13)); {'Idris.Core.TT.TDelay', E14, E15, E16, E17} -> (fun (V32, V33, V34, V35) -> case ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V34, V15)) of 1 -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V35, V15)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14, E15, E16, E17)); {'Idris.Core.TT.TForce', E18, E19, E20} -> (fun (V36, V37, V38) -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V38, V15)) end(E18, E19, E20)); {'Idris.Core.TT.As', E21, E22, E23, E24} -> (fun (V39, V40, V41, V42) -> case ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V41, V15)) of 1 -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V42, V15)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21, E22, E23, E24)); {'Idris.Core.TT.Local', E25, E26, E27} -> (fun (V43, V44, V45) -> 1 end(E25, E26, E27)); {'Idris.Core.TT.Ref', E28, E29, E30} -> (fun (V46, V47, V48) -> 1 end(E28, E29, E30)); {'Idris.Core.TT.PrimVal', E31, E32} -> (fun (V49, V50) -> 1 end(E31, E32)); {'Idris.Core.TT.TType', E33} -> (fun (V51) -> 1 end(E33)); _ -> 0 end.
'nested--9088-8385--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V16 of [E13 | E14] -> (fun (V20, V21) -> case V19 of {'Idris.Core.TT.Bind', E28, E29, E30, E31} -> (fun (V22, V23, V24, V25) -> case V24 of {'Idris.Core.TT.Pi', E45, E46, E47, E48} -> (fun (V26, V27, V28, V29) -> fun (V30) -> begin (V31 = (('nested--9088-8385--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V23 | V14], V15, V21, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Just', V20}, V17}, V18, V25))(V30))), case V31 of {'Idris.Prelude.Types.Left', E49} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V22, V23, {'Idris.Core.TT.Lam', V26, V27, {'Idris.Core.TT.Explicit'}, {'Idris.Core.TT.Erased', V22, 0}}, V33}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E45, E46, E47, E48)); _ -> case V19 of {'Idris.Core.TT.Bind', E33, E34, E35, E36} -> (fun (V34, V35, V36, V37) -> case V36 of {'Idris.Core.TT.Let', E38, E39, E40, E41} -> (fun (V38, V39, V40, V41) -> fun (V42) -> begin (V43 = (('nested--9088-8385--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V35 | V14], V15, V16, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, V17}, V18, V37))(V42))), case V43 of {'Idris.Prelude.Types.Left', E42} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V45) -> begin (V46 = {'Idris.Core.TT.Let', V38, V39, V40, V41}), case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V45, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}})) of {'Idris.Prelude.Types.Just', E44} -> (fun (V47) -> {'Idris.Prelude.Types.Right', V47} end(E44)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V34, V35, V46, V45}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E38, E39, E40, E41)); _ -> case V16 of [] -> fun (V48) -> case ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E37} -> (fun (V49) -> {'Idris.Prelude.Types.Right', V49} end(E37)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V50) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V51) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V53, V54)) end end}, V51)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V58, V59)) end end}, V55, V56)) end end}, V50)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V62) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V63) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V63)) end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V64, V65)) end end}, V62)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V68) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V69, V70)) end end}, V66, V67)) end end}, V60, V61)) end end}, {'Idris.Prelude.Show.MkShow', fun (V71) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V71)) end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V72, V73)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V48)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V74) -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" at "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V14, V19)))))))), V74)) end end end end(E33, E34, E35, E36)); _ -> case V16 of [] -> fun (V75) -> case ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E32} -> (fun (V76) -> {'Idris.Prelude.Types.Right', V76} end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V79) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V79)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V80, V81)) end end}, V78)) end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V84) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V84)) end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V85, V86)) end end}, V82, V83)) end end}, V77)) end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V89) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V90) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V90)) end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V91, V92)) end end}, V89)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V95) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V95)) end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V96, V97)) end end}, V93, V94)) end end}, V87, V88)) end end}, {'Idris.Prelude.Show.MkShow', fun (V98) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V98)) end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V99, V100)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V75)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V101) -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" at "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V14, V19)))))))), V101)) end end end end end(E28, E29, E30, E31)); _ -> case V19 of {'Idris.Core.TT.Bind', E16, E17, E18, E19} -> (fun (V102, V103, V104, V105) -> case V104 of {'Idris.Core.TT.Let', E21, E22, E23, E24} -> (fun (V106, V107, V108, V109) -> fun (V110) -> begin (V111 = (('nested--9088-8385--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V103 | V14], V15, V16, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, V17}, V18, V105))(V110))), case V111 of {'Idris.Prelude.Types.Left', E25} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V113) -> begin (V114 = {'Idris.Core.TT.Let', V106, V107, V108, V109}), case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V113, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}})) of {'Idris.Prelude.Types.Just', E27} -> (fun (V115) -> {'Idris.Prelude.Types.Right', V115} end(E27)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V102, V103, V114, V113}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23, E24)); _ -> case V16 of [] -> fun (V116) -> case ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E20} -> (fun (V117) -> {'Idris.Prelude.Types.Right', V117} end(E20)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V118) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V119) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V120)) end, fun (V121) -> fun (V122) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V121, V122)) end end}, V119)) end, fun (V123) -> fun (V124) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V125) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V125)) end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V126, V127)) end end}, V123, V124)) end end}, V118)) end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V130) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V131) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V131)) end, fun (V132) -> fun (V133) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V132, V133)) end end}, V130)) end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V136) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V136)) end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V137, V138)) end end}, V134, V135)) end end}, V128, V129)) end end}, {'Idris.Prelude.Show.MkShow', fun (V139) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V139)) end, fun (V140) -> fun (V141) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V140, V141)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V116)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V142) -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" at "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V14, V19)))))))), V142)) end end end end(E16, E17, E18, E19)); _ -> case V16 of [] -> fun (V143) -> case ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E15} -> (fun (V144) -> {'Idris.Prelude.Types.Right', V144} end(E15)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V145) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V146) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V147) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V147)) end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V148, V149)) end end}, V146)) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V152) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V152)) end, fun (V153) -> fun (V154) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V153, V154)) end end}, V150, V151)) end end}, V145)) end, fun (V155) -> fun (V156) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V157) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V158) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V158)) end, fun (V159) -> fun (V160) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V159, V160)) end end}, V157)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V163) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V163)) end, fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V164, V165)) end end}, V161, V162)) end end}, V155, V156)) end end}, {'Idris.Prelude.Show.MkShow', fun (V166) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V166)) end, fun (V167) -> fun (V168) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V167, V168)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V143)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V169) -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" at "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V14, V19)))))))), V169)) end end end end end(E13, E14)); _ -> case V19 of {'Idris.Core.TT.Bind', E1, E2, E3, E4} -> (fun (V170, V171, V172, V173) -> case V172 of {'Idris.Core.TT.Let', E6, E7, E8, E9} -> (fun (V174, V175, V176, V177) -> fun (V178) -> begin (V179 = (('nested--9088-8385--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V171 | V14], V15, V16, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, V17}, V18, V173))(V178))), case V179 of {'Idris.Prelude.Types.Left', E10} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V181) -> begin (V182 = {'Idris.Core.TT.Let', V174, V175, V176, V177}), case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V181, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}})) of {'Idris.Prelude.Types.Just', E12} -> (fun (V183) -> {'Idris.Prelude.Types.Right', V183} end(E12)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V170, V171, V182, V181}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8, E9)); _ -> case V16 of [] -> fun (V184) -> case ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E5} -> (fun (V185) -> {'Idris.Prelude.Types.Right', V185} end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V186) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V187) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V188) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V188)) end, fun (V189) -> fun (V190) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V189, V190)) end end}, V187)) end, fun (V191) -> fun (V192) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V193) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V193)) end, fun (V194) -> fun (V195) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V194, V195)) end end}, V191, V192)) end end}, V186)) end, fun (V196) -> fun (V197) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V198) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V199) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V199)) end, fun (V200) -> fun (V201) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V200, V201)) end end}, V198)) end, fun (V202) -> fun (V203) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V204) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V204)) end, fun (V205) -> fun (V206) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V205, V206)) end end}, V202, V203)) end end}, V196, V197)) end end}, {'Idris.Prelude.Show.MkShow', fun (V207) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V207)) end, fun (V208) -> fun (V209) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V208, V209)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V184)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V210) -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" at "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V14, V19)))))))), V210)) end end end end(E1, E2, E3, E4)); _ -> case V16 of [] -> fun (V211) -> case ('nested--9088-8384--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E0} -> (fun (V212) -> {'Idris.Prelude.Types.Right', V212} end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V213) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V214) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V215) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V215)) end, fun (V216) -> fun (V217) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V216, V217)) end end}, V214)) end, fun (V218) -> fun (V219) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V220) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V220)) end, fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V221, V222)) end end}, V218, V219)) end end}, V213)) end, fun (V223) -> fun (V224) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V225) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V226) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V226)) end, fun (V227) -> fun (V228) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V227, V228)) end end}, V225)) end, fun (V229) -> fun (V230) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V231) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V231)) end, fun (V232) -> fun (V233) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V232, V233)) end end}, V229, V230)) end end}, V223, V224)) end end}, {'Idris.Prelude.Show.MkShow', fun (V234) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V234)) end, fun (V235) -> fun (V236) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V235, V236)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V211)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V237) -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" at "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V14, V19)))))))), V237)) end end end end.
'nested--11732-14576--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V16 of [] -> {'Idris.Prelude.Types.Right', 0}; [E0 | E1] -> (fun (V18, V19) -> begin (V21 = begin (V20 = ('erlang':'get'(V15))), {'Idris.Prelude.Types.Right', V20} end), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> begin (V24 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V15, V0, V23, V18))(V17))), case V24 of {'Idris.Prelude.Types.Left', E4} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V26) -> case V26 of {'Idris.Core.Value.NApp', E6, E7, E8} -> (fun (V27, V28, V29) -> case V28 of {'Idris.Core.Value.NLocal', E9, E10} -> (fun (V30, V31) -> begin (V32 = ('nested--11732-14576--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V17))), case V32 of {'Idris.Prelude.Types.Left', E11} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V34) -> {'Idris.Prelude.Types.Right', (1 + V34)} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10)); _ -> ('nested--11732-14576--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V17)) end end(E6, E7, E8)); _ -> ('nested--11732-14576--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V17)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9088-8382--in--un--isSimple'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V15, V16, V17, V18) -> 1 end(E0, E1, E2, E3)); {'Idris.Core.TT.Bind', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Lam', E8, E9, E10, E11} -> (fun (V23, V24, V25, V26) -> ('nested--9088-8382--in--un--isSimple'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V22)) end(E8, E9, E10, E11)); _ -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, 0)) end end(E4, E5, E6, E7)); {'Idris.Core.TT.App', E12, E13, E14} -> (fun (V27, V28, V29) -> case ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V28, (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))) of 1 -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V29, (1 + (1 + (1 + 0))))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13, E14)); _ -> ('nested--9088-8381--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, 0)) end.
'nested--11700-11856--in--un--isPatName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Core.Name.PV', E0, E1} -> (fun (V18, V19) -> 1 end(E0, E1)); _ -> 0 end.
'nested--11481-10514--in--un--isFn'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Ref', E0, E1, E2} -> (fun (V5, V6, V7) -> case V6 of {'Idris.Core.TT.Func'} -> (fun () -> 1 end()); _ -> 0 end end(E0, E1, E2)); _ -> 0 end.
'nested--11751-16917--in--un--isDelay'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Value.NDelayed', E0, E1, E2} -> (fun (V9, V10, V11) -> 1 end(E0, E1, E2)); _ -> 0 end.
'nested--11712-12198--in--un--inNoSolve'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case ('Idris.Idris2.Libraries.Data.IntMap':'un--lookup'(V16, V17)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> 0 end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> 1 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7689-7153--in--un--inArgs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> 0; [E0 | E1] -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Integer'(V6, V8)) of 1 -> 1; 0 -> ('nested--7689-7153--in--un--inArgs'(V0, V1, V2, V3, V4, V5, V6, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--23319-20972--in--un--getHoleName'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Normalise':'un--nf'(V0, [], V7, {'Idris.Core.Env.Nil'}, V2))(V3))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> case V10 of {'Idris.Core.Value.NApp', E4, E5, E6} -> (fun (V11, V12, V13) -> case V12 of {'Idris.Core.Value.NMeta', E7, E8, E9} -> (fun (V14, V15, V16) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V14}} end(E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E4, E5, E6)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--8483-7832--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> case case V7 of 1 -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V2)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> V8; 0 -> fun (V14) -> {'Idris.Prelude.Types.Right', 0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); _ -> ('case--occursCheck,failOnStrongRigid-7913'(V0, V1, V2, V3, V4, V5, V6, V9, V8, V7, ('Idris.Idris2.Core.TT':'un--getFnArgs'(V9)))) end.
'nested--22869-20571--in--un--constraintToHole'(V0, V1, V2, V3) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> begin (V40 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V4}, case V11 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V12 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V40 of {'Idris.Prelude.Types.Left', E34} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V42) -> case V42 of {'Idris.Prelude.Types.Just', E36} -> (fun (V43) -> case V43 of {'Idris.Core.Context.BySearch', E37, E38, E39} -> (fun (V44, V45, V46) -> ('Idris.Idris2.Core.Context':'un--updateDef'(V1, {'Idris.Core.Name.Resolved', V4}, fun (V47) -> {'Idris.Prelude.Types.Just', {'Idris.Core.Context.Hole', 0, ('Idris.Idris2.Core.Context':'un--holeInit'(0))}} end, V3)) end(E37, E38, E39)); {'Idris.Core.Context.Guess', E40, E41, E42} -> (fun (V48, V49, V50) -> ('Idris.Idris2.Core.Context':'un--updateDef'(V1, {'Idris.Core.Name.Resolved', V4}, fun (V51) -> {'Idris.Prelude.Types.Just', {'Idris.Core.Context.Hole', 0, ('Idris.Idris2.Core.Context':'un--holeInit'(0))}} end, V3)) end(E40, E41, E42)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E36)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7125-6621--in--un--checkDefined'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V12, V13, V14) -> case V13 of {'Idris.Core.Value.NRef', E3, E4} -> (fun (V15, V16) -> begin (V45 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V16, case V9 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V17 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V11))), case V45 of {'Idris.Prelude.Types.Left', E33} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V47) -> case V47 of {'Idris.Prelude.Types.Just', E35} -> (fun (V48) -> {'Idris.Prelude.Types.Right', 0} end(E35)); _ -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V8, V6, V16, V11)) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'nested--23319-20973--in--un--checkConstraint'(V0, V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> fun (V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> case V7 of {'Idris.Core.UnifyState.MkConstraint', E4, E5, E6, E7, E8, E9} -> (fun (V8, V9, V10, V11, V12, V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E10} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--continueNF'(V0, V8, V17, V11, V12))(V5))), case V18 of {'Idris.Prelude.Types.Left', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.Normalise':'un--continueNF'(V0, V8, V17, V11, V13))(V5))), case V21 of {'Idris.Prelude.Types.Left', E14} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.constraint"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Dot"/utf8>> end, V11, V23, V5))), case V24 of {'Idris.Prelude.Types.Left', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.constraint"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"  ="/utf8>> end, V11, V20, V5))), case V27 of {'Idris.Prelude.Types.Left', E18} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V29) -> begin (V31 = begin (V30 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V30} end), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V0, V1, fun (V34) -> begin (V36 = begin (V35 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E22} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V38) -> begin (V67 = (('Idris.Idris2.Core.Context':'un--getPosition'(V3, case V38 of {'Idris.Core.Context.MkDefs', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66) -> V39 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V34))), case V67 of {'Idris.Prelude.Types.Left', E52} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V69) -> case V69 of {'Idris.Builtin.MkPair', E54, E55} -> (fun (V70, V71) -> begin (V72 = ('nested--23319-20972--in--un--getHoleName'(V0, V1, {'Idris.Core.TT.Meta', V9, V3, V70, []}, V34))), case V72 of {'Idris.Prelude.Types.Left', E56} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V74) -> begin (V91 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('dn--un--unifyD_Unify_NF'(V75, V76, V77, V78, V79, V80, V81, V82)) end end end end end end end end, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('dn--un--unifyWithLazyD_Unify_NF'(V83, V84, V85, V86, V87, V88, V89, V90)) end end end end end end end end}, V8, V0, V1, ('un--inMatch'()), V9, V11))(V20))(V23))(V34))), case V91 of {'Idris.Prelude.Types.Left', E58} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V93) -> begin (V95 = begin (V94 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V94} end), case V95 of {'Idris.Prelude.Types.Left', E60} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V97) -> begin (V135 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V98) -> {'Idris.Prelude.Types.Right', 0} end end, fun () -> fun (V99) -> fun (V100) -> begin (V129 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V99, case V97 of {'Idris.Core.Context.MkDefs', E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89} -> (fun (V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128) -> V101 end(E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V100))), case V129 of {'Idris.Prelude.Types.Left', E90} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V131) -> case V131 of {'Idris.Prelude.Types.Just', E92} -> (fun (V132) -> case V132 of {'Idris.Core.Context.Hole', E93, E94} -> (fun (V133, V134) -> {'Idris.Prelude.Types.Right', 0} end(E93, E94)); _ -> {'Idris.Prelude.Types.Right', 1} end end(E92)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V9, V99, V100)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V74))(V34))), case V135 of {'Idris.Prelude.Types.Left', E95} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V137) -> begin (V142 = ('un--checkArgsSame'(V1, V0, case V93 of {'Idris.Core.Unify.MkUnifyResult', E97, E98, E99, E100} -> (fun (V138, V139, V140, V141) -> V140 end(E97, E98, E99, E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V34))), case V142 of {'Idris.Prelude.Types.Left', E101} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V144) -> case case ('Idris.Idris2.Data.List':'un--isNil'(case V93 of {'Idris.Core.Unify.MkUnifyResult', E103, E104, E105, E106} -> (fun (V145, V146, V147, V148) -> V145 end(E103, E104, E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> case V137 of 1 -> 1; 0 -> V144; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Dot pattern match fail"/utf8>>}, V34)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V149) -> fun (V150) -> case V149 of {'Idris.Core.Core.InternalError', E121} -> (fun (V151) -> begin (V153 = begin (V152 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V152} end), case V153 of {'Idris.Prelude.Types.Left', E122} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V155) -> begin (V184 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V3, case V155 of {'Idris.Core.Context.MkDefs', E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151} -> (fun (V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183) -> V156 end(E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V150))), case V184 of {'Idris.Prelude.Types.Left', E152} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V186) -> case V186 of {'Idris.Prelude.Types.Just', E154} -> (fun (V187) -> begin (V188 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V0, <<"unify.constraint"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Dot type"/utf8>> end, {'Idris.Core.Env.Nil'}, V187, V150))), case V188 of {'Idris.Prelude.Types.Left', E155} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V190) -> begin (V204 = begin (V203 = ('erlang':'put'(V1, case V33 of {'Idris.Core.UnifyState.MkUState', E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168} -> (fun (V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202) -> {'Idris.Core.UnifyState.MkUState', V191, V192, V193, V194, V195, V196, V197, [], V199, V200, V201, V202} end(E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V203} end), case V204 of {'Idris.Prelude.Types.Left', E169} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V206) -> begin (V207 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V155, V150))), case V207 of {'Idris.Prelude.Types.Left', E171} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V209) -> begin (V210 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V8, V209, V11, V20, V150))), case V210 of {'Idris.Prelude.Types.Left', E173} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V212) -> begin (V213 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V8, V209, V11, V23, V150))), case V213 of {'Idris.Prelude.Types.Left', E175} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V215) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadDotPattern', V8, V9, V11, V6, V212, V215}, V150)) end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V9, V3, V150)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> begin (V229 = begin (V228 = ('erlang':'put'(V1, case V33 of {'Idris.Core.UnifyState.MkUState', E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118} -> (fun (V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227) -> {'Idris.Core.UnifyState.MkUState', V216, V217, V218, V219, V220, V221, V222, [], V224, V225, V226, V227} end(E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V228} end), case V229 of {'Idris.Prelude.Types.Left', E119} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V231) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(V149, V150)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V5)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6, E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E0, E1)); _ -> fun (V232) -> {'Idris.Prelude.Types.Right', 0} end end.
'nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> {'Idris.Prelude.Types.Right', 0}; [E0 | E1] -> (fun (V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V41 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V7}, case V12 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V13 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V41 of {'Idris.Prelude.Types.Left', E32} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Just', E34} -> (fun (V44) -> case V44 of {'Idris.Core.Context.PMDef', E35, E36, E37, E38, E39} -> (fun (V45, V46, V47, V48, V49) -> case V46 of [] -> case V47 of {'Idris.Core.CaseTree.STerm', E40, E41} -> (fun (V50, V51) -> case V50 of 0 -> begin (V52 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_Term'(V2, [], V12, {'Idris.Core.Env.Nil'}, V4, V51, V6))), case V52 of {'Idris.Prelude.Types.Left', E42} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V54) -> case V54 of 1 -> {'Idris.Prelude.Types.Right', 1}; 0 -> ('nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E40, E41)); _ -> ('nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end; _ -> ('nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E35, E36, E37, E38, E39)); _ -> ('nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E34)); _ -> ('nested--23004-20707--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7820-7262--in--un--anyFirst'(V0, V1, V2, V3) -> case V3 of [] -> 0; [E0 | E1] -> (fun (V4, V5) -> case V4 of 0 -> 1; _ -> ('nested--7820-7262--in--un--anyFirst'(V0, V1, V2, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--22811-20517--in--un--afterStart'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V6, V2)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--weaken_Weaken_(IVars $vs)'(V0) -> case V0 of {'Idris.Core.Unify.INil'} -> (fun () -> {'Idris.Core.Unify.INil'} end()); {'Idris.Core.Unify.ICons', E0, E1} -> (fun (V1, V2) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, ('dn--un--weaken_Weaken_(IVars $vs)'(V2))} end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V3) -> {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Var'(V3))}, ('dn--un--weaken_Weaken_(IVars $vs)'(V2))} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--unifyWithLazyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_(Term $vars)'(V6, V7)) of 1 -> begin (V16 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.equal"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Skipped unification (equal already): "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V7)))))))) end, V8))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', ('un--success'())} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V19 = (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V12, V5, V6))(V8))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V12, V5, V7))(V8))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> (((('un--unifyWithLazy'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_NF'(V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyWithLazyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V21))(V24))(V8)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--unifyWithLazyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Core.Value.NDelayed', E9, E10, E11} -> (fun (V8, V9, V10) -> case V7 of {'Idris.Core.Value.NDelayed', E20, E21, E22} -> (fun (V11, V12, V13) -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('dn--un--unifyD_Unify_NF'(V14, V15, V16, V17, V18, V19, V20, V21)) end end end end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('dn--un--unifyWithLazyD_Unify_NF'(V22, V23, V24, V25, V26, V27, V28, V29)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V10))(V13)) end(E20, E21, E22)); _ -> begin (V30 = {'Idris.Core.Value.NDelayed', V8, V9, V10}), fun (V31) -> case case ('un--isHoleApp'(V7)) of 1 -> case ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E18, E19} -> (fun (V32, V33) -> V33 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('un--postpone'(V0, V1, V2, V4, V3, <<"Postponing in lazy"/utf8>>, V5, V30, V7, V31)); 0 -> begin (V50 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('dn--un--unifyD_Unify_NF'(V34, V35, V36, V37, V38, V39, V40, V41)) end end end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('dn--un--unifyWithLazyD_Unify_NF'(V42, V43, V44, V45, V46, V47, V48, V49)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V10))(V7))(V31))), case V50 of {'Idris.Prelude.Types.Left', E12} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V52) -> {'Idris.Prelude.Types.Right', case V52 of {'Idris.Core.Unify.MkUnifyResult', E14, E15, E16, E17} -> (fun (V53, V54, V55, V56) -> {'Idris.Core.Unify.MkUnifyResult', V53, V54, V55, {'Idris.Core.Unify.AddForce', V9}} end(E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E9, E10, E11)); _ -> case V7 of {'Idris.Core.Value.NDelayed', E0, E1, E2} -> (fun (V57, V58, V59) -> fun (V60) -> begin (V77 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('dn--un--unifyD_Unify_NF'(V61, V62, V63, V64, V65, V66, V67, V68)) end end end end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> ('dn--un--unifyWithLazyD_Unify_NF'(V69, V70, V71, V72, V73, V74, V75, V76)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V6))(V59))(V60))), case V77 of {'Idris.Prelude.Types.Left', E3} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V79) -> {'Idris.Prelude.Types.Right', case V79 of {'Idris.Core.Unify.MkUnifyResult', E5, E6, E7, E8} -> (fun (V80, V81, V82, V83) -> {'Idris.Core.Unify.MkUnifyResult', V80, V81, V82, {'Idris.Core.Unify.AddDelay', V58}} end(E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('dn--un--unifyD_Unify_NF'(V84, V85, V86, V87, V88, V89, V90, V91)) end end end end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('dn--un--unifyWithLazyD_Unify_NF'(V92, V93, V94, V95, V96, V97, V98, V99)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V6))(V7)) end end.
'dn--un--unifyWithLazyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> ('dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8)).
'dn--un--unifyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_(Term $vars)'(V6, V7)) of 1 -> begin (V16 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.equal"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Skipped unification (equal already): "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V7)))))))) end, V8))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', ('un--success'())} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V19 = (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V12, V5, V6))(V8))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V12, V5, V7))(V8))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_NF'(V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyWithLazyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V21))(V24))(V8)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--unifyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Core.Value.NBind', E26, E27, E28, E29} -> (fun (V8, V9, V10, V11) -> case V7 of {'Idris.Core.Value.NBind', E78, E79, E80, E81} -> (fun (V12, V13, V14, V15) -> ('un--unifyBothBinders'(V1, V2, V0, V3, V4, V5, V8, V9, V10, V11, V12, V13, V14, V15)) end(E78, E79, E80, E81)); _ -> case V10 of {'Idris.Core.TT.Lam', E56, E57, E58, E59} -> (fun (V16, V17, V18, V19) -> fun (V20) -> begin (V22 = begin (V21 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E60} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V24) -> begin (V25 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"EtaR"/utf8>> end, V5, V6, V20))), case V25 of {'Idris.Prelude.Types.Left', E62} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V27) -> begin (V28 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"...with"/utf8>> end, V5, V7, V20))), case V28 of {'Idris.Prelude.Types.Left', E64} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V30) -> begin (V31 = {'Idris.Core.Value.NBind', V8, V9, {'Idris.Core.TT.Lam', V16, V17, V18, V19}, V11}), case ('un--isHoleApp'(V7)) of 1 -> begin (V32 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V1, V0, V24, V5, V31, V7, V20))), case V32 of {'Idris.Prelude.Types.Left', E66} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V34) -> case V34 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V31, V7))(V20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V35 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V24, V20))), case V35 of {'Idris.Prelude.Types.Left', E68} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V37) -> begin (V38 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V37, V5, V19, V20))), case V38 of {'Idris.Prelude.Types.Left', E70} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V40) -> begin (V44 = begin (V41 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V37, V5, V7, V20))), case V41 of {'Idris.Prelude.Types.Left', E72} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V43) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V24, V5, {'Idris.Core.TT.Bind', V8, V9, {'Idris.Core.TT.Lam', V16, V17, {'Idris.Core.TT.Explicit'}, V40}, {'Idris.Core.TT.App', V8, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V43)), {'Idris.Core.TT.Local', V8, {'Idris.Prelude.Types.Nothing'}, 0}}}))(V20)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V44 of {'Idris.Prelude.Types.Left', E74} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Expand"/utf8>> end, V5, V46, V20))), case V47 of {'Idris.Prelude.Types.Left', E76} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V49) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('dn--un--unifyD_Unify_NF'(V50, V51, V52, V53, V54, V55, V56, V57)) end end end end end end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('dn--un--unifyWithLazyD_Unify_NF'(V58, V59, V60, V61, V62, V63, V64, V65)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V31))(V46))(V20)) end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58, E59)); _ -> case V7 of {'Idris.Core.Value.NBind', E30, E31, E32, E33} -> (fun (V66, V67, V68, V69) -> case V68 of {'Idris.Core.TT.Lam', E34, E35, E36, E37} -> (fun (V70, V71, V72, V73) -> fun (V74) -> begin (V76 = begin (V75 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V75} end), case V76 of {'Idris.Prelude.Types.Left', E38} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V78) -> begin (V79 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"EtaL"/utf8>> end, V5, V6, V74))), case V79 of {'Idris.Prelude.Types.Left', E40} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V81) -> begin (V82 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"...with"/utf8>> end, V5, V7, V74))), case V82 of {'Idris.Prelude.Types.Left', E42} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V84) -> begin (V85 = {'Idris.Core.Value.NBind', V66, V67, {'Idris.Core.TT.Lam', V70, V71, V72, V73}, V69}), case ('un--isHoleApp'(V6)) of 1 -> begin (V86 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V1, V0, V78, V5, V6, V85, V74))), case V86 of {'Idris.Prelude.Types.Left', E44} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V88) -> case V88 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V6, V85))(V74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V89 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V78, V74))), case V89 of {'Idris.Prelude.Types.Left', E46} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V91) -> begin (V92 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V91, V5, V73, V74))), case V92 of {'Idris.Prelude.Types.Left', E48} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V94) -> begin (V98 = begin (V95 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V91, V5, V6, V74))), case V95 of {'Idris.Prelude.Types.Left', E50} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V97) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V78, V5, {'Idris.Core.TT.Bind', V66, V67, {'Idris.Core.TT.Lam', V70, V71, {'Idris.Core.TT.Explicit'}, V94}, {'Idris.Core.TT.App', V66, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V97)), {'Idris.Core.TT.Local', V66, {'Idris.Prelude.Types.Nothing'}, 0}}}))(V74)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V98 of {'Idris.Prelude.Types.Left', E52} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V100) -> begin (V101 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Expand"/utf8>> end, V5, V100, V74))), case V101 of {'Idris.Prelude.Types.Left', E54} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V103) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('dn--un--unifyD_Unify_NF'(V104, V105, V106, V107, V108, V109, V110, V111)) end end end end end end end end, fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('dn--un--unifyWithLazyD_Unify_NF'(V112, V113, V114, V115, V116, V117, V118, V119)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V100))(V85))(V74)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E34, E35, E36, E37)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end(E30, E31, E32, E33)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end end end(E26, E27, E28, E29)); _ -> case V7 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V120, V121, V122, V123) -> case V122 of {'Idris.Core.TT.Lam', E4, E5, E6, E7} -> (fun (V124, V125, V126, V127) -> fun (V128) -> begin (V130 = begin (V129 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V129} end), case V130 of {'Idris.Prelude.Types.Left', E8} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V132) -> begin (V133 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"EtaL"/utf8>> end, V5, V6, V128))), case V133 of {'Idris.Prelude.Types.Left', E10} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V135) -> begin (V136 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"...with"/utf8>> end, V5, V7, V128))), case V136 of {'Idris.Prelude.Types.Left', E12} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V138) -> begin (V139 = {'Idris.Core.Value.NBind', V120, V121, {'Idris.Core.TT.Lam', V124, V125, V126, V127}, V123}), case ('un--isHoleApp'(V6)) of 1 -> begin (V140 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V1, V0, V132, V5, V6, V139, V128))), case V140 of {'Idris.Prelude.Types.Left', E14} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V142) -> case V142 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V6, V139))(V128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V143 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V132, V128))), case V143 of {'Idris.Prelude.Types.Left', E16} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V145) -> begin (V146 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V145, V5, V127, V128))), case V146 of {'Idris.Prelude.Types.Left', E18} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V148) -> begin (V152 = begin (V149 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V145, V5, V6, V128))), case V149 of {'Idris.Prelude.Types.Left', E20} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V151) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V1, V0, V132, V5, {'Idris.Core.TT.Bind', V120, V121, {'Idris.Core.TT.Lam', V124, V125, {'Idris.Core.TT.Explicit'}, V148}, {'Idris.Core.TT.App', V120, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V151)), {'Idris.Core.TT.Local', V120, {'Idris.Prelude.Types.Nothing'}, 0}}}))(V128)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V152 of {'Idris.Prelude.Types.Left', E22} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V154) -> begin (V155 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Expand"/utf8>> end, V5, V154, V128))), case V155 of {'Idris.Prelude.Types.Left', E24} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V157) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('dn--un--unifyD_Unify_NF'(V158, V159, V160, V161, V162, V163, V164, V165)) end end end end end end end end, fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('dn--un--unifyWithLazyD_Unify_NF'(V166, V167, V168, V169, V170, V171, V172, V173)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V154))(V139))(V128)) end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end(E0, E1, E2, E3)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end.
'dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_Closure'(V1, V0, V15, V5, V6, V7, V8))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> case V18 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> begin (V19 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V1, V0, V12, V6))(V8))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V1, V0, V12, V7))(V8))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_NF'(V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyWithLazyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V21))(V24))(V8)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--show_Show_UnifyMode'(V0) -> case V0 of 0 -> <<"InLHS"/utf8>>; 1 -> <<"InTerm"/utf8>>; 2 -> <<"InMatch"/utf8>>; 3 -> <<"InSearch"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_AddLazy'(V0) -> case V0 of {'Idris.Core.Unify.NoLazy'} -> (fun () -> <<"NoLazy"/utf8>> end()); {'Idris.Core.Unify.AddForce', E0} -> (fun (V1) -> <<"AddForce"/utf8>> end(E0)); {'Idris.Core.Unify.AddDelay', E1} -> (fun (V2) -> <<"AddDelay"/utf8>> end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show_AddLazy'(V0, V1) -> ('dn--un--show_Show_AddLazy'(V1)).
'dn--un--__Impl_Unify_Term'() -> {'Idris.Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('dn--un--unifyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7, V8)) end end end end end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('dn--un--unifyWithLazyD_Unify_Term'(V9, V10, V11, V12, V13, V14, V15, V16, V17)) end end end end end end end end end}.
'dn--un--__Impl_Unify_NF'() -> {'Idris.Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('dn--un--unifyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7)) end end end end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('dn--un--unifyWithLazyD_Unify_NF'(V8, V9, V10, V11, V12, V13, V14, V15)) end end end end end end end end}.
'dn--un--__Impl_Unify_Closure'() -> {'Idris.Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8)) end end end end end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V9, V10, V11, V12, V13, V14, V15, V16, V17)) end end end end end end end end end}.
'dn--un--__Impl_Show_AddLazy'() -> {'Idris.Prelude.Show.MkShow', fun (V0) -> ('dn--un--show_Show_AddLazy'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_AddLazy'(V1, V2)) end end}.
'dn--un--==_Eq_UnifyMode'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; 2 -> case V1 of 2 -> 1; _ -> 0 end; 3 -> case V1 of 3 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--==_Eq_SolveMode'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; 3 -> case V1 of 3 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--/=_Eq_UnifyMode'(V0, V1) -> case ('dn--un--==_Eq_UnifyMode'(V0, V1)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unionAll'(V0) -> case V0 of [] -> {'Idris.Core.Unify.MkUnifyResult', [], 0, [], {'Idris.Core.Unify.NoLazy'}}; [E0 | E1] -> (fun (V1, V2) -> case V2 of [] -> V1; _ -> ('un--union'(V1, ('un--unionAll'(V2)))) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--union'(V0, V1) -> {'Idris.Core.Unify.MkUnifyResult', ('Idris.Idris2.Data.List':'un--union'({'Idris.Prelude.EqOrd.MkEq', fun (V2) -> fun (V3) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2, V3)) end end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V4, V5)) end end}, case V0 of {'Idris.Core.Unify.MkUnifyResult', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> V6 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V1 of {'Idris.Core.Unify.MkUnifyResult', E4, E5, E6, E7} -> (fun (V10, V11, V12, V13) -> V10 end(E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), case case V0 of {'Idris.Core.Unify.MkUnifyResult', E12, E13, E14, E15} -> (fun (V14, V15, V16, V17) -> V15 end(E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> 1; 0 -> case V1 of {'Idris.Core.Unify.MkUnifyResult', E8, E9, E10, E11} -> (fun (V18, V19, V20, V21) -> V19 end(E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.List':'un--++'(case V0 of {'Idris.Core.Unify.MkUnifyResult', E16, E17, E18, E19} -> (fun (V22, V23, V24, V25) -> V24 end(E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V1 of {'Idris.Core.Unify.MkUnifyResult', E20, E21, E22, E23} -> (fun (V26, V27, V28, V29) -> V28 end(E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), {'Idris.Core.Unify.NoLazy'}}.
'un--unifyWithLazyD'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V5, V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ((((((((V6(V1))(V2))(V3))(V4))(V7))(V8))(V9))(V10)) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unifyWithLazy'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V7, V8) -> fun (V9) -> fun (V10) -> ((((((((V8(V1))(V2))(V3))(V4))(V5))(V6))(V9))(V10)) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Core.Value.NDCon', E21, E22, E23, E24, E25} -> (fun (V8, V9, V10, V11, V12) -> case V7 of {'Idris.Core.Value.NDCon', E47, E48, E49, E50, E51} -> (fun (V13, V14, V15, V16, V17) -> fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E52} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V22) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V10, V15)) of 1 -> begin (V24 = begin (V23 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V23} end), case V24 of {'Idris.Prelude.Types.Left', E54} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V26) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--unifyD_Unify_Closure'(V27, V28, V29, V30, V31, V32, V33, V34, V35)) end end end end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V36, V37, V38, V39, V40, V41, V42, V43, V44)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V45, V46, V47, V48, V49, V50)) end end end end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V51, V52, V53, V54, V55, V56, V57)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V58) -> ('Idris.Idris2.Builtin':'un--snd'(V58)) end, V12)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V59) -> ('Idris.Idris2.Builtin':'un--snd'(V59)) end, V17))))(V18)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NDCon', V8, V9, V10, V11, V12}, {'Idris.Core.Value.NDCon', V13, V14, V15, V16, V17}, V18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47, E48, E49, E50, E51)); _ -> case V7 of {'Idris.Core.Value.NApp', E36, E37, E38} -> (fun (V60, V61, V62) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E41, E42} -> (fun (V63, V64) -> V64 end(E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V60, V61, V62, V6)); 0 -> fun (V65) -> begin (V66 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V65))), case V66 of {'Idris.Prelude.Types.Left', E39} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V68) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V60, V61, V62}, V65)) end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36, E37, E38)); {'Idris.Core.Value.NAs', E43, E44, E45, E46} -> (fun (V69, V70, V71, V72) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V72)) end(E43, E44, E45, E46)); _ -> case V6 of {'Idris.Core.Value.NAs', E32, E33, E34, E35} -> (fun (V73, V74, V75, V76) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V76, V7)) end(E32, E33, E34, E35)); _ -> fun (V77) -> begin (V79 = begin (V78 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V78} end), case V79 of {'Idris.Prelude.Types.Left', E26} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V81) -> begin (V82 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V81, V77))), case V82 of {'Idris.Prelude.Types.Left', E28} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V84) -> begin (V85 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V77))), case V85 of {'Idris.Prelude.Types.Left', E30} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V87) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V77)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E21, E22, E23, E24, E25)); {'Idris.Core.Value.NTCon', E56, E57, E58, E59, E60} -> (fun (V88, V89, V90, V91, V92) -> case V7 of {'Idris.Core.Value.NTCon', E82, E83, E84, E85, E86} -> (fun (V93, V94, V95, V96, V97) -> fun (V98) -> begin (V118 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V99) -> begin (V106 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V100) -> fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V100, V101, V102)) end end end, fun (V103) -> fun (V104) -> fun (V105) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V103, V104, V105)) end end end}, V89, V99))), case V106 of {'Idris.Prelude.Types.Left', E87} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V108) -> begin (V115 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V109, V110, V111)) end end end, fun (V112) -> fun (V113) -> fun (V114) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V112, V113, V114)) end end end}, V94, V99))), case V115 of {'Idris.Prelude.Types.Left', E89} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V117) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Comparing type constructors "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V108)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V117))))))))} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V98))), case V118 of {'Idris.Prelude.Types.Left', E91} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V120) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V89, V94)) of 1 -> begin (V122 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V121) -> ('Idris.Idris2.Builtin':'un--snd'(V121)) end, V92))), begin (V124 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V123) -> ('Idris.Idris2.Builtin':'un--snd'(V123)) end, V97))), begin (V126 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V125) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constructor "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V89))))} end, V98))), case V126 of {'Idris.Prelude.Types.Left', E93} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V128) -> begin (V136 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V129) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V130) -> case V130 of {'Idris.Prelude.Types.Left', E95} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V132) -> {'Idris.Prelude.Types.Right', <<""/utf8>>} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V133) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V134) -> fun (V135) -> ('un--dumpArg'(V2, V0, V5, V134, V135)) end end, V122, V133)) end, V129)) end, V98))), case V136 of {'Idris.Prelude.Types.Left', E97} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V138) -> begin (V146 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V139) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V140) -> case V140 of {'Idris.Prelude.Types.Left', E99} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V142) -> {'Idris.Prelude.Types.Right', <<""/utf8>>} end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V143) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V144) -> fun (V145) -> ('un--dumpArg'(V2, V0, V5, V144, V145)) end end, V124, V143)) end, V139)) end, V98))), case V146 of {'Idris.Prelude.Types.Left', E101} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V148) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('dn--un--unifyD_Unify_Closure'(V149, V150, V151, V152, V153, V154, V155, V156, V157)) end end end end end end end end end, fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V158, V159, V160, V161, V162, V163, V164, V165, V166)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V167, V168, V169, V170, V171, V172)) end end end end end end, fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V173, V174, V175, V176, V177, V178, V179)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, V122, V124))(V98)) end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NTCon', V88, V89, V90, V91, V92}, {'Idris.Core.Value.NTCon', V93, V94, V95, V96, V97}, V98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E82, E83, E84, E85, E86)); _ -> case V7 of {'Idris.Core.Value.NApp', E71, E72, E73} -> (fun (V180, V181, V182) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E76, E77} -> (fun (V183, V184) -> V184 end(E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V180, V181, V182, V6)); 0 -> fun (V185) -> begin (V186 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V185))), case V186 of {'Idris.Prelude.Types.Left', E74} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V188) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V180, V181, V182}, V185)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E71, E72, E73)); {'Idris.Core.Value.NAs', E78, E79, E80, E81} -> (fun (V189, V190, V191, V192) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V192)) end(E78, E79, E80, E81)); _ -> case V6 of {'Idris.Core.Value.NAs', E67, E68, E69, E70} -> (fun (V193, V194, V195, V196) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V196, V7)) end(E67, E68, E69, E70)); _ -> fun (V197) -> begin (V199 = begin (V198 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V198} end), case V199 of {'Idris.Prelude.Types.Left', E61} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V201) -> begin (V202 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V201, V197))), case V202 of {'Idris.Prelude.Types.Left', E63} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V204) -> begin (V205 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V197))), case V205 of {'Idris.Prelude.Types.Left', E65} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V207) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V197)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E56, E57, E58, E59, E60)); {'Idris.Core.Value.NDelayed', E103, E104, E105} -> (fun (V208, V209, V210) -> case V7 of {'Idris.Core.Value.NDelayed', E127, E128, E129} -> (fun (V211, V212, V213) -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> ('dn--un--unifyD_Unify_NF'(V214, V215, V216, V217, V218, V219, V220, V221)) end end end end end end end end, fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> ('dn--un--unifyWithLazyD_Unify_NF'(V222, V223, V224, V225, V226, V227, V228, V229)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V210))(V213)) end(E127, E128, E129)); _ -> case V7 of {'Idris.Core.Value.NApp', E116, E117, E118} -> (fun (V230, V231, V232) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E121, E122} -> (fun (V233, V234) -> V234 end(E121, E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V230, V231, V232, V6)); 0 -> fun (V235) -> begin (V236 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V235))), case V236 of {'Idris.Prelude.Types.Left', E119} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V238) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V230, V231, V232}, V235)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E116, E117, E118)); {'Idris.Core.Value.NAs', E123, E124, E125, E126} -> (fun (V239, V240, V241, V242) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V242)) end(E123, E124, E125, E126)); _ -> case V6 of {'Idris.Core.Value.NAs', E112, E113, E114, E115} -> (fun (V243, V244, V245, V246) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V246, V7)) end(E112, E113, E114, E115)); _ -> fun (V247) -> begin (V249 = begin (V248 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V248} end), case V249 of {'Idris.Prelude.Types.Left', E106} -> (fun (V250) -> {'Idris.Prelude.Types.Left', V250} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V251) -> begin (V252 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V251, V247))), case V252 of {'Idris.Prelude.Types.Left', E108} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V254) -> begin (V255 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V247))), case V255 of {'Idris.Prelude.Types.Left', E110} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V257) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V247)) end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E103, E104, E105)); {'Idris.Core.Value.NDelay', E130, E131, E132, E133} -> (fun (V258, V259, V260, V261) -> case V7 of {'Idris.Core.Value.NDelay', E155, E156, E157, E158} -> (fun (V262, V263, V264, V265) -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> ('dn--un--unifyD_Unify_Closure'(V266, V267, V268, V269, V270, V271, V272, V273, V274)) end end end end end end end end end, fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V275, V276, V277, V278, V279, V280, V281, V282, V283)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V284, V285, V286, V287, V288, V289)) end end end end end end, fun (V290) -> fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V290, V291, V292, V293, V294, V295, V296)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, [V260 | [V261 | []]], [V264 | [V265 | []]])) end(E155, E156, E157, E158)); _ -> case V7 of {'Idris.Core.Value.NApp', E144, E145, E146} -> (fun (V297, V298, V299) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E149, E150} -> (fun (V300, V301) -> V301 end(E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V297, V298, V299, V6)); 0 -> fun (V302) -> begin (V303 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V302))), case V303 of {'Idris.Prelude.Types.Left', E147} -> (fun (V304) -> {'Idris.Prelude.Types.Left', V304} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V305) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V297, V298, V299}, V302)) end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E144, E145, E146)); {'Idris.Core.Value.NAs', E151, E152, E153, E154} -> (fun (V306, V307, V308, V309) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V309)) end(E151, E152, E153, E154)); _ -> case V6 of {'Idris.Core.Value.NAs', E140, E141, E142, E143} -> (fun (V310, V311, V312, V313) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V313, V7)) end(E140, E141, E142, E143)); _ -> fun (V314) -> begin (V316 = begin (V315 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V315} end), case V316 of {'Idris.Prelude.Types.Left', E134} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V318) -> begin (V319 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V318, V314))), case V319 of {'Idris.Prelude.Types.Left', E136} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V321) -> begin (V322 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V314))), case V322 of {'Idris.Prelude.Types.Left', E138} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V324) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V314)) end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E130, E131, E132, E133)); {'Idris.Core.Value.NForce', E159, E160, E161, E162} -> (fun (V325, V326, V327, V328) -> case V7 of {'Idris.Core.Value.NForce', E184, E185, E186, E187} -> (fun (V329, V330, V331, V332) -> fun (V333) -> begin (V350 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> ('dn--un--unifyD_Unify_NF'(V334, V335, V336, V337, V338, V339, V340, V341)) end end end end end end end end, fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> ('dn--un--unifyWithLazyD_Unify_NF'(V342, V343, V344, V345, V346, V347, V348, V349)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V327))(V331))(V333))), case V350 of {'Idris.Prelude.Types.Left', E188} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V352) -> begin (V386 = (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V353) -> fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> fun (V360) -> fun (V361) -> ('dn--un--unifyD_Unify_Closure'(V353, V354, V355, V356, V357, V358, V359, V360, V361)) end end end end end end end end end, fun (V362) -> fun (V363) -> fun (V364) -> fun (V365) -> fun (V366) -> fun (V367) -> fun (V368) -> fun (V369) -> fun (V370) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V362, V363, V364, V365, V366, V367, V368, V369, V370)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V371) -> fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V371, V372, V373, V374, V375, V376)) end end end end end end, fun (V377) -> fun (V378) -> fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V377, V378, V379, V380, V381, V382, V383)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V384) -> ('Idris.Idris2.Builtin':'un--snd'(V384)) end, V328)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V385) -> ('Idris.Idris2.Builtin':'un--snd'(V385)) end, V332))))(V333))), case V386 of {'Idris.Prelude.Types.Left', E190} -> (fun (V387) -> {'Idris.Prelude.Types.Left', V387} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V388) -> {'Idris.Prelude.Types.Right', ('un--union'(V352, V388))} end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186, E187)); _ -> case V7 of {'Idris.Core.Value.NApp', E173, E174, E175} -> (fun (V389, V390, V391) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E178, E179} -> (fun (V392, V393) -> V393 end(E178, E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V389, V390, V391, V6)); 0 -> fun (V394) -> begin (V395 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V394))), case V395 of {'Idris.Prelude.Types.Left', E176} -> (fun (V396) -> {'Idris.Prelude.Types.Left', V396} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V397) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V389, V390, V391}, V394)) end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E173, E174, E175)); {'Idris.Core.Value.NAs', E180, E181, E182, E183} -> (fun (V398, V399, V400, V401) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V401)) end(E180, E181, E182, E183)); _ -> case V6 of {'Idris.Core.Value.NAs', E169, E170, E171, E172} -> (fun (V402, V403, V404, V405) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V405, V7)) end(E169, E170, E171, E172)); _ -> fun (V406) -> begin (V408 = begin (V407 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V407} end), case V408 of {'Idris.Prelude.Types.Left', E163} -> (fun (V409) -> {'Idris.Prelude.Types.Left', V409} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V410) -> begin (V411 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V410, V406))), case V411 of {'Idris.Prelude.Types.Left', E165} -> (fun (V412) -> {'Idris.Prelude.Types.Left', V412} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V413) -> begin (V414 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V406))), case V414 of {'Idris.Prelude.Types.Left', E167} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V416) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V406)) end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E159, E160, E161, E162)); {'Idris.Core.Value.NApp', E192, E193, E194} -> (fun (V417, V418, V419) -> case V418 of {'Idris.Core.Value.NMeta', E198, E199, E200} -> (fun (V420, V421, V422) -> case V7 of {'Idris.Core.Value.NApp', E204, E205, E206} -> (fun (V423, V424, V425) -> case V424 of {'Idris.Core.Value.NMeta', E210, E211, E212} -> (fun (V426, V427, V428) -> fun (V429) -> begin (V431 = begin (V430 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V430} end), case V431 of {'Idris.Prelude.Types.Left', E213} -> (fun (V432) -> {'Idris.Prelude.Types.Left', V432} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V433) -> begin (V434 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V433, V5, V6, V7, V429))), case V434 of {'Idris.Prelude.Types.Left', E215} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V436) -> begin (V437 = {'Idris.Core.Value.NMeta', V420, V421, V422}), begin (V438 = {'Idris.Core.Value.NMeta', V426, V427, V428}), case V436 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V417, V437, V419, V423, V438, V425))(V429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211, E212)); _ -> case V7 of {'Idris.Core.Value.NApp', E207, E208, E209} -> (fun (V439, V440, V441) -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V417, V418, V419, V439, V440, V441)) end(E207, E208, E209)); _ -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V417, V418, V419, V7)) end end end(E204, E205, E206)); _ -> case V7 of {'Idris.Core.Value.NApp', E201, E202, E203} -> (fun (V442, V443, V444) -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V417, V418, V419, V442, V443, V444)) end(E201, E202, E203)); _ -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V417, V418, V419, V7)) end end end(E198, E199, E200)); _ -> case V7 of {'Idris.Core.Value.NApp', E195, E196, E197} -> (fun (V445, V446, V447) -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V417, V418, V419, V445, V446, V447)) end(E195, E196, E197)); _ -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V417, V418, V419, V7)) end end end(E192, E193, E194)); _ -> case V7 of {'Idris.Core.Value.NApp', E10, E11, E12} -> (fun (V448, V449, V450) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E15, E16} -> (fun (V451, V452) -> V452 end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V448, V449, V450, V6)); 0 -> fun (V453) -> begin (V454 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V453))), case V454 of {'Idris.Prelude.Types.Left', E13} -> (fun (V455) -> {'Idris.Prelude.Types.Left', V455} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V456) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V448, V449, V450}, V453)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11, E12)); {'Idris.Core.Value.NAs', E17, E18, E19, E20} -> (fun (V457, V458, V459, V460) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V460)) end(E17, E18, E19, E20)); _ -> case V6 of {'Idris.Core.Value.NAs', E6, E7, E8, E9} -> (fun (V461, V462, V463, V464) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V464, V7)) end(E6, E7, E8, E9)); _ -> fun (V465) -> begin (V467 = begin (V466 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V466} end), case V467 of {'Idris.Prelude.Types.Left', E0} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V469) -> begin (V470 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V469, V465))), case V470 of {'Idris.Prelude.Types.Left', E2} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V472) -> begin (V473 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V465))), case V473 of {'Idris.Prelude.Types.Left', E4} -> (fun (V474) -> {'Idris.Prelude.Types.Left', V474} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V475) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--11751-16917--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V465)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end.
'un--unifyInvertible'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E0} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V18) -> begin (V47 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Idris.Core.Name.Resolved', V8}, case V18 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46) -> V19 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V47 of {'Idris.Prelude.Types.Left', E30} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V49) -> case V49 of {'Idris.Prelude.Types.Just', E32} -> (fun (V50) -> begin (V54 = begin (V51 = (('Idris.Idris2.Core.Normalise':'un--nf'(V0, V2, V18, V6, ('Idris.Idris2.Core.TT':'un--embed'(V50))))(V14))), case V51 of {'Idris.Prelude.Types.Left', E33} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V53) -> (('un--getArgTypes'(V18, V53, ('Idris.Idris2.Prelude.Types.List':'un--++'(V9, V10))))(V14)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V54 of {'Idris.Prelude.Types.Left', E35} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V56) -> begin (V64 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end, fun () -> fun (V58) -> fun (V59) -> begin (V60 = (('Idris.Idris2.Core.Normalise':'un--nf'(V0, V2, V18, V6, ('Idris.Idris2.Core.TT':'un--embed'(V58))))(V59))), case V60 of {'Idris.Prelude.Types.Left', E37} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V62) -> (('un--getArgTypes'(V18, V62, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V63) -> ('Idris.Idris2.Builtin':'un--snd'(V63)) end, V13))))(V59)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V11))(V14))), case V64 of {'Idris.Prelude.Types.Left', E39} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V66) -> begin (V67 = (('un--headsConvert'(V2, V0, V1, V4, V5, V6, V56, V66))(V14))), case V67 of {'Idris.Prelude.Types.Left', E41} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V69) -> case V69 of 1 -> case ('Idris.Idris2.Data.List':'un--reverse'(V10)) of [E43 | E44] -> (fun (V70, V71) -> case ('Idris.Idris2.Data.List':'un--reverse'(V13)) of [E45 | E46] -> (fun (V72, V73) -> ('Idris.Idris2.Core.UnifyState':'un--tryUnify'(V0, V1, fun (V74) -> case V3 of 1 -> begin (V75 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unifying invertible"/utf8>> end, V74))), case V75 of {'Idris.Prelude.Types.Left', E47} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V77) -> begin (V96 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('dn--un--unifyD_Unify_Closure'(V78, V79, V80, V81, V82, V83, V84, V85, V86)) end end end end end end end end end, fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V87, V88, V89, V90, V91, V92, V93, V94, V95)) end end end end end end end end end}, V2, V0, V1, V4, V5, V6))(('Idris.Idris2.Builtin':'un--snd'(V72))))(V70))(V74))), case V96 of {'Idris.Prelude.Types.Left', E49} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V98) -> begin (V106 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constraints "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V99) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V99)) end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V100, V101)) end end}, case V98 of {'Idris.Core.Unify.MkUnifyResult', E51, E52, E53, E54} -> (fun (V102, V103, V104, V105) -> V102 end(E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V74))), case V106 of {'Idris.Prelude.Types.Left', E55} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V108) -> begin (V126 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('dn--un--unifyD_Unify_NF'(V110, V111, V112, V113, V114, V115, V116, V117)) end end end end end end end end, fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> ('dn--un--unifyWithLazyD_Unify_NF'(V118, V119, V120, V121, V122, V123, V124, V125)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))((V12(('Idris.Idris2.Data.List':'un--reverse'(V73))))))({'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Data.List':'un--reverse'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V109) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V109} end, V71))))}))(V74))), case V126 of {'Idris.Prelude.Types.Left', E57} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V128) -> {'Idris.Prelude.Types.Right', ('un--union'(V98, V128))} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V129 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unifying invertible"/utf8>> end, V74))), case V129 of {'Idris.Prelude.Types.Left', E59} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V131) -> begin (V150 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> ('dn--un--unifyD_Unify_Closure'(V132, V133, V134, V135, V136, V137, V138, V139, V140)) end end end end end end end end end, fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V141, V142, V143, V144, V145, V146, V147, V148, V149)) end end end end end end end end end}, V2, V0, V1, V4, V5, V6))(V70))(('Idris.Idris2.Builtin':'un--snd'(V72))))(V74))), case V150 of {'Idris.Prelude.Types.Left', E61} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V152) -> begin (V160 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constraints "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V153) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V153)) end, fun (V154) -> fun (V155) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V154, V155)) end end}, case V152 of {'Idris.Core.Unify.MkUnifyResult', E63, E64, E65, E66} -> (fun (V156, V157, V158, V159) -> V156 end(E63, E64, E65, E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V74))), case V160 of {'Idris.Prelude.Types.Left', E67} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V162) -> begin (V180 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('dn--un--unifyD_Unify_NF'(V164, V165, V166, V167, V168, V169, V170, V171)) end end end end end end end end, fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> ('dn--un--unifyWithLazyD_Unify_NF'(V172, V173, V174, V175, V176, V177, V178, V179)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))({'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Data.List':'un--reverse'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V163) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V163} end, V71))))}))((V12(('Idris.Idris2.Data.List':'un--reverse'(V73))))))(V74))), case V180 of {'Idris.Prelude.Types.Left', E69} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V182) -> {'Idris.Prelude.Types.Right', ('un--union'(V152, V182))} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V183) -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [1]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V184) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V184} end, V10))}, (V12(V13)), V183)) end, V14)) end(E45, E46)); _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [2]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V185) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V185} end, V10))}, (V12(V13)), V14)) end end(E43, E44)); _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [2]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V186) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V186} end, V10))}, (V12(V13)), V14)) end; 0 -> ('un--postpone'(V2, V0, V1, V5, V4, <<"Postponing hole application [3]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V187) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V187} end, V10))}, (V12(V13)), V14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"No such metavariable "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)))), V14)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unifyIfEq'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V13, V6, V7, V8, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> case V16 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> case V3 of 1 -> ('un--postpone'(V2, V0, V1, V4, V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Postponing unifyIfEq "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(case V5 of {'Idris.Core.Unify.MkUnifyInfo', E4, E5} -> (fun (V17, V18) -> V17 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), V6, V7, V8, V9)); 0 -> ('un--convertError'(V2, V0, V4, V6, V7, V8, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unifyHoleApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Core.Value.NTCon', E0, E1, E2, E3, E4} -> (fun (V12, V13, V14, V15, V16) -> fun (V17) -> begin (V19 = begin (V18 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V18} end), case V19 of {'Idris.Prelude.Types.Left', E5} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V21) -> begin (V50 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V13, case V21 of {'Idris.Core.Context.MkDefs', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49) -> V22 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V17))), case V50 of {'Idris.Prelude.Types.Left', E35} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V52) -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, V52, fun (V53) -> {'Idris.Core.Value.NTCon', V12, V13, V14, V15, V53} end, V16, V17)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.Core.Value.NDCon', E37, E38, E39, E40, E41} -> (fun (V54, V55, V56, V57, V58) -> fun (V59) -> begin (V61 = begin (V60 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V60} end), case V61 of {'Idris.Prelude.Types.Left', E42} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V63) -> begin (V92 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V55, case V63 of {'Idris.Core.Context.MkDefs', E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71} -> (fun (V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91) -> V64 end(E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V59))), case V92 of {'Idris.Prelude.Types.Left', E72} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V94) -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, V94, fun (V95) -> {'Idris.Core.Value.NDCon', V54, V55, V56, V57, V95} end, V58, V59)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E37, E38, E39, E40, E41)); {'Idris.Core.Value.NApp', E74, E75, E76} -> (fun (V96, V97, V98) -> case V97 of {'Idris.Core.Value.NLocal', E77, E78} -> (fun (V99, V100) -> fun (V101) -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, {'Idris.Prelude.Types.Nothing'}, fun (V102) -> {'Idris.Core.Value.NApp', V96, {'Idris.Core.Value.NLocal', V99, V100}, V102} end, V98, V101)) end end(E77, E78)); {'Idris.Core.Value.NMeta', E79, E80, E81} -> (fun (V103, V104, V105) -> fun (V106) -> begin (V108 = begin (V107 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V107} end), case V108 of {'Idris.Prelude.Types.Left', E82} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V110) -> begin (V139 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V104}, case V110 of {'Idris.Core.Context.MkDefs', E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111} -> (fun (V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138) -> V111 end(E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V106))), case V139 of {'Idris.Prelude.Types.Left', E112} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V141) -> begin (V142 = {'Idris.Core.Value.NApp', V96, {'Idris.Core.Value.NMeta', V103, V104, V105}, V98}), case V141 of {'Idris.Prelude.Types.Just', E114} -> (fun (V143) -> begin (V165 = case ('nested--11700-11856--in--un--isPatName'(V2, V105, V104, V103, V98, V96, V142, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V103)) of 1 -> 1; 0 -> case V143 of {'Idris.Core.Context.MkGlobalDef', E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135} -> (fun (V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164) -> V158 end(E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V165 of 1 -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, {'Idris.Prelude.Types.Nothing'}, fun (V166) -> {'Idris.Core.Value.NApp', V96, {'Idris.Core.Value.NMeta', V103, V104, V105}, V166} end, V98, V106)); 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V167) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V167} end, V10))}, V142, V106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V96, V7, V106)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E79, E80, E81)); _ -> fun (V168) -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V169) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V169} end, V10))}, V11, V168)) end end end(E74, E75, E76)); _ -> fun (V170) -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V171) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V171} end, V10))}, V11, V170)) end end.
'un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E0} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V17, V13))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V21 = case ('Idris.Idris2.Data.List':'un--isNil'(V11)) of 1 -> V10; 0 -> ('Idris.Idris2.Prelude.Types.List':'un--++'(V10, V11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V38 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.hole"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun (V22) -> begin (V24 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V23) -> ('Idris.Idris2.Core.Normalise':'un--evalArg'(V0, V2, V20, V23)) end, V21, [], V22))), case V24 of {'Idris.Prelude.Types.Left', E4} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V26) -> begin (V29 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V20, V6, V27, V28)) end end, V26, [], V22))), case V29 of {'Idris.Prelude.Types.Left', E6} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V31) -> begin (V32 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V20, V6, V12, V22))), case V32 of {'Idris.Prelude.Types.Left', E8} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V34) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unifying: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V36, V37)) end end}, V31)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" with "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V34))))))))))))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V13))), case V38 of {'Idris.Prelude.Types.Left', E10} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V40) -> begin (V41 = ('un--patternEnv'(V0, V1, V2, V6, V21, V13))), case V41 of {'Idris.Prelude.Types.Left', E12} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V72 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V9}, case V17 of {'Idris.Core.Context.MkDefs', E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71) -> V44 end(E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V72 of {'Idris.Prelude.Types.Left', E42} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V74) -> case V74 of {'Idris.Prelude.Types.Just', E44} -> (fun (V75) -> case V75 of {'Idris.Core.Context.MkGlobalDef', E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65} -> (fun (V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> case V93 of {'Idris.Core.Context.Hole', E66, E67} -> (fun (V97, V98) -> case case V75 of {'Idris.Core.Context.MkGlobalDef', E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88} -> (fun (V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119) -> V113 end(E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyHoleApp'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)); 0 -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E66, E67)); _ -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)) end end(E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44)); _ -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)) end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E89} -> (fun (V120) -> case V120 of {'Idris.Builtin.DPair.MkDPair', E90, E91} -> (fun (V121, V122) -> case V122 of {'Idris.Builtin.MkPair', E92, E93} -> (fun (V123, V124) -> begin (V153 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V9}, case V17 of {'Idris.Core.Context.MkDefs', E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121} -> (fun (V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152) -> V125 end(E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V153 of {'Idris.Prelude.Types.Left', E122} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V155) -> begin (V156 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.DPair.MkDPair', V121, {'Idris.Builtin.MkPair', V123, V124}}}), case V155 of {'Idris.Prelude.Types.Just', E124} -> (fun (V157) -> begin (V158 = {'Idris.Prelude.Types.Just', V157}), (('case--case block in case block in unifyHole-13072'(V2, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V17, V20, V21, V121, V123, V124, V156, V157, V158, case V157 of {'Idris.Core.Context.MkGlobalDef', E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145} -> (fun (V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179) -> V176 end(E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13)) end end(E124)); _ -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E90, E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unifyD'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V5, V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ((((((((V5(V1))(V2))(V3))(V4))(V7))(V8))(V9))(V10)) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unifyBothBinders'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V8 of {'Idris.Core.TT.Pi', E0, E1, E2, E3} -> (fun (V14, V15, V16, V17) -> fun (V18) -> case V12 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> begin (V24 = begin (V23 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V23} end), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V15, V20)) of 1 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, {'Idris.Core.TT.Pi', V14, V15, V16, V17}, V9}, {'Idris.Core.Value.NBind', V10, V11, {'Idris.Core.TT.Pi', V19, V20, V21, V22}, V13}, V18)); 0 -> begin (V27 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V26, V18))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V29, V5, V17, V18))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> begin (V37 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.binder"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun (V33) -> begin (V34 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V29, V5, V22, V33))), case V34 of {'Idris.Prelude.Types.Left', E14} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unifying arg types "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V32)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V36))))))))} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V18))), case V37 of {'Idris.Prelude.Types.Left', E16} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V39) -> begin (V56 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('dn--un--unifyD_Unify_NF'(V40, V41, V42, V43, V44, V45, V46, V47)) end end end end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('dn--un--unifyWithLazyD_Unify_NF'(V48, V49, V50, V51, V52, V53, V54, V55)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V17))(V22))(V18))), case V56 of {'Idris.Prelude.Types.Left', E18} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V58) -> begin (V59 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V1, <<"x"/utf8>>, V18))), case V59 of {'Idris.Prelude.Types.Left', E20} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V61) -> begin (V62 = {'Idris.Core.Env.::', {'Idris.Core.TT.Pi', V19, V20, {'Idris.Core.TT.Explicit'}, V32}, V5}), ('case--case block in unifyBothBinders-15587'(V2, V17, V16, V15, V14, V22, V21, V20, V19, V13, V11, V10, V9, V7, V6, V5, V4, V3, V1, V0, V26, V29, V32, V58, V61, V62, case V58 of {'Idris.Core.Unify.MkUnifyResult', E22, E23, E24, E25} -> (fun (V63, V64, V65, V66) -> V63 end(E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V18)) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6, E7)); _ -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, V8, V9}, {'Idris.Core.Value.NBind', V10, V11, V12, V13}, V18)) end end end(E0, E1, E2, E3)); {'Idris.Core.TT.Lam', E26, E27, E28, E29} -> (fun (V67, V68, V69, V70) -> fun (V71) -> case V12 of {'Idris.Core.TT.Lam', E30, E31, E32, E33} -> (fun (V72, V73, V74, V75) -> begin (V77 = begin (V76 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V76} end), case V77 of {'Idris.Prelude.Types.Left', E34} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V79) -> case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V68, V73)) of 1 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, {'Idris.Core.TT.Lam', V67, V68, V69, V70}, V9}, {'Idris.Core.Value.NBind', V10, V11, {'Idris.Core.TT.Lam', V72, V73, V74, V75}, V13}, V71)); 0 -> begin (V80 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V79, V71))), case V80 of {'Idris.Prelude.Types.Left', E36} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V82) -> begin (V83 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V82, V5, V70, V71))), case V83 of {'Idris.Prelude.Types.Left', E38} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V85) -> begin (V102 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('dn--un--unifyD_Unify_NF'(V86, V87, V88, V89, V90, V91, V92, V93)) end end end end end end end end, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('dn--un--unifyWithLazyD_Unify_NF'(V94, V95, V96, V97, V98, V99, V100, V101)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V70))(V75))(V71))), case V102 of {'Idris.Prelude.Types.Left', E40} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V104) -> begin (V105 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V1, <<"x"/utf8>>, V71))), case V105 of {'Idris.Prelude.Types.Left', E42} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V107) -> begin (V108 = {'Idris.Core.Env.::', {'Idris.Core.TT.Lam', V67, V68, {'Idris.Core.TT.Explicit'}, V85}, V5}), begin (V109 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V82, V5, V70, V71))), case V109 of {'Idris.Prelude.Types.Left', E44} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V111) -> begin (V112 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V82, V5, V75, V71))), case V112 of {'Idris.Prelude.Types.Left', E46} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V114) -> begin (V115 = (((V9(V79))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V5, {'Idris.Core.TT.Ref', V4, {'Idris.Core.TT.Bound'}, V107}))))(V71))), case V115 of {'Idris.Prelude.Types.Left', E48} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V117) -> begin (V118 = (((V13(V79))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V5, {'Idris.Core.TT.Ref', V4, {'Idris.Core.TT.Bound'}, V107}))))(V71))), case V118 of {'Idris.Prelude.Types.Left', E50} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V120) -> begin (V121 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V82, V5, V117, V71))), case V121 of {'Idris.Prelude.Types.Left', E52} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V123) -> begin (V124 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, V2, V82, V5, V120, V71))), case V124 of {'Idris.Prelude.Types.Left', E54} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V126) -> begin (V145 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> ('dn--un--unifyD_Unify_Term'(V127, V128, V129, V130, V131, V132, V133, V134, V135)) end end end end end end end end end, fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> ('dn--un--unifyWithLazyD_Unify_Term'(V136, V137, V138, V139, V140, V141, V142, V143, V144)) end end end end end end end end end}, [V7 | V2], V0, V1, ('un--lower'(V3)), V4, V108))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V7, V107, {'Idris.Core.TT.Bounds.None'}}, V123))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V7, V107, {'Idris.Core.TT.Bounds.None'}}, V126))))(V71))), case V145 of {'Idris.Prelude.Types.Left', E56} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V147) -> {'Idris.Prelude.Types.Right', ('un--union'(V104, V147))} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30, E31, E32, E33)); _ -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, V8, V9}, {'Idris.Core.Value.NBind', V10, V11, V12, V13}, V71)) end end end(E26, E27, E28, E29)); _ -> fun (V148) -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, V8, V9}, {'Idris.Core.Value.NBind', V10, V11, V12, V13}, V148)) end end.
'un--unifyBothApps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V7 of {'Idris.Core.Value.NLocal', E278, E279} -> (fun (V12, V13) -> case V8 of [] -> case V10 of {'Idris.Core.Value.NLocal', E836, E837} -> (fun (V14, V15) -> case V11 of [] -> fun (V16) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V13, V15)) of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V12, V13}, []}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V14, V15}, []}, V16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E906, E907} -> (fun (V17, V18) -> case V18 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E1044, E1045} -> (fun (V19, V20) -> case V10 of {'Idris.Core.Value.NLocal', E1114, E1115} -> (fun (V21, V22) -> begin (V23 = {'Idris.Core.Unify.MkUnifyInfo', V17, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V20, V22)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_Closure'(V24, V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V33, V34, V35, V36, V37, V38, V39, V40, V41)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V42, V43, V44, V45, V46, V47)) end end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V48, V49, V50, V51, V52, V53, V54)) end end end end end end end}}, V2, V0, V1, V23, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V55) -> ('Idris.Idris2.Builtin':'un--snd'(V55)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V56) -> ('Idris.Idris2.Builtin':'un--snd'(V56)) end, V11)))); 0 -> fun (V57) -> ('un--postpone'(V2, V0, V1, V4, V23, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V19, V20}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V21, V22}, V11}, V57)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1114, E1115)); _ -> case V7 of {'Idris.Core.Value.NLocal', E1069, E1070} -> (fun (V58, V59) -> case V10 of {'Idris.Core.Value.NLocal', E1094, E1095} -> (fun (V60, V61) -> fun (V62) -> begin (V63 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V62))), case V63 of {'Idris.Prelude.Types.Left', E1096} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E1096)); {'Idris.Prelude.Types.Right', E1097} -> (fun (V65) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V58, V59}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V60, V61}, V11}, V62)) end(E1097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1094, E1095)); _ -> case V10 of {'Idris.Core.Value.NMeta', E1089, E1090, E1091} -> (fun (V66, V67, V68) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1092, E1093} -> (fun (V69, V70) -> V70 end(E1092, E1093)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V66, V67, V68}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V66, V67, V68}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1089, E1090, E1091)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1071, E1072} -> (fun (V71, V72) -> case V72 of 3 -> case V7 of {'Idris.Core.Value.NRef', E1073, E1074} -> (fun (V73, V74) -> case V10 of {'Idris.Core.Value.NRef', E1075, E1076} -> (fun (V75, V76) -> begin (V77 = {'Idris.Core.Unify.MkUnifyInfo', V71, 3}), begin (V78 = {'Idris.Core.Value.NRef', V73, V74}), begin (V79 = {'Idris.Core.Value.NRef', V75, V76}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V74, V76)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('dn--un--unifyD_Unify_Closure'(V80, V81, V82, V83, V84, V85, V86, V87, V88)) end end end end end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V89, V90, V91, V92, V93, V94, V95, V96, V97)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V98, V99, V100, V101, V102, V103)) end end end end end end, fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V104, V105, V106, V107, V108, V109, V110)) end end end end end end end}}, V2, V0, V1, V77, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V111) -> ('Idris.Idris2.Builtin':'un--snd'(V111)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V112) -> ('Idris.Idris2.Builtin':'un--snd'(V112)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V77, V4, V5, V6, V78, V8, {'Idris.Core.Value.NApp', V9, V79, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1075, E1076)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1073, E1074)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E1077, E1078} -> (fun (V113, V114) -> case V10 of {'Idris.Core.Value.NRef', E1079, E1080} -> (fun (V115, V116) -> begin (V117 = {'Idris.Core.Unify.MkUnifyInfo', V71, 2}), begin (V118 = {'Idris.Core.Value.NRef', V113, V114}), begin (V119 = {'Idris.Core.Value.NRef', V115, V116}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V114, V116)) of 1 -> fun (V120) -> begin (V144 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V121) -> begin (V123 = begin (V122 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V122} end), case V123 of {'Idris.Prelude.Types.Left', E1081} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E1081)); {'Idris.Prelude.Types.Right', E1082} -> (fun (V125) -> begin (V129 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V125, V5, V126, V127)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V128) -> ('Idris.Idris2.Builtin':'un--snd'(V128)) end, V8)), [], V121))), case V129 of {'Idris.Prelude.Types.Left', E1083} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E1083)); {'Idris.Prelude.Types.Right', E1084} -> (fun (V131) -> begin (V135 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V132) -> fun (V133) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V125, V5, V132, V133)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V134) -> ('Idris.Idris2.Builtin':'un--snd'(V134)) end, V11)), [], V121))), case V135 of {'Idris.Prelude.Types.Left', E1085} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E1085)); {'Idris.Prelude.Types.Right', E1086} -> (fun (V137) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V138) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V138)) end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V139, V140)) end end}, V131)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V141) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V141)) end, fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V142, V143)) end end}, V137))))))))} end(E1086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1082)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V120))), case V144 of {'Idris.Prelude.Types.Left', E1087} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E1087)); {'Idris.Prelude.Types.Right', E1088} -> (fun (V146) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> ('dn--un--unifyD_Unify_Closure'(V147, V148, V149, V150, V151, V152, V153, V154, V155)) end end end end end end end end end, fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V156, V157, V158, V159, V160, V161, V162, V163, V164)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V165, V166, V167, V168, V169, V170)) end end end end end end, fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V171, V172, V173, V174, V175, V176, V177)) end end end end end end end}}, V2, V0, V1, V117, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V178) -> ('Idris.Idris2.Builtin':'un--snd'(V178)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V179) -> ('Idris.Idris2.Builtin':'un--snd'(V179)) end, V11))))(V120)) end(E1088)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V117, V4, V5, V6, V118, V8, {'Idris.Core.Value.NApp', V9, V119, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1079, E1080)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1077, E1078)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1071, E1072)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E1069, E1070)); {'Idris.Core.Value.NMeta', E1098, E1099, E1100} -> (fun (V180, V181, V182) -> case V10 of {'Idris.Core.Value.NMeta', E1101, E1102, E1103} -> (fun (V183, V184, V185) -> fun (V186) -> begin (V187 = ('un--isDefInvertible'(V0, V4, V181, V186))), case V187 of {'Idris.Prelude.Types.Left', E1104} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E1104)); {'Idris.Prelude.Types.Right', E1105} -> (fun (V189) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V181, V184)) of 1 -> case V189 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1112, E1113} -> (fun (V190, V191) -> V191 end(E1112, E1113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> fun (V200) -> ('dn--un--unifyD_Unify_Closure'(V192, V193, V194, V195, V196, V197, V198, V199, V200)) end end end end end end end end end, fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V201, V202, V203, V204, V205, V206, V207, V208, V209)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V210, V211, V212, V213, V214, V215)) end end end end end end, fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V216, V217, V218, V219, V220, V221, V222)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V182, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V223) -> ('Idris.Idris2.Builtin':'un--snd'(V223)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V185, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V224) -> ('Idris.Idris2.Builtin':'un--snd'(V224)) end, V11))))))(V186)); 0 -> begin (V225 = ('nested--11732-14576--in--un--localsIn'(V2, V182, V181, V180, V185, V184, V183, V11, V9, V8, V6, V5, V4, V3, V1, V0, V182, V186))), case V225 of {'Idris.Prelude.Types.Left', E1106} -> (fun (V226) -> {'Idris.Prelude.Types.Left', V226} end(E1106)); {'Idris.Prelude.Types.Right', E1107} -> (fun (V227) -> begin (V228 = ('nested--11732-14576--in--un--localsIn'(V2, V182, V181, V180, V185, V184, V183, V11, V9, V8, V6, V5, V4, V3, V1, V0, V185, V186))), case V228 of {'Idris.Prelude.Types.Left', E1108} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E1108)); {'Idris.Prelude.Types.Right', E1109} -> (fun (V230) -> begin (V231 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V227, V230)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V227, V230)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V231 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1110, E1111} -> (fun (V232, V233) -> V233 end(E1110, E1111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V182, V181, V180, V185, V184, V183, V11, V9, V8, V6, V5, V4, V3, V1, V0, V180)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V180, V181, V182}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V183, V184, V185}, V11}))(V186)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V183, V184, V185}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V180, V181, V182}, V8}))(V186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1101, E1102, E1103)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V180, V181, V182}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1098, E1099, E1100)); _ -> case V10 of {'Idris.Core.Value.NMeta', E1064, E1065, E1066} -> (fun (V234, V235, V236) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1067, E1068} -> (fun (V237, V238) -> V238 end(E1067, E1068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V234, V235, V236}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V234, V235, V236}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1064, E1065, E1066)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1046, E1047} -> (fun (V239, V240) -> case V240 of 3 -> case V7 of {'Idris.Core.Value.NRef', E1048, E1049} -> (fun (V241, V242) -> case V10 of {'Idris.Core.Value.NRef', E1050, E1051} -> (fun (V243, V244) -> begin (V245 = {'Idris.Core.Unify.MkUnifyInfo', V239, 3}), begin (V246 = {'Idris.Core.Value.NRef', V241, V242}), begin (V247 = {'Idris.Core.Value.NRef', V243, V244}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V242, V244)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> ('dn--un--unifyD_Unify_Closure'(V248, V249, V250, V251, V252, V253, V254, V255, V256)) end end end end end end end end end, fun (V257) -> fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> fun (V264) -> fun (V265) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V257, V258, V259, V260, V261, V262, V263, V264, V265)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V266, V267, V268, V269, V270, V271)) end end end end end end, fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V272, V273, V274, V275, V276, V277, V278)) end end end end end end end}}, V2, V0, V1, V245, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V279) -> ('Idris.Idris2.Builtin':'un--snd'(V279)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V280) -> ('Idris.Idris2.Builtin':'un--snd'(V280)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V245, V4, V5, V6, V246, V8, {'Idris.Core.Value.NApp', V9, V247, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1050, E1051)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1048, E1049)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E1052, E1053} -> (fun (V281, V282) -> case V10 of {'Idris.Core.Value.NRef', E1054, E1055} -> (fun (V283, V284) -> begin (V285 = {'Idris.Core.Unify.MkUnifyInfo', V239, 2}), begin (V286 = {'Idris.Core.Value.NRef', V281, V282}), begin (V287 = {'Idris.Core.Value.NRef', V283, V284}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V282, V284)) of 1 -> fun (V288) -> begin (V312 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V289) -> begin (V291 = begin (V290 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V290} end), case V291 of {'Idris.Prelude.Types.Left', E1056} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E1056)); {'Idris.Prelude.Types.Right', E1057} -> (fun (V293) -> begin (V297 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V294) -> fun (V295) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V293, V5, V294, V295)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V296) -> ('Idris.Idris2.Builtin':'un--snd'(V296)) end, V8)), [], V289))), case V297 of {'Idris.Prelude.Types.Left', E1058} -> (fun (V298) -> {'Idris.Prelude.Types.Left', V298} end(E1058)); {'Idris.Prelude.Types.Right', E1059} -> (fun (V299) -> begin (V303 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V300) -> fun (V301) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V293, V5, V300, V301)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V302) -> ('Idris.Idris2.Builtin':'un--snd'(V302)) end, V11)), [], V289))), case V303 of {'Idris.Prelude.Types.Left', E1060} -> (fun (V304) -> {'Idris.Prelude.Types.Left', V304} end(E1060)); {'Idris.Prelude.Types.Right', E1061} -> (fun (V305) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V306) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V306)) end, fun (V307) -> fun (V308) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V307, V308)) end end}, V299)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V309) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V309)) end, fun (V310) -> fun (V311) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V310, V311)) end end}, V305))))))))} end(E1061)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1059)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V288))), case V312 of {'Idris.Prelude.Types.Left', E1062} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E1062)); {'Idris.Prelude.Types.Right', E1063} -> (fun (V314) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> ('dn--un--unifyD_Unify_Closure'(V315, V316, V317, V318, V319, V320, V321, V322, V323)) end end end end end end end end end, fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V324, V325, V326, V327, V328, V329, V330, V331, V332)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V333, V334, V335, V336, V337, V338)) end end end end end end, fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V339, V340, V341, V342, V343, V344, V345)) end end end end end end end}}, V2, V0, V1, V285, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V346) -> ('Idris.Idris2.Builtin':'un--snd'(V346)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V347) -> ('Idris.Idris2.Builtin':'un--snd'(V347)) end, V11))))(V288)) end(E1063)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V285, V4, V5, V6, V286, V8, {'Idris.Core.Value.NApp', V9, V287, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1054, E1055)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1052, E1053)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1046, E1047)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E1044, E1045)); _ -> case V7 of {'Idris.Core.Value.NLocal', E999, E1000} -> (fun (V348, V349) -> case V10 of {'Idris.Core.Value.NLocal', E1024, E1025} -> (fun (V350, V351) -> fun (V352) -> begin (V353 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V352))), case V353 of {'Idris.Prelude.Types.Left', E1026} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E1026)); {'Idris.Prelude.Types.Right', E1027} -> (fun (V355) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V348, V349}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V350, V351}, V11}, V352)) end(E1027)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1024, E1025)); _ -> case V10 of {'Idris.Core.Value.NMeta', E1019, E1020, E1021} -> (fun (V356, V357, V358) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1022, E1023} -> (fun (V359, V360) -> V360 end(E1022, E1023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V356, V357, V358}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V356, V357, V358}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1019, E1020, E1021)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1001, E1002} -> (fun (V361, V362) -> case V362 of 3 -> case V7 of {'Idris.Core.Value.NRef', E1003, E1004} -> (fun (V363, V364) -> case V10 of {'Idris.Core.Value.NRef', E1005, E1006} -> (fun (V365, V366) -> begin (V367 = {'Idris.Core.Unify.MkUnifyInfo', V361, 3}), begin (V368 = {'Idris.Core.Value.NRef', V363, V364}), begin (V369 = {'Idris.Core.Value.NRef', V365, V366}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V364, V366)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V370) -> fun (V371) -> fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> fun (V377) -> fun (V378) -> ('dn--un--unifyD_Unify_Closure'(V370, V371, V372, V373, V374, V375, V376, V377, V378)) end end end end end end end end end, fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> fun (V386) -> fun (V387) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V379, V380, V381, V382, V383, V384, V385, V386, V387)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> fun (V392) -> fun (V393) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V388, V389, V390, V391, V392, V393)) end end end end end end, fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V394, V395, V396, V397, V398, V399, V400)) end end end end end end end}}, V2, V0, V1, V367, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V401) -> ('Idris.Idris2.Builtin':'un--snd'(V401)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V402) -> ('Idris.Idris2.Builtin':'un--snd'(V402)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V367, V4, V5, V6, V368, V8, {'Idris.Core.Value.NApp', V9, V369, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1005, E1006)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1003, E1004)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E1007, E1008} -> (fun (V403, V404) -> case V10 of {'Idris.Core.Value.NRef', E1009, E1010} -> (fun (V405, V406) -> begin (V407 = {'Idris.Core.Unify.MkUnifyInfo', V361, 2}), begin (V408 = {'Idris.Core.Value.NRef', V403, V404}), begin (V409 = {'Idris.Core.Value.NRef', V405, V406}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V404, V406)) of 1 -> fun (V410) -> begin (V434 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V411) -> begin (V413 = begin (V412 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V412} end), case V413 of {'Idris.Prelude.Types.Left', E1011} -> (fun (V414) -> {'Idris.Prelude.Types.Left', V414} end(E1011)); {'Idris.Prelude.Types.Right', E1012} -> (fun (V415) -> begin (V419 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V416) -> fun (V417) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V415, V5, V416, V417)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V418) -> ('Idris.Idris2.Builtin':'un--snd'(V418)) end, V8)), [], V411))), case V419 of {'Idris.Prelude.Types.Left', E1013} -> (fun (V420) -> {'Idris.Prelude.Types.Left', V420} end(E1013)); {'Idris.Prelude.Types.Right', E1014} -> (fun (V421) -> begin (V425 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V422) -> fun (V423) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V415, V5, V422, V423)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V424) -> ('Idris.Idris2.Builtin':'un--snd'(V424)) end, V11)), [], V411))), case V425 of {'Idris.Prelude.Types.Left', E1015} -> (fun (V426) -> {'Idris.Prelude.Types.Left', V426} end(E1015)); {'Idris.Prelude.Types.Right', E1016} -> (fun (V427) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V428) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V428)) end, fun (V429) -> fun (V430) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V429, V430)) end end}, V421)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V431) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V431)) end, fun (V432) -> fun (V433) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V432, V433)) end end}, V427))))))))} end(E1016)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V410))), case V434 of {'Idris.Prelude.Types.Left', E1017} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E1017)); {'Idris.Prelude.Types.Right', E1018} -> (fun (V436) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> fun (V441) -> fun (V442) -> fun (V443) -> fun (V444) -> fun (V445) -> ('dn--un--unifyD_Unify_Closure'(V437, V438, V439, V440, V441, V442, V443, V444, V445)) end end end end end end end end end, fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> fun (V450) -> fun (V451) -> fun (V452) -> fun (V453) -> fun (V454) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V446, V447, V448, V449, V450, V451, V452, V453, V454)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V455) -> fun (V456) -> fun (V457) -> fun (V458) -> fun (V459) -> fun (V460) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V455, V456, V457, V458, V459, V460)) end end end end end end, fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V461, V462, V463, V464, V465, V466, V467)) end end end end end end end}}, V2, V0, V1, V407, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V468) -> ('Idris.Idris2.Builtin':'un--snd'(V468)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V469) -> ('Idris.Idris2.Builtin':'un--snd'(V469)) end, V11))))(V410)) end(E1018)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V407, V4, V5, V6, V408, V8, {'Idris.Core.Value.NApp', V9, V409, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1009, E1010)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1007, E1008)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1001, E1002)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E999, E1000)); {'Idris.Core.Value.NMeta', E1028, E1029, E1030} -> (fun (V470, V471, V472) -> case V10 of {'Idris.Core.Value.NMeta', E1031, E1032, E1033} -> (fun (V473, V474, V475) -> fun (V476) -> begin (V477 = ('un--isDefInvertible'(V0, V4, V471, V476))), case V477 of {'Idris.Prelude.Types.Left', E1034} -> (fun (V478) -> {'Idris.Prelude.Types.Left', V478} end(E1034)); {'Idris.Prelude.Types.Right', E1035} -> (fun (V479) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V471, V474)) of 1 -> case V479 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1042, E1043} -> (fun (V480, V481) -> V481 end(E1042, E1043)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V482) -> fun (V483) -> fun (V484) -> fun (V485) -> fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> ('dn--un--unifyD_Unify_Closure'(V482, V483, V484, V485, V486, V487, V488, V489, V490)) end end end end end end end end end, fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> fun (V499) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V491, V492, V493, V494, V495, V496, V497, V498, V499)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V500) -> fun (V501) -> fun (V502) -> fun (V503) -> fun (V504) -> fun (V505) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V500, V501, V502, V503, V504, V505)) end end end end end end, fun (V506) -> fun (V507) -> fun (V508) -> fun (V509) -> fun (V510) -> fun (V511) -> fun (V512) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V506, V507, V508, V509, V510, V511, V512)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V472, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V513) -> ('Idris.Idris2.Builtin':'un--snd'(V513)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V475, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V514) -> ('Idris.Idris2.Builtin':'un--snd'(V514)) end, V11))))))(V476)); 0 -> begin (V515 = ('nested--11732-14576--in--un--localsIn'(V2, V472, V471, V470, V475, V474, V473, V11, V9, V8, V6, V5, V4, V3, V1, V0, V472, V476))), case V515 of {'Idris.Prelude.Types.Left', E1036} -> (fun (V516) -> {'Idris.Prelude.Types.Left', V516} end(E1036)); {'Idris.Prelude.Types.Right', E1037} -> (fun (V517) -> begin (V518 = ('nested--11732-14576--in--un--localsIn'(V2, V472, V471, V470, V475, V474, V473, V11, V9, V8, V6, V5, V4, V3, V1, V0, V475, V476))), case V518 of {'Idris.Prelude.Types.Left', E1038} -> (fun (V519) -> {'Idris.Prelude.Types.Left', V519} end(E1038)); {'Idris.Prelude.Types.Right', E1039} -> (fun (V520) -> begin (V521 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V517, V520)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V517, V520)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V521 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1040, E1041} -> (fun (V522, V523) -> V523 end(E1040, E1041)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V472, V471, V470, V475, V474, V473, V11, V9, V8, V6, V5, V4, V3, V1, V0, V470)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V470, V471, V472}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V473, V474, V475}, V11}))(V476)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V473, V474, V475}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V470, V471, V472}, V8}))(V476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1039)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1035)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1031, E1032, E1033)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V470, V471, V472}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1028, E1029, E1030)); _ -> case V10 of {'Idris.Core.Value.NMeta', E994, E995, E996} -> (fun (V524, V525, V526) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E997, E998} -> (fun (V527, V528) -> V528 end(E997, E998)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V524, V525, V526}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V524, V525, V526}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E994, E995, E996)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E976, E977} -> (fun (V529, V530) -> case V530 of 3 -> case V7 of {'Idris.Core.Value.NRef', E978, E979} -> (fun (V531, V532) -> case V10 of {'Idris.Core.Value.NRef', E980, E981} -> (fun (V533, V534) -> begin (V535 = {'Idris.Core.Unify.MkUnifyInfo', V529, 3}), begin (V536 = {'Idris.Core.Value.NRef', V531, V532}), begin (V537 = {'Idris.Core.Value.NRef', V533, V534}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V532, V534)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V538) -> fun (V539) -> fun (V540) -> fun (V541) -> fun (V542) -> fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> ('dn--un--unifyD_Unify_Closure'(V538, V539, V540, V541, V542, V543, V544, V545, V546)) end end end end end end end end end, fun (V547) -> fun (V548) -> fun (V549) -> fun (V550) -> fun (V551) -> fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V547, V548, V549, V550, V551, V552, V553, V554, V555)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V556) -> fun (V557) -> fun (V558) -> fun (V559) -> fun (V560) -> fun (V561) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V556, V557, V558, V559, V560, V561)) end end end end end end, fun (V562) -> fun (V563) -> fun (V564) -> fun (V565) -> fun (V566) -> fun (V567) -> fun (V568) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V562, V563, V564, V565, V566, V567, V568)) end end end end end end end}}, V2, V0, V1, V535, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V569) -> ('Idris.Idris2.Builtin':'un--snd'(V569)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V570) -> ('Idris.Idris2.Builtin':'un--snd'(V570)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V535, V4, V5, V6, V536, V8, {'Idris.Core.Value.NApp', V9, V537, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E980, E981)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E978, E979)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E982, E983} -> (fun (V571, V572) -> case V10 of {'Idris.Core.Value.NRef', E984, E985} -> (fun (V573, V574) -> begin (V575 = {'Idris.Core.Unify.MkUnifyInfo', V529, 2}), begin (V576 = {'Idris.Core.Value.NRef', V571, V572}), begin (V577 = {'Idris.Core.Value.NRef', V573, V574}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V572, V574)) of 1 -> fun (V578) -> begin (V602 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V579) -> begin (V581 = begin (V580 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V580} end), case V581 of {'Idris.Prelude.Types.Left', E986} -> (fun (V582) -> {'Idris.Prelude.Types.Left', V582} end(E986)); {'Idris.Prelude.Types.Right', E987} -> (fun (V583) -> begin (V587 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V584) -> fun (V585) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V583, V5, V584, V585)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V586) -> ('Idris.Idris2.Builtin':'un--snd'(V586)) end, V8)), [], V579))), case V587 of {'Idris.Prelude.Types.Left', E988} -> (fun (V588) -> {'Idris.Prelude.Types.Left', V588} end(E988)); {'Idris.Prelude.Types.Right', E989} -> (fun (V589) -> begin (V593 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V590) -> fun (V591) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V583, V5, V590, V591)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V592) -> ('Idris.Idris2.Builtin':'un--snd'(V592)) end, V11)), [], V579))), case V593 of {'Idris.Prelude.Types.Left', E990} -> (fun (V594) -> {'Idris.Prelude.Types.Left', V594} end(E990)); {'Idris.Prelude.Types.Right', E991} -> (fun (V595) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V596) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V596)) end, fun (V597) -> fun (V598) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V597, V598)) end end}, V589)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V599) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V599)) end, fun (V600) -> fun (V601) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V600, V601)) end end}, V595))))))))} end(E991)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E989)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E987)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V578))), case V602 of {'Idris.Prelude.Types.Left', E992} -> (fun (V603) -> {'Idris.Prelude.Types.Left', V603} end(E992)); {'Idris.Prelude.Types.Right', E993} -> (fun (V604) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V605) -> fun (V606) -> fun (V607) -> fun (V608) -> fun (V609) -> fun (V610) -> fun (V611) -> fun (V612) -> fun (V613) -> ('dn--un--unifyD_Unify_Closure'(V605, V606, V607, V608, V609, V610, V611, V612, V613)) end end end end end end end end end, fun (V614) -> fun (V615) -> fun (V616) -> fun (V617) -> fun (V618) -> fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V614, V615, V616, V617, V618, V619, V620, V621, V622)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V623) -> fun (V624) -> fun (V625) -> fun (V626) -> fun (V627) -> fun (V628) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V623, V624, V625, V626, V627, V628)) end end end end end end, fun (V629) -> fun (V630) -> fun (V631) -> fun (V632) -> fun (V633) -> fun (V634) -> fun (V635) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V629, V630, V631, V632, V633, V634, V635)) end end end end end end end}}, V2, V0, V1, V575, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V636) -> ('Idris.Idris2.Builtin':'un--snd'(V636)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V637) -> ('Idris.Idris2.Builtin':'un--snd'(V637)) end, V11))))(V578)) end(E993)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V575, V4, V5, V6, V576, V8, {'Idris.Core.Value.NApp', V9, V577, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E984, E985)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E982, E983)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E976, E977)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E931, E932} -> (fun (V638, V639) -> case V10 of {'Idris.Core.Value.NLocal', E956, E957} -> (fun (V640, V641) -> fun (V642) -> begin (V643 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V642))), case V643 of {'Idris.Prelude.Types.Left', E958} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E958)); {'Idris.Prelude.Types.Right', E959} -> (fun (V645) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V638, V639}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V640, V641}, V11}, V642)) end(E959)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E956, E957)); _ -> case V10 of {'Idris.Core.Value.NMeta', E951, E952, E953} -> (fun (V646, V647, V648) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E954, E955} -> (fun (V649, V650) -> V650 end(E954, E955)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V646, V647, V648}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V646, V647, V648}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E951, E952, E953)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E933, E934} -> (fun (V651, V652) -> case V652 of 3 -> case V7 of {'Idris.Core.Value.NRef', E935, E936} -> (fun (V653, V654) -> case V10 of {'Idris.Core.Value.NRef', E937, E938} -> (fun (V655, V656) -> begin (V657 = {'Idris.Core.Unify.MkUnifyInfo', V651, 3}), begin (V658 = {'Idris.Core.Value.NRef', V653, V654}), begin (V659 = {'Idris.Core.Value.NRef', V655, V656}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V654, V656)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V660) -> fun (V661) -> fun (V662) -> fun (V663) -> fun (V664) -> fun (V665) -> fun (V666) -> fun (V667) -> fun (V668) -> ('dn--un--unifyD_Unify_Closure'(V660, V661, V662, V663, V664, V665, V666, V667, V668)) end end end end end end end end end, fun (V669) -> fun (V670) -> fun (V671) -> fun (V672) -> fun (V673) -> fun (V674) -> fun (V675) -> fun (V676) -> fun (V677) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V669, V670, V671, V672, V673, V674, V675, V676, V677)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V678) -> fun (V679) -> fun (V680) -> fun (V681) -> fun (V682) -> fun (V683) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V678, V679, V680, V681, V682, V683)) end end end end end end, fun (V684) -> fun (V685) -> fun (V686) -> fun (V687) -> fun (V688) -> fun (V689) -> fun (V690) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V684, V685, V686, V687, V688, V689, V690)) end end end end end end end}}, V2, V0, V1, V657, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V691) -> ('Idris.Idris2.Builtin':'un--snd'(V691)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V692) -> ('Idris.Idris2.Builtin':'un--snd'(V692)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V657, V4, V5, V6, V658, V8, {'Idris.Core.Value.NApp', V9, V659, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E937, E938)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E935, E936)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E939, E940} -> (fun (V693, V694) -> case V10 of {'Idris.Core.Value.NRef', E941, E942} -> (fun (V695, V696) -> begin (V697 = {'Idris.Core.Unify.MkUnifyInfo', V651, 2}), begin (V698 = {'Idris.Core.Value.NRef', V693, V694}), begin (V699 = {'Idris.Core.Value.NRef', V695, V696}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V694, V696)) of 1 -> fun (V700) -> begin (V724 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V701) -> begin (V703 = begin (V702 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V702} end), case V703 of {'Idris.Prelude.Types.Left', E943} -> (fun (V704) -> {'Idris.Prelude.Types.Left', V704} end(E943)); {'Idris.Prelude.Types.Right', E944} -> (fun (V705) -> begin (V709 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V706) -> fun (V707) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V705, V5, V706, V707)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V708) -> ('Idris.Idris2.Builtin':'un--snd'(V708)) end, V8)), [], V701))), case V709 of {'Idris.Prelude.Types.Left', E945} -> (fun (V710) -> {'Idris.Prelude.Types.Left', V710} end(E945)); {'Idris.Prelude.Types.Right', E946} -> (fun (V711) -> begin (V715 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V712) -> fun (V713) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V705, V5, V712, V713)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V714) -> ('Idris.Idris2.Builtin':'un--snd'(V714)) end, V11)), [], V701))), case V715 of {'Idris.Prelude.Types.Left', E947} -> (fun (V716) -> {'Idris.Prelude.Types.Left', V716} end(E947)); {'Idris.Prelude.Types.Right', E948} -> (fun (V717) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V718) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V718)) end, fun (V719) -> fun (V720) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V719, V720)) end end}, V711)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V721) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V721)) end, fun (V722) -> fun (V723) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V722, V723)) end end}, V717))))))))} end(E948)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E946)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E944)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V700))), case V724 of {'Idris.Prelude.Types.Left', E949} -> (fun (V725) -> {'Idris.Prelude.Types.Left', V725} end(E949)); {'Idris.Prelude.Types.Right', E950} -> (fun (V726) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V727) -> fun (V728) -> fun (V729) -> fun (V730) -> fun (V731) -> fun (V732) -> fun (V733) -> fun (V734) -> fun (V735) -> ('dn--un--unifyD_Unify_Closure'(V727, V728, V729, V730, V731, V732, V733, V734, V735)) end end end end end end end end end, fun (V736) -> fun (V737) -> fun (V738) -> fun (V739) -> fun (V740) -> fun (V741) -> fun (V742) -> fun (V743) -> fun (V744) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V736, V737, V738, V739, V740, V741, V742, V743, V744)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V745) -> fun (V746) -> fun (V747) -> fun (V748) -> fun (V749) -> fun (V750) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V745, V746, V747, V748, V749, V750)) end end end end end end, fun (V751) -> fun (V752) -> fun (V753) -> fun (V754) -> fun (V755) -> fun (V756) -> fun (V757) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V751, V752, V753, V754, V755, V756, V757)) end end end end end end end}}, V2, V0, V1, V697, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V758) -> ('Idris.Idris2.Builtin':'un--snd'(V758)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V759) -> ('Idris.Idris2.Builtin':'un--snd'(V759)) end, V11))))(V700)) end(E950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V697, V4, V5, V6, V698, V8, {'Idris.Core.Value.NApp', V9, V699, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E941, E942)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E939, E940)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E933, E934)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E931, E932)); {'Idris.Core.Value.NMeta', E960, E961, E962} -> (fun (V760, V761, V762) -> case V10 of {'Idris.Core.Value.NMeta', E963, E964, E965} -> (fun (V763, V764, V765) -> fun (V766) -> begin (V767 = ('un--isDefInvertible'(V0, V4, V761, V766))), case V767 of {'Idris.Prelude.Types.Left', E966} -> (fun (V768) -> {'Idris.Prelude.Types.Left', V768} end(E966)); {'Idris.Prelude.Types.Right', E967} -> (fun (V769) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V761, V764)) of 1 -> case V769 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E974, E975} -> (fun (V770, V771) -> V771 end(E974, E975)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V772) -> fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> fun (V777) -> fun (V778) -> fun (V779) -> fun (V780) -> ('dn--un--unifyD_Unify_Closure'(V772, V773, V774, V775, V776, V777, V778, V779, V780)) end end end end end end end end end, fun (V781) -> fun (V782) -> fun (V783) -> fun (V784) -> fun (V785) -> fun (V786) -> fun (V787) -> fun (V788) -> fun (V789) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V781, V782, V783, V784, V785, V786, V787, V788, V789)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V790) -> fun (V791) -> fun (V792) -> fun (V793) -> fun (V794) -> fun (V795) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V790, V791, V792, V793, V794, V795)) end end end end end end, fun (V796) -> fun (V797) -> fun (V798) -> fun (V799) -> fun (V800) -> fun (V801) -> fun (V802) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V796, V797, V798, V799, V800, V801, V802)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V762, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V803) -> ('Idris.Idris2.Builtin':'un--snd'(V803)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V765, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V804) -> ('Idris.Idris2.Builtin':'un--snd'(V804)) end, V11))))))(V766)); 0 -> begin (V805 = ('nested--11732-14576--in--un--localsIn'(V2, V762, V761, V760, V765, V764, V763, V11, V9, V8, V6, V5, V4, V3, V1, V0, V762, V766))), case V805 of {'Idris.Prelude.Types.Left', E968} -> (fun (V806) -> {'Idris.Prelude.Types.Left', V806} end(E968)); {'Idris.Prelude.Types.Right', E969} -> (fun (V807) -> begin (V808 = ('nested--11732-14576--in--un--localsIn'(V2, V762, V761, V760, V765, V764, V763, V11, V9, V8, V6, V5, V4, V3, V1, V0, V765, V766))), case V808 of {'Idris.Prelude.Types.Left', E970} -> (fun (V809) -> {'Idris.Prelude.Types.Left', V809} end(E970)); {'Idris.Prelude.Types.Right', E971} -> (fun (V810) -> begin (V811 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V807, V810)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V807, V810)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V811 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E972, E973} -> (fun (V812, V813) -> V813 end(E972, E973)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V762, V761, V760, V765, V764, V763, V11, V9, V8, V6, V5, V4, V3, V1, V0, V760)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V760, V761, V762}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V763, V764, V765}, V11}))(V766)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V763, V764, V765}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V760, V761, V762}, V8}))(V766)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E971)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E969)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E967)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E963, E964, E965)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V760, V761, V762}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E960, E961, E962)); _ -> case V10 of {'Idris.Core.Value.NMeta', E926, E927, E928} -> (fun (V814, V815, V816) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E929, E930} -> (fun (V817, V818) -> V818 end(E929, E930)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V814, V815, V816}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V814, V815, V816}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E926, E927, E928)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E908, E909} -> (fun (V819, V820) -> case V820 of 3 -> case V7 of {'Idris.Core.Value.NRef', E910, E911} -> (fun (V821, V822) -> case V10 of {'Idris.Core.Value.NRef', E912, E913} -> (fun (V823, V824) -> begin (V825 = {'Idris.Core.Unify.MkUnifyInfo', V819, 3}), begin (V826 = {'Idris.Core.Value.NRef', V821, V822}), begin (V827 = {'Idris.Core.Value.NRef', V823, V824}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V822, V824)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V828) -> fun (V829) -> fun (V830) -> fun (V831) -> fun (V832) -> fun (V833) -> fun (V834) -> fun (V835) -> fun (V836) -> ('dn--un--unifyD_Unify_Closure'(V828, V829, V830, V831, V832, V833, V834, V835, V836)) end end end end end end end end end, fun (V837) -> fun (V838) -> fun (V839) -> fun (V840) -> fun (V841) -> fun (V842) -> fun (V843) -> fun (V844) -> fun (V845) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V837, V838, V839, V840, V841, V842, V843, V844, V845)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V846) -> fun (V847) -> fun (V848) -> fun (V849) -> fun (V850) -> fun (V851) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V846, V847, V848, V849, V850, V851)) end end end end end end, fun (V852) -> fun (V853) -> fun (V854) -> fun (V855) -> fun (V856) -> fun (V857) -> fun (V858) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V852, V853, V854, V855, V856, V857, V858)) end end end end end end end}}, V2, V0, V1, V825, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V859) -> ('Idris.Idris2.Builtin':'un--snd'(V859)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V860) -> ('Idris.Idris2.Builtin':'un--snd'(V860)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V825, V4, V5, V6, V826, V8, {'Idris.Core.Value.NApp', V9, V827, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E912, E913)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E910, E911)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E914, E915} -> (fun (V861, V862) -> case V10 of {'Idris.Core.Value.NRef', E916, E917} -> (fun (V863, V864) -> begin (V865 = {'Idris.Core.Unify.MkUnifyInfo', V819, 2}), begin (V866 = {'Idris.Core.Value.NRef', V861, V862}), begin (V867 = {'Idris.Core.Value.NRef', V863, V864}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V862, V864)) of 1 -> fun (V868) -> begin (V892 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V869) -> begin (V871 = begin (V870 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V870} end), case V871 of {'Idris.Prelude.Types.Left', E918} -> (fun (V872) -> {'Idris.Prelude.Types.Left', V872} end(E918)); {'Idris.Prelude.Types.Right', E919} -> (fun (V873) -> begin (V877 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V874) -> fun (V875) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V873, V5, V874, V875)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V876) -> ('Idris.Idris2.Builtin':'un--snd'(V876)) end, V8)), [], V869))), case V877 of {'Idris.Prelude.Types.Left', E920} -> (fun (V878) -> {'Idris.Prelude.Types.Left', V878} end(E920)); {'Idris.Prelude.Types.Right', E921} -> (fun (V879) -> begin (V883 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V880) -> fun (V881) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V873, V5, V880, V881)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V882) -> ('Idris.Idris2.Builtin':'un--snd'(V882)) end, V11)), [], V869))), case V883 of {'Idris.Prelude.Types.Left', E922} -> (fun (V884) -> {'Idris.Prelude.Types.Left', V884} end(E922)); {'Idris.Prelude.Types.Right', E923} -> (fun (V885) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V886) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V886)) end, fun (V887) -> fun (V888) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V887, V888)) end end}, V879)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V889) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V889)) end, fun (V890) -> fun (V891) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V890, V891)) end end}, V885))))))))} end(E923)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E921)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E919)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V868))), case V892 of {'Idris.Prelude.Types.Left', E924} -> (fun (V893) -> {'Idris.Prelude.Types.Left', V893} end(E924)); {'Idris.Prelude.Types.Right', E925} -> (fun (V894) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V895) -> fun (V896) -> fun (V897) -> fun (V898) -> fun (V899) -> fun (V900) -> fun (V901) -> fun (V902) -> fun (V903) -> ('dn--un--unifyD_Unify_Closure'(V895, V896, V897, V898, V899, V900, V901, V902, V903)) end end end end end end end end end, fun (V904) -> fun (V905) -> fun (V906) -> fun (V907) -> fun (V908) -> fun (V909) -> fun (V910) -> fun (V911) -> fun (V912) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V904, V905, V906, V907, V908, V909, V910, V911, V912)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V913) -> fun (V914) -> fun (V915) -> fun (V916) -> fun (V917) -> fun (V918) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V913, V914, V915, V916, V917, V918)) end end end end end end, fun (V919) -> fun (V920) -> fun (V921) -> fun (V922) -> fun (V923) -> fun (V924) -> fun (V925) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V919, V920, V921, V922, V923, V924, V925)) end end end end end end end}}, V2, V0, V1, V865, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V926) -> ('Idris.Idris2.Builtin':'un--snd'(V926)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V927) -> ('Idris.Idris2.Builtin':'un--snd'(V927)) end, V11))))(V868)) end(E925)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V865, V4, V5, V6, V866, V8, {'Idris.Core.Value.NApp', V9, V867, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E916, E917)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E914, E915)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E908, E909)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E906, E907)); _ -> case V7 of {'Idris.Core.Value.NLocal', E861, E862} -> (fun (V928, V929) -> case V10 of {'Idris.Core.Value.NLocal', E886, E887} -> (fun (V930, V931) -> fun (V932) -> begin (V933 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V932))), case V933 of {'Idris.Prelude.Types.Left', E888} -> (fun (V934) -> {'Idris.Prelude.Types.Left', V934} end(E888)); {'Idris.Prelude.Types.Right', E889} -> (fun (V935) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V928, V929}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V930, V931}, V11}, V932)) end(E889)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E886, E887)); _ -> case V10 of {'Idris.Core.Value.NMeta', E881, E882, E883} -> (fun (V936, V937, V938) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E884, E885} -> (fun (V939, V940) -> V940 end(E884, E885)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V936, V937, V938}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V936, V937, V938}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E881, E882, E883)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E863, E864} -> (fun (V941, V942) -> case V942 of 3 -> case V7 of {'Idris.Core.Value.NRef', E865, E866} -> (fun (V943, V944) -> case V10 of {'Idris.Core.Value.NRef', E867, E868} -> (fun (V945, V946) -> begin (V947 = {'Idris.Core.Unify.MkUnifyInfo', V941, 3}), begin (V948 = {'Idris.Core.Value.NRef', V943, V944}), begin (V949 = {'Idris.Core.Value.NRef', V945, V946}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V944, V946)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V950) -> fun (V951) -> fun (V952) -> fun (V953) -> fun (V954) -> fun (V955) -> fun (V956) -> fun (V957) -> fun (V958) -> ('dn--un--unifyD_Unify_Closure'(V950, V951, V952, V953, V954, V955, V956, V957, V958)) end end end end end end end end end, fun (V959) -> fun (V960) -> fun (V961) -> fun (V962) -> fun (V963) -> fun (V964) -> fun (V965) -> fun (V966) -> fun (V967) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V959, V960, V961, V962, V963, V964, V965, V966, V967)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V968) -> fun (V969) -> fun (V970) -> fun (V971) -> fun (V972) -> fun (V973) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V968, V969, V970, V971, V972, V973)) end end end end end end, fun (V974) -> fun (V975) -> fun (V976) -> fun (V977) -> fun (V978) -> fun (V979) -> fun (V980) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V974, V975, V976, V977, V978, V979, V980)) end end end end end end end}}, V2, V0, V1, V947, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V981) -> ('Idris.Idris2.Builtin':'un--snd'(V981)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V982) -> ('Idris.Idris2.Builtin':'un--snd'(V982)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V947, V4, V5, V6, V948, V8, {'Idris.Core.Value.NApp', V9, V949, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E867, E868)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E865, E866)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E869, E870} -> (fun (V983, V984) -> case V10 of {'Idris.Core.Value.NRef', E871, E872} -> (fun (V985, V986) -> begin (V987 = {'Idris.Core.Unify.MkUnifyInfo', V941, 2}), begin (V988 = {'Idris.Core.Value.NRef', V983, V984}), begin (V989 = {'Idris.Core.Value.NRef', V985, V986}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V984, V986)) of 1 -> fun (V990) -> begin (V1014 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V991) -> begin (V993 = begin (V992 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V992} end), case V993 of {'Idris.Prelude.Types.Left', E873} -> (fun (V994) -> {'Idris.Prelude.Types.Left', V994} end(E873)); {'Idris.Prelude.Types.Right', E874} -> (fun (V995) -> begin (V999 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V996) -> fun (V997) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V995, V5, V996, V997)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V998) -> ('Idris.Idris2.Builtin':'un--snd'(V998)) end, V8)), [], V991))), case V999 of {'Idris.Prelude.Types.Left', E875} -> (fun (V1000) -> {'Idris.Prelude.Types.Left', V1000} end(E875)); {'Idris.Prelude.Types.Right', E876} -> (fun (V1001) -> begin (V1005 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1002) -> fun (V1003) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V995, V5, V1002, V1003)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1004) -> ('Idris.Idris2.Builtin':'un--snd'(V1004)) end, V11)), [], V991))), case V1005 of {'Idris.Prelude.Types.Left', E877} -> (fun (V1006) -> {'Idris.Prelude.Types.Left', V1006} end(E877)); {'Idris.Prelude.Types.Right', E878} -> (fun (V1007) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1008) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1008)) end, fun (V1009) -> fun (V1010) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1009, V1010)) end end}, V1001)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1011) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1011)) end, fun (V1012) -> fun (V1013) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1012, V1013)) end end}, V1007))))))))} end(E878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E874)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V990))), case V1014 of {'Idris.Prelude.Types.Left', E879} -> (fun (V1015) -> {'Idris.Prelude.Types.Left', V1015} end(E879)); {'Idris.Prelude.Types.Right', E880} -> (fun (V1016) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1017) -> fun (V1018) -> fun (V1019) -> fun (V1020) -> fun (V1021) -> fun (V1022) -> fun (V1023) -> fun (V1024) -> fun (V1025) -> ('dn--un--unifyD_Unify_Closure'(V1017, V1018, V1019, V1020, V1021, V1022, V1023, V1024, V1025)) end end end end end end end end end, fun (V1026) -> fun (V1027) -> fun (V1028) -> fun (V1029) -> fun (V1030) -> fun (V1031) -> fun (V1032) -> fun (V1033) -> fun (V1034) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1026, V1027, V1028, V1029, V1030, V1031, V1032, V1033, V1034)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1035) -> fun (V1036) -> fun (V1037) -> fun (V1038) -> fun (V1039) -> fun (V1040) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1035, V1036, V1037, V1038, V1039, V1040)) end end end end end end, fun (V1041) -> fun (V1042) -> fun (V1043) -> fun (V1044) -> fun (V1045) -> fun (V1046) -> fun (V1047) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1041, V1042, V1043, V1044, V1045, V1046, V1047)) end end end end end end end}}, V2, V0, V1, V987, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1048) -> ('Idris.Idris2.Builtin':'un--snd'(V1048)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1049) -> ('Idris.Idris2.Builtin':'un--snd'(V1049)) end, V11))))(V990)) end(E880)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V987, V4, V5, V6, V988, V8, {'Idris.Core.Value.NApp', V9, V989, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E871, E872)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E869, E870)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E863, E864)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E861, E862)); {'Idris.Core.Value.NMeta', E890, E891, E892} -> (fun (V1050, V1051, V1052) -> case V10 of {'Idris.Core.Value.NMeta', E893, E894, E895} -> (fun (V1053, V1054, V1055) -> fun (V1056) -> begin (V1057 = ('un--isDefInvertible'(V0, V4, V1051, V1056))), case V1057 of {'Idris.Prelude.Types.Left', E896} -> (fun (V1058) -> {'Idris.Prelude.Types.Left', V1058} end(E896)); {'Idris.Prelude.Types.Right', E897} -> (fun (V1059) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1051, V1054)) of 1 -> case V1059 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E904, E905} -> (fun (V1060, V1061) -> V1061 end(E904, E905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1062) -> fun (V1063) -> fun (V1064) -> fun (V1065) -> fun (V1066) -> fun (V1067) -> fun (V1068) -> fun (V1069) -> fun (V1070) -> ('dn--un--unifyD_Unify_Closure'(V1062, V1063, V1064, V1065, V1066, V1067, V1068, V1069, V1070)) end end end end end end end end end, fun (V1071) -> fun (V1072) -> fun (V1073) -> fun (V1074) -> fun (V1075) -> fun (V1076) -> fun (V1077) -> fun (V1078) -> fun (V1079) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1071, V1072, V1073, V1074, V1075, V1076, V1077, V1078, V1079)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1080) -> fun (V1081) -> fun (V1082) -> fun (V1083) -> fun (V1084) -> fun (V1085) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1080, V1081, V1082, V1083, V1084, V1085)) end end end end end end, fun (V1086) -> fun (V1087) -> fun (V1088) -> fun (V1089) -> fun (V1090) -> fun (V1091) -> fun (V1092) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1086, V1087, V1088, V1089, V1090, V1091, V1092)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V1052, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1093) -> ('Idris.Idris2.Builtin':'un--snd'(V1093)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V1055, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1094) -> ('Idris.Idris2.Builtin':'un--snd'(V1094)) end, V11))))))(V1056)); 0 -> begin (V1095 = ('nested--11732-14576--in--un--localsIn'(V2, V1052, V1051, V1050, V1055, V1054, V1053, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1052, V1056))), case V1095 of {'Idris.Prelude.Types.Left', E898} -> (fun (V1096) -> {'Idris.Prelude.Types.Left', V1096} end(E898)); {'Idris.Prelude.Types.Right', E899} -> (fun (V1097) -> begin (V1098 = ('nested--11732-14576--in--un--localsIn'(V2, V1052, V1051, V1050, V1055, V1054, V1053, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1055, V1056))), case V1098 of {'Idris.Prelude.Types.Left', E900} -> (fun (V1099) -> {'Idris.Prelude.Types.Left', V1099} end(E900)); {'Idris.Prelude.Types.Right', E901} -> (fun (V1100) -> begin (V1101 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1097, V1100)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1097, V1100)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V1101 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E902, E903} -> (fun (V1102, V1103) -> V1103 end(E902, E903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V1052, V1051, V1050, V1055, V1054, V1053, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1050)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1050, V1051, V1052}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1053, V1054, V1055}, V11}))(V1056)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V1053, V1054, V1055}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V1050, V1051, V1052}, V8}))(V1056)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E901)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E899)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E897)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E893, E894, E895)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1050, V1051, V1052}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E890, E891, E892)); _ -> case V10 of {'Idris.Core.Value.NMeta', E856, E857, E858} -> (fun (V1104, V1105, V1106) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E859, E860} -> (fun (V1107, V1108) -> V1108 end(E859, E860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1104, V1105, V1106}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1104, V1105, V1106}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E856, E857, E858)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E838, E839} -> (fun (V1109, V1110) -> case V1110 of 3 -> case V7 of {'Idris.Core.Value.NRef', E840, E841} -> (fun (V1111, V1112) -> case V10 of {'Idris.Core.Value.NRef', E842, E843} -> (fun (V1113, V1114) -> begin (V1115 = {'Idris.Core.Unify.MkUnifyInfo', V1109, 3}), begin (V1116 = {'Idris.Core.Value.NRef', V1111, V1112}), begin (V1117 = {'Idris.Core.Value.NRef', V1113, V1114}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1112, V1114)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1118) -> fun (V1119) -> fun (V1120) -> fun (V1121) -> fun (V1122) -> fun (V1123) -> fun (V1124) -> fun (V1125) -> fun (V1126) -> ('dn--un--unifyD_Unify_Closure'(V1118, V1119, V1120, V1121, V1122, V1123, V1124, V1125, V1126)) end end end end end end end end end, fun (V1127) -> fun (V1128) -> fun (V1129) -> fun (V1130) -> fun (V1131) -> fun (V1132) -> fun (V1133) -> fun (V1134) -> fun (V1135) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1127, V1128, V1129, V1130, V1131, V1132, V1133, V1134, V1135)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1136) -> fun (V1137) -> fun (V1138) -> fun (V1139) -> fun (V1140) -> fun (V1141) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1136, V1137, V1138, V1139, V1140, V1141)) end end end end end end, fun (V1142) -> fun (V1143) -> fun (V1144) -> fun (V1145) -> fun (V1146) -> fun (V1147) -> fun (V1148) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1142, V1143, V1144, V1145, V1146, V1147, V1148)) end end end end end end end}}, V2, V0, V1, V1115, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1149) -> ('Idris.Idris2.Builtin':'un--snd'(V1149)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1150) -> ('Idris.Idris2.Builtin':'un--snd'(V1150)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1115, V4, V5, V6, V1116, V8, {'Idris.Core.Value.NApp', V9, V1117, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E842, E843)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E840, E841)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E844, E845} -> (fun (V1151, V1152) -> case V10 of {'Idris.Core.Value.NRef', E846, E847} -> (fun (V1153, V1154) -> begin (V1155 = {'Idris.Core.Unify.MkUnifyInfo', V1109, 2}), begin (V1156 = {'Idris.Core.Value.NRef', V1151, V1152}), begin (V1157 = {'Idris.Core.Value.NRef', V1153, V1154}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1152, V1154)) of 1 -> fun (V1158) -> begin (V1182 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1159) -> begin (V1161 = begin (V1160 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1160} end), case V1161 of {'Idris.Prelude.Types.Left', E848} -> (fun (V1162) -> {'Idris.Prelude.Types.Left', V1162} end(E848)); {'Idris.Prelude.Types.Right', E849} -> (fun (V1163) -> begin (V1167 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1164) -> fun (V1165) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1163, V5, V1164, V1165)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1166) -> ('Idris.Idris2.Builtin':'un--snd'(V1166)) end, V8)), [], V1159))), case V1167 of {'Idris.Prelude.Types.Left', E850} -> (fun (V1168) -> {'Idris.Prelude.Types.Left', V1168} end(E850)); {'Idris.Prelude.Types.Right', E851} -> (fun (V1169) -> begin (V1173 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1170) -> fun (V1171) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1163, V5, V1170, V1171)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1172) -> ('Idris.Idris2.Builtin':'un--snd'(V1172)) end, V11)), [], V1159))), case V1173 of {'Idris.Prelude.Types.Left', E852} -> (fun (V1174) -> {'Idris.Prelude.Types.Left', V1174} end(E852)); {'Idris.Prelude.Types.Right', E853} -> (fun (V1175) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1176) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1176)) end, fun (V1177) -> fun (V1178) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1177, V1178)) end end}, V1169)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1179) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1179)) end, fun (V1180) -> fun (V1181) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1180, V1181)) end end}, V1175))))))))} end(E853)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E849)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1158))), case V1182 of {'Idris.Prelude.Types.Left', E854} -> (fun (V1183) -> {'Idris.Prelude.Types.Left', V1183} end(E854)); {'Idris.Prelude.Types.Right', E855} -> (fun (V1184) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1185) -> fun (V1186) -> fun (V1187) -> fun (V1188) -> fun (V1189) -> fun (V1190) -> fun (V1191) -> fun (V1192) -> fun (V1193) -> ('dn--un--unifyD_Unify_Closure'(V1185, V1186, V1187, V1188, V1189, V1190, V1191, V1192, V1193)) end end end end end end end end end, fun (V1194) -> fun (V1195) -> fun (V1196) -> fun (V1197) -> fun (V1198) -> fun (V1199) -> fun (V1200) -> fun (V1201) -> fun (V1202) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1194, V1195, V1196, V1197, V1198, V1199, V1200, V1201, V1202)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1203) -> fun (V1204) -> fun (V1205) -> fun (V1206) -> fun (V1207) -> fun (V1208) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1203, V1204, V1205, V1206, V1207, V1208)) end end end end end end, fun (V1209) -> fun (V1210) -> fun (V1211) -> fun (V1212) -> fun (V1213) -> fun (V1214) -> fun (V1215) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1209, V1210, V1211, V1212, V1213, V1214, V1215)) end end end end end end end}}, V2, V0, V1, V1155, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1216) -> ('Idris.Idris2.Builtin':'un--snd'(V1216)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1217) -> ('Idris.Idris2.Builtin':'un--snd'(V1217)) end, V11))))(V1158)) end(E855)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1155, V4, V5, V6, V1156, V8, {'Idris.Core.Value.NApp', V9, V1157, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E846, E847)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E844, E845)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E838, E839)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end end(E836, E837)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E626, E627} -> (fun (V1218, V1219) -> case V1219 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E764, E765} -> (fun (V1220, V1221) -> case V10 of {'Idris.Core.Value.NLocal', E834, E835} -> (fun (V1222, V1223) -> begin (V1224 = {'Idris.Core.Unify.MkUnifyInfo', V1218, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1221, V1223)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1225) -> fun (V1226) -> fun (V1227) -> fun (V1228) -> fun (V1229) -> fun (V1230) -> fun (V1231) -> fun (V1232) -> fun (V1233) -> ('dn--un--unifyD_Unify_Closure'(V1225, V1226, V1227, V1228, V1229, V1230, V1231, V1232, V1233)) end end end end end end end end end, fun (V1234) -> fun (V1235) -> fun (V1236) -> fun (V1237) -> fun (V1238) -> fun (V1239) -> fun (V1240) -> fun (V1241) -> fun (V1242) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1234, V1235, V1236, V1237, V1238, V1239, V1240, V1241, V1242)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1243) -> fun (V1244) -> fun (V1245) -> fun (V1246) -> fun (V1247) -> fun (V1248) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1243, V1244, V1245, V1246, V1247, V1248)) end end end end end end, fun (V1249) -> fun (V1250) -> fun (V1251) -> fun (V1252) -> fun (V1253) -> fun (V1254) -> fun (V1255) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1249, V1250, V1251, V1252, V1253, V1254, V1255)) end end end end end end end}}, V2, V0, V1, V1224, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1256) -> ('Idris.Idris2.Builtin':'un--snd'(V1256)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1257) -> ('Idris.Idris2.Builtin':'un--snd'(V1257)) end, V11)))); 0 -> fun (V1258) -> ('un--postpone'(V2, V0, V1, V4, V1224, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1220, V1221}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1222, V1223}, V11}, V1258)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E834, E835)); _ -> case V7 of {'Idris.Core.Value.NLocal', E789, E790} -> (fun (V1259, V1260) -> case V10 of {'Idris.Core.Value.NLocal', E814, E815} -> (fun (V1261, V1262) -> fun (V1263) -> begin (V1264 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V1263))), case V1264 of {'Idris.Prelude.Types.Left', E816} -> (fun (V1265) -> {'Idris.Prelude.Types.Left', V1265} end(E816)); {'Idris.Prelude.Types.Right', E817} -> (fun (V1266) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1259, V1260}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1261, V1262}, V11}, V1263)) end(E817)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E814, E815)); _ -> case V10 of {'Idris.Core.Value.NMeta', E809, E810, E811} -> (fun (V1267, V1268, V1269) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E812, E813} -> (fun (V1270, V1271) -> V1271 end(E812, E813)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1267, V1268, V1269}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1267, V1268, V1269}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E809, E810, E811)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E791, E792} -> (fun (V1272, V1273) -> case V1273 of 3 -> case V7 of {'Idris.Core.Value.NRef', E793, E794} -> (fun (V1274, V1275) -> case V10 of {'Idris.Core.Value.NRef', E795, E796} -> (fun (V1276, V1277) -> begin (V1278 = {'Idris.Core.Unify.MkUnifyInfo', V1272, 3}), begin (V1279 = {'Idris.Core.Value.NRef', V1274, V1275}), begin (V1280 = {'Idris.Core.Value.NRef', V1276, V1277}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1275, V1277)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1281) -> fun (V1282) -> fun (V1283) -> fun (V1284) -> fun (V1285) -> fun (V1286) -> fun (V1287) -> fun (V1288) -> fun (V1289) -> ('dn--un--unifyD_Unify_Closure'(V1281, V1282, V1283, V1284, V1285, V1286, V1287, V1288, V1289)) end end end end end end end end end, fun (V1290) -> fun (V1291) -> fun (V1292) -> fun (V1293) -> fun (V1294) -> fun (V1295) -> fun (V1296) -> fun (V1297) -> fun (V1298) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1290, V1291, V1292, V1293, V1294, V1295, V1296, V1297, V1298)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1299) -> fun (V1300) -> fun (V1301) -> fun (V1302) -> fun (V1303) -> fun (V1304) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1299, V1300, V1301, V1302, V1303, V1304)) end end end end end end, fun (V1305) -> fun (V1306) -> fun (V1307) -> fun (V1308) -> fun (V1309) -> fun (V1310) -> fun (V1311) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1305, V1306, V1307, V1308, V1309, V1310, V1311)) end end end end end end end}}, V2, V0, V1, V1278, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1312) -> ('Idris.Idris2.Builtin':'un--snd'(V1312)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1313) -> ('Idris.Idris2.Builtin':'un--snd'(V1313)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1278, V4, V5, V6, V1279, V8, {'Idris.Core.Value.NApp', V9, V1280, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E795, E796)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E793, E794)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E797, E798} -> (fun (V1314, V1315) -> case V10 of {'Idris.Core.Value.NRef', E799, E800} -> (fun (V1316, V1317) -> begin (V1318 = {'Idris.Core.Unify.MkUnifyInfo', V1272, 2}), begin (V1319 = {'Idris.Core.Value.NRef', V1314, V1315}), begin (V1320 = {'Idris.Core.Value.NRef', V1316, V1317}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1315, V1317)) of 1 -> fun (V1321) -> begin (V1345 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1322) -> begin (V1324 = begin (V1323 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1323} end), case V1324 of {'Idris.Prelude.Types.Left', E801} -> (fun (V1325) -> {'Idris.Prelude.Types.Left', V1325} end(E801)); {'Idris.Prelude.Types.Right', E802} -> (fun (V1326) -> begin (V1330 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1327) -> fun (V1328) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1326, V5, V1327, V1328)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1329) -> ('Idris.Idris2.Builtin':'un--snd'(V1329)) end, V8)), [], V1322))), case V1330 of {'Idris.Prelude.Types.Left', E803} -> (fun (V1331) -> {'Idris.Prelude.Types.Left', V1331} end(E803)); {'Idris.Prelude.Types.Right', E804} -> (fun (V1332) -> begin (V1336 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1333) -> fun (V1334) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1326, V5, V1333, V1334)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1335) -> ('Idris.Idris2.Builtin':'un--snd'(V1335)) end, V11)), [], V1322))), case V1336 of {'Idris.Prelude.Types.Left', E805} -> (fun (V1337) -> {'Idris.Prelude.Types.Left', V1337} end(E805)); {'Idris.Prelude.Types.Right', E806} -> (fun (V1338) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1339) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1339)) end, fun (V1340) -> fun (V1341) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1340, V1341)) end end}, V1332)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1342) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1342)) end, fun (V1343) -> fun (V1344) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1343, V1344)) end end}, V1338))))))))} end(E806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E802)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1321))), case V1345 of {'Idris.Prelude.Types.Left', E807} -> (fun (V1346) -> {'Idris.Prelude.Types.Left', V1346} end(E807)); {'Idris.Prelude.Types.Right', E808} -> (fun (V1347) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1348) -> fun (V1349) -> fun (V1350) -> fun (V1351) -> fun (V1352) -> fun (V1353) -> fun (V1354) -> fun (V1355) -> fun (V1356) -> ('dn--un--unifyD_Unify_Closure'(V1348, V1349, V1350, V1351, V1352, V1353, V1354, V1355, V1356)) end end end end end end end end end, fun (V1357) -> fun (V1358) -> fun (V1359) -> fun (V1360) -> fun (V1361) -> fun (V1362) -> fun (V1363) -> fun (V1364) -> fun (V1365) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1357, V1358, V1359, V1360, V1361, V1362, V1363, V1364, V1365)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1366) -> fun (V1367) -> fun (V1368) -> fun (V1369) -> fun (V1370) -> fun (V1371) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1366, V1367, V1368, V1369, V1370, V1371)) end end end end end end, fun (V1372) -> fun (V1373) -> fun (V1374) -> fun (V1375) -> fun (V1376) -> fun (V1377) -> fun (V1378) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1372, V1373, V1374, V1375, V1376, V1377, V1378)) end end end end end end end}}, V2, V0, V1, V1318, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1379) -> ('Idris.Idris2.Builtin':'un--snd'(V1379)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1380) -> ('Idris.Idris2.Builtin':'un--snd'(V1380)) end, V11))))(V1321)) end(E808)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1318, V4, V5, V6, V1319, V8, {'Idris.Core.Value.NApp', V9, V1320, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E799, E800)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E797, E798)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E791, E792)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E789, E790)); {'Idris.Core.Value.NMeta', E818, E819, E820} -> (fun (V1381, V1382, V1383) -> case V10 of {'Idris.Core.Value.NMeta', E821, E822, E823} -> (fun (V1384, V1385, V1386) -> fun (V1387) -> begin (V1388 = ('un--isDefInvertible'(V0, V4, V1382, V1387))), case V1388 of {'Idris.Prelude.Types.Left', E824} -> (fun (V1389) -> {'Idris.Prelude.Types.Left', V1389} end(E824)); {'Idris.Prelude.Types.Right', E825} -> (fun (V1390) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1382, V1385)) of 1 -> case V1390 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E832, E833} -> (fun (V1391, V1392) -> V1392 end(E832, E833)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1393) -> fun (V1394) -> fun (V1395) -> fun (V1396) -> fun (V1397) -> fun (V1398) -> fun (V1399) -> fun (V1400) -> fun (V1401) -> ('dn--un--unifyD_Unify_Closure'(V1393, V1394, V1395, V1396, V1397, V1398, V1399, V1400, V1401)) end end end end end end end end end, fun (V1402) -> fun (V1403) -> fun (V1404) -> fun (V1405) -> fun (V1406) -> fun (V1407) -> fun (V1408) -> fun (V1409) -> fun (V1410) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1402, V1403, V1404, V1405, V1406, V1407, V1408, V1409, V1410)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1411) -> fun (V1412) -> fun (V1413) -> fun (V1414) -> fun (V1415) -> fun (V1416) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1411, V1412, V1413, V1414, V1415, V1416)) end end end end end end, fun (V1417) -> fun (V1418) -> fun (V1419) -> fun (V1420) -> fun (V1421) -> fun (V1422) -> fun (V1423) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1417, V1418, V1419, V1420, V1421, V1422, V1423)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V1383, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1424) -> ('Idris.Idris2.Builtin':'un--snd'(V1424)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V1386, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1425) -> ('Idris.Idris2.Builtin':'un--snd'(V1425)) end, V11))))))(V1387)); 0 -> begin (V1426 = ('nested--11732-14576--in--un--localsIn'(V2, V1383, V1382, V1381, V1386, V1385, V1384, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1383, V1387))), case V1426 of {'Idris.Prelude.Types.Left', E826} -> (fun (V1427) -> {'Idris.Prelude.Types.Left', V1427} end(E826)); {'Idris.Prelude.Types.Right', E827} -> (fun (V1428) -> begin (V1429 = ('nested--11732-14576--in--un--localsIn'(V2, V1383, V1382, V1381, V1386, V1385, V1384, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1386, V1387))), case V1429 of {'Idris.Prelude.Types.Left', E828} -> (fun (V1430) -> {'Idris.Prelude.Types.Left', V1430} end(E828)); {'Idris.Prelude.Types.Right', E829} -> (fun (V1431) -> begin (V1432 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1428, V1431)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1428, V1431)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V1432 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E830, E831} -> (fun (V1433, V1434) -> V1434 end(E830, E831)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V1383, V1382, V1381, V1386, V1385, V1384, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1381)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1381, V1382, V1383}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1384, V1385, V1386}, V11}))(V1387)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V1384, V1385, V1386}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V1381, V1382, V1383}, V8}))(V1387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E827)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E825)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E821, E822, E823)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1381, V1382, V1383}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E818, E819, E820)); _ -> case V10 of {'Idris.Core.Value.NMeta', E784, E785, E786} -> (fun (V1435, V1436, V1437) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E787, E788} -> (fun (V1438, V1439) -> V1439 end(E787, E788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1435, V1436, V1437}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1435, V1436, V1437}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E784, E785, E786)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E766, E767} -> (fun (V1440, V1441) -> case V1441 of 3 -> case V7 of {'Idris.Core.Value.NRef', E768, E769} -> (fun (V1442, V1443) -> case V10 of {'Idris.Core.Value.NRef', E770, E771} -> (fun (V1444, V1445) -> begin (V1446 = {'Idris.Core.Unify.MkUnifyInfo', V1440, 3}), begin (V1447 = {'Idris.Core.Value.NRef', V1442, V1443}), begin (V1448 = {'Idris.Core.Value.NRef', V1444, V1445}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1443, V1445)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1449) -> fun (V1450) -> fun (V1451) -> fun (V1452) -> fun (V1453) -> fun (V1454) -> fun (V1455) -> fun (V1456) -> fun (V1457) -> ('dn--un--unifyD_Unify_Closure'(V1449, V1450, V1451, V1452, V1453, V1454, V1455, V1456, V1457)) end end end end end end end end end, fun (V1458) -> fun (V1459) -> fun (V1460) -> fun (V1461) -> fun (V1462) -> fun (V1463) -> fun (V1464) -> fun (V1465) -> fun (V1466) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1458, V1459, V1460, V1461, V1462, V1463, V1464, V1465, V1466)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1467) -> fun (V1468) -> fun (V1469) -> fun (V1470) -> fun (V1471) -> fun (V1472) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1467, V1468, V1469, V1470, V1471, V1472)) end end end end end end, fun (V1473) -> fun (V1474) -> fun (V1475) -> fun (V1476) -> fun (V1477) -> fun (V1478) -> fun (V1479) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1473, V1474, V1475, V1476, V1477, V1478, V1479)) end end end end end end end}}, V2, V0, V1, V1446, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1480) -> ('Idris.Idris2.Builtin':'un--snd'(V1480)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1481) -> ('Idris.Idris2.Builtin':'un--snd'(V1481)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1446, V4, V5, V6, V1447, V8, {'Idris.Core.Value.NApp', V9, V1448, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E770, E771)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E768, E769)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E772, E773} -> (fun (V1482, V1483) -> case V10 of {'Idris.Core.Value.NRef', E774, E775} -> (fun (V1484, V1485) -> begin (V1486 = {'Idris.Core.Unify.MkUnifyInfo', V1440, 2}), begin (V1487 = {'Idris.Core.Value.NRef', V1482, V1483}), begin (V1488 = {'Idris.Core.Value.NRef', V1484, V1485}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1483, V1485)) of 1 -> fun (V1489) -> begin (V1513 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1490) -> begin (V1492 = begin (V1491 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1491} end), case V1492 of {'Idris.Prelude.Types.Left', E776} -> (fun (V1493) -> {'Idris.Prelude.Types.Left', V1493} end(E776)); {'Idris.Prelude.Types.Right', E777} -> (fun (V1494) -> begin (V1498 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1495) -> fun (V1496) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1494, V5, V1495, V1496)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1497) -> ('Idris.Idris2.Builtin':'un--snd'(V1497)) end, V8)), [], V1490))), case V1498 of {'Idris.Prelude.Types.Left', E778} -> (fun (V1499) -> {'Idris.Prelude.Types.Left', V1499} end(E778)); {'Idris.Prelude.Types.Right', E779} -> (fun (V1500) -> begin (V1504 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1501) -> fun (V1502) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1494, V5, V1501, V1502)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1503) -> ('Idris.Idris2.Builtin':'un--snd'(V1503)) end, V11)), [], V1490))), case V1504 of {'Idris.Prelude.Types.Left', E780} -> (fun (V1505) -> {'Idris.Prelude.Types.Left', V1505} end(E780)); {'Idris.Prelude.Types.Right', E781} -> (fun (V1506) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1507) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1507)) end, fun (V1508) -> fun (V1509) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1508, V1509)) end end}, V1500)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1510) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1510)) end, fun (V1511) -> fun (V1512) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1511, V1512)) end end}, V1506))))))))} end(E781)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E779)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E777)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1489))), case V1513 of {'Idris.Prelude.Types.Left', E782} -> (fun (V1514) -> {'Idris.Prelude.Types.Left', V1514} end(E782)); {'Idris.Prelude.Types.Right', E783} -> (fun (V1515) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1516) -> fun (V1517) -> fun (V1518) -> fun (V1519) -> fun (V1520) -> fun (V1521) -> fun (V1522) -> fun (V1523) -> fun (V1524) -> ('dn--un--unifyD_Unify_Closure'(V1516, V1517, V1518, V1519, V1520, V1521, V1522, V1523, V1524)) end end end end end end end end end, fun (V1525) -> fun (V1526) -> fun (V1527) -> fun (V1528) -> fun (V1529) -> fun (V1530) -> fun (V1531) -> fun (V1532) -> fun (V1533) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1525, V1526, V1527, V1528, V1529, V1530, V1531, V1532, V1533)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1534) -> fun (V1535) -> fun (V1536) -> fun (V1537) -> fun (V1538) -> fun (V1539) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1534, V1535, V1536, V1537, V1538, V1539)) end end end end end end, fun (V1540) -> fun (V1541) -> fun (V1542) -> fun (V1543) -> fun (V1544) -> fun (V1545) -> fun (V1546) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1540, V1541, V1542, V1543, V1544, V1545, V1546)) end end end end end end end}}, V2, V0, V1, V1486, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1547) -> ('Idris.Idris2.Builtin':'un--snd'(V1547)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1548) -> ('Idris.Idris2.Builtin':'un--snd'(V1548)) end, V11))))(V1489)) end(E783)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1486, V4, V5, V6, V1487, V8, {'Idris.Core.Value.NApp', V9, V1488, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E774, E775)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E772, E773)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E766, E767)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E764, E765)); _ -> case V7 of {'Idris.Core.Value.NLocal', E719, E720} -> (fun (V1549, V1550) -> case V10 of {'Idris.Core.Value.NLocal', E744, E745} -> (fun (V1551, V1552) -> fun (V1553) -> begin (V1554 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V1553))), case V1554 of {'Idris.Prelude.Types.Left', E746} -> (fun (V1555) -> {'Idris.Prelude.Types.Left', V1555} end(E746)); {'Idris.Prelude.Types.Right', E747} -> (fun (V1556) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1549, V1550}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1551, V1552}, V11}, V1553)) end(E747)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E744, E745)); _ -> case V10 of {'Idris.Core.Value.NMeta', E739, E740, E741} -> (fun (V1557, V1558, V1559) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E742, E743} -> (fun (V1560, V1561) -> V1561 end(E742, E743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1557, V1558, V1559}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1557, V1558, V1559}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E739, E740, E741)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E721, E722} -> (fun (V1562, V1563) -> case V1563 of 3 -> case V7 of {'Idris.Core.Value.NRef', E723, E724} -> (fun (V1564, V1565) -> case V10 of {'Idris.Core.Value.NRef', E725, E726} -> (fun (V1566, V1567) -> begin (V1568 = {'Idris.Core.Unify.MkUnifyInfo', V1562, 3}), begin (V1569 = {'Idris.Core.Value.NRef', V1564, V1565}), begin (V1570 = {'Idris.Core.Value.NRef', V1566, V1567}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1565, V1567)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1571) -> fun (V1572) -> fun (V1573) -> fun (V1574) -> fun (V1575) -> fun (V1576) -> fun (V1577) -> fun (V1578) -> fun (V1579) -> ('dn--un--unifyD_Unify_Closure'(V1571, V1572, V1573, V1574, V1575, V1576, V1577, V1578, V1579)) end end end end end end end end end, fun (V1580) -> fun (V1581) -> fun (V1582) -> fun (V1583) -> fun (V1584) -> fun (V1585) -> fun (V1586) -> fun (V1587) -> fun (V1588) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1580, V1581, V1582, V1583, V1584, V1585, V1586, V1587, V1588)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1589) -> fun (V1590) -> fun (V1591) -> fun (V1592) -> fun (V1593) -> fun (V1594) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1589, V1590, V1591, V1592, V1593, V1594)) end end end end end end, fun (V1595) -> fun (V1596) -> fun (V1597) -> fun (V1598) -> fun (V1599) -> fun (V1600) -> fun (V1601) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1595, V1596, V1597, V1598, V1599, V1600, V1601)) end end end end end end end}}, V2, V0, V1, V1568, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1602) -> ('Idris.Idris2.Builtin':'un--snd'(V1602)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1603) -> ('Idris.Idris2.Builtin':'un--snd'(V1603)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1568, V4, V5, V6, V1569, V8, {'Idris.Core.Value.NApp', V9, V1570, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E725, E726)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E723, E724)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E727, E728} -> (fun (V1604, V1605) -> case V10 of {'Idris.Core.Value.NRef', E729, E730} -> (fun (V1606, V1607) -> begin (V1608 = {'Idris.Core.Unify.MkUnifyInfo', V1562, 2}), begin (V1609 = {'Idris.Core.Value.NRef', V1604, V1605}), begin (V1610 = {'Idris.Core.Value.NRef', V1606, V1607}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1605, V1607)) of 1 -> fun (V1611) -> begin (V1635 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1612) -> begin (V1614 = begin (V1613 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1613} end), case V1614 of {'Idris.Prelude.Types.Left', E731} -> (fun (V1615) -> {'Idris.Prelude.Types.Left', V1615} end(E731)); {'Idris.Prelude.Types.Right', E732} -> (fun (V1616) -> begin (V1620 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1617) -> fun (V1618) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1616, V5, V1617, V1618)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1619) -> ('Idris.Idris2.Builtin':'un--snd'(V1619)) end, V8)), [], V1612))), case V1620 of {'Idris.Prelude.Types.Left', E733} -> (fun (V1621) -> {'Idris.Prelude.Types.Left', V1621} end(E733)); {'Idris.Prelude.Types.Right', E734} -> (fun (V1622) -> begin (V1626 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1623) -> fun (V1624) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1616, V5, V1623, V1624)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1625) -> ('Idris.Idris2.Builtin':'un--snd'(V1625)) end, V11)), [], V1612))), case V1626 of {'Idris.Prelude.Types.Left', E735} -> (fun (V1627) -> {'Idris.Prelude.Types.Left', V1627} end(E735)); {'Idris.Prelude.Types.Right', E736} -> (fun (V1628) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1629) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1629)) end, fun (V1630) -> fun (V1631) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1630, V1631)) end end}, V1622)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1632) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1632)) end, fun (V1633) -> fun (V1634) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1633, V1634)) end end}, V1628))))))))} end(E736)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1611))), case V1635 of {'Idris.Prelude.Types.Left', E737} -> (fun (V1636) -> {'Idris.Prelude.Types.Left', V1636} end(E737)); {'Idris.Prelude.Types.Right', E738} -> (fun (V1637) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1638) -> fun (V1639) -> fun (V1640) -> fun (V1641) -> fun (V1642) -> fun (V1643) -> fun (V1644) -> fun (V1645) -> fun (V1646) -> ('dn--un--unifyD_Unify_Closure'(V1638, V1639, V1640, V1641, V1642, V1643, V1644, V1645, V1646)) end end end end end end end end end, fun (V1647) -> fun (V1648) -> fun (V1649) -> fun (V1650) -> fun (V1651) -> fun (V1652) -> fun (V1653) -> fun (V1654) -> fun (V1655) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1647, V1648, V1649, V1650, V1651, V1652, V1653, V1654, V1655)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1656) -> fun (V1657) -> fun (V1658) -> fun (V1659) -> fun (V1660) -> fun (V1661) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1656, V1657, V1658, V1659, V1660, V1661)) end end end end end end, fun (V1662) -> fun (V1663) -> fun (V1664) -> fun (V1665) -> fun (V1666) -> fun (V1667) -> fun (V1668) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1662, V1663, V1664, V1665, V1666, V1667, V1668)) end end end end end end end}}, V2, V0, V1, V1608, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1669) -> ('Idris.Idris2.Builtin':'un--snd'(V1669)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1670) -> ('Idris.Idris2.Builtin':'un--snd'(V1670)) end, V11))))(V1611)) end(E738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1608, V4, V5, V6, V1609, V8, {'Idris.Core.Value.NApp', V9, V1610, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E729, E730)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E727, E728)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E721, E722)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E719, E720)); {'Idris.Core.Value.NMeta', E748, E749, E750} -> (fun (V1671, V1672, V1673) -> case V10 of {'Idris.Core.Value.NMeta', E751, E752, E753} -> (fun (V1674, V1675, V1676) -> fun (V1677) -> begin (V1678 = ('un--isDefInvertible'(V0, V4, V1672, V1677))), case V1678 of {'Idris.Prelude.Types.Left', E754} -> (fun (V1679) -> {'Idris.Prelude.Types.Left', V1679} end(E754)); {'Idris.Prelude.Types.Right', E755} -> (fun (V1680) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1672, V1675)) of 1 -> case V1680 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E762, E763} -> (fun (V1681, V1682) -> V1682 end(E762, E763)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1683) -> fun (V1684) -> fun (V1685) -> fun (V1686) -> fun (V1687) -> fun (V1688) -> fun (V1689) -> fun (V1690) -> fun (V1691) -> ('dn--un--unifyD_Unify_Closure'(V1683, V1684, V1685, V1686, V1687, V1688, V1689, V1690, V1691)) end end end end end end end end end, fun (V1692) -> fun (V1693) -> fun (V1694) -> fun (V1695) -> fun (V1696) -> fun (V1697) -> fun (V1698) -> fun (V1699) -> fun (V1700) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1692, V1693, V1694, V1695, V1696, V1697, V1698, V1699, V1700)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1701) -> fun (V1702) -> fun (V1703) -> fun (V1704) -> fun (V1705) -> fun (V1706) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1701, V1702, V1703, V1704, V1705, V1706)) end end end end end end, fun (V1707) -> fun (V1708) -> fun (V1709) -> fun (V1710) -> fun (V1711) -> fun (V1712) -> fun (V1713) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1707, V1708, V1709, V1710, V1711, V1712, V1713)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V1673, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1714) -> ('Idris.Idris2.Builtin':'un--snd'(V1714)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V1676, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1715) -> ('Idris.Idris2.Builtin':'un--snd'(V1715)) end, V11))))))(V1677)); 0 -> begin (V1716 = ('nested--11732-14576--in--un--localsIn'(V2, V1673, V1672, V1671, V1676, V1675, V1674, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1673, V1677))), case V1716 of {'Idris.Prelude.Types.Left', E756} -> (fun (V1717) -> {'Idris.Prelude.Types.Left', V1717} end(E756)); {'Idris.Prelude.Types.Right', E757} -> (fun (V1718) -> begin (V1719 = ('nested--11732-14576--in--un--localsIn'(V2, V1673, V1672, V1671, V1676, V1675, V1674, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1676, V1677))), case V1719 of {'Idris.Prelude.Types.Left', E758} -> (fun (V1720) -> {'Idris.Prelude.Types.Left', V1720} end(E758)); {'Idris.Prelude.Types.Right', E759} -> (fun (V1721) -> begin (V1722 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1718, V1721)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1718, V1721)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V1722 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E760, E761} -> (fun (V1723, V1724) -> V1724 end(E760, E761)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V1673, V1672, V1671, V1676, V1675, V1674, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1671)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1671, V1672, V1673}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1674, V1675, V1676}, V11}))(V1677)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V1674, V1675, V1676}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V1671, V1672, V1673}, V8}))(V1677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E755)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E751, E752, E753)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1671, V1672, V1673}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E748, E749, E750)); _ -> case V10 of {'Idris.Core.Value.NMeta', E714, E715, E716} -> (fun (V1725, V1726, V1727) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E717, E718} -> (fun (V1728, V1729) -> V1729 end(E717, E718)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1725, V1726, V1727}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1725, V1726, V1727}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E714, E715, E716)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E696, E697} -> (fun (V1730, V1731) -> case V1731 of 3 -> case V7 of {'Idris.Core.Value.NRef', E698, E699} -> (fun (V1732, V1733) -> case V10 of {'Idris.Core.Value.NRef', E700, E701} -> (fun (V1734, V1735) -> begin (V1736 = {'Idris.Core.Unify.MkUnifyInfo', V1730, 3}), begin (V1737 = {'Idris.Core.Value.NRef', V1732, V1733}), begin (V1738 = {'Idris.Core.Value.NRef', V1734, V1735}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1733, V1735)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1739) -> fun (V1740) -> fun (V1741) -> fun (V1742) -> fun (V1743) -> fun (V1744) -> fun (V1745) -> fun (V1746) -> fun (V1747) -> ('dn--un--unifyD_Unify_Closure'(V1739, V1740, V1741, V1742, V1743, V1744, V1745, V1746, V1747)) end end end end end end end end end, fun (V1748) -> fun (V1749) -> fun (V1750) -> fun (V1751) -> fun (V1752) -> fun (V1753) -> fun (V1754) -> fun (V1755) -> fun (V1756) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1748, V1749, V1750, V1751, V1752, V1753, V1754, V1755, V1756)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1757) -> fun (V1758) -> fun (V1759) -> fun (V1760) -> fun (V1761) -> fun (V1762) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1757, V1758, V1759, V1760, V1761, V1762)) end end end end end end, fun (V1763) -> fun (V1764) -> fun (V1765) -> fun (V1766) -> fun (V1767) -> fun (V1768) -> fun (V1769) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1763, V1764, V1765, V1766, V1767, V1768, V1769)) end end end end end end end}}, V2, V0, V1, V1736, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1770) -> ('Idris.Idris2.Builtin':'un--snd'(V1770)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1771) -> ('Idris.Idris2.Builtin':'un--snd'(V1771)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1736, V4, V5, V6, V1737, V8, {'Idris.Core.Value.NApp', V9, V1738, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E700, E701)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E698, E699)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E702, E703} -> (fun (V1772, V1773) -> case V10 of {'Idris.Core.Value.NRef', E704, E705} -> (fun (V1774, V1775) -> begin (V1776 = {'Idris.Core.Unify.MkUnifyInfo', V1730, 2}), begin (V1777 = {'Idris.Core.Value.NRef', V1772, V1773}), begin (V1778 = {'Idris.Core.Value.NRef', V1774, V1775}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1773, V1775)) of 1 -> fun (V1779) -> begin (V1803 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1780) -> begin (V1782 = begin (V1781 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1781} end), case V1782 of {'Idris.Prelude.Types.Left', E706} -> (fun (V1783) -> {'Idris.Prelude.Types.Left', V1783} end(E706)); {'Idris.Prelude.Types.Right', E707} -> (fun (V1784) -> begin (V1788 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1785) -> fun (V1786) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1784, V5, V1785, V1786)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1787) -> ('Idris.Idris2.Builtin':'un--snd'(V1787)) end, V8)), [], V1780))), case V1788 of {'Idris.Prelude.Types.Left', E708} -> (fun (V1789) -> {'Idris.Prelude.Types.Left', V1789} end(E708)); {'Idris.Prelude.Types.Right', E709} -> (fun (V1790) -> begin (V1794 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1791) -> fun (V1792) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1784, V5, V1791, V1792)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1793) -> ('Idris.Idris2.Builtin':'un--snd'(V1793)) end, V11)), [], V1780))), case V1794 of {'Idris.Prelude.Types.Left', E710} -> (fun (V1795) -> {'Idris.Prelude.Types.Left', V1795} end(E710)); {'Idris.Prelude.Types.Right', E711} -> (fun (V1796) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1797) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1797)) end, fun (V1798) -> fun (V1799) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1798, V1799)) end end}, V1790)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1800) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1800)) end, fun (V1801) -> fun (V1802) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1801, V1802)) end end}, V1796))))))))} end(E711)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E709)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1779))), case V1803 of {'Idris.Prelude.Types.Left', E712} -> (fun (V1804) -> {'Idris.Prelude.Types.Left', V1804} end(E712)); {'Idris.Prelude.Types.Right', E713} -> (fun (V1805) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1806) -> fun (V1807) -> fun (V1808) -> fun (V1809) -> fun (V1810) -> fun (V1811) -> fun (V1812) -> fun (V1813) -> fun (V1814) -> ('dn--un--unifyD_Unify_Closure'(V1806, V1807, V1808, V1809, V1810, V1811, V1812, V1813, V1814)) end end end end end end end end end, fun (V1815) -> fun (V1816) -> fun (V1817) -> fun (V1818) -> fun (V1819) -> fun (V1820) -> fun (V1821) -> fun (V1822) -> fun (V1823) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1815, V1816, V1817, V1818, V1819, V1820, V1821, V1822, V1823)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1824) -> fun (V1825) -> fun (V1826) -> fun (V1827) -> fun (V1828) -> fun (V1829) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1824, V1825, V1826, V1827, V1828, V1829)) end end end end end end, fun (V1830) -> fun (V1831) -> fun (V1832) -> fun (V1833) -> fun (V1834) -> fun (V1835) -> fun (V1836) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1830, V1831, V1832, V1833, V1834, V1835, V1836)) end end end end end end end}}, V2, V0, V1, V1776, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1837) -> ('Idris.Idris2.Builtin':'un--snd'(V1837)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1838) -> ('Idris.Idris2.Builtin':'un--snd'(V1838)) end, V11))))(V1779)) end(E713)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1776, V4, V5, V6, V1777, V8, {'Idris.Core.Value.NApp', V9, V1778, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E704, E705)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E702, E703)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E696, E697)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E651, E652} -> (fun (V1839, V1840) -> case V10 of {'Idris.Core.Value.NLocal', E676, E677} -> (fun (V1841, V1842) -> fun (V1843) -> begin (V1844 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V1843))), case V1844 of {'Idris.Prelude.Types.Left', E678} -> (fun (V1845) -> {'Idris.Prelude.Types.Left', V1845} end(E678)); {'Idris.Prelude.Types.Right', E679} -> (fun (V1846) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1839, V1840}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1841, V1842}, V11}, V1843)) end(E679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E676, E677)); _ -> case V10 of {'Idris.Core.Value.NMeta', E671, E672, E673} -> (fun (V1847, V1848, V1849) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E674, E675} -> (fun (V1850, V1851) -> V1851 end(E674, E675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1847, V1848, V1849}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1847, V1848, V1849}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E671, E672, E673)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E653, E654} -> (fun (V1852, V1853) -> case V1853 of 3 -> case V7 of {'Idris.Core.Value.NRef', E655, E656} -> (fun (V1854, V1855) -> case V10 of {'Idris.Core.Value.NRef', E657, E658} -> (fun (V1856, V1857) -> begin (V1858 = {'Idris.Core.Unify.MkUnifyInfo', V1852, 3}), begin (V1859 = {'Idris.Core.Value.NRef', V1854, V1855}), begin (V1860 = {'Idris.Core.Value.NRef', V1856, V1857}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1855, V1857)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1861) -> fun (V1862) -> fun (V1863) -> fun (V1864) -> fun (V1865) -> fun (V1866) -> fun (V1867) -> fun (V1868) -> fun (V1869) -> ('dn--un--unifyD_Unify_Closure'(V1861, V1862, V1863, V1864, V1865, V1866, V1867, V1868, V1869)) end end end end end end end end end, fun (V1870) -> fun (V1871) -> fun (V1872) -> fun (V1873) -> fun (V1874) -> fun (V1875) -> fun (V1876) -> fun (V1877) -> fun (V1878) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1870, V1871, V1872, V1873, V1874, V1875, V1876, V1877, V1878)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1879) -> fun (V1880) -> fun (V1881) -> fun (V1882) -> fun (V1883) -> fun (V1884) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1879, V1880, V1881, V1882, V1883, V1884)) end end end end end end, fun (V1885) -> fun (V1886) -> fun (V1887) -> fun (V1888) -> fun (V1889) -> fun (V1890) -> fun (V1891) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1885, V1886, V1887, V1888, V1889, V1890, V1891)) end end end end end end end}}, V2, V0, V1, V1858, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1892) -> ('Idris.Idris2.Builtin':'un--snd'(V1892)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1893) -> ('Idris.Idris2.Builtin':'un--snd'(V1893)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1858, V4, V5, V6, V1859, V8, {'Idris.Core.Value.NApp', V9, V1860, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E657, E658)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E655, E656)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E659, E660} -> (fun (V1894, V1895) -> case V10 of {'Idris.Core.Value.NRef', E661, E662} -> (fun (V1896, V1897) -> begin (V1898 = {'Idris.Core.Unify.MkUnifyInfo', V1852, 2}), begin (V1899 = {'Idris.Core.Value.NRef', V1894, V1895}), begin (V1900 = {'Idris.Core.Value.NRef', V1896, V1897}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1895, V1897)) of 1 -> fun (V1901) -> begin (V1925 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1902) -> begin (V1904 = begin (V1903 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1903} end), case V1904 of {'Idris.Prelude.Types.Left', E663} -> (fun (V1905) -> {'Idris.Prelude.Types.Left', V1905} end(E663)); {'Idris.Prelude.Types.Right', E664} -> (fun (V1906) -> begin (V1910 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1907) -> fun (V1908) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1906, V5, V1907, V1908)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1909) -> ('Idris.Idris2.Builtin':'un--snd'(V1909)) end, V8)), [], V1902))), case V1910 of {'Idris.Prelude.Types.Left', E665} -> (fun (V1911) -> {'Idris.Prelude.Types.Left', V1911} end(E665)); {'Idris.Prelude.Types.Right', E666} -> (fun (V1912) -> begin (V1916 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1913) -> fun (V1914) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V1906, V5, V1913, V1914)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1915) -> ('Idris.Idris2.Builtin':'un--snd'(V1915)) end, V11)), [], V1902))), case V1916 of {'Idris.Prelude.Types.Left', E667} -> (fun (V1917) -> {'Idris.Prelude.Types.Left', V1917} end(E667)); {'Idris.Prelude.Types.Right', E668} -> (fun (V1918) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1919) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1919)) end, fun (V1920) -> fun (V1921) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1920, V1921)) end end}, V1912)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1922) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1922)) end, fun (V1923) -> fun (V1924) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1923, V1924)) end end}, V1918))))))))} end(E668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E666)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1901))), case V1925 of {'Idris.Prelude.Types.Left', E669} -> (fun (V1926) -> {'Idris.Prelude.Types.Left', V1926} end(E669)); {'Idris.Prelude.Types.Right', E670} -> (fun (V1927) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1928) -> fun (V1929) -> fun (V1930) -> fun (V1931) -> fun (V1932) -> fun (V1933) -> fun (V1934) -> fun (V1935) -> fun (V1936) -> ('dn--un--unifyD_Unify_Closure'(V1928, V1929, V1930, V1931, V1932, V1933, V1934, V1935, V1936)) end end end end end end end end end, fun (V1937) -> fun (V1938) -> fun (V1939) -> fun (V1940) -> fun (V1941) -> fun (V1942) -> fun (V1943) -> fun (V1944) -> fun (V1945) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1937, V1938, V1939, V1940, V1941, V1942, V1943, V1944, V1945)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1946) -> fun (V1947) -> fun (V1948) -> fun (V1949) -> fun (V1950) -> fun (V1951) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1946, V1947, V1948, V1949, V1950, V1951)) end end end end end end, fun (V1952) -> fun (V1953) -> fun (V1954) -> fun (V1955) -> fun (V1956) -> fun (V1957) -> fun (V1958) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1952, V1953, V1954, V1955, V1956, V1957, V1958)) end end end end end end end}}, V2, V0, V1, V1898, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1959) -> ('Idris.Idris2.Builtin':'un--snd'(V1959)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1960) -> ('Idris.Idris2.Builtin':'un--snd'(V1960)) end, V11))))(V1901)) end(E670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1898, V4, V5, V6, V1899, V8, {'Idris.Core.Value.NApp', V9, V1900, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E661, E662)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E659, E660)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E653, E654)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E651, E652)); {'Idris.Core.Value.NMeta', E680, E681, E682} -> (fun (V1961, V1962, V1963) -> case V10 of {'Idris.Core.Value.NMeta', E683, E684, E685} -> (fun (V1964, V1965, V1966) -> fun (V1967) -> begin (V1968 = ('un--isDefInvertible'(V0, V4, V1962, V1967))), case V1968 of {'Idris.Prelude.Types.Left', E686} -> (fun (V1969) -> {'Idris.Prelude.Types.Left', V1969} end(E686)); {'Idris.Prelude.Types.Right', E687} -> (fun (V1970) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1962, V1965)) of 1 -> case V1970 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E694, E695} -> (fun (V1971, V1972) -> V1972 end(E694, E695)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1973) -> fun (V1974) -> fun (V1975) -> fun (V1976) -> fun (V1977) -> fun (V1978) -> fun (V1979) -> fun (V1980) -> fun (V1981) -> ('dn--un--unifyD_Unify_Closure'(V1973, V1974, V1975, V1976, V1977, V1978, V1979, V1980, V1981)) end end end end end end end end end, fun (V1982) -> fun (V1983) -> fun (V1984) -> fun (V1985) -> fun (V1986) -> fun (V1987) -> fun (V1988) -> fun (V1989) -> fun (V1990) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1982, V1983, V1984, V1985, V1986, V1987, V1988, V1989, V1990)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V1991) -> fun (V1992) -> fun (V1993) -> fun (V1994) -> fun (V1995) -> fun (V1996) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V1991, V1992, V1993, V1994, V1995, V1996)) end end end end end end, fun (V1997) -> fun (V1998) -> fun (V1999) -> fun (V2000) -> fun (V2001) -> fun (V2002) -> fun (V2003) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V1997, V1998, V1999, V2000, V2001, V2002, V2003)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V1963, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2004) -> ('Idris.Idris2.Builtin':'un--snd'(V2004)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V1966, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2005) -> ('Idris.Idris2.Builtin':'un--snd'(V2005)) end, V11))))))(V1967)); 0 -> begin (V2006 = ('nested--11732-14576--in--un--localsIn'(V2, V1963, V1962, V1961, V1966, V1965, V1964, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1963, V1967))), case V2006 of {'Idris.Prelude.Types.Left', E688} -> (fun (V2007) -> {'Idris.Prelude.Types.Left', V2007} end(E688)); {'Idris.Prelude.Types.Right', E689} -> (fun (V2008) -> begin (V2009 = ('nested--11732-14576--in--un--localsIn'(V2, V1963, V1962, V1961, V1966, V1965, V1964, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1966, V1967))), case V2009 of {'Idris.Prelude.Types.Left', E690} -> (fun (V2010) -> {'Idris.Prelude.Types.Left', V2010} end(E690)); {'Idris.Prelude.Types.Right', E691} -> (fun (V2011) -> begin (V2012 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2008, V2011)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2008, V2011)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2012 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E692, E693} -> (fun (V2013, V2014) -> V2014 end(E692, E693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V1963, V1962, V1961, V1966, V1965, V1964, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1961)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1961, V1962, V1963}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1964, V1965, V1966}, V11}))(V1967)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V1964, V1965, V1966}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V1961, V1962, V1963}, V8}))(V1967)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E691)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E683, E684, E685)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1961, V1962, V1963}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E680, E681, E682)); _ -> case V10 of {'Idris.Core.Value.NMeta', E646, E647, E648} -> (fun (V2015, V2016, V2017) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E649, E650} -> (fun (V2018, V2019) -> V2019 end(E649, E650)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2015, V2016, V2017}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2015, V2016, V2017}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E646, E647, E648)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E628, E629} -> (fun (V2020, V2021) -> case V2021 of 3 -> case V7 of {'Idris.Core.Value.NRef', E630, E631} -> (fun (V2022, V2023) -> case V10 of {'Idris.Core.Value.NRef', E632, E633} -> (fun (V2024, V2025) -> begin (V2026 = {'Idris.Core.Unify.MkUnifyInfo', V2020, 3}), begin (V2027 = {'Idris.Core.Value.NRef', V2022, V2023}), begin (V2028 = {'Idris.Core.Value.NRef', V2024, V2025}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2023, V2025)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2029) -> fun (V2030) -> fun (V2031) -> fun (V2032) -> fun (V2033) -> fun (V2034) -> fun (V2035) -> fun (V2036) -> fun (V2037) -> ('dn--un--unifyD_Unify_Closure'(V2029, V2030, V2031, V2032, V2033, V2034, V2035, V2036, V2037)) end end end end end end end end end, fun (V2038) -> fun (V2039) -> fun (V2040) -> fun (V2041) -> fun (V2042) -> fun (V2043) -> fun (V2044) -> fun (V2045) -> fun (V2046) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2038, V2039, V2040, V2041, V2042, V2043, V2044, V2045, V2046)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2047) -> fun (V2048) -> fun (V2049) -> fun (V2050) -> fun (V2051) -> fun (V2052) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2047, V2048, V2049, V2050, V2051, V2052)) end end end end end end, fun (V2053) -> fun (V2054) -> fun (V2055) -> fun (V2056) -> fun (V2057) -> fun (V2058) -> fun (V2059) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2053, V2054, V2055, V2056, V2057, V2058, V2059)) end end end end end end end}}, V2, V0, V1, V2026, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2060) -> ('Idris.Idris2.Builtin':'un--snd'(V2060)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2061) -> ('Idris.Idris2.Builtin':'un--snd'(V2061)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2026, V4, V5, V6, V2027, V8, {'Idris.Core.Value.NApp', V9, V2028, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E632, E633)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E630, E631)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E634, E635} -> (fun (V2062, V2063) -> case V10 of {'Idris.Core.Value.NRef', E636, E637} -> (fun (V2064, V2065) -> begin (V2066 = {'Idris.Core.Unify.MkUnifyInfo', V2020, 2}), begin (V2067 = {'Idris.Core.Value.NRef', V2062, V2063}), begin (V2068 = {'Idris.Core.Value.NRef', V2064, V2065}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2063, V2065)) of 1 -> fun (V2069) -> begin (V2093 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2070) -> begin (V2072 = begin (V2071 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2071} end), case V2072 of {'Idris.Prelude.Types.Left', E638} -> (fun (V2073) -> {'Idris.Prelude.Types.Left', V2073} end(E638)); {'Idris.Prelude.Types.Right', E639} -> (fun (V2074) -> begin (V2078 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2075) -> fun (V2076) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2074, V5, V2075, V2076)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2077) -> ('Idris.Idris2.Builtin':'un--snd'(V2077)) end, V8)), [], V2070))), case V2078 of {'Idris.Prelude.Types.Left', E640} -> (fun (V2079) -> {'Idris.Prelude.Types.Left', V2079} end(E640)); {'Idris.Prelude.Types.Right', E641} -> (fun (V2080) -> begin (V2084 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2081) -> fun (V2082) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2074, V5, V2081, V2082)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2083) -> ('Idris.Idris2.Builtin':'un--snd'(V2083)) end, V11)), [], V2070))), case V2084 of {'Idris.Prelude.Types.Left', E642} -> (fun (V2085) -> {'Idris.Prelude.Types.Left', V2085} end(E642)); {'Idris.Prelude.Types.Right', E643} -> (fun (V2086) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2087) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2087)) end, fun (V2088) -> fun (V2089) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2088, V2089)) end end}, V2080)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2090) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2090)) end, fun (V2091) -> fun (V2092) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2091, V2092)) end end}, V2086))))))))} end(E643)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E641)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E639)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2069))), case V2093 of {'Idris.Prelude.Types.Left', E644} -> (fun (V2094) -> {'Idris.Prelude.Types.Left', V2094} end(E644)); {'Idris.Prelude.Types.Right', E645} -> (fun (V2095) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2096) -> fun (V2097) -> fun (V2098) -> fun (V2099) -> fun (V2100) -> fun (V2101) -> fun (V2102) -> fun (V2103) -> fun (V2104) -> ('dn--un--unifyD_Unify_Closure'(V2096, V2097, V2098, V2099, V2100, V2101, V2102, V2103, V2104)) end end end end end end end end end, fun (V2105) -> fun (V2106) -> fun (V2107) -> fun (V2108) -> fun (V2109) -> fun (V2110) -> fun (V2111) -> fun (V2112) -> fun (V2113) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2105, V2106, V2107, V2108, V2109, V2110, V2111, V2112, V2113)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2114) -> fun (V2115) -> fun (V2116) -> fun (V2117) -> fun (V2118) -> fun (V2119) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2114, V2115, V2116, V2117, V2118, V2119)) end end end end end end, fun (V2120) -> fun (V2121) -> fun (V2122) -> fun (V2123) -> fun (V2124) -> fun (V2125) -> fun (V2126) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2120, V2121, V2122, V2123, V2124, V2125, V2126)) end end end end end end end}}, V2, V0, V1, V2066, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2127) -> ('Idris.Idris2.Builtin':'un--snd'(V2127)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2128) -> ('Idris.Idris2.Builtin':'un--snd'(V2128)) end, V11))))(V2069)) end(E645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2066, V4, V5, V6, V2067, V8, {'Idris.Core.Value.NApp', V9, V2068, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E636, E637)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E634, E635)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E628, E629)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E626, E627)); _ -> case V7 of {'Idris.Core.Value.NLocal', E581, E582} -> (fun (V2129, V2130) -> case V10 of {'Idris.Core.Value.NLocal', E606, E607} -> (fun (V2131, V2132) -> fun (V2133) -> begin (V2134 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V2133))), case V2134 of {'Idris.Prelude.Types.Left', E608} -> (fun (V2135) -> {'Idris.Prelude.Types.Left', V2135} end(E608)); {'Idris.Prelude.Types.Right', E609} -> (fun (V2136) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V2129, V2130}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V2131, V2132}, V11}, V2133)) end(E609)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E606, E607)); _ -> case V10 of {'Idris.Core.Value.NMeta', E601, E602, E603} -> (fun (V2137, V2138, V2139) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E604, E605} -> (fun (V2140, V2141) -> V2141 end(E604, E605)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2137, V2138, V2139}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2137, V2138, V2139}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E601, E602, E603)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E583, E584} -> (fun (V2142, V2143) -> case V2143 of 3 -> case V7 of {'Idris.Core.Value.NRef', E585, E586} -> (fun (V2144, V2145) -> case V10 of {'Idris.Core.Value.NRef', E587, E588} -> (fun (V2146, V2147) -> begin (V2148 = {'Idris.Core.Unify.MkUnifyInfo', V2142, 3}), begin (V2149 = {'Idris.Core.Value.NRef', V2144, V2145}), begin (V2150 = {'Idris.Core.Value.NRef', V2146, V2147}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2145, V2147)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2151) -> fun (V2152) -> fun (V2153) -> fun (V2154) -> fun (V2155) -> fun (V2156) -> fun (V2157) -> fun (V2158) -> fun (V2159) -> ('dn--un--unifyD_Unify_Closure'(V2151, V2152, V2153, V2154, V2155, V2156, V2157, V2158, V2159)) end end end end end end end end end, fun (V2160) -> fun (V2161) -> fun (V2162) -> fun (V2163) -> fun (V2164) -> fun (V2165) -> fun (V2166) -> fun (V2167) -> fun (V2168) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2160, V2161, V2162, V2163, V2164, V2165, V2166, V2167, V2168)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2169) -> fun (V2170) -> fun (V2171) -> fun (V2172) -> fun (V2173) -> fun (V2174) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2169, V2170, V2171, V2172, V2173, V2174)) end end end end end end, fun (V2175) -> fun (V2176) -> fun (V2177) -> fun (V2178) -> fun (V2179) -> fun (V2180) -> fun (V2181) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2175, V2176, V2177, V2178, V2179, V2180, V2181)) end end end end end end end}}, V2, V0, V1, V2148, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2182) -> ('Idris.Idris2.Builtin':'un--snd'(V2182)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2183) -> ('Idris.Idris2.Builtin':'un--snd'(V2183)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2148, V4, V5, V6, V2149, V8, {'Idris.Core.Value.NApp', V9, V2150, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E587, E588)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E585, E586)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E589, E590} -> (fun (V2184, V2185) -> case V10 of {'Idris.Core.Value.NRef', E591, E592} -> (fun (V2186, V2187) -> begin (V2188 = {'Idris.Core.Unify.MkUnifyInfo', V2142, 2}), begin (V2189 = {'Idris.Core.Value.NRef', V2184, V2185}), begin (V2190 = {'Idris.Core.Value.NRef', V2186, V2187}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2185, V2187)) of 1 -> fun (V2191) -> begin (V2215 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2192) -> begin (V2194 = begin (V2193 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2193} end), case V2194 of {'Idris.Prelude.Types.Left', E593} -> (fun (V2195) -> {'Idris.Prelude.Types.Left', V2195} end(E593)); {'Idris.Prelude.Types.Right', E594} -> (fun (V2196) -> begin (V2200 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2197) -> fun (V2198) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2196, V5, V2197, V2198)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2199) -> ('Idris.Idris2.Builtin':'un--snd'(V2199)) end, V8)), [], V2192))), case V2200 of {'Idris.Prelude.Types.Left', E595} -> (fun (V2201) -> {'Idris.Prelude.Types.Left', V2201} end(E595)); {'Idris.Prelude.Types.Right', E596} -> (fun (V2202) -> begin (V2206 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2203) -> fun (V2204) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2196, V5, V2203, V2204)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2205) -> ('Idris.Idris2.Builtin':'un--snd'(V2205)) end, V11)), [], V2192))), case V2206 of {'Idris.Prelude.Types.Left', E597} -> (fun (V2207) -> {'Idris.Prelude.Types.Left', V2207} end(E597)); {'Idris.Prelude.Types.Right', E598} -> (fun (V2208) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2209) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2209)) end, fun (V2210) -> fun (V2211) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2210, V2211)) end end}, V2202)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2212) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2212)) end, fun (V2213) -> fun (V2214) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2213, V2214)) end end}, V2208))))))))} end(E598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E596)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E594)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2191))), case V2215 of {'Idris.Prelude.Types.Left', E599} -> (fun (V2216) -> {'Idris.Prelude.Types.Left', V2216} end(E599)); {'Idris.Prelude.Types.Right', E600} -> (fun (V2217) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2218) -> fun (V2219) -> fun (V2220) -> fun (V2221) -> fun (V2222) -> fun (V2223) -> fun (V2224) -> fun (V2225) -> fun (V2226) -> ('dn--un--unifyD_Unify_Closure'(V2218, V2219, V2220, V2221, V2222, V2223, V2224, V2225, V2226)) end end end end end end end end end, fun (V2227) -> fun (V2228) -> fun (V2229) -> fun (V2230) -> fun (V2231) -> fun (V2232) -> fun (V2233) -> fun (V2234) -> fun (V2235) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2227, V2228, V2229, V2230, V2231, V2232, V2233, V2234, V2235)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2236) -> fun (V2237) -> fun (V2238) -> fun (V2239) -> fun (V2240) -> fun (V2241) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2236, V2237, V2238, V2239, V2240, V2241)) end end end end end end, fun (V2242) -> fun (V2243) -> fun (V2244) -> fun (V2245) -> fun (V2246) -> fun (V2247) -> fun (V2248) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2242, V2243, V2244, V2245, V2246, V2247, V2248)) end end end end end end end}}, V2, V0, V1, V2188, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2249) -> ('Idris.Idris2.Builtin':'un--snd'(V2249)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2250) -> ('Idris.Idris2.Builtin':'un--snd'(V2250)) end, V11))))(V2191)) end(E600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2188, V4, V5, V6, V2189, V8, {'Idris.Core.Value.NApp', V9, V2190, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E591, E592)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E589, E590)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E583, E584)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E581, E582)); {'Idris.Core.Value.NMeta', E610, E611, E612} -> (fun (V2251, V2252, V2253) -> case V10 of {'Idris.Core.Value.NMeta', E613, E614, E615} -> (fun (V2254, V2255, V2256) -> fun (V2257) -> begin (V2258 = ('un--isDefInvertible'(V0, V4, V2252, V2257))), case V2258 of {'Idris.Prelude.Types.Left', E616} -> (fun (V2259) -> {'Idris.Prelude.Types.Left', V2259} end(E616)); {'Idris.Prelude.Types.Right', E617} -> (fun (V2260) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2252, V2255)) of 1 -> case V2260 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E624, E625} -> (fun (V2261, V2262) -> V2262 end(E624, E625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2263) -> fun (V2264) -> fun (V2265) -> fun (V2266) -> fun (V2267) -> fun (V2268) -> fun (V2269) -> fun (V2270) -> fun (V2271) -> ('dn--un--unifyD_Unify_Closure'(V2263, V2264, V2265, V2266, V2267, V2268, V2269, V2270, V2271)) end end end end end end end end end, fun (V2272) -> fun (V2273) -> fun (V2274) -> fun (V2275) -> fun (V2276) -> fun (V2277) -> fun (V2278) -> fun (V2279) -> fun (V2280) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2272, V2273, V2274, V2275, V2276, V2277, V2278, V2279, V2280)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2281) -> fun (V2282) -> fun (V2283) -> fun (V2284) -> fun (V2285) -> fun (V2286) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2281, V2282, V2283, V2284, V2285, V2286)) end end end end end end, fun (V2287) -> fun (V2288) -> fun (V2289) -> fun (V2290) -> fun (V2291) -> fun (V2292) -> fun (V2293) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2287, V2288, V2289, V2290, V2291, V2292, V2293)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V2253, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2294) -> ('Idris.Idris2.Builtin':'un--snd'(V2294)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V2256, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2295) -> ('Idris.Idris2.Builtin':'un--snd'(V2295)) end, V11))))))(V2257)); 0 -> begin (V2296 = ('nested--11732-14576--in--un--localsIn'(V2, V2253, V2252, V2251, V2256, V2255, V2254, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2253, V2257))), case V2296 of {'Idris.Prelude.Types.Left', E618} -> (fun (V2297) -> {'Idris.Prelude.Types.Left', V2297} end(E618)); {'Idris.Prelude.Types.Right', E619} -> (fun (V2298) -> begin (V2299 = ('nested--11732-14576--in--un--localsIn'(V2, V2253, V2252, V2251, V2256, V2255, V2254, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2256, V2257))), case V2299 of {'Idris.Prelude.Types.Left', E620} -> (fun (V2300) -> {'Idris.Prelude.Types.Left', V2300} end(E620)); {'Idris.Prelude.Types.Right', E621} -> (fun (V2301) -> begin (V2302 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2298, V2301)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2298, V2301)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2302 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E622, E623} -> (fun (V2303, V2304) -> V2304 end(E622, E623)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V2253, V2252, V2251, V2256, V2255, V2254, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2251)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2251, V2252, V2253}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2254, V2255, V2256}, V11}))(V2257)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V2254, V2255, V2256}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V2251, V2252, V2253}, V8}))(V2257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E621)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E613, E614, E615)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2251, V2252, V2253}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E610, E611, E612)); _ -> case V10 of {'Idris.Core.Value.NMeta', E576, E577, E578} -> (fun (V2305, V2306, V2307) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E579, E580} -> (fun (V2308, V2309) -> V2309 end(E579, E580)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2305, V2306, V2307}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2305, V2306, V2307}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E576, E577, E578)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E558, E559} -> (fun (V2310, V2311) -> case V2311 of 3 -> case V7 of {'Idris.Core.Value.NRef', E560, E561} -> (fun (V2312, V2313) -> case V10 of {'Idris.Core.Value.NRef', E562, E563} -> (fun (V2314, V2315) -> begin (V2316 = {'Idris.Core.Unify.MkUnifyInfo', V2310, 3}), begin (V2317 = {'Idris.Core.Value.NRef', V2312, V2313}), begin (V2318 = {'Idris.Core.Value.NRef', V2314, V2315}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2313, V2315)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2319) -> fun (V2320) -> fun (V2321) -> fun (V2322) -> fun (V2323) -> fun (V2324) -> fun (V2325) -> fun (V2326) -> fun (V2327) -> ('dn--un--unifyD_Unify_Closure'(V2319, V2320, V2321, V2322, V2323, V2324, V2325, V2326, V2327)) end end end end end end end end end, fun (V2328) -> fun (V2329) -> fun (V2330) -> fun (V2331) -> fun (V2332) -> fun (V2333) -> fun (V2334) -> fun (V2335) -> fun (V2336) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2328, V2329, V2330, V2331, V2332, V2333, V2334, V2335, V2336)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2337) -> fun (V2338) -> fun (V2339) -> fun (V2340) -> fun (V2341) -> fun (V2342) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2337, V2338, V2339, V2340, V2341, V2342)) end end end end end end, fun (V2343) -> fun (V2344) -> fun (V2345) -> fun (V2346) -> fun (V2347) -> fun (V2348) -> fun (V2349) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2343, V2344, V2345, V2346, V2347, V2348, V2349)) end end end end end end end}}, V2, V0, V1, V2316, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2350) -> ('Idris.Idris2.Builtin':'un--snd'(V2350)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2351) -> ('Idris.Idris2.Builtin':'un--snd'(V2351)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2316, V4, V5, V6, V2317, V8, {'Idris.Core.Value.NApp', V9, V2318, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E562, E563)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E560, E561)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E564, E565} -> (fun (V2352, V2353) -> case V10 of {'Idris.Core.Value.NRef', E566, E567} -> (fun (V2354, V2355) -> begin (V2356 = {'Idris.Core.Unify.MkUnifyInfo', V2310, 2}), begin (V2357 = {'Idris.Core.Value.NRef', V2352, V2353}), begin (V2358 = {'Idris.Core.Value.NRef', V2354, V2355}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2353, V2355)) of 1 -> fun (V2359) -> begin (V2383 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2360) -> begin (V2362 = begin (V2361 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2361} end), case V2362 of {'Idris.Prelude.Types.Left', E568} -> (fun (V2363) -> {'Idris.Prelude.Types.Left', V2363} end(E568)); {'Idris.Prelude.Types.Right', E569} -> (fun (V2364) -> begin (V2368 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2365) -> fun (V2366) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2364, V5, V2365, V2366)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2367) -> ('Idris.Idris2.Builtin':'un--snd'(V2367)) end, V8)), [], V2360))), case V2368 of {'Idris.Prelude.Types.Left', E570} -> (fun (V2369) -> {'Idris.Prelude.Types.Left', V2369} end(E570)); {'Idris.Prelude.Types.Right', E571} -> (fun (V2370) -> begin (V2374 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2371) -> fun (V2372) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2364, V5, V2371, V2372)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2373) -> ('Idris.Idris2.Builtin':'un--snd'(V2373)) end, V11)), [], V2360))), case V2374 of {'Idris.Prelude.Types.Left', E572} -> (fun (V2375) -> {'Idris.Prelude.Types.Left', V2375} end(E572)); {'Idris.Prelude.Types.Right', E573} -> (fun (V2376) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2377) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2377)) end, fun (V2378) -> fun (V2379) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2378, V2379)) end end}, V2370)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2380) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2380)) end, fun (V2381) -> fun (V2382) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2381, V2382)) end end}, V2376))))))))} end(E573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2359))), case V2383 of {'Idris.Prelude.Types.Left', E574} -> (fun (V2384) -> {'Idris.Prelude.Types.Left', V2384} end(E574)); {'Idris.Prelude.Types.Right', E575} -> (fun (V2385) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2386) -> fun (V2387) -> fun (V2388) -> fun (V2389) -> fun (V2390) -> fun (V2391) -> fun (V2392) -> fun (V2393) -> fun (V2394) -> ('dn--un--unifyD_Unify_Closure'(V2386, V2387, V2388, V2389, V2390, V2391, V2392, V2393, V2394)) end end end end end end end end end, fun (V2395) -> fun (V2396) -> fun (V2397) -> fun (V2398) -> fun (V2399) -> fun (V2400) -> fun (V2401) -> fun (V2402) -> fun (V2403) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2395, V2396, V2397, V2398, V2399, V2400, V2401, V2402, V2403)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2404) -> fun (V2405) -> fun (V2406) -> fun (V2407) -> fun (V2408) -> fun (V2409) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2404, V2405, V2406, V2407, V2408, V2409)) end end end end end end, fun (V2410) -> fun (V2411) -> fun (V2412) -> fun (V2413) -> fun (V2414) -> fun (V2415) -> fun (V2416) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2410, V2411, V2412, V2413, V2414, V2415, V2416)) end end end end end end end}}, V2, V0, V1, V2356, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2417) -> ('Idris.Idris2.Builtin':'un--snd'(V2417)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2418) -> ('Idris.Idris2.Builtin':'un--snd'(V2418)) end, V11))))(V2359)) end(E575)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2356, V4, V5, V6, V2357, V8, {'Idris.Core.Value.NApp', V9, V2358, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E566, E567)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E564, E565)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E558, E559)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end; _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E348, E349} -> (fun (V2419, V2420) -> case V2420 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E486, E487} -> (fun (V2421, V2422) -> case V10 of {'Idris.Core.Value.NLocal', E556, E557} -> (fun (V2423, V2424) -> begin (V2425 = {'Idris.Core.Unify.MkUnifyInfo', V2419, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2422, V2424)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2426) -> fun (V2427) -> fun (V2428) -> fun (V2429) -> fun (V2430) -> fun (V2431) -> fun (V2432) -> fun (V2433) -> fun (V2434) -> ('dn--un--unifyD_Unify_Closure'(V2426, V2427, V2428, V2429, V2430, V2431, V2432, V2433, V2434)) end end end end end end end end end, fun (V2435) -> fun (V2436) -> fun (V2437) -> fun (V2438) -> fun (V2439) -> fun (V2440) -> fun (V2441) -> fun (V2442) -> fun (V2443) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2435, V2436, V2437, V2438, V2439, V2440, V2441, V2442, V2443)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2444) -> fun (V2445) -> fun (V2446) -> fun (V2447) -> fun (V2448) -> fun (V2449) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2444, V2445, V2446, V2447, V2448, V2449)) end end end end end end, fun (V2450) -> fun (V2451) -> fun (V2452) -> fun (V2453) -> fun (V2454) -> fun (V2455) -> fun (V2456) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2450, V2451, V2452, V2453, V2454, V2455, V2456)) end end end end end end end}}, V2, V0, V1, V2425, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2457) -> ('Idris.Idris2.Builtin':'un--snd'(V2457)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2458) -> ('Idris.Idris2.Builtin':'un--snd'(V2458)) end, V11)))); 0 -> fun (V2459) -> ('un--postpone'(V2, V0, V1, V4, V2425, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V2421, V2422}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V2423, V2424}, V11}, V2459)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E556, E557)); _ -> case V7 of {'Idris.Core.Value.NLocal', E511, E512} -> (fun (V2460, V2461) -> case V10 of {'Idris.Core.Value.NLocal', E536, E537} -> (fun (V2462, V2463) -> fun (V2464) -> begin (V2465 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V2464))), case V2465 of {'Idris.Prelude.Types.Left', E538} -> (fun (V2466) -> {'Idris.Prelude.Types.Left', V2466} end(E538)); {'Idris.Prelude.Types.Right', E539} -> (fun (V2467) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V2460, V2461}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V2462, V2463}, V11}, V2464)) end(E539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E536, E537)); _ -> case V10 of {'Idris.Core.Value.NMeta', E531, E532, E533} -> (fun (V2468, V2469, V2470) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E534, E535} -> (fun (V2471, V2472) -> V2472 end(E534, E535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2468, V2469, V2470}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2468, V2469, V2470}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E531, E532, E533)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E513, E514} -> (fun (V2473, V2474) -> case V2474 of 3 -> case V7 of {'Idris.Core.Value.NRef', E515, E516} -> (fun (V2475, V2476) -> case V10 of {'Idris.Core.Value.NRef', E517, E518} -> (fun (V2477, V2478) -> begin (V2479 = {'Idris.Core.Unify.MkUnifyInfo', V2473, 3}), begin (V2480 = {'Idris.Core.Value.NRef', V2475, V2476}), begin (V2481 = {'Idris.Core.Value.NRef', V2477, V2478}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2476, V2478)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2482) -> fun (V2483) -> fun (V2484) -> fun (V2485) -> fun (V2486) -> fun (V2487) -> fun (V2488) -> fun (V2489) -> fun (V2490) -> ('dn--un--unifyD_Unify_Closure'(V2482, V2483, V2484, V2485, V2486, V2487, V2488, V2489, V2490)) end end end end end end end end end, fun (V2491) -> fun (V2492) -> fun (V2493) -> fun (V2494) -> fun (V2495) -> fun (V2496) -> fun (V2497) -> fun (V2498) -> fun (V2499) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2491, V2492, V2493, V2494, V2495, V2496, V2497, V2498, V2499)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2500) -> fun (V2501) -> fun (V2502) -> fun (V2503) -> fun (V2504) -> fun (V2505) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2500, V2501, V2502, V2503, V2504, V2505)) end end end end end end, fun (V2506) -> fun (V2507) -> fun (V2508) -> fun (V2509) -> fun (V2510) -> fun (V2511) -> fun (V2512) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2506, V2507, V2508, V2509, V2510, V2511, V2512)) end end end end end end end}}, V2, V0, V1, V2479, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2513) -> ('Idris.Idris2.Builtin':'un--snd'(V2513)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2514) -> ('Idris.Idris2.Builtin':'un--snd'(V2514)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2479, V4, V5, V6, V2480, V8, {'Idris.Core.Value.NApp', V9, V2481, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E517, E518)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E515, E516)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E519, E520} -> (fun (V2515, V2516) -> case V10 of {'Idris.Core.Value.NRef', E521, E522} -> (fun (V2517, V2518) -> begin (V2519 = {'Idris.Core.Unify.MkUnifyInfo', V2473, 2}), begin (V2520 = {'Idris.Core.Value.NRef', V2515, V2516}), begin (V2521 = {'Idris.Core.Value.NRef', V2517, V2518}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2516, V2518)) of 1 -> fun (V2522) -> begin (V2546 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2523) -> begin (V2525 = begin (V2524 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2524} end), case V2525 of {'Idris.Prelude.Types.Left', E523} -> (fun (V2526) -> {'Idris.Prelude.Types.Left', V2526} end(E523)); {'Idris.Prelude.Types.Right', E524} -> (fun (V2527) -> begin (V2531 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2528) -> fun (V2529) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2527, V5, V2528, V2529)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2530) -> ('Idris.Idris2.Builtin':'un--snd'(V2530)) end, V8)), [], V2523))), case V2531 of {'Idris.Prelude.Types.Left', E525} -> (fun (V2532) -> {'Idris.Prelude.Types.Left', V2532} end(E525)); {'Idris.Prelude.Types.Right', E526} -> (fun (V2533) -> begin (V2537 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2534) -> fun (V2535) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2527, V5, V2534, V2535)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2536) -> ('Idris.Idris2.Builtin':'un--snd'(V2536)) end, V11)), [], V2523))), case V2537 of {'Idris.Prelude.Types.Left', E527} -> (fun (V2538) -> {'Idris.Prelude.Types.Left', V2538} end(E527)); {'Idris.Prelude.Types.Right', E528} -> (fun (V2539) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2540) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2540)) end, fun (V2541) -> fun (V2542) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2541, V2542)) end end}, V2533)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2543) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2543)) end, fun (V2544) -> fun (V2545) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2544, V2545)) end end}, V2539))))))))} end(E528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E524)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2522))), case V2546 of {'Idris.Prelude.Types.Left', E529} -> (fun (V2547) -> {'Idris.Prelude.Types.Left', V2547} end(E529)); {'Idris.Prelude.Types.Right', E530} -> (fun (V2548) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2549) -> fun (V2550) -> fun (V2551) -> fun (V2552) -> fun (V2553) -> fun (V2554) -> fun (V2555) -> fun (V2556) -> fun (V2557) -> ('dn--un--unifyD_Unify_Closure'(V2549, V2550, V2551, V2552, V2553, V2554, V2555, V2556, V2557)) end end end end end end end end end, fun (V2558) -> fun (V2559) -> fun (V2560) -> fun (V2561) -> fun (V2562) -> fun (V2563) -> fun (V2564) -> fun (V2565) -> fun (V2566) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2558, V2559, V2560, V2561, V2562, V2563, V2564, V2565, V2566)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2567) -> fun (V2568) -> fun (V2569) -> fun (V2570) -> fun (V2571) -> fun (V2572) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2567, V2568, V2569, V2570, V2571, V2572)) end end end end end end, fun (V2573) -> fun (V2574) -> fun (V2575) -> fun (V2576) -> fun (V2577) -> fun (V2578) -> fun (V2579) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2573, V2574, V2575, V2576, V2577, V2578, V2579)) end end end end end end end}}, V2, V0, V1, V2519, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2580) -> ('Idris.Idris2.Builtin':'un--snd'(V2580)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2581) -> ('Idris.Idris2.Builtin':'un--snd'(V2581)) end, V11))))(V2522)) end(E530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2519, V4, V5, V6, V2520, V8, {'Idris.Core.Value.NApp', V9, V2521, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E521, E522)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E519, E520)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E513, E514)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E511, E512)); {'Idris.Core.Value.NMeta', E540, E541, E542} -> (fun (V2582, V2583, V2584) -> case V10 of {'Idris.Core.Value.NMeta', E543, E544, E545} -> (fun (V2585, V2586, V2587) -> fun (V2588) -> begin (V2589 = ('un--isDefInvertible'(V0, V4, V2583, V2588))), case V2589 of {'Idris.Prelude.Types.Left', E546} -> (fun (V2590) -> {'Idris.Prelude.Types.Left', V2590} end(E546)); {'Idris.Prelude.Types.Right', E547} -> (fun (V2591) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2583, V2586)) of 1 -> case V2591 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E554, E555} -> (fun (V2592, V2593) -> V2593 end(E554, E555)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2594) -> fun (V2595) -> fun (V2596) -> fun (V2597) -> fun (V2598) -> fun (V2599) -> fun (V2600) -> fun (V2601) -> fun (V2602) -> ('dn--un--unifyD_Unify_Closure'(V2594, V2595, V2596, V2597, V2598, V2599, V2600, V2601, V2602)) end end end end end end end end end, fun (V2603) -> fun (V2604) -> fun (V2605) -> fun (V2606) -> fun (V2607) -> fun (V2608) -> fun (V2609) -> fun (V2610) -> fun (V2611) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2603, V2604, V2605, V2606, V2607, V2608, V2609, V2610, V2611)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2612) -> fun (V2613) -> fun (V2614) -> fun (V2615) -> fun (V2616) -> fun (V2617) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2612, V2613, V2614, V2615, V2616, V2617)) end end end end end end, fun (V2618) -> fun (V2619) -> fun (V2620) -> fun (V2621) -> fun (V2622) -> fun (V2623) -> fun (V2624) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2618, V2619, V2620, V2621, V2622, V2623, V2624)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V2584, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2625) -> ('Idris.Idris2.Builtin':'un--snd'(V2625)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V2587, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2626) -> ('Idris.Idris2.Builtin':'un--snd'(V2626)) end, V11))))))(V2588)); 0 -> begin (V2627 = ('nested--11732-14576--in--un--localsIn'(V2, V2584, V2583, V2582, V2587, V2586, V2585, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2584, V2588))), case V2627 of {'Idris.Prelude.Types.Left', E548} -> (fun (V2628) -> {'Idris.Prelude.Types.Left', V2628} end(E548)); {'Idris.Prelude.Types.Right', E549} -> (fun (V2629) -> begin (V2630 = ('nested--11732-14576--in--un--localsIn'(V2, V2584, V2583, V2582, V2587, V2586, V2585, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2587, V2588))), case V2630 of {'Idris.Prelude.Types.Left', E550} -> (fun (V2631) -> {'Idris.Prelude.Types.Left', V2631} end(E550)); {'Idris.Prelude.Types.Right', E551} -> (fun (V2632) -> begin (V2633 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2629, V2632)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2629, V2632)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2633 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E552, E553} -> (fun (V2634, V2635) -> V2635 end(E552, E553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V2584, V2583, V2582, V2587, V2586, V2585, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2582)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2582, V2583, V2584}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2585, V2586, V2587}, V11}))(V2588)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V2585, V2586, V2587}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V2582, V2583, V2584}, V8}))(V2588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E551)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E549)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E543, E544, E545)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2582, V2583, V2584}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E540, E541, E542)); _ -> case V10 of {'Idris.Core.Value.NMeta', E506, E507, E508} -> (fun (V2636, V2637, V2638) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E509, E510} -> (fun (V2639, V2640) -> V2640 end(E509, E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2636, V2637, V2638}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2636, V2637, V2638}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E506, E507, E508)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E488, E489} -> (fun (V2641, V2642) -> case V2642 of 3 -> case V7 of {'Idris.Core.Value.NRef', E490, E491} -> (fun (V2643, V2644) -> case V10 of {'Idris.Core.Value.NRef', E492, E493} -> (fun (V2645, V2646) -> begin (V2647 = {'Idris.Core.Unify.MkUnifyInfo', V2641, 3}), begin (V2648 = {'Idris.Core.Value.NRef', V2643, V2644}), begin (V2649 = {'Idris.Core.Value.NRef', V2645, V2646}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2644, V2646)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2650) -> fun (V2651) -> fun (V2652) -> fun (V2653) -> fun (V2654) -> fun (V2655) -> fun (V2656) -> fun (V2657) -> fun (V2658) -> ('dn--un--unifyD_Unify_Closure'(V2650, V2651, V2652, V2653, V2654, V2655, V2656, V2657, V2658)) end end end end end end end end end, fun (V2659) -> fun (V2660) -> fun (V2661) -> fun (V2662) -> fun (V2663) -> fun (V2664) -> fun (V2665) -> fun (V2666) -> fun (V2667) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2659, V2660, V2661, V2662, V2663, V2664, V2665, V2666, V2667)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2668) -> fun (V2669) -> fun (V2670) -> fun (V2671) -> fun (V2672) -> fun (V2673) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2668, V2669, V2670, V2671, V2672, V2673)) end end end end end end, fun (V2674) -> fun (V2675) -> fun (V2676) -> fun (V2677) -> fun (V2678) -> fun (V2679) -> fun (V2680) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2674, V2675, V2676, V2677, V2678, V2679, V2680)) end end end end end end end}}, V2, V0, V1, V2647, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2681) -> ('Idris.Idris2.Builtin':'un--snd'(V2681)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2682) -> ('Idris.Idris2.Builtin':'un--snd'(V2682)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2647, V4, V5, V6, V2648, V8, {'Idris.Core.Value.NApp', V9, V2649, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E492, E493)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E490, E491)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E494, E495} -> (fun (V2683, V2684) -> case V10 of {'Idris.Core.Value.NRef', E496, E497} -> (fun (V2685, V2686) -> begin (V2687 = {'Idris.Core.Unify.MkUnifyInfo', V2641, 2}), begin (V2688 = {'Idris.Core.Value.NRef', V2683, V2684}), begin (V2689 = {'Idris.Core.Value.NRef', V2685, V2686}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2684, V2686)) of 1 -> fun (V2690) -> begin (V2714 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2691) -> begin (V2693 = begin (V2692 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2692} end), case V2693 of {'Idris.Prelude.Types.Left', E498} -> (fun (V2694) -> {'Idris.Prelude.Types.Left', V2694} end(E498)); {'Idris.Prelude.Types.Right', E499} -> (fun (V2695) -> begin (V2699 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2696) -> fun (V2697) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2695, V5, V2696, V2697)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2698) -> ('Idris.Idris2.Builtin':'un--snd'(V2698)) end, V8)), [], V2691))), case V2699 of {'Idris.Prelude.Types.Left', E500} -> (fun (V2700) -> {'Idris.Prelude.Types.Left', V2700} end(E500)); {'Idris.Prelude.Types.Right', E501} -> (fun (V2701) -> begin (V2705 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2702) -> fun (V2703) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2695, V5, V2702, V2703)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2704) -> ('Idris.Idris2.Builtin':'un--snd'(V2704)) end, V11)), [], V2691))), case V2705 of {'Idris.Prelude.Types.Left', E502} -> (fun (V2706) -> {'Idris.Prelude.Types.Left', V2706} end(E502)); {'Idris.Prelude.Types.Right', E503} -> (fun (V2707) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2708) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2708)) end, fun (V2709) -> fun (V2710) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2709, V2710)) end end}, V2701)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2711) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2711)) end, fun (V2712) -> fun (V2713) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2712, V2713)) end end}, V2707))))))))} end(E503)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2690))), case V2714 of {'Idris.Prelude.Types.Left', E504} -> (fun (V2715) -> {'Idris.Prelude.Types.Left', V2715} end(E504)); {'Idris.Prelude.Types.Right', E505} -> (fun (V2716) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2717) -> fun (V2718) -> fun (V2719) -> fun (V2720) -> fun (V2721) -> fun (V2722) -> fun (V2723) -> fun (V2724) -> fun (V2725) -> ('dn--un--unifyD_Unify_Closure'(V2717, V2718, V2719, V2720, V2721, V2722, V2723, V2724, V2725)) end end end end end end end end end, fun (V2726) -> fun (V2727) -> fun (V2728) -> fun (V2729) -> fun (V2730) -> fun (V2731) -> fun (V2732) -> fun (V2733) -> fun (V2734) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2726, V2727, V2728, V2729, V2730, V2731, V2732, V2733, V2734)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2735) -> fun (V2736) -> fun (V2737) -> fun (V2738) -> fun (V2739) -> fun (V2740) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2735, V2736, V2737, V2738, V2739, V2740)) end end end end end end, fun (V2741) -> fun (V2742) -> fun (V2743) -> fun (V2744) -> fun (V2745) -> fun (V2746) -> fun (V2747) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2741, V2742, V2743, V2744, V2745, V2746, V2747)) end end end end end end end}}, V2, V0, V1, V2687, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2748) -> ('Idris.Idris2.Builtin':'un--snd'(V2748)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2749) -> ('Idris.Idris2.Builtin':'un--snd'(V2749)) end, V11))))(V2690)) end(E505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2687, V4, V5, V6, V2688, V8, {'Idris.Core.Value.NApp', V9, V2689, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E496, E497)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E494, E495)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E488, E489)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E486, E487)); _ -> case V7 of {'Idris.Core.Value.NLocal', E441, E442} -> (fun (V2750, V2751) -> case V10 of {'Idris.Core.Value.NLocal', E466, E467} -> (fun (V2752, V2753) -> fun (V2754) -> begin (V2755 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V2754))), case V2755 of {'Idris.Prelude.Types.Left', E468} -> (fun (V2756) -> {'Idris.Prelude.Types.Left', V2756} end(E468)); {'Idris.Prelude.Types.Right', E469} -> (fun (V2757) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V2750, V2751}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V2752, V2753}, V11}, V2754)) end(E469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E466, E467)); _ -> case V10 of {'Idris.Core.Value.NMeta', E461, E462, E463} -> (fun (V2758, V2759, V2760) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E464, E465} -> (fun (V2761, V2762) -> V2762 end(E464, E465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2758, V2759, V2760}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2758, V2759, V2760}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E461, E462, E463)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E443, E444} -> (fun (V2763, V2764) -> case V2764 of 3 -> case V7 of {'Idris.Core.Value.NRef', E445, E446} -> (fun (V2765, V2766) -> case V10 of {'Idris.Core.Value.NRef', E447, E448} -> (fun (V2767, V2768) -> begin (V2769 = {'Idris.Core.Unify.MkUnifyInfo', V2763, 3}), begin (V2770 = {'Idris.Core.Value.NRef', V2765, V2766}), begin (V2771 = {'Idris.Core.Value.NRef', V2767, V2768}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2766, V2768)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2772) -> fun (V2773) -> fun (V2774) -> fun (V2775) -> fun (V2776) -> fun (V2777) -> fun (V2778) -> fun (V2779) -> fun (V2780) -> ('dn--un--unifyD_Unify_Closure'(V2772, V2773, V2774, V2775, V2776, V2777, V2778, V2779, V2780)) end end end end end end end end end, fun (V2781) -> fun (V2782) -> fun (V2783) -> fun (V2784) -> fun (V2785) -> fun (V2786) -> fun (V2787) -> fun (V2788) -> fun (V2789) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2781, V2782, V2783, V2784, V2785, V2786, V2787, V2788, V2789)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2790) -> fun (V2791) -> fun (V2792) -> fun (V2793) -> fun (V2794) -> fun (V2795) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2790, V2791, V2792, V2793, V2794, V2795)) end end end end end end, fun (V2796) -> fun (V2797) -> fun (V2798) -> fun (V2799) -> fun (V2800) -> fun (V2801) -> fun (V2802) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2796, V2797, V2798, V2799, V2800, V2801, V2802)) end end end end end end end}}, V2, V0, V1, V2769, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2803) -> ('Idris.Idris2.Builtin':'un--snd'(V2803)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2804) -> ('Idris.Idris2.Builtin':'un--snd'(V2804)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2769, V4, V5, V6, V2770, V8, {'Idris.Core.Value.NApp', V9, V2771, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E447, E448)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E445, E446)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E449, E450} -> (fun (V2805, V2806) -> case V10 of {'Idris.Core.Value.NRef', E451, E452} -> (fun (V2807, V2808) -> begin (V2809 = {'Idris.Core.Unify.MkUnifyInfo', V2763, 2}), begin (V2810 = {'Idris.Core.Value.NRef', V2805, V2806}), begin (V2811 = {'Idris.Core.Value.NRef', V2807, V2808}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2806, V2808)) of 1 -> fun (V2812) -> begin (V2836 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2813) -> begin (V2815 = begin (V2814 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2814} end), case V2815 of {'Idris.Prelude.Types.Left', E453} -> (fun (V2816) -> {'Idris.Prelude.Types.Left', V2816} end(E453)); {'Idris.Prelude.Types.Right', E454} -> (fun (V2817) -> begin (V2821 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2818) -> fun (V2819) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2817, V5, V2818, V2819)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2820) -> ('Idris.Idris2.Builtin':'un--snd'(V2820)) end, V8)), [], V2813))), case V2821 of {'Idris.Prelude.Types.Left', E455} -> (fun (V2822) -> {'Idris.Prelude.Types.Left', V2822} end(E455)); {'Idris.Prelude.Types.Right', E456} -> (fun (V2823) -> begin (V2827 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2824) -> fun (V2825) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2817, V5, V2824, V2825)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2826) -> ('Idris.Idris2.Builtin':'un--snd'(V2826)) end, V11)), [], V2813))), case V2827 of {'Idris.Prelude.Types.Left', E457} -> (fun (V2828) -> {'Idris.Prelude.Types.Left', V2828} end(E457)); {'Idris.Prelude.Types.Right', E458} -> (fun (V2829) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2830) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2830)) end, fun (V2831) -> fun (V2832) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2831, V2832)) end end}, V2823)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2833) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2833)) end, fun (V2834) -> fun (V2835) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2834, V2835)) end end}, V2829))))))))} end(E458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2812))), case V2836 of {'Idris.Prelude.Types.Left', E459} -> (fun (V2837) -> {'Idris.Prelude.Types.Left', V2837} end(E459)); {'Idris.Prelude.Types.Right', E460} -> (fun (V2838) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2839) -> fun (V2840) -> fun (V2841) -> fun (V2842) -> fun (V2843) -> fun (V2844) -> fun (V2845) -> fun (V2846) -> fun (V2847) -> ('dn--un--unifyD_Unify_Closure'(V2839, V2840, V2841, V2842, V2843, V2844, V2845, V2846, V2847)) end end end end end end end end end, fun (V2848) -> fun (V2849) -> fun (V2850) -> fun (V2851) -> fun (V2852) -> fun (V2853) -> fun (V2854) -> fun (V2855) -> fun (V2856) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2848, V2849, V2850, V2851, V2852, V2853, V2854, V2855, V2856)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2857) -> fun (V2858) -> fun (V2859) -> fun (V2860) -> fun (V2861) -> fun (V2862) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2857, V2858, V2859, V2860, V2861, V2862)) end end end end end end, fun (V2863) -> fun (V2864) -> fun (V2865) -> fun (V2866) -> fun (V2867) -> fun (V2868) -> fun (V2869) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2863, V2864, V2865, V2866, V2867, V2868, V2869)) end end end end end end end}}, V2, V0, V1, V2809, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2870) -> ('Idris.Idris2.Builtin':'un--snd'(V2870)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2871) -> ('Idris.Idris2.Builtin':'un--snd'(V2871)) end, V11))))(V2812)) end(E460)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2809, V4, V5, V6, V2810, V8, {'Idris.Core.Value.NApp', V9, V2811, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E451, E452)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E449, E450)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E443, E444)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E441, E442)); {'Idris.Core.Value.NMeta', E470, E471, E472} -> (fun (V2872, V2873, V2874) -> case V10 of {'Idris.Core.Value.NMeta', E473, E474, E475} -> (fun (V2875, V2876, V2877) -> fun (V2878) -> begin (V2879 = ('un--isDefInvertible'(V0, V4, V2873, V2878))), case V2879 of {'Idris.Prelude.Types.Left', E476} -> (fun (V2880) -> {'Idris.Prelude.Types.Left', V2880} end(E476)); {'Idris.Prelude.Types.Right', E477} -> (fun (V2881) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2873, V2876)) of 1 -> case V2881 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E484, E485} -> (fun (V2882, V2883) -> V2883 end(E484, E485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2884) -> fun (V2885) -> fun (V2886) -> fun (V2887) -> fun (V2888) -> fun (V2889) -> fun (V2890) -> fun (V2891) -> fun (V2892) -> ('dn--un--unifyD_Unify_Closure'(V2884, V2885, V2886, V2887, V2888, V2889, V2890, V2891, V2892)) end end end end end end end end end, fun (V2893) -> fun (V2894) -> fun (V2895) -> fun (V2896) -> fun (V2897) -> fun (V2898) -> fun (V2899) -> fun (V2900) -> fun (V2901) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2893, V2894, V2895, V2896, V2897, V2898, V2899, V2900, V2901)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2902) -> fun (V2903) -> fun (V2904) -> fun (V2905) -> fun (V2906) -> fun (V2907) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2902, V2903, V2904, V2905, V2906, V2907)) end end end end end end, fun (V2908) -> fun (V2909) -> fun (V2910) -> fun (V2911) -> fun (V2912) -> fun (V2913) -> fun (V2914) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2908, V2909, V2910, V2911, V2912, V2913, V2914)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V2874, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2915) -> ('Idris.Idris2.Builtin':'un--snd'(V2915)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V2877, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2916) -> ('Idris.Idris2.Builtin':'un--snd'(V2916)) end, V11))))))(V2878)); 0 -> begin (V2917 = ('nested--11732-14576--in--un--localsIn'(V2, V2874, V2873, V2872, V2877, V2876, V2875, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2874, V2878))), case V2917 of {'Idris.Prelude.Types.Left', E478} -> (fun (V2918) -> {'Idris.Prelude.Types.Left', V2918} end(E478)); {'Idris.Prelude.Types.Right', E479} -> (fun (V2919) -> begin (V2920 = ('nested--11732-14576--in--un--localsIn'(V2, V2874, V2873, V2872, V2877, V2876, V2875, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2877, V2878))), case V2920 of {'Idris.Prelude.Types.Left', E480} -> (fun (V2921) -> {'Idris.Prelude.Types.Left', V2921} end(E480)); {'Idris.Prelude.Types.Right', E481} -> (fun (V2922) -> begin (V2923 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2919, V2922)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2919, V2922)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2923 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E482, E483} -> (fun (V2924, V2925) -> V2925 end(E482, E483)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V2874, V2873, V2872, V2877, V2876, V2875, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2872)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2872, V2873, V2874}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2875, V2876, V2877}, V11}))(V2878)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V2875, V2876, V2877}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V2872, V2873, V2874}, V8}))(V2878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E481)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E477)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E473, E474, E475)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2872, V2873, V2874}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E470, E471, E472)); _ -> case V10 of {'Idris.Core.Value.NMeta', E436, E437, E438} -> (fun (V2926, V2927, V2928) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E439, E440} -> (fun (V2929, V2930) -> V2930 end(E439, E440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2926, V2927, V2928}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2926, V2927, V2928}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E436, E437, E438)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E418, E419} -> (fun (V2931, V2932) -> case V2932 of 3 -> case V7 of {'Idris.Core.Value.NRef', E420, E421} -> (fun (V2933, V2934) -> case V10 of {'Idris.Core.Value.NRef', E422, E423} -> (fun (V2935, V2936) -> begin (V2937 = {'Idris.Core.Unify.MkUnifyInfo', V2931, 3}), begin (V2938 = {'Idris.Core.Value.NRef', V2933, V2934}), begin (V2939 = {'Idris.Core.Value.NRef', V2935, V2936}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2934, V2936)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2940) -> fun (V2941) -> fun (V2942) -> fun (V2943) -> fun (V2944) -> fun (V2945) -> fun (V2946) -> fun (V2947) -> fun (V2948) -> ('dn--un--unifyD_Unify_Closure'(V2940, V2941, V2942, V2943, V2944, V2945, V2946, V2947, V2948)) end end end end end end end end end, fun (V2949) -> fun (V2950) -> fun (V2951) -> fun (V2952) -> fun (V2953) -> fun (V2954) -> fun (V2955) -> fun (V2956) -> fun (V2957) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2949, V2950, V2951, V2952, V2953, V2954, V2955, V2956, V2957)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V2958) -> fun (V2959) -> fun (V2960) -> fun (V2961) -> fun (V2962) -> fun (V2963) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V2958, V2959, V2960, V2961, V2962, V2963)) end end end end end end, fun (V2964) -> fun (V2965) -> fun (V2966) -> fun (V2967) -> fun (V2968) -> fun (V2969) -> fun (V2970) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V2964, V2965, V2966, V2967, V2968, V2969, V2970)) end end end end end end end}}, V2, V0, V1, V2937, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2971) -> ('Idris.Idris2.Builtin':'un--snd'(V2971)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2972) -> ('Idris.Idris2.Builtin':'un--snd'(V2972)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2937, V4, V5, V6, V2938, V8, {'Idris.Core.Value.NApp', V9, V2939, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E422, E423)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E420, E421)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E424, E425} -> (fun (V2973, V2974) -> case V10 of {'Idris.Core.Value.NRef', E426, E427} -> (fun (V2975, V2976) -> begin (V2977 = {'Idris.Core.Unify.MkUnifyInfo', V2931, 2}), begin (V2978 = {'Idris.Core.Value.NRef', V2973, V2974}), begin (V2979 = {'Idris.Core.Value.NRef', V2975, V2976}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2974, V2976)) of 1 -> fun (V2980) -> begin (V3004 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2981) -> begin (V2983 = begin (V2982 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2982} end), case V2983 of {'Idris.Prelude.Types.Left', E428} -> (fun (V2984) -> {'Idris.Prelude.Types.Left', V2984} end(E428)); {'Idris.Prelude.Types.Right', E429} -> (fun (V2985) -> begin (V2989 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2986) -> fun (V2987) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2985, V5, V2986, V2987)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2988) -> ('Idris.Idris2.Builtin':'un--snd'(V2988)) end, V8)), [], V2981))), case V2989 of {'Idris.Prelude.Types.Left', E430} -> (fun (V2990) -> {'Idris.Prelude.Types.Left', V2990} end(E430)); {'Idris.Prelude.Types.Right', E431} -> (fun (V2991) -> begin (V2995 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2992) -> fun (V2993) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V2985, V5, V2992, V2993)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2994) -> ('Idris.Idris2.Builtin':'un--snd'(V2994)) end, V11)), [], V2981))), case V2995 of {'Idris.Prelude.Types.Left', E432} -> (fun (V2996) -> {'Idris.Prelude.Types.Left', V2996} end(E432)); {'Idris.Prelude.Types.Right', E433} -> (fun (V2997) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2998) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2998)) end, fun (V2999) -> fun (V3000) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2999, V3000)) end end}, V2991)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3001) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3001)) end, fun (V3002) -> fun (V3003) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3002, V3003)) end end}, V2997))))))))} end(E433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2980))), case V3004 of {'Idris.Prelude.Types.Left', E434} -> (fun (V3005) -> {'Idris.Prelude.Types.Left', V3005} end(E434)); {'Idris.Prelude.Types.Right', E435} -> (fun (V3006) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3007) -> fun (V3008) -> fun (V3009) -> fun (V3010) -> fun (V3011) -> fun (V3012) -> fun (V3013) -> fun (V3014) -> fun (V3015) -> ('dn--un--unifyD_Unify_Closure'(V3007, V3008, V3009, V3010, V3011, V3012, V3013, V3014, V3015)) end end end end end end end end end, fun (V3016) -> fun (V3017) -> fun (V3018) -> fun (V3019) -> fun (V3020) -> fun (V3021) -> fun (V3022) -> fun (V3023) -> fun (V3024) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3016, V3017, V3018, V3019, V3020, V3021, V3022, V3023, V3024)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3025) -> fun (V3026) -> fun (V3027) -> fun (V3028) -> fun (V3029) -> fun (V3030) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3025, V3026, V3027, V3028, V3029, V3030)) end end end end end end, fun (V3031) -> fun (V3032) -> fun (V3033) -> fun (V3034) -> fun (V3035) -> fun (V3036) -> fun (V3037) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3031, V3032, V3033, V3034, V3035, V3036, V3037)) end end end end end end end}}, V2, V0, V1, V2977, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3038) -> ('Idris.Idris2.Builtin':'un--snd'(V3038)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3039) -> ('Idris.Idris2.Builtin':'un--snd'(V3039)) end, V11))))(V2980)) end(E435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2977, V4, V5, V6, V2978, V8, {'Idris.Core.Value.NApp', V9, V2979, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E426, E427)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E424, E425)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E418, E419)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E373, E374} -> (fun (V3040, V3041) -> case V10 of {'Idris.Core.Value.NLocal', E398, E399} -> (fun (V3042, V3043) -> fun (V3044) -> begin (V3045 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3044))), case V3045 of {'Idris.Prelude.Types.Left', E400} -> (fun (V3046) -> {'Idris.Prelude.Types.Left', V3046} end(E400)); {'Idris.Prelude.Types.Right', E401} -> (fun (V3047) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3040, V3041}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3042, V3043}, V11}, V3044)) end(E401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E398, E399)); _ -> case V10 of {'Idris.Core.Value.NMeta', E393, E394, E395} -> (fun (V3048, V3049, V3050) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E396, E397} -> (fun (V3051, V3052) -> V3052 end(E396, E397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3048, V3049, V3050}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3048, V3049, V3050}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E393, E394, E395)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E375, E376} -> (fun (V3053, V3054) -> case V3054 of 3 -> case V7 of {'Idris.Core.Value.NRef', E377, E378} -> (fun (V3055, V3056) -> case V10 of {'Idris.Core.Value.NRef', E379, E380} -> (fun (V3057, V3058) -> begin (V3059 = {'Idris.Core.Unify.MkUnifyInfo', V3053, 3}), begin (V3060 = {'Idris.Core.Value.NRef', V3055, V3056}), begin (V3061 = {'Idris.Core.Value.NRef', V3057, V3058}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3056, V3058)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3062) -> fun (V3063) -> fun (V3064) -> fun (V3065) -> fun (V3066) -> fun (V3067) -> fun (V3068) -> fun (V3069) -> fun (V3070) -> ('dn--un--unifyD_Unify_Closure'(V3062, V3063, V3064, V3065, V3066, V3067, V3068, V3069, V3070)) end end end end end end end end end, fun (V3071) -> fun (V3072) -> fun (V3073) -> fun (V3074) -> fun (V3075) -> fun (V3076) -> fun (V3077) -> fun (V3078) -> fun (V3079) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3071, V3072, V3073, V3074, V3075, V3076, V3077, V3078, V3079)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3080) -> fun (V3081) -> fun (V3082) -> fun (V3083) -> fun (V3084) -> fun (V3085) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3080, V3081, V3082, V3083, V3084, V3085)) end end end end end end, fun (V3086) -> fun (V3087) -> fun (V3088) -> fun (V3089) -> fun (V3090) -> fun (V3091) -> fun (V3092) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3086, V3087, V3088, V3089, V3090, V3091, V3092)) end end end end end end end}}, V2, V0, V1, V3059, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3093) -> ('Idris.Idris2.Builtin':'un--snd'(V3093)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3094) -> ('Idris.Idris2.Builtin':'un--snd'(V3094)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3059, V4, V5, V6, V3060, V8, {'Idris.Core.Value.NApp', V9, V3061, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E379, E380)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E377, E378)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E381, E382} -> (fun (V3095, V3096) -> case V10 of {'Idris.Core.Value.NRef', E383, E384} -> (fun (V3097, V3098) -> begin (V3099 = {'Idris.Core.Unify.MkUnifyInfo', V3053, 2}), begin (V3100 = {'Idris.Core.Value.NRef', V3095, V3096}), begin (V3101 = {'Idris.Core.Value.NRef', V3097, V3098}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3096, V3098)) of 1 -> fun (V3102) -> begin (V3126 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3103) -> begin (V3105 = begin (V3104 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3104} end), case V3105 of {'Idris.Prelude.Types.Left', E385} -> (fun (V3106) -> {'Idris.Prelude.Types.Left', V3106} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V3107) -> begin (V3111 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3108) -> fun (V3109) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3107, V5, V3108, V3109)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3110) -> ('Idris.Idris2.Builtin':'un--snd'(V3110)) end, V8)), [], V3103))), case V3111 of {'Idris.Prelude.Types.Left', E387} -> (fun (V3112) -> {'Idris.Prelude.Types.Left', V3112} end(E387)); {'Idris.Prelude.Types.Right', E388} -> (fun (V3113) -> begin (V3117 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3114) -> fun (V3115) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3107, V5, V3114, V3115)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3116) -> ('Idris.Idris2.Builtin':'un--snd'(V3116)) end, V11)), [], V3103))), case V3117 of {'Idris.Prelude.Types.Left', E389} -> (fun (V3118) -> {'Idris.Prelude.Types.Left', V3118} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V3119) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3120) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3120)) end, fun (V3121) -> fun (V3122) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3121, V3122)) end end}, V3113)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3123) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3123)) end, fun (V3124) -> fun (V3125) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3124, V3125)) end end}, V3119))))))))} end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3102))), case V3126 of {'Idris.Prelude.Types.Left', E391} -> (fun (V3127) -> {'Idris.Prelude.Types.Left', V3127} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V3128) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3129) -> fun (V3130) -> fun (V3131) -> fun (V3132) -> fun (V3133) -> fun (V3134) -> fun (V3135) -> fun (V3136) -> fun (V3137) -> ('dn--un--unifyD_Unify_Closure'(V3129, V3130, V3131, V3132, V3133, V3134, V3135, V3136, V3137)) end end end end end end end end end, fun (V3138) -> fun (V3139) -> fun (V3140) -> fun (V3141) -> fun (V3142) -> fun (V3143) -> fun (V3144) -> fun (V3145) -> fun (V3146) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3138, V3139, V3140, V3141, V3142, V3143, V3144, V3145, V3146)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3147) -> fun (V3148) -> fun (V3149) -> fun (V3150) -> fun (V3151) -> fun (V3152) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3147, V3148, V3149, V3150, V3151, V3152)) end end end end end end, fun (V3153) -> fun (V3154) -> fun (V3155) -> fun (V3156) -> fun (V3157) -> fun (V3158) -> fun (V3159) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3153, V3154, V3155, V3156, V3157, V3158, V3159)) end end end end end end end}}, V2, V0, V1, V3099, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3160) -> ('Idris.Idris2.Builtin':'un--snd'(V3160)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3161) -> ('Idris.Idris2.Builtin':'un--snd'(V3161)) end, V11))))(V3102)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3099, V4, V5, V6, V3100, V8, {'Idris.Core.Value.NApp', V9, V3101, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E383, E384)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E381, E382)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E375, E376)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E373, E374)); {'Idris.Core.Value.NMeta', E402, E403, E404} -> (fun (V3162, V3163, V3164) -> case V10 of {'Idris.Core.Value.NMeta', E405, E406, E407} -> (fun (V3165, V3166, V3167) -> fun (V3168) -> begin (V3169 = ('un--isDefInvertible'(V0, V4, V3163, V3168))), case V3169 of {'Idris.Prelude.Types.Left', E408} -> (fun (V3170) -> {'Idris.Prelude.Types.Left', V3170} end(E408)); {'Idris.Prelude.Types.Right', E409} -> (fun (V3171) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3163, V3166)) of 1 -> case V3171 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E416, E417} -> (fun (V3172, V3173) -> V3173 end(E416, E417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3174) -> fun (V3175) -> fun (V3176) -> fun (V3177) -> fun (V3178) -> fun (V3179) -> fun (V3180) -> fun (V3181) -> fun (V3182) -> ('dn--un--unifyD_Unify_Closure'(V3174, V3175, V3176, V3177, V3178, V3179, V3180, V3181, V3182)) end end end end end end end end end, fun (V3183) -> fun (V3184) -> fun (V3185) -> fun (V3186) -> fun (V3187) -> fun (V3188) -> fun (V3189) -> fun (V3190) -> fun (V3191) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3183, V3184, V3185, V3186, V3187, V3188, V3189, V3190, V3191)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3192) -> fun (V3193) -> fun (V3194) -> fun (V3195) -> fun (V3196) -> fun (V3197) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3192, V3193, V3194, V3195, V3196, V3197)) end end end end end end, fun (V3198) -> fun (V3199) -> fun (V3200) -> fun (V3201) -> fun (V3202) -> fun (V3203) -> fun (V3204) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3198, V3199, V3200, V3201, V3202, V3203, V3204)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V3164, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3205) -> ('Idris.Idris2.Builtin':'un--snd'(V3205)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V3167, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3206) -> ('Idris.Idris2.Builtin':'un--snd'(V3206)) end, V11))))))(V3168)); 0 -> begin (V3207 = ('nested--11732-14576--in--un--localsIn'(V2, V3164, V3163, V3162, V3167, V3166, V3165, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3164, V3168))), case V3207 of {'Idris.Prelude.Types.Left', E410} -> (fun (V3208) -> {'Idris.Prelude.Types.Left', V3208} end(E410)); {'Idris.Prelude.Types.Right', E411} -> (fun (V3209) -> begin (V3210 = ('nested--11732-14576--in--un--localsIn'(V2, V3164, V3163, V3162, V3167, V3166, V3165, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3167, V3168))), case V3210 of {'Idris.Prelude.Types.Left', E412} -> (fun (V3211) -> {'Idris.Prelude.Types.Left', V3211} end(E412)); {'Idris.Prelude.Types.Right', E413} -> (fun (V3212) -> begin (V3213 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3209, V3212)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3209, V3212)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V3213 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E414, E415} -> (fun (V3214, V3215) -> V3215 end(E414, E415)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V3164, V3163, V3162, V3167, V3166, V3165, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3162)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3162, V3163, V3164}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3165, V3166, V3167}, V11}))(V3168)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V3165, V3166, V3167}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V3162, V3163, V3164}, V8}))(V3168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E405, E406, E407)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3162, V3163, V3164}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E402, E403, E404)); _ -> case V10 of {'Idris.Core.Value.NMeta', E368, E369, E370} -> (fun (V3216, V3217, V3218) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E371, E372} -> (fun (V3219, V3220) -> V3220 end(E371, E372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3216, V3217, V3218}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3216, V3217, V3218}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E368, E369, E370)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E350, E351} -> (fun (V3221, V3222) -> case V3222 of 3 -> case V7 of {'Idris.Core.Value.NRef', E352, E353} -> (fun (V3223, V3224) -> case V10 of {'Idris.Core.Value.NRef', E354, E355} -> (fun (V3225, V3226) -> begin (V3227 = {'Idris.Core.Unify.MkUnifyInfo', V3221, 3}), begin (V3228 = {'Idris.Core.Value.NRef', V3223, V3224}), begin (V3229 = {'Idris.Core.Value.NRef', V3225, V3226}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3224, V3226)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3230) -> fun (V3231) -> fun (V3232) -> fun (V3233) -> fun (V3234) -> fun (V3235) -> fun (V3236) -> fun (V3237) -> fun (V3238) -> ('dn--un--unifyD_Unify_Closure'(V3230, V3231, V3232, V3233, V3234, V3235, V3236, V3237, V3238)) end end end end end end end end end, fun (V3239) -> fun (V3240) -> fun (V3241) -> fun (V3242) -> fun (V3243) -> fun (V3244) -> fun (V3245) -> fun (V3246) -> fun (V3247) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3239, V3240, V3241, V3242, V3243, V3244, V3245, V3246, V3247)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3248) -> fun (V3249) -> fun (V3250) -> fun (V3251) -> fun (V3252) -> fun (V3253) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3248, V3249, V3250, V3251, V3252, V3253)) end end end end end end, fun (V3254) -> fun (V3255) -> fun (V3256) -> fun (V3257) -> fun (V3258) -> fun (V3259) -> fun (V3260) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3254, V3255, V3256, V3257, V3258, V3259, V3260)) end end end end end end end}}, V2, V0, V1, V3227, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3261) -> ('Idris.Idris2.Builtin':'un--snd'(V3261)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3262) -> ('Idris.Idris2.Builtin':'un--snd'(V3262)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3227, V4, V5, V6, V3228, V8, {'Idris.Core.Value.NApp', V9, V3229, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E354, E355)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E352, E353)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E356, E357} -> (fun (V3263, V3264) -> case V10 of {'Idris.Core.Value.NRef', E358, E359} -> (fun (V3265, V3266) -> begin (V3267 = {'Idris.Core.Unify.MkUnifyInfo', V3221, 2}), begin (V3268 = {'Idris.Core.Value.NRef', V3263, V3264}), begin (V3269 = {'Idris.Core.Value.NRef', V3265, V3266}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3264, V3266)) of 1 -> fun (V3270) -> begin (V3294 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3271) -> begin (V3273 = begin (V3272 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3272} end), case V3273 of {'Idris.Prelude.Types.Left', E360} -> (fun (V3274) -> {'Idris.Prelude.Types.Left', V3274} end(E360)); {'Idris.Prelude.Types.Right', E361} -> (fun (V3275) -> begin (V3279 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3276) -> fun (V3277) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3275, V5, V3276, V3277)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3278) -> ('Idris.Idris2.Builtin':'un--snd'(V3278)) end, V8)), [], V3271))), case V3279 of {'Idris.Prelude.Types.Left', E362} -> (fun (V3280) -> {'Idris.Prelude.Types.Left', V3280} end(E362)); {'Idris.Prelude.Types.Right', E363} -> (fun (V3281) -> begin (V3285 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3282) -> fun (V3283) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3275, V5, V3282, V3283)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3284) -> ('Idris.Idris2.Builtin':'un--snd'(V3284)) end, V11)), [], V3271))), case V3285 of {'Idris.Prelude.Types.Left', E364} -> (fun (V3286) -> {'Idris.Prelude.Types.Left', V3286} end(E364)); {'Idris.Prelude.Types.Right', E365} -> (fun (V3287) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3288) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3288)) end, fun (V3289) -> fun (V3290) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3289, V3290)) end end}, V3281)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3291) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3291)) end, fun (V3292) -> fun (V3293) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3292, V3293)) end end}, V3287))))))))} end(E365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E363)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3270))), case V3294 of {'Idris.Prelude.Types.Left', E366} -> (fun (V3295) -> {'Idris.Prelude.Types.Left', V3295} end(E366)); {'Idris.Prelude.Types.Right', E367} -> (fun (V3296) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3297) -> fun (V3298) -> fun (V3299) -> fun (V3300) -> fun (V3301) -> fun (V3302) -> fun (V3303) -> fun (V3304) -> fun (V3305) -> ('dn--un--unifyD_Unify_Closure'(V3297, V3298, V3299, V3300, V3301, V3302, V3303, V3304, V3305)) end end end end end end end end end, fun (V3306) -> fun (V3307) -> fun (V3308) -> fun (V3309) -> fun (V3310) -> fun (V3311) -> fun (V3312) -> fun (V3313) -> fun (V3314) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3306, V3307, V3308, V3309, V3310, V3311, V3312, V3313, V3314)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3315) -> fun (V3316) -> fun (V3317) -> fun (V3318) -> fun (V3319) -> fun (V3320) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3315, V3316, V3317, V3318, V3319, V3320)) end end end end end end, fun (V3321) -> fun (V3322) -> fun (V3323) -> fun (V3324) -> fun (V3325) -> fun (V3326) -> fun (V3327) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3321, V3322, V3323, V3324, V3325, V3326, V3327)) end end end end end end end}}, V2, V0, V1, V3267, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3328) -> ('Idris.Idris2.Builtin':'un--snd'(V3328)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3329) -> ('Idris.Idris2.Builtin':'un--snd'(V3329)) end, V11))))(V3270)) end(E367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3267, V4, V5, V6, V3268, V8, {'Idris.Core.Value.NApp', V9, V3269, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E358, E359)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E356, E357)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E350, E351)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E348, E349)); _ -> case V7 of {'Idris.Core.Value.NLocal', E303, E304} -> (fun (V3330, V3331) -> case V10 of {'Idris.Core.Value.NLocal', E328, E329} -> (fun (V3332, V3333) -> fun (V3334) -> begin (V3335 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3334))), case V3335 of {'Idris.Prelude.Types.Left', E330} -> (fun (V3336) -> {'Idris.Prelude.Types.Left', V3336} end(E330)); {'Idris.Prelude.Types.Right', E331} -> (fun (V3337) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3330, V3331}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3332, V3333}, V11}, V3334)) end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E328, E329)); _ -> case V10 of {'Idris.Core.Value.NMeta', E323, E324, E325} -> (fun (V3338, V3339, V3340) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E326, E327} -> (fun (V3341, V3342) -> V3342 end(E326, E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3338, V3339, V3340}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3338, V3339, V3340}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E323, E324, E325)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E305, E306} -> (fun (V3343, V3344) -> case V3344 of 3 -> case V7 of {'Idris.Core.Value.NRef', E307, E308} -> (fun (V3345, V3346) -> case V10 of {'Idris.Core.Value.NRef', E309, E310} -> (fun (V3347, V3348) -> begin (V3349 = {'Idris.Core.Unify.MkUnifyInfo', V3343, 3}), begin (V3350 = {'Idris.Core.Value.NRef', V3345, V3346}), begin (V3351 = {'Idris.Core.Value.NRef', V3347, V3348}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3346, V3348)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3352) -> fun (V3353) -> fun (V3354) -> fun (V3355) -> fun (V3356) -> fun (V3357) -> fun (V3358) -> fun (V3359) -> fun (V3360) -> ('dn--un--unifyD_Unify_Closure'(V3352, V3353, V3354, V3355, V3356, V3357, V3358, V3359, V3360)) end end end end end end end end end, fun (V3361) -> fun (V3362) -> fun (V3363) -> fun (V3364) -> fun (V3365) -> fun (V3366) -> fun (V3367) -> fun (V3368) -> fun (V3369) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3361, V3362, V3363, V3364, V3365, V3366, V3367, V3368, V3369)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3370) -> fun (V3371) -> fun (V3372) -> fun (V3373) -> fun (V3374) -> fun (V3375) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3370, V3371, V3372, V3373, V3374, V3375)) end end end end end end, fun (V3376) -> fun (V3377) -> fun (V3378) -> fun (V3379) -> fun (V3380) -> fun (V3381) -> fun (V3382) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3376, V3377, V3378, V3379, V3380, V3381, V3382)) end end end end end end end}}, V2, V0, V1, V3349, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3383) -> ('Idris.Idris2.Builtin':'un--snd'(V3383)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3384) -> ('Idris.Idris2.Builtin':'un--snd'(V3384)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3349, V4, V5, V6, V3350, V8, {'Idris.Core.Value.NApp', V9, V3351, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E309, E310)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E307, E308)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E311, E312} -> (fun (V3385, V3386) -> case V10 of {'Idris.Core.Value.NRef', E313, E314} -> (fun (V3387, V3388) -> begin (V3389 = {'Idris.Core.Unify.MkUnifyInfo', V3343, 2}), begin (V3390 = {'Idris.Core.Value.NRef', V3385, V3386}), begin (V3391 = {'Idris.Core.Value.NRef', V3387, V3388}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3386, V3388)) of 1 -> fun (V3392) -> begin (V3416 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3393) -> begin (V3395 = begin (V3394 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3394} end), case V3395 of {'Idris.Prelude.Types.Left', E315} -> (fun (V3396) -> {'Idris.Prelude.Types.Left', V3396} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V3397) -> begin (V3401 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3398) -> fun (V3399) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3397, V5, V3398, V3399)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3400) -> ('Idris.Idris2.Builtin':'un--snd'(V3400)) end, V8)), [], V3393))), case V3401 of {'Idris.Prelude.Types.Left', E317} -> (fun (V3402) -> {'Idris.Prelude.Types.Left', V3402} end(E317)); {'Idris.Prelude.Types.Right', E318} -> (fun (V3403) -> begin (V3407 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3404) -> fun (V3405) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3397, V5, V3404, V3405)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3406) -> ('Idris.Idris2.Builtin':'un--snd'(V3406)) end, V11)), [], V3393))), case V3407 of {'Idris.Prelude.Types.Left', E319} -> (fun (V3408) -> {'Idris.Prelude.Types.Left', V3408} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V3409) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3410) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3410)) end, fun (V3411) -> fun (V3412) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3411, V3412)) end end}, V3403)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3413) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3413)) end, fun (V3414) -> fun (V3415) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3414, V3415)) end end}, V3409))))))))} end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3392))), case V3416 of {'Idris.Prelude.Types.Left', E321} -> (fun (V3417) -> {'Idris.Prelude.Types.Left', V3417} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V3418) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3419) -> fun (V3420) -> fun (V3421) -> fun (V3422) -> fun (V3423) -> fun (V3424) -> fun (V3425) -> fun (V3426) -> fun (V3427) -> ('dn--un--unifyD_Unify_Closure'(V3419, V3420, V3421, V3422, V3423, V3424, V3425, V3426, V3427)) end end end end end end end end end, fun (V3428) -> fun (V3429) -> fun (V3430) -> fun (V3431) -> fun (V3432) -> fun (V3433) -> fun (V3434) -> fun (V3435) -> fun (V3436) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3428, V3429, V3430, V3431, V3432, V3433, V3434, V3435, V3436)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3437) -> fun (V3438) -> fun (V3439) -> fun (V3440) -> fun (V3441) -> fun (V3442) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3437, V3438, V3439, V3440, V3441, V3442)) end end end end end end, fun (V3443) -> fun (V3444) -> fun (V3445) -> fun (V3446) -> fun (V3447) -> fun (V3448) -> fun (V3449) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3443, V3444, V3445, V3446, V3447, V3448, V3449)) end end end end end end end}}, V2, V0, V1, V3389, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3450) -> ('Idris.Idris2.Builtin':'un--snd'(V3450)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3451) -> ('Idris.Idris2.Builtin':'un--snd'(V3451)) end, V11))))(V3392)) end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3389, V4, V5, V6, V3390, V8, {'Idris.Core.Value.NApp', V9, V3391, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E313, E314)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E311, E312)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E305, E306)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E303, E304)); {'Idris.Core.Value.NMeta', E332, E333, E334} -> (fun (V3452, V3453, V3454) -> case V10 of {'Idris.Core.Value.NMeta', E335, E336, E337} -> (fun (V3455, V3456, V3457) -> fun (V3458) -> begin (V3459 = ('un--isDefInvertible'(V0, V4, V3453, V3458))), case V3459 of {'Idris.Prelude.Types.Left', E338} -> (fun (V3460) -> {'Idris.Prelude.Types.Left', V3460} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V3461) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3453, V3456)) of 1 -> case V3461 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E346, E347} -> (fun (V3462, V3463) -> V3463 end(E346, E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3464) -> fun (V3465) -> fun (V3466) -> fun (V3467) -> fun (V3468) -> fun (V3469) -> fun (V3470) -> fun (V3471) -> fun (V3472) -> ('dn--un--unifyD_Unify_Closure'(V3464, V3465, V3466, V3467, V3468, V3469, V3470, V3471, V3472)) end end end end end end end end end, fun (V3473) -> fun (V3474) -> fun (V3475) -> fun (V3476) -> fun (V3477) -> fun (V3478) -> fun (V3479) -> fun (V3480) -> fun (V3481) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3473, V3474, V3475, V3476, V3477, V3478, V3479, V3480, V3481)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3482) -> fun (V3483) -> fun (V3484) -> fun (V3485) -> fun (V3486) -> fun (V3487) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3482, V3483, V3484, V3485, V3486, V3487)) end end end end end end, fun (V3488) -> fun (V3489) -> fun (V3490) -> fun (V3491) -> fun (V3492) -> fun (V3493) -> fun (V3494) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3488, V3489, V3490, V3491, V3492, V3493, V3494)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V3454, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3495) -> ('Idris.Idris2.Builtin':'un--snd'(V3495)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V3457, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3496) -> ('Idris.Idris2.Builtin':'un--snd'(V3496)) end, V11))))))(V3458)); 0 -> begin (V3497 = ('nested--11732-14576--in--un--localsIn'(V2, V3454, V3453, V3452, V3457, V3456, V3455, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3454, V3458))), case V3497 of {'Idris.Prelude.Types.Left', E340} -> (fun (V3498) -> {'Idris.Prelude.Types.Left', V3498} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V3499) -> begin (V3500 = ('nested--11732-14576--in--un--localsIn'(V2, V3454, V3453, V3452, V3457, V3456, V3455, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3457, V3458))), case V3500 of {'Idris.Prelude.Types.Left', E342} -> (fun (V3501) -> {'Idris.Prelude.Types.Left', V3501} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V3502) -> begin (V3503 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3499, V3502)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3499, V3502)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V3503 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E344, E345} -> (fun (V3504, V3505) -> V3505 end(E344, E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V3454, V3453, V3452, V3457, V3456, V3455, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3452)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3452, V3453, V3454}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3455, V3456, V3457}, V11}))(V3458)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V3455, V3456, V3457}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V3452, V3453, V3454}, V8}))(V3458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E335, E336, E337)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3452, V3453, V3454}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E332, E333, E334)); _ -> case V10 of {'Idris.Core.Value.NMeta', E298, E299, E300} -> (fun (V3506, V3507, V3508) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E301, E302} -> (fun (V3509, V3510) -> V3510 end(E301, E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3506, V3507, V3508}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3506, V3507, V3508}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E298, E299, E300)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E280, E281} -> (fun (V3511, V3512) -> case V3512 of 3 -> case V7 of {'Idris.Core.Value.NRef', E282, E283} -> (fun (V3513, V3514) -> case V10 of {'Idris.Core.Value.NRef', E284, E285} -> (fun (V3515, V3516) -> begin (V3517 = {'Idris.Core.Unify.MkUnifyInfo', V3511, 3}), begin (V3518 = {'Idris.Core.Value.NRef', V3513, V3514}), begin (V3519 = {'Idris.Core.Value.NRef', V3515, V3516}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3514, V3516)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3520) -> fun (V3521) -> fun (V3522) -> fun (V3523) -> fun (V3524) -> fun (V3525) -> fun (V3526) -> fun (V3527) -> fun (V3528) -> ('dn--un--unifyD_Unify_Closure'(V3520, V3521, V3522, V3523, V3524, V3525, V3526, V3527, V3528)) end end end end end end end end end, fun (V3529) -> fun (V3530) -> fun (V3531) -> fun (V3532) -> fun (V3533) -> fun (V3534) -> fun (V3535) -> fun (V3536) -> fun (V3537) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3529, V3530, V3531, V3532, V3533, V3534, V3535, V3536, V3537)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3538) -> fun (V3539) -> fun (V3540) -> fun (V3541) -> fun (V3542) -> fun (V3543) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3538, V3539, V3540, V3541, V3542, V3543)) end end end end end end, fun (V3544) -> fun (V3545) -> fun (V3546) -> fun (V3547) -> fun (V3548) -> fun (V3549) -> fun (V3550) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3544, V3545, V3546, V3547, V3548, V3549, V3550)) end end end end end end end}}, V2, V0, V1, V3517, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3551) -> ('Idris.Idris2.Builtin':'un--snd'(V3551)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3552) -> ('Idris.Idris2.Builtin':'un--snd'(V3552)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3517, V4, V5, V6, V3518, V8, {'Idris.Core.Value.NApp', V9, V3519, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E284, E285)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E282, E283)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E286, E287} -> (fun (V3553, V3554) -> case V10 of {'Idris.Core.Value.NRef', E288, E289} -> (fun (V3555, V3556) -> begin (V3557 = {'Idris.Core.Unify.MkUnifyInfo', V3511, 2}), begin (V3558 = {'Idris.Core.Value.NRef', V3553, V3554}), begin (V3559 = {'Idris.Core.Value.NRef', V3555, V3556}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3554, V3556)) of 1 -> fun (V3560) -> begin (V3584 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3561) -> begin (V3563 = begin (V3562 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3562} end), case V3563 of {'Idris.Prelude.Types.Left', E290} -> (fun (V3564) -> {'Idris.Prelude.Types.Left', V3564} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V3565) -> begin (V3569 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3566) -> fun (V3567) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3565, V5, V3566, V3567)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3568) -> ('Idris.Idris2.Builtin':'un--snd'(V3568)) end, V8)), [], V3561))), case V3569 of {'Idris.Prelude.Types.Left', E292} -> (fun (V3570) -> {'Idris.Prelude.Types.Left', V3570} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V3571) -> begin (V3575 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3572) -> fun (V3573) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3565, V5, V3572, V3573)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3574) -> ('Idris.Idris2.Builtin':'un--snd'(V3574)) end, V11)), [], V3561))), case V3575 of {'Idris.Prelude.Types.Left', E294} -> (fun (V3576) -> {'Idris.Prelude.Types.Left', V3576} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V3577) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3578) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3578)) end, fun (V3579) -> fun (V3580) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3579, V3580)) end end}, V3571)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3581) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3581)) end, fun (V3582) -> fun (V3583) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3582, V3583)) end end}, V3577))))))))} end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3560))), case V3584 of {'Idris.Prelude.Types.Left', E296} -> (fun (V3585) -> {'Idris.Prelude.Types.Left', V3585} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V3586) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3587) -> fun (V3588) -> fun (V3589) -> fun (V3590) -> fun (V3591) -> fun (V3592) -> fun (V3593) -> fun (V3594) -> fun (V3595) -> ('dn--un--unifyD_Unify_Closure'(V3587, V3588, V3589, V3590, V3591, V3592, V3593, V3594, V3595)) end end end end end end end end end, fun (V3596) -> fun (V3597) -> fun (V3598) -> fun (V3599) -> fun (V3600) -> fun (V3601) -> fun (V3602) -> fun (V3603) -> fun (V3604) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3596, V3597, V3598, V3599, V3600, V3601, V3602, V3603, V3604)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3605) -> fun (V3606) -> fun (V3607) -> fun (V3608) -> fun (V3609) -> fun (V3610) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3605, V3606, V3607, V3608, V3609, V3610)) end end end end end end, fun (V3611) -> fun (V3612) -> fun (V3613) -> fun (V3614) -> fun (V3615) -> fun (V3616) -> fun (V3617) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3611, V3612, V3613, V3614, V3615, V3616, V3617)) end end end end end end end}}, V2, V0, V1, V3557, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3618) -> ('Idris.Idris2.Builtin':'un--snd'(V3618)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3619) -> ('Idris.Idris2.Builtin':'un--snd'(V3619)) end, V11))))(V3560)) end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3557, V4, V5, V6, V3558, V8, {'Idris.Core.Value.NApp', V9, V3559, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E288, E289)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E286, E287)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E280, E281)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end end(E278, E279)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E68, E69} -> (fun (V3620, V3621) -> case V3621 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E206, E207} -> (fun (V3622, V3623) -> case V10 of {'Idris.Core.Value.NLocal', E276, E277} -> (fun (V3624, V3625) -> begin (V3626 = {'Idris.Core.Unify.MkUnifyInfo', V3620, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3623, V3625)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3627) -> fun (V3628) -> fun (V3629) -> fun (V3630) -> fun (V3631) -> fun (V3632) -> fun (V3633) -> fun (V3634) -> fun (V3635) -> ('dn--un--unifyD_Unify_Closure'(V3627, V3628, V3629, V3630, V3631, V3632, V3633, V3634, V3635)) end end end end end end end end end, fun (V3636) -> fun (V3637) -> fun (V3638) -> fun (V3639) -> fun (V3640) -> fun (V3641) -> fun (V3642) -> fun (V3643) -> fun (V3644) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3636, V3637, V3638, V3639, V3640, V3641, V3642, V3643, V3644)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3645) -> fun (V3646) -> fun (V3647) -> fun (V3648) -> fun (V3649) -> fun (V3650) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3645, V3646, V3647, V3648, V3649, V3650)) end end end end end end, fun (V3651) -> fun (V3652) -> fun (V3653) -> fun (V3654) -> fun (V3655) -> fun (V3656) -> fun (V3657) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3651, V3652, V3653, V3654, V3655, V3656, V3657)) end end end end end end end}}, V2, V0, V1, V3626, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3658) -> ('Idris.Idris2.Builtin':'un--snd'(V3658)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3659) -> ('Idris.Idris2.Builtin':'un--snd'(V3659)) end, V11)))); 0 -> fun (V3660) -> ('un--postpone'(V2, V0, V1, V4, V3626, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3622, V3623}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3624, V3625}, V11}, V3660)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276, E277)); _ -> case V7 of {'Idris.Core.Value.NLocal', E231, E232} -> (fun (V3661, V3662) -> case V10 of {'Idris.Core.Value.NLocal', E256, E257} -> (fun (V3663, V3664) -> fun (V3665) -> begin (V3666 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3665))), case V3666 of {'Idris.Prelude.Types.Left', E258} -> (fun (V3667) -> {'Idris.Prelude.Types.Left', V3667} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V3668) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3661, V3662}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3663, V3664}, V11}, V3665)) end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E256, E257)); _ -> case V10 of {'Idris.Core.Value.NMeta', E251, E252, E253} -> (fun (V3669, V3670, V3671) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E254, E255} -> (fun (V3672, V3673) -> V3673 end(E254, E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3669, V3670, V3671}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3669, V3670, V3671}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E251, E252, E253)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E233, E234} -> (fun (V3674, V3675) -> case V3675 of 3 -> case V7 of {'Idris.Core.Value.NRef', E235, E236} -> (fun (V3676, V3677) -> case V10 of {'Idris.Core.Value.NRef', E237, E238} -> (fun (V3678, V3679) -> begin (V3680 = {'Idris.Core.Unify.MkUnifyInfo', V3674, 3}), begin (V3681 = {'Idris.Core.Value.NRef', V3676, V3677}), begin (V3682 = {'Idris.Core.Value.NRef', V3678, V3679}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3677, V3679)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3683) -> fun (V3684) -> fun (V3685) -> fun (V3686) -> fun (V3687) -> fun (V3688) -> fun (V3689) -> fun (V3690) -> fun (V3691) -> ('dn--un--unifyD_Unify_Closure'(V3683, V3684, V3685, V3686, V3687, V3688, V3689, V3690, V3691)) end end end end end end end end end, fun (V3692) -> fun (V3693) -> fun (V3694) -> fun (V3695) -> fun (V3696) -> fun (V3697) -> fun (V3698) -> fun (V3699) -> fun (V3700) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3692, V3693, V3694, V3695, V3696, V3697, V3698, V3699, V3700)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3701) -> fun (V3702) -> fun (V3703) -> fun (V3704) -> fun (V3705) -> fun (V3706) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3701, V3702, V3703, V3704, V3705, V3706)) end end end end end end, fun (V3707) -> fun (V3708) -> fun (V3709) -> fun (V3710) -> fun (V3711) -> fun (V3712) -> fun (V3713) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3707, V3708, V3709, V3710, V3711, V3712, V3713)) end end end end end end end}}, V2, V0, V1, V3680, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3714) -> ('Idris.Idris2.Builtin':'un--snd'(V3714)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3715) -> ('Idris.Idris2.Builtin':'un--snd'(V3715)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3680, V4, V5, V6, V3681, V8, {'Idris.Core.Value.NApp', V9, V3682, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E237, E238)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E235, E236)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E239, E240} -> (fun (V3716, V3717) -> case V10 of {'Idris.Core.Value.NRef', E241, E242} -> (fun (V3718, V3719) -> begin (V3720 = {'Idris.Core.Unify.MkUnifyInfo', V3674, 2}), begin (V3721 = {'Idris.Core.Value.NRef', V3716, V3717}), begin (V3722 = {'Idris.Core.Value.NRef', V3718, V3719}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3717, V3719)) of 1 -> fun (V3723) -> begin (V3747 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3724) -> begin (V3726 = begin (V3725 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3725} end), case V3726 of {'Idris.Prelude.Types.Left', E243} -> (fun (V3727) -> {'Idris.Prelude.Types.Left', V3727} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V3728) -> begin (V3732 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3729) -> fun (V3730) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3728, V5, V3729, V3730)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3731) -> ('Idris.Idris2.Builtin':'un--snd'(V3731)) end, V8)), [], V3724))), case V3732 of {'Idris.Prelude.Types.Left', E245} -> (fun (V3733) -> {'Idris.Prelude.Types.Left', V3733} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V3734) -> begin (V3738 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3735) -> fun (V3736) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3728, V5, V3735, V3736)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3737) -> ('Idris.Idris2.Builtin':'un--snd'(V3737)) end, V11)), [], V3724))), case V3738 of {'Idris.Prelude.Types.Left', E247} -> (fun (V3739) -> {'Idris.Prelude.Types.Left', V3739} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V3740) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3741) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3741)) end, fun (V3742) -> fun (V3743) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3742, V3743)) end end}, V3734)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3744) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3744)) end, fun (V3745) -> fun (V3746) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3745, V3746)) end end}, V3740))))))))} end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3723))), case V3747 of {'Idris.Prelude.Types.Left', E249} -> (fun (V3748) -> {'Idris.Prelude.Types.Left', V3748} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V3749) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3750) -> fun (V3751) -> fun (V3752) -> fun (V3753) -> fun (V3754) -> fun (V3755) -> fun (V3756) -> fun (V3757) -> fun (V3758) -> ('dn--un--unifyD_Unify_Closure'(V3750, V3751, V3752, V3753, V3754, V3755, V3756, V3757, V3758)) end end end end end end end end end, fun (V3759) -> fun (V3760) -> fun (V3761) -> fun (V3762) -> fun (V3763) -> fun (V3764) -> fun (V3765) -> fun (V3766) -> fun (V3767) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3759, V3760, V3761, V3762, V3763, V3764, V3765, V3766, V3767)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3768) -> fun (V3769) -> fun (V3770) -> fun (V3771) -> fun (V3772) -> fun (V3773) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3768, V3769, V3770, V3771, V3772, V3773)) end end end end end end, fun (V3774) -> fun (V3775) -> fun (V3776) -> fun (V3777) -> fun (V3778) -> fun (V3779) -> fun (V3780) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3774, V3775, V3776, V3777, V3778, V3779, V3780)) end end end end end end end}}, V2, V0, V1, V3720, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3781) -> ('Idris.Idris2.Builtin':'un--snd'(V3781)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3782) -> ('Idris.Idris2.Builtin':'un--snd'(V3782)) end, V11))))(V3723)) end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3720, V4, V5, V6, V3721, V8, {'Idris.Core.Value.NApp', V9, V3722, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E241, E242)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E239, E240)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E233, E234)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E231, E232)); {'Idris.Core.Value.NMeta', E260, E261, E262} -> (fun (V3783, V3784, V3785) -> case V10 of {'Idris.Core.Value.NMeta', E263, E264, E265} -> (fun (V3786, V3787, V3788) -> fun (V3789) -> begin (V3790 = ('un--isDefInvertible'(V0, V4, V3784, V3789))), case V3790 of {'Idris.Prelude.Types.Left', E266} -> (fun (V3791) -> {'Idris.Prelude.Types.Left', V3791} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V3792) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3784, V3787)) of 1 -> case V3792 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E274, E275} -> (fun (V3793, V3794) -> V3794 end(E274, E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3795) -> fun (V3796) -> fun (V3797) -> fun (V3798) -> fun (V3799) -> fun (V3800) -> fun (V3801) -> fun (V3802) -> fun (V3803) -> ('dn--un--unifyD_Unify_Closure'(V3795, V3796, V3797, V3798, V3799, V3800, V3801, V3802, V3803)) end end end end end end end end end, fun (V3804) -> fun (V3805) -> fun (V3806) -> fun (V3807) -> fun (V3808) -> fun (V3809) -> fun (V3810) -> fun (V3811) -> fun (V3812) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3804, V3805, V3806, V3807, V3808, V3809, V3810, V3811, V3812)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3813) -> fun (V3814) -> fun (V3815) -> fun (V3816) -> fun (V3817) -> fun (V3818) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3813, V3814, V3815, V3816, V3817, V3818)) end end end end end end, fun (V3819) -> fun (V3820) -> fun (V3821) -> fun (V3822) -> fun (V3823) -> fun (V3824) -> fun (V3825) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3819, V3820, V3821, V3822, V3823, V3824, V3825)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V3785, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3826) -> ('Idris.Idris2.Builtin':'un--snd'(V3826)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V3788, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3827) -> ('Idris.Idris2.Builtin':'un--snd'(V3827)) end, V11))))))(V3789)); 0 -> begin (V3828 = ('nested--11732-14576--in--un--localsIn'(V2, V3785, V3784, V3783, V3788, V3787, V3786, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3785, V3789))), case V3828 of {'Idris.Prelude.Types.Left', E268} -> (fun (V3829) -> {'Idris.Prelude.Types.Left', V3829} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V3830) -> begin (V3831 = ('nested--11732-14576--in--un--localsIn'(V2, V3785, V3784, V3783, V3788, V3787, V3786, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3788, V3789))), case V3831 of {'Idris.Prelude.Types.Left', E270} -> (fun (V3832) -> {'Idris.Prelude.Types.Left', V3832} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V3833) -> begin (V3834 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3830, V3833)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3830, V3833)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V3834 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E272, E273} -> (fun (V3835, V3836) -> V3836 end(E272, E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V3785, V3784, V3783, V3788, V3787, V3786, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3783)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3783, V3784, V3785}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3786, V3787, V3788}, V11}))(V3789)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V3786, V3787, V3788}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V3783, V3784, V3785}, V8}))(V3789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E263, E264, E265)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3783, V3784, V3785}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E260, E261, E262)); _ -> case V10 of {'Idris.Core.Value.NMeta', E226, E227, E228} -> (fun (V3837, V3838, V3839) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E229, E230} -> (fun (V3840, V3841) -> V3841 end(E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3837, V3838, V3839}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3837, V3838, V3839}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E226, E227, E228)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E208, E209} -> (fun (V3842, V3843) -> case V3843 of 3 -> case V7 of {'Idris.Core.Value.NRef', E210, E211} -> (fun (V3844, V3845) -> case V10 of {'Idris.Core.Value.NRef', E212, E213} -> (fun (V3846, V3847) -> begin (V3848 = {'Idris.Core.Unify.MkUnifyInfo', V3842, 3}), begin (V3849 = {'Idris.Core.Value.NRef', V3844, V3845}), begin (V3850 = {'Idris.Core.Value.NRef', V3846, V3847}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3845, V3847)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3851) -> fun (V3852) -> fun (V3853) -> fun (V3854) -> fun (V3855) -> fun (V3856) -> fun (V3857) -> fun (V3858) -> fun (V3859) -> ('dn--un--unifyD_Unify_Closure'(V3851, V3852, V3853, V3854, V3855, V3856, V3857, V3858, V3859)) end end end end end end end end end, fun (V3860) -> fun (V3861) -> fun (V3862) -> fun (V3863) -> fun (V3864) -> fun (V3865) -> fun (V3866) -> fun (V3867) -> fun (V3868) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3860, V3861, V3862, V3863, V3864, V3865, V3866, V3867, V3868)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3869) -> fun (V3870) -> fun (V3871) -> fun (V3872) -> fun (V3873) -> fun (V3874) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3869, V3870, V3871, V3872, V3873, V3874)) end end end end end end, fun (V3875) -> fun (V3876) -> fun (V3877) -> fun (V3878) -> fun (V3879) -> fun (V3880) -> fun (V3881) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3875, V3876, V3877, V3878, V3879, V3880, V3881)) end end end end end end end}}, V2, V0, V1, V3848, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3882) -> ('Idris.Idris2.Builtin':'un--snd'(V3882)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3883) -> ('Idris.Idris2.Builtin':'un--snd'(V3883)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3848, V4, V5, V6, V3849, V8, {'Idris.Core.Value.NApp', V9, V3850, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E212, E213)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E210, E211)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E214, E215} -> (fun (V3884, V3885) -> case V10 of {'Idris.Core.Value.NRef', E216, E217} -> (fun (V3886, V3887) -> begin (V3888 = {'Idris.Core.Unify.MkUnifyInfo', V3842, 2}), begin (V3889 = {'Idris.Core.Value.NRef', V3884, V3885}), begin (V3890 = {'Idris.Core.Value.NRef', V3886, V3887}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3885, V3887)) of 1 -> fun (V3891) -> begin (V3915 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3892) -> begin (V3894 = begin (V3893 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3893} end), case V3894 of {'Idris.Prelude.Types.Left', E218} -> (fun (V3895) -> {'Idris.Prelude.Types.Left', V3895} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V3896) -> begin (V3900 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3897) -> fun (V3898) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3896, V5, V3897, V3898)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3899) -> ('Idris.Idris2.Builtin':'un--snd'(V3899)) end, V8)), [], V3892))), case V3900 of {'Idris.Prelude.Types.Left', E220} -> (fun (V3901) -> {'Idris.Prelude.Types.Left', V3901} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V3902) -> begin (V3906 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3903) -> fun (V3904) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V3896, V5, V3903, V3904)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3905) -> ('Idris.Idris2.Builtin':'un--snd'(V3905)) end, V11)), [], V3892))), case V3906 of {'Idris.Prelude.Types.Left', E222} -> (fun (V3907) -> {'Idris.Prelude.Types.Left', V3907} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V3908) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3909) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3909)) end, fun (V3910) -> fun (V3911) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3910, V3911)) end end}, V3902)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3912) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3912)) end, fun (V3913) -> fun (V3914) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3913, V3914)) end end}, V3908))))))))} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3891))), case V3915 of {'Idris.Prelude.Types.Left', E224} -> (fun (V3916) -> {'Idris.Prelude.Types.Left', V3916} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V3917) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3918) -> fun (V3919) -> fun (V3920) -> fun (V3921) -> fun (V3922) -> fun (V3923) -> fun (V3924) -> fun (V3925) -> fun (V3926) -> ('dn--un--unifyD_Unify_Closure'(V3918, V3919, V3920, V3921, V3922, V3923, V3924, V3925, V3926)) end end end end end end end end end, fun (V3927) -> fun (V3928) -> fun (V3929) -> fun (V3930) -> fun (V3931) -> fun (V3932) -> fun (V3933) -> fun (V3934) -> fun (V3935) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3927, V3928, V3929, V3930, V3931, V3932, V3933, V3934, V3935)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3936) -> fun (V3937) -> fun (V3938) -> fun (V3939) -> fun (V3940) -> fun (V3941) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3936, V3937, V3938, V3939, V3940, V3941)) end end end end end end, fun (V3942) -> fun (V3943) -> fun (V3944) -> fun (V3945) -> fun (V3946) -> fun (V3947) -> fun (V3948) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3942, V3943, V3944, V3945, V3946, V3947, V3948)) end end end end end end end}}, V2, V0, V1, V3888, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3949) -> ('Idris.Idris2.Builtin':'un--snd'(V3949)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3950) -> ('Idris.Idris2.Builtin':'un--snd'(V3950)) end, V11))))(V3891)) end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3888, V4, V5, V6, V3889, V8, {'Idris.Core.Value.NApp', V9, V3890, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E216, E217)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E214, E215)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E208, E209)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E206, E207)); _ -> case V7 of {'Idris.Core.Value.NLocal', E161, E162} -> (fun (V3951, V3952) -> case V10 of {'Idris.Core.Value.NLocal', E186, E187} -> (fun (V3953, V3954) -> fun (V3955) -> begin (V3956 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3955))), case V3956 of {'Idris.Prelude.Types.Left', E188} -> (fun (V3957) -> {'Idris.Prelude.Types.Left', V3957} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V3958) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3951, V3952}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3953, V3954}, V11}, V3955)) end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E186, E187)); _ -> case V10 of {'Idris.Core.Value.NMeta', E181, E182, E183} -> (fun (V3959, V3960, V3961) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E184, E185} -> (fun (V3962, V3963) -> V3963 end(E184, E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3959, V3960, V3961}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3959, V3960, V3961}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E181, E182, E183)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E163, E164} -> (fun (V3964, V3965) -> case V3965 of 3 -> case V7 of {'Idris.Core.Value.NRef', E165, E166} -> (fun (V3966, V3967) -> case V10 of {'Idris.Core.Value.NRef', E167, E168} -> (fun (V3968, V3969) -> begin (V3970 = {'Idris.Core.Unify.MkUnifyInfo', V3964, 3}), begin (V3971 = {'Idris.Core.Value.NRef', V3966, V3967}), begin (V3972 = {'Idris.Core.Value.NRef', V3968, V3969}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3967, V3969)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3973) -> fun (V3974) -> fun (V3975) -> fun (V3976) -> fun (V3977) -> fun (V3978) -> fun (V3979) -> fun (V3980) -> fun (V3981) -> ('dn--un--unifyD_Unify_Closure'(V3973, V3974, V3975, V3976, V3977, V3978, V3979, V3980, V3981)) end end end end end end end end end, fun (V3982) -> fun (V3983) -> fun (V3984) -> fun (V3985) -> fun (V3986) -> fun (V3987) -> fun (V3988) -> fun (V3989) -> fun (V3990) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3982, V3983, V3984, V3985, V3986, V3987, V3988, V3989, V3990)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V3991) -> fun (V3992) -> fun (V3993) -> fun (V3994) -> fun (V3995) -> fun (V3996) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V3991, V3992, V3993, V3994, V3995, V3996)) end end end end end end, fun (V3997) -> fun (V3998) -> fun (V3999) -> fun (V4000) -> fun (V4001) -> fun (V4002) -> fun (V4003) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V3997, V3998, V3999, V4000, V4001, V4002, V4003)) end end end end end end end}}, V2, V0, V1, V3970, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4004) -> ('Idris.Idris2.Builtin':'un--snd'(V4004)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4005) -> ('Idris.Idris2.Builtin':'un--snd'(V4005)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3970, V4, V5, V6, V3971, V8, {'Idris.Core.Value.NApp', V9, V3972, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E167, E168)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E165, E166)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E169, E170} -> (fun (V4006, V4007) -> case V10 of {'Idris.Core.Value.NRef', E171, E172} -> (fun (V4008, V4009) -> begin (V4010 = {'Idris.Core.Unify.MkUnifyInfo', V3964, 2}), begin (V4011 = {'Idris.Core.Value.NRef', V4006, V4007}), begin (V4012 = {'Idris.Core.Value.NRef', V4008, V4009}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4007, V4009)) of 1 -> fun (V4013) -> begin (V4037 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4014) -> begin (V4016 = begin (V4015 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4015} end), case V4016 of {'Idris.Prelude.Types.Left', E173} -> (fun (V4017) -> {'Idris.Prelude.Types.Left', V4017} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V4018) -> begin (V4022 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4019) -> fun (V4020) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4018, V5, V4019, V4020)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4021) -> ('Idris.Idris2.Builtin':'un--snd'(V4021)) end, V8)), [], V4014))), case V4022 of {'Idris.Prelude.Types.Left', E175} -> (fun (V4023) -> {'Idris.Prelude.Types.Left', V4023} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V4024) -> begin (V4028 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4025) -> fun (V4026) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4018, V5, V4025, V4026)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4027) -> ('Idris.Idris2.Builtin':'un--snd'(V4027)) end, V11)), [], V4014))), case V4028 of {'Idris.Prelude.Types.Left', E177} -> (fun (V4029) -> {'Idris.Prelude.Types.Left', V4029} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V4030) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4031) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4031)) end, fun (V4032) -> fun (V4033) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4032, V4033)) end end}, V4024)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4034) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4034)) end, fun (V4035) -> fun (V4036) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4035, V4036)) end end}, V4030))))))))} end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4013))), case V4037 of {'Idris.Prelude.Types.Left', E179} -> (fun (V4038) -> {'Idris.Prelude.Types.Left', V4038} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V4039) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4040) -> fun (V4041) -> fun (V4042) -> fun (V4043) -> fun (V4044) -> fun (V4045) -> fun (V4046) -> fun (V4047) -> fun (V4048) -> ('dn--un--unifyD_Unify_Closure'(V4040, V4041, V4042, V4043, V4044, V4045, V4046, V4047, V4048)) end end end end end end end end end, fun (V4049) -> fun (V4050) -> fun (V4051) -> fun (V4052) -> fun (V4053) -> fun (V4054) -> fun (V4055) -> fun (V4056) -> fun (V4057) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4049, V4050, V4051, V4052, V4053, V4054, V4055, V4056, V4057)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4058) -> fun (V4059) -> fun (V4060) -> fun (V4061) -> fun (V4062) -> fun (V4063) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4058, V4059, V4060, V4061, V4062, V4063)) end end end end end end, fun (V4064) -> fun (V4065) -> fun (V4066) -> fun (V4067) -> fun (V4068) -> fun (V4069) -> fun (V4070) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4064, V4065, V4066, V4067, V4068, V4069, V4070)) end end end end end end end}}, V2, V0, V1, V4010, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4071) -> ('Idris.Idris2.Builtin':'un--snd'(V4071)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4072) -> ('Idris.Idris2.Builtin':'un--snd'(V4072)) end, V11))))(V4013)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4010, V4, V5, V6, V4011, V8, {'Idris.Core.Value.NApp', V9, V4012, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E171, E172)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E169, E170)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E163, E164)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E161, E162)); {'Idris.Core.Value.NMeta', E190, E191, E192} -> (fun (V4073, V4074, V4075) -> case V10 of {'Idris.Core.Value.NMeta', E193, E194, E195} -> (fun (V4076, V4077, V4078) -> fun (V4079) -> begin (V4080 = ('un--isDefInvertible'(V0, V4, V4074, V4079))), case V4080 of {'Idris.Prelude.Types.Left', E196} -> (fun (V4081) -> {'Idris.Prelude.Types.Left', V4081} end(E196)); {'Idris.Prelude.Types.Right', E197} -> (fun (V4082) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4074, V4077)) of 1 -> case V4082 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E204, E205} -> (fun (V4083, V4084) -> V4084 end(E204, E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4085) -> fun (V4086) -> fun (V4087) -> fun (V4088) -> fun (V4089) -> fun (V4090) -> fun (V4091) -> fun (V4092) -> fun (V4093) -> ('dn--un--unifyD_Unify_Closure'(V4085, V4086, V4087, V4088, V4089, V4090, V4091, V4092, V4093)) end end end end end end end end end, fun (V4094) -> fun (V4095) -> fun (V4096) -> fun (V4097) -> fun (V4098) -> fun (V4099) -> fun (V4100) -> fun (V4101) -> fun (V4102) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4094, V4095, V4096, V4097, V4098, V4099, V4100, V4101, V4102)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4103) -> fun (V4104) -> fun (V4105) -> fun (V4106) -> fun (V4107) -> fun (V4108) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4103, V4104, V4105, V4106, V4107, V4108)) end end end end end end, fun (V4109) -> fun (V4110) -> fun (V4111) -> fun (V4112) -> fun (V4113) -> fun (V4114) -> fun (V4115) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4109, V4110, V4111, V4112, V4113, V4114, V4115)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4075, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4116) -> ('Idris.Idris2.Builtin':'un--snd'(V4116)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V4078, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4117) -> ('Idris.Idris2.Builtin':'un--snd'(V4117)) end, V11))))))(V4079)); 0 -> begin (V4118 = ('nested--11732-14576--in--un--localsIn'(V2, V4075, V4074, V4073, V4078, V4077, V4076, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4075, V4079))), case V4118 of {'Idris.Prelude.Types.Left', E198} -> (fun (V4119) -> {'Idris.Prelude.Types.Left', V4119} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V4120) -> begin (V4121 = ('nested--11732-14576--in--un--localsIn'(V2, V4075, V4074, V4073, V4078, V4077, V4076, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4078, V4079))), case V4121 of {'Idris.Prelude.Types.Left', E200} -> (fun (V4122) -> {'Idris.Prelude.Types.Left', V4122} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V4123) -> begin (V4124 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4120, V4123)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V4120, V4123)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V4124 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E202, E203} -> (fun (V4125, V4126) -> V4126 end(E202, E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V4075, V4074, V4073, V4078, V4077, V4076, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4073)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4073, V4074, V4075}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4076, V4077, V4078}, V11}))(V4079)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V4076, V4077, V4078}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V4073, V4074, V4075}, V8}))(V4079)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E193, E194, E195)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4073, V4074, V4075}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E190, E191, E192)); _ -> case V10 of {'Idris.Core.Value.NMeta', E156, E157, E158} -> (fun (V4127, V4128, V4129) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E159, E160} -> (fun (V4130, V4131) -> V4131 end(E159, E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4127, V4128, V4129}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4127, V4128, V4129}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156, E157, E158)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E138, E139} -> (fun (V4132, V4133) -> case V4133 of 3 -> case V7 of {'Idris.Core.Value.NRef', E140, E141} -> (fun (V4134, V4135) -> case V10 of {'Idris.Core.Value.NRef', E142, E143} -> (fun (V4136, V4137) -> begin (V4138 = {'Idris.Core.Unify.MkUnifyInfo', V4132, 3}), begin (V4139 = {'Idris.Core.Value.NRef', V4134, V4135}), begin (V4140 = {'Idris.Core.Value.NRef', V4136, V4137}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4135, V4137)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4141) -> fun (V4142) -> fun (V4143) -> fun (V4144) -> fun (V4145) -> fun (V4146) -> fun (V4147) -> fun (V4148) -> fun (V4149) -> ('dn--un--unifyD_Unify_Closure'(V4141, V4142, V4143, V4144, V4145, V4146, V4147, V4148, V4149)) end end end end end end end end end, fun (V4150) -> fun (V4151) -> fun (V4152) -> fun (V4153) -> fun (V4154) -> fun (V4155) -> fun (V4156) -> fun (V4157) -> fun (V4158) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4150, V4151, V4152, V4153, V4154, V4155, V4156, V4157, V4158)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4159) -> fun (V4160) -> fun (V4161) -> fun (V4162) -> fun (V4163) -> fun (V4164) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4159, V4160, V4161, V4162, V4163, V4164)) end end end end end end, fun (V4165) -> fun (V4166) -> fun (V4167) -> fun (V4168) -> fun (V4169) -> fun (V4170) -> fun (V4171) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4165, V4166, V4167, V4168, V4169, V4170, V4171)) end end end end end end end}}, V2, V0, V1, V4138, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4172) -> ('Idris.Idris2.Builtin':'un--snd'(V4172)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4173) -> ('Idris.Idris2.Builtin':'un--snd'(V4173)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4138, V4, V5, V6, V4139, V8, {'Idris.Core.Value.NApp', V9, V4140, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E142, E143)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E140, E141)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E144, E145} -> (fun (V4174, V4175) -> case V10 of {'Idris.Core.Value.NRef', E146, E147} -> (fun (V4176, V4177) -> begin (V4178 = {'Idris.Core.Unify.MkUnifyInfo', V4132, 2}), begin (V4179 = {'Idris.Core.Value.NRef', V4174, V4175}), begin (V4180 = {'Idris.Core.Value.NRef', V4176, V4177}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4175, V4177)) of 1 -> fun (V4181) -> begin (V4205 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4182) -> begin (V4184 = begin (V4183 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4183} end), case V4184 of {'Idris.Prelude.Types.Left', E148} -> (fun (V4185) -> {'Idris.Prelude.Types.Left', V4185} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V4186) -> begin (V4190 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4187) -> fun (V4188) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4186, V5, V4187, V4188)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4189) -> ('Idris.Idris2.Builtin':'un--snd'(V4189)) end, V8)), [], V4182))), case V4190 of {'Idris.Prelude.Types.Left', E150} -> (fun (V4191) -> {'Idris.Prelude.Types.Left', V4191} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V4192) -> begin (V4196 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4193) -> fun (V4194) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4186, V5, V4193, V4194)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4195) -> ('Idris.Idris2.Builtin':'un--snd'(V4195)) end, V11)), [], V4182))), case V4196 of {'Idris.Prelude.Types.Left', E152} -> (fun (V4197) -> {'Idris.Prelude.Types.Left', V4197} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V4198) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4199) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4199)) end, fun (V4200) -> fun (V4201) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4200, V4201)) end end}, V4192)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4202) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4202)) end, fun (V4203) -> fun (V4204) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4203, V4204)) end end}, V4198))))))))} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4181))), case V4205 of {'Idris.Prelude.Types.Left', E154} -> (fun (V4206) -> {'Idris.Prelude.Types.Left', V4206} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V4207) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4208) -> fun (V4209) -> fun (V4210) -> fun (V4211) -> fun (V4212) -> fun (V4213) -> fun (V4214) -> fun (V4215) -> fun (V4216) -> ('dn--un--unifyD_Unify_Closure'(V4208, V4209, V4210, V4211, V4212, V4213, V4214, V4215, V4216)) end end end end end end end end end, fun (V4217) -> fun (V4218) -> fun (V4219) -> fun (V4220) -> fun (V4221) -> fun (V4222) -> fun (V4223) -> fun (V4224) -> fun (V4225) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4217, V4218, V4219, V4220, V4221, V4222, V4223, V4224, V4225)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4226) -> fun (V4227) -> fun (V4228) -> fun (V4229) -> fun (V4230) -> fun (V4231) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4226, V4227, V4228, V4229, V4230, V4231)) end end end end end end, fun (V4232) -> fun (V4233) -> fun (V4234) -> fun (V4235) -> fun (V4236) -> fun (V4237) -> fun (V4238) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4232, V4233, V4234, V4235, V4236, V4237, V4238)) end end end end end end end}}, V2, V0, V1, V4178, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4239) -> ('Idris.Idris2.Builtin':'un--snd'(V4239)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4240) -> ('Idris.Idris2.Builtin':'un--snd'(V4240)) end, V11))))(V4181)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4178, V4, V5, V6, V4179, V8, {'Idris.Core.Value.NApp', V9, V4180, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E146, E147)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E144, E145)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E138, E139)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E93, E94} -> (fun (V4241, V4242) -> case V10 of {'Idris.Core.Value.NLocal', E118, E119} -> (fun (V4243, V4244) -> fun (V4245) -> begin (V4246 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V4245))), case V4246 of {'Idris.Prelude.Types.Left', E120} -> (fun (V4247) -> {'Idris.Prelude.Types.Left', V4247} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V4248) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V4241, V4242}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V4243, V4244}, V11}, V4245)) end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E118, E119)); _ -> case V10 of {'Idris.Core.Value.NMeta', E113, E114, E115} -> (fun (V4249, V4250, V4251) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E116, E117} -> (fun (V4252, V4253) -> V4253 end(E116, E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4249, V4250, V4251}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4249, V4250, V4251}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E113, E114, E115)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E95, E96} -> (fun (V4254, V4255) -> case V4255 of 3 -> case V7 of {'Idris.Core.Value.NRef', E97, E98} -> (fun (V4256, V4257) -> case V10 of {'Idris.Core.Value.NRef', E99, E100} -> (fun (V4258, V4259) -> begin (V4260 = {'Idris.Core.Unify.MkUnifyInfo', V4254, 3}), begin (V4261 = {'Idris.Core.Value.NRef', V4256, V4257}), begin (V4262 = {'Idris.Core.Value.NRef', V4258, V4259}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4257, V4259)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4263) -> fun (V4264) -> fun (V4265) -> fun (V4266) -> fun (V4267) -> fun (V4268) -> fun (V4269) -> fun (V4270) -> fun (V4271) -> ('dn--un--unifyD_Unify_Closure'(V4263, V4264, V4265, V4266, V4267, V4268, V4269, V4270, V4271)) end end end end end end end end end, fun (V4272) -> fun (V4273) -> fun (V4274) -> fun (V4275) -> fun (V4276) -> fun (V4277) -> fun (V4278) -> fun (V4279) -> fun (V4280) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4272, V4273, V4274, V4275, V4276, V4277, V4278, V4279, V4280)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4281) -> fun (V4282) -> fun (V4283) -> fun (V4284) -> fun (V4285) -> fun (V4286) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4281, V4282, V4283, V4284, V4285, V4286)) end end end end end end, fun (V4287) -> fun (V4288) -> fun (V4289) -> fun (V4290) -> fun (V4291) -> fun (V4292) -> fun (V4293) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4287, V4288, V4289, V4290, V4291, V4292, V4293)) end end end end end end end}}, V2, V0, V1, V4260, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4294) -> ('Idris.Idris2.Builtin':'un--snd'(V4294)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4295) -> ('Idris.Idris2.Builtin':'un--snd'(V4295)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4260, V4, V5, V6, V4261, V8, {'Idris.Core.Value.NApp', V9, V4262, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E99, E100)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E97, E98)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E101, E102} -> (fun (V4296, V4297) -> case V10 of {'Idris.Core.Value.NRef', E103, E104} -> (fun (V4298, V4299) -> begin (V4300 = {'Idris.Core.Unify.MkUnifyInfo', V4254, 2}), begin (V4301 = {'Idris.Core.Value.NRef', V4296, V4297}), begin (V4302 = {'Idris.Core.Value.NRef', V4298, V4299}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4297, V4299)) of 1 -> fun (V4303) -> begin (V4327 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4304) -> begin (V4306 = begin (V4305 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4305} end), case V4306 of {'Idris.Prelude.Types.Left', E105} -> (fun (V4307) -> {'Idris.Prelude.Types.Left', V4307} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V4308) -> begin (V4312 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4309) -> fun (V4310) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4308, V5, V4309, V4310)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4311) -> ('Idris.Idris2.Builtin':'un--snd'(V4311)) end, V8)), [], V4304))), case V4312 of {'Idris.Prelude.Types.Left', E107} -> (fun (V4313) -> {'Idris.Prelude.Types.Left', V4313} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V4314) -> begin (V4318 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4315) -> fun (V4316) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4308, V5, V4315, V4316)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4317) -> ('Idris.Idris2.Builtin':'un--snd'(V4317)) end, V11)), [], V4304))), case V4318 of {'Idris.Prelude.Types.Left', E109} -> (fun (V4319) -> {'Idris.Prelude.Types.Left', V4319} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V4320) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4321) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4321)) end, fun (V4322) -> fun (V4323) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4322, V4323)) end end}, V4314)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4324) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4324)) end, fun (V4325) -> fun (V4326) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4325, V4326)) end end}, V4320))))))))} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4303))), case V4327 of {'Idris.Prelude.Types.Left', E111} -> (fun (V4328) -> {'Idris.Prelude.Types.Left', V4328} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V4329) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4330) -> fun (V4331) -> fun (V4332) -> fun (V4333) -> fun (V4334) -> fun (V4335) -> fun (V4336) -> fun (V4337) -> fun (V4338) -> ('dn--un--unifyD_Unify_Closure'(V4330, V4331, V4332, V4333, V4334, V4335, V4336, V4337, V4338)) end end end end end end end end end, fun (V4339) -> fun (V4340) -> fun (V4341) -> fun (V4342) -> fun (V4343) -> fun (V4344) -> fun (V4345) -> fun (V4346) -> fun (V4347) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4339, V4340, V4341, V4342, V4343, V4344, V4345, V4346, V4347)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4348) -> fun (V4349) -> fun (V4350) -> fun (V4351) -> fun (V4352) -> fun (V4353) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4348, V4349, V4350, V4351, V4352, V4353)) end end end end end end, fun (V4354) -> fun (V4355) -> fun (V4356) -> fun (V4357) -> fun (V4358) -> fun (V4359) -> fun (V4360) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4354, V4355, V4356, V4357, V4358, V4359, V4360)) end end end end end end end}}, V2, V0, V1, V4300, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4361) -> ('Idris.Idris2.Builtin':'un--snd'(V4361)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4362) -> ('Idris.Idris2.Builtin':'un--snd'(V4362)) end, V11))))(V4303)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4300, V4, V5, V6, V4301, V8, {'Idris.Core.Value.NApp', V9, V4302, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E103, E104)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E101, E102)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E95, E96)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E93, E94)); {'Idris.Core.Value.NMeta', E122, E123, E124} -> (fun (V4363, V4364, V4365) -> case V10 of {'Idris.Core.Value.NMeta', E125, E126, E127} -> (fun (V4366, V4367, V4368) -> fun (V4369) -> begin (V4370 = ('un--isDefInvertible'(V0, V4, V4364, V4369))), case V4370 of {'Idris.Prelude.Types.Left', E128} -> (fun (V4371) -> {'Idris.Prelude.Types.Left', V4371} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V4372) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4364, V4367)) of 1 -> case V4372 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E136, E137} -> (fun (V4373, V4374) -> V4374 end(E136, E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4375) -> fun (V4376) -> fun (V4377) -> fun (V4378) -> fun (V4379) -> fun (V4380) -> fun (V4381) -> fun (V4382) -> fun (V4383) -> ('dn--un--unifyD_Unify_Closure'(V4375, V4376, V4377, V4378, V4379, V4380, V4381, V4382, V4383)) end end end end end end end end end, fun (V4384) -> fun (V4385) -> fun (V4386) -> fun (V4387) -> fun (V4388) -> fun (V4389) -> fun (V4390) -> fun (V4391) -> fun (V4392) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4384, V4385, V4386, V4387, V4388, V4389, V4390, V4391, V4392)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4393) -> fun (V4394) -> fun (V4395) -> fun (V4396) -> fun (V4397) -> fun (V4398) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4393, V4394, V4395, V4396, V4397, V4398)) end end end end end end, fun (V4399) -> fun (V4400) -> fun (V4401) -> fun (V4402) -> fun (V4403) -> fun (V4404) -> fun (V4405) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4399, V4400, V4401, V4402, V4403, V4404, V4405)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4365, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4406) -> ('Idris.Idris2.Builtin':'un--snd'(V4406)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V4368, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4407) -> ('Idris.Idris2.Builtin':'un--snd'(V4407)) end, V11))))))(V4369)); 0 -> begin (V4408 = ('nested--11732-14576--in--un--localsIn'(V2, V4365, V4364, V4363, V4368, V4367, V4366, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4365, V4369))), case V4408 of {'Idris.Prelude.Types.Left', E130} -> (fun (V4409) -> {'Idris.Prelude.Types.Left', V4409} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V4410) -> begin (V4411 = ('nested--11732-14576--in--un--localsIn'(V2, V4365, V4364, V4363, V4368, V4367, V4366, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4368, V4369))), case V4411 of {'Idris.Prelude.Types.Left', E132} -> (fun (V4412) -> {'Idris.Prelude.Types.Left', V4412} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V4413) -> begin (V4414 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4410, V4413)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V4410, V4413)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V4414 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E134, E135} -> (fun (V4415, V4416) -> V4416 end(E134, E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V4365, V4364, V4363, V4368, V4367, V4366, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4363)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4363, V4364, V4365}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4366, V4367, V4368}, V11}))(V4369)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V4366, V4367, V4368}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V4363, V4364, V4365}, V8}))(V4369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E125, E126, E127)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4363, V4364, V4365}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E122, E123, E124)); _ -> case V10 of {'Idris.Core.Value.NMeta', E88, E89, E90} -> (fun (V4417, V4418, V4419) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E91, E92} -> (fun (V4420, V4421) -> V4421 end(E91, E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4417, V4418, V4419}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4417, V4418, V4419}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E88, E89, E90)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E70, E71} -> (fun (V4422, V4423) -> case V4423 of 3 -> case V7 of {'Idris.Core.Value.NRef', E72, E73} -> (fun (V4424, V4425) -> case V10 of {'Idris.Core.Value.NRef', E74, E75} -> (fun (V4426, V4427) -> begin (V4428 = {'Idris.Core.Unify.MkUnifyInfo', V4422, 3}), begin (V4429 = {'Idris.Core.Value.NRef', V4424, V4425}), begin (V4430 = {'Idris.Core.Value.NRef', V4426, V4427}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4425, V4427)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4431) -> fun (V4432) -> fun (V4433) -> fun (V4434) -> fun (V4435) -> fun (V4436) -> fun (V4437) -> fun (V4438) -> fun (V4439) -> ('dn--un--unifyD_Unify_Closure'(V4431, V4432, V4433, V4434, V4435, V4436, V4437, V4438, V4439)) end end end end end end end end end, fun (V4440) -> fun (V4441) -> fun (V4442) -> fun (V4443) -> fun (V4444) -> fun (V4445) -> fun (V4446) -> fun (V4447) -> fun (V4448) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4440, V4441, V4442, V4443, V4444, V4445, V4446, V4447, V4448)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4449) -> fun (V4450) -> fun (V4451) -> fun (V4452) -> fun (V4453) -> fun (V4454) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4449, V4450, V4451, V4452, V4453, V4454)) end end end end end end, fun (V4455) -> fun (V4456) -> fun (V4457) -> fun (V4458) -> fun (V4459) -> fun (V4460) -> fun (V4461) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4455, V4456, V4457, V4458, V4459, V4460, V4461)) end end end end end end end}}, V2, V0, V1, V4428, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4462) -> ('Idris.Idris2.Builtin':'un--snd'(V4462)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4463) -> ('Idris.Idris2.Builtin':'un--snd'(V4463)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4428, V4, V5, V6, V4429, V8, {'Idris.Core.Value.NApp', V9, V4430, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E74, E75)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E72, E73)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E76, E77} -> (fun (V4464, V4465) -> case V10 of {'Idris.Core.Value.NRef', E78, E79} -> (fun (V4466, V4467) -> begin (V4468 = {'Idris.Core.Unify.MkUnifyInfo', V4422, 2}), begin (V4469 = {'Idris.Core.Value.NRef', V4464, V4465}), begin (V4470 = {'Idris.Core.Value.NRef', V4466, V4467}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4465, V4467)) of 1 -> fun (V4471) -> begin (V4495 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4472) -> begin (V4474 = begin (V4473 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4473} end), case V4474 of {'Idris.Prelude.Types.Left', E80} -> (fun (V4475) -> {'Idris.Prelude.Types.Left', V4475} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V4476) -> begin (V4480 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4477) -> fun (V4478) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4476, V5, V4477, V4478)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4479) -> ('Idris.Idris2.Builtin':'un--snd'(V4479)) end, V8)), [], V4472))), case V4480 of {'Idris.Prelude.Types.Left', E82} -> (fun (V4481) -> {'Idris.Prelude.Types.Left', V4481} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V4482) -> begin (V4486 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4483) -> fun (V4484) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4476, V5, V4483, V4484)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4485) -> ('Idris.Idris2.Builtin':'un--snd'(V4485)) end, V11)), [], V4472))), case V4486 of {'Idris.Prelude.Types.Left', E84} -> (fun (V4487) -> {'Idris.Prelude.Types.Left', V4487} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V4488) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4489) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4489)) end, fun (V4490) -> fun (V4491) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4490, V4491)) end end}, V4482)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4492) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4492)) end, fun (V4493) -> fun (V4494) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4493, V4494)) end end}, V4488))))))))} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4471))), case V4495 of {'Idris.Prelude.Types.Left', E86} -> (fun (V4496) -> {'Idris.Prelude.Types.Left', V4496} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V4497) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4498) -> fun (V4499) -> fun (V4500) -> fun (V4501) -> fun (V4502) -> fun (V4503) -> fun (V4504) -> fun (V4505) -> fun (V4506) -> ('dn--un--unifyD_Unify_Closure'(V4498, V4499, V4500, V4501, V4502, V4503, V4504, V4505, V4506)) end end end end end end end end end, fun (V4507) -> fun (V4508) -> fun (V4509) -> fun (V4510) -> fun (V4511) -> fun (V4512) -> fun (V4513) -> fun (V4514) -> fun (V4515) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4507, V4508, V4509, V4510, V4511, V4512, V4513, V4514, V4515)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4516) -> fun (V4517) -> fun (V4518) -> fun (V4519) -> fun (V4520) -> fun (V4521) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4516, V4517, V4518, V4519, V4520, V4521)) end end end end end end, fun (V4522) -> fun (V4523) -> fun (V4524) -> fun (V4525) -> fun (V4526) -> fun (V4527) -> fun (V4528) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4522, V4523, V4524, V4525, V4526, V4527, V4528)) end end end end end end end}}, V2, V0, V1, V4468, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4529) -> ('Idris.Idris2.Builtin':'un--snd'(V4529)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4530) -> ('Idris.Idris2.Builtin':'un--snd'(V4530)) end, V11))))(V4471)) end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4468, V4, V5, V6, V4469, V8, {'Idris.Core.Value.NApp', V9, V4470, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E78, E79)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E76, E77)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E70, E71)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E68, E69)); _ -> case V7 of {'Idris.Core.Value.NLocal', E23, E24} -> (fun (V4531, V4532) -> case V10 of {'Idris.Core.Value.NLocal', E48, E49} -> (fun (V4533, V4534) -> fun (V4535) -> begin (V4536 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V4535))), case V4536 of {'Idris.Prelude.Types.Left', E50} -> (fun (V4537) -> {'Idris.Prelude.Types.Left', V4537} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V4538) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V4531, V4532}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V4533, V4534}, V11}, V4535)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49)); _ -> case V10 of {'Idris.Core.Value.NMeta', E43, E44, E45} -> (fun (V4539, V4540, V4541) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E46, E47} -> (fun (V4542, V4543) -> V4543 end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4539, V4540, V4541}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4539, V4540, V4541}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E43, E44, E45)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E25, E26} -> (fun (V4544, V4545) -> case V4545 of 3 -> case V7 of {'Idris.Core.Value.NRef', E27, E28} -> (fun (V4546, V4547) -> case V10 of {'Idris.Core.Value.NRef', E29, E30} -> (fun (V4548, V4549) -> begin (V4550 = {'Idris.Core.Unify.MkUnifyInfo', V4544, 3}), begin (V4551 = {'Idris.Core.Value.NRef', V4546, V4547}), begin (V4552 = {'Idris.Core.Value.NRef', V4548, V4549}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4547, V4549)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4553) -> fun (V4554) -> fun (V4555) -> fun (V4556) -> fun (V4557) -> fun (V4558) -> fun (V4559) -> fun (V4560) -> fun (V4561) -> ('dn--un--unifyD_Unify_Closure'(V4553, V4554, V4555, V4556, V4557, V4558, V4559, V4560, V4561)) end end end end end end end end end, fun (V4562) -> fun (V4563) -> fun (V4564) -> fun (V4565) -> fun (V4566) -> fun (V4567) -> fun (V4568) -> fun (V4569) -> fun (V4570) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4562, V4563, V4564, V4565, V4566, V4567, V4568, V4569, V4570)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4571) -> fun (V4572) -> fun (V4573) -> fun (V4574) -> fun (V4575) -> fun (V4576) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4571, V4572, V4573, V4574, V4575, V4576)) end end end end end end, fun (V4577) -> fun (V4578) -> fun (V4579) -> fun (V4580) -> fun (V4581) -> fun (V4582) -> fun (V4583) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4577, V4578, V4579, V4580, V4581, V4582, V4583)) end end end end end end end}}, V2, V0, V1, V4550, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4584) -> ('Idris.Idris2.Builtin':'un--snd'(V4584)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4585) -> ('Idris.Idris2.Builtin':'un--snd'(V4585)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4550, V4, V5, V6, V4551, V8, {'Idris.Core.Value.NApp', V9, V4552, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E29, E30)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E27, E28)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E31, E32} -> (fun (V4586, V4587) -> case V10 of {'Idris.Core.Value.NRef', E33, E34} -> (fun (V4588, V4589) -> begin (V4590 = {'Idris.Core.Unify.MkUnifyInfo', V4544, 2}), begin (V4591 = {'Idris.Core.Value.NRef', V4586, V4587}), begin (V4592 = {'Idris.Core.Value.NRef', V4588, V4589}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4587, V4589)) of 1 -> fun (V4593) -> begin (V4617 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4594) -> begin (V4596 = begin (V4595 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4595} end), case V4596 of {'Idris.Prelude.Types.Left', E35} -> (fun (V4597) -> {'Idris.Prelude.Types.Left', V4597} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V4598) -> begin (V4602 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4599) -> fun (V4600) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4598, V5, V4599, V4600)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4601) -> ('Idris.Idris2.Builtin':'un--snd'(V4601)) end, V8)), [], V4594))), case V4602 of {'Idris.Prelude.Types.Left', E37} -> (fun (V4603) -> {'Idris.Prelude.Types.Left', V4603} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V4604) -> begin (V4608 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4605) -> fun (V4606) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4598, V5, V4605, V4606)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4607) -> ('Idris.Idris2.Builtin':'un--snd'(V4607)) end, V11)), [], V4594))), case V4608 of {'Idris.Prelude.Types.Left', E39} -> (fun (V4609) -> {'Idris.Prelude.Types.Left', V4609} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V4610) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4611) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4611)) end, fun (V4612) -> fun (V4613) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4612, V4613)) end end}, V4604)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4614) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4614)) end, fun (V4615) -> fun (V4616) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4615, V4616)) end end}, V4610))))))))} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4593))), case V4617 of {'Idris.Prelude.Types.Left', E41} -> (fun (V4618) -> {'Idris.Prelude.Types.Left', V4618} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V4619) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4620) -> fun (V4621) -> fun (V4622) -> fun (V4623) -> fun (V4624) -> fun (V4625) -> fun (V4626) -> fun (V4627) -> fun (V4628) -> ('dn--un--unifyD_Unify_Closure'(V4620, V4621, V4622, V4623, V4624, V4625, V4626, V4627, V4628)) end end end end end end end end end, fun (V4629) -> fun (V4630) -> fun (V4631) -> fun (V4632) -> fun (V4633) -> fun (V4634) -> fun (V4635) -> fun (V4636) -> fun (V4637) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4629, V4630, V4631, V4632, V4633, V4634, V4635, V4636, V4637)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4638) -> fun (V4639) -> fun (V4640) -> fun (V4641) -> fun (V4642) -> fun (V4643) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4638, V4639, V4640, V4641, V4642, V4643)) end end end end end end, fun (V4644) -> fun (V4645) -> fun (V4646) -> fun (V4647) -> fun (V4648) -> fun (V4649) -> fun (V4650) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4644, V4645, V4646, V4647, V4648, V4649, V4650)) end end end end end end end}}, V2, V0, V1, V4590, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4651) -> ('Idris.Idris2.Builtin':'un--snd'(V4651)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4652) -> ('Idris.Idris2.Builtin':'un--snd'(V4652)) end, V11))))(V4593)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4590, V4, V5, V6, V4591, V8, {'Idris.Core.Value.NApp', V9, V4592, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33, E34)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E31, E32)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E25, E26)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E23, E24)); {'Idris.Core.Value.NMeta', E52, E53, E54} -> (fun (V4653, V4654, V4655) -> case V10 of {'Idris.Core.Value.NMeta', E55, E56, E57} -> (fun (V4656, V4657, V4658) -> fun (V4659) -> begin (V4660 = ('un--isDefInvertible'(V0, V4, V4654, V4659))), case V4660 of {'Idris.Prelude.Types.Left', E58} -> (fun (V4661) -> {'Idris.Prelude.Types.Left', V4661} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V4662) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4654, V4657)) of 1 -> case V4662 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E66, E67} -> (fun (V4663, V4664) -> V4664 end(E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4665) -> fun (V4666) -> fun (V4667) -> fun (V4668) -> fun (V4669) -> fun (V4670) -> fun (V4671) -> fun (V4672) -> fun (V4673) -> ('dn--un--unifyD_Unify_Closure'(V4665, V4666, V4667, V4668, V4669, V4670, V4671, V4672, V4673)) end end end end end end end end end, fun (V4674) -> fun (V4675) -> fun (V4676) -> fun (V4677) -> fun (V4678) -> fun (V4679) -> fun (V4680) -> fun (V4681) -> fun (V4682) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4674, V4675, V4676, V4677, V4678, V4679, V4680, V4681, V4682)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4683) -> fun (V4684) -> fun (V4685) -> fun (V4686) -> fun (V4687) -> fun (V4688) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4683, V4684, V4685, V4686, V4687, V4688)) end end end end end end, fun (V4689) -> fun (V4690) -> fun (V4691) -> fun (V4692) -> fun (V4693) -> fun (V4694) -> fun (V4695) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4689, V4690, V4691, V4692, V4693, V4694, V4695)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'(V4655, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4696) -> ('Idris.Idris2.Builtin':'un--snd'(V4696)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--++'(V4658, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4697) -> ('Idris.Idris2.Builtin':'un--snd'(V4697)) end, V11))))))(V4659)); 0 -> begin (V4698 = ('nested--11732-14576--in--un--localsIn'(V2, V4655, V4654, V4653, V4658, V4657, V4656, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4655, V4659))), case V4698 of {'Idris.Prelude.Types.Left', E60} -> (fun (V4699) -> {'Idris.Prelude.Types.Left', V4699} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V4700) -> begin (V4701 = ('nested--11732-14576--in--un--localsIn'(V2, V4655, V4654, V4653, V4658, V4657, V4656, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4658, V4659))), case V4701 of {'Idris.Prelude.Types.Left', E62} -> (fun (V4702) -> {'Idris.Prelude.Types.Left', V4702} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V4703) -> begin (V4704 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4700, V4703)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V4700, V4703)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V4704 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E64, E65} -> (fun (V4705, V4706) -> V4706 end(E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--11732-14575--in--un--pv'(V2, V4655, V4654, V4653, V4658, V4657, V4656, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4653)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4653, V4654, V4655}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4656, V4657, V4658}, V11}))(V4659)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V4656, V4657, V4658}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V4653, V4654, V4655}, V8}))(V4659)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55, E56, E57)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4653, V4654, V4655}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E52, E53, E54)); _ -> case V10 of {'Idris.Core.Value.NMeta', E18, E19, E20} -> (fun (V4707, V4708, V4709) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E21, E22} -> (fun (V4710, V4711) -> V4711 end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4707, V4708, V4709}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4707, V4708, V4709}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E18, E19, E20)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E0, E1} -> (fun (V4712, V4713) -> case V4713 of 3 -> case V7 of {'Idris.Core.Value.NRef', E2, E3} -> (fun (V4714, V4715) -> case V10 of {'Idris.Core.Value.NRef', E4, E5} -> (fun (V4716, V4717) -> begin (V4718 = {'Idris.Core.Unify.MkUnifyInfo', V4712, 3}), begin (V4719 = {'Idris.Core.Value.NRef', V4714, V4715}), begin (V4720 = {'Idris.Core.Value.NRef', V4716, V4717}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4715, V4717)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4721) -> fun (V4722) -> fun (V4723) -> fun (V4724) -> fun (V4725) -> fun (V4726) -> fun (V4727) -> fun (V4728) -> fun (V4729) -> ('dn--un--unifyD_Unify_Closure'(V4721, V4722, V4723, V4724, V4725, V4726, V4727, V4728, V4729)) end end end end end end end end end, fun (V4730) -> fun (V4731) -> fun (V4732) -> fun (V4733) -> fun (V4734) -> fun (V4735) -> fun (V4736) -> fun (V4737) -> fun (V4738) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4730, V4731, V4732, V4733, V4734, V4735, V4736, V4737, V4738)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4739) -> fun (V4740) -> fun (V4741) -> fun (V4742) -> fun (V4743) -> fun (V4744) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4739, V4740, V4741, V4742, V4743, V4744)) end end end end end end, fun (V4745) -> fun (V4746) -> fun (V4747) -> fun (V4748) -> fun (V4749) -> fun (V4750) -> fun (V4751) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4745, V4746, V4747, V4748, V4749, V4750, V4751)) end end end end end end end}}, V2, V0, V1, V4718, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4752) -> ('Idris.Idris2.Builtin':'un--snd'(V4752)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4753) -> ('Idris.Idris2.Builtin':'un--snd'(V4753)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4718, V4, V5, V6, V4719, V8, {'Idris.Core.Value.NApp', V9, V4720, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E2, E3)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E6, E7} -> (fun (V4754, V4755) -> case V10 of {'Idris.Core.Value.NRef', E8, E9} -> (fun (V4756, V4757) -> begin (V4758 = {'Idris.Core.Unify.MkUnifyInfo', V4712, 2}), begin (V4759 = {'Idris.Core.Value.NRef', V4754, V4755}), begin (V4760 = {'Idris.Core.Value.NRef', V4756, V4757}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4755, V4757)) of 1 -> fun (V4761) -> begin (V4785 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4762) -> begin (V4764 = begin (V4763 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4763} end), case V4764 of {'Idris.Prelude.Types.Left', E10} -> (fun (V4765) -> {'Idris.Prelude.Types.Left', V4765} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V4766) -> begin (V4770 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4767) -> fun (V4768) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4766, V5, V4767, V4768)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4769) -> ('Idris.Idris2.Builtin':'un--snd'(V4769)) end, V8)), [], V4762))), case V4770 of {'Idris.Prelude.Types.Left', E12} -> (fun (V4771) -> {'Idris.Prelude.Types.Left', V4771} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V4772) -> begin (V4776 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4773) -> fun (V4774) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V0, V2, V4766, V5, V4773, V4774)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4775) -> ('Idris.Idris2.Builtin':'un--snd'(V4775)) end, V11)), [], V4762))), case V4776 of {'Idris.Prelude.Types.Left', E14} -> (fun (V4777) -> {'Idris.Prelude.Types.Left', V4777} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V4778) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4779) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4779)) end, fun (V4780) -> fun (V4781) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4780, V4781)) end end}, V4772)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4782) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4782)) end, fun (V4783) -> fun (V4784) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4783, V4784)) end end}, V4778))))))))} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4761))), case V4785 of {'Idris.Prelude.Types.Left', E16} -> (fun (V4786) -> {'Idris.Prelude.Types.Left', V4786} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V4787) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4788) -> fun (V4789) -> fun (V4790) -> fun (V4791) -> fun (V4792) -> fun (V4793) -> fun (V4794) -> fun (V4795) -> fun (V4796) -> ('dn--un--unifyD_Unify_Closure'(V4788, V4789, V4790, V4791, V4792, V4793, V4794, V4795, V4796)) end end end end end end end end end, fun (V4797) -> fun (V4798) -> fun (V4799) -> fun (V4800) -> fun (V4801) -> fun (V4802) -> fun (V4803) -> fun (V4804) -> fun (V4805) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4797, V4798, V4799, V4800, V4801, V4802, V4803, V4804, V4805)) end end end end end end end end end}, {'Idris.Core.Normalise.dn--un--__mkQuote', fun (V4806) -> fun (V4807) -> fun (V4808) -> fun (V4809) -> fun (V4810) -> fun (V4811) -> ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_Closure'(V4806, V4807, V4808, V4809, V4810, V4811)) end end end end end end, fun (V4812) -> fun (V4813) -> fun (V4814) -> fun (V4815) -> fun (V4816) -> fun (V4817) -> fun (V4818) -> ('Idris.Idris2.Core.Normalise':'dn--un--quoteGen_Quote_Closure'(V4812, V4813, V4814, V4815, V4816, V4817, V4818)) end end end end end end end}}, V2, V0, V1, V4758, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4819) -> ('Idris.Idris2.Builtin':'un--snd'(V4819)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4820) -> ('Idris.Idris2.Builtin':'un--snd'(V4820)) end, V11))))(V4761)) end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4758, V4, V5, V6, V4759, V8, {'Idris.Core.Value.NApp', V9, V4760, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E8, E9)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E6, E7)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E0, E1)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end.
'un--unifyArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of [] -> fun (V9) -> case V8 of [] -> {'Idris.Prelude.Types.Right', ('un--success'())}; _ -> ('un--ufail'(V5, <<""/utf8>>, V9)) end end; [E0 | E1] -> (fun (V10, V11) -> fun (V12) -> case V8 of [E2 | E3] -> (fun (V13, V14) -> begin (V15 = (('un--unifyArgs'(V0, V1, V2, V3, V4, V5, V6, V11, V14))(V12))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V18 = (((('un--unify'(('Idris.Idris2.Builtin':'un--fst'(V0)), V1, V2, V3, ('un--lower'(V4)), V5, V6))(V10))(V13))(V12))), case V18 of {'Idris.Prelude.Types.Left', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V20) -> {'Idris.Prelude.Types.Right', ('un--union'(V20, V17))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('un--ufail'(V5, <<""/utf8>>, V12)) end end end(E0, E1)); _ -> fun (V21) -> ('un--ufail'(V5, <<""/utf8>>, V21)) end end.
'un--unifyApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V8 of {'Idris.Core.Value.NMeta', E248, E249, E250} -> (fun (V11, V12, V13) -> fun (V14) -> ('un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V12, V13, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V15) -> ('Idris.Idris2.Builtin':'un--snd'(V15)) end, V9)), V10, V14)) end end(E248, E249, E250)); _ -> case V10 of {'Idris.Core.Value.NApp', E121, E122, E123} -> (fun (V16, V17, V18) -> case V17 of {'Idris.Core.Value.NMeta', E245, E246, E247} -> (fun (V19, V20, V21) -> fun (V22) -> ('un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V16, V19, V20, V21, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V23) -> ('Idris.Idris2.Builtin':'un--snd'(V23)) end, V18)), {'Idris.Core.Value.NApp', V7, V8, V9}, V22)) end end(E245, E246, E247)); _ -> case V8 of {'Idris.Core.Value.NRef', E132, E133} -> (fun (V24, V25) -> fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Name against app, unifyIfEq"/utf8>> end, V26))), case V27 of {'Idris.Prelude.Types.Left', E134} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V29) -> case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V24, V25}, V9}, V26)); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V24, V25}, V9}, V10, V26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E132, E133)); {'Idris.Core.Value.NLocal', E136, E137} -> (fun (V30, V31) -> case V9 of [] -> case V10 of {'Idris.Core.Value.NApp', E188, E189, E190} -> (fun (V32, V33, V34) -> case V33 of {'Idris.Core.Value.NLocal', E216, E217} -> (fun (V35, V36) -> case V34 of [] -> fun (V37) -> begin (V39 = begin (V38 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E243} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V41) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V31, V36)) of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, []}, {'Idris.Core.Value.NApp', V32, {'Idris.Core.Value.NLocal', V35, V36}, []}, V37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E226, E227, E228, E229} -> (fun (V42, V43, V44, V45) -> fun (V46) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V46)) end end(E226, E227, E228, E229)); {'Idris.Core.Value.NDCon', E230, E231, E232, E233, E234} -> (fun (V47, V48, V49, V50, V51) -> fun (V52) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V52)) end end(E230, E231, E232, E233, E234)); {'Idris.Core.Value.NTCon', E235, E236, E237, E238, E239} -> (fun (V53, V54, V55, V56, V57) -> fun (V58) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V58)) end end(E235, E236, E237, E238, E239)); {'Idris.Core.Value.NPrimVal', E240, E241} -> (fun (V59, V60) -> fun (V61) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V61)) end end(E240, E241)); {'Idris.Core.Value.NType', E242} -> (fun (V62) -> fun (V63) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V63)) end end(E242)); _ -> fun (V64) -> case V3 of 0 -> begin (V66 = begin (V65 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V65} end), case V66 of {'Idris.Prelude.Types.Left', E218} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V68) -> begin (V69 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V68, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V64))), case V69 of {'Idris.Prelude.Types.Left', E220} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V71) -> case V71 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V73 = begin (V72 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V72} end), case V73 of {'Idris.Prelude.Types.Left', E222} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V75) -> begin (V76 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V75, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V64))), case V76 of {'Idris.Prelude.Types.Left', E224} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V78) -> case V78 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E216, E217)); _ -> case V10 of {'Idris.Core.Value.NBind', E199, E200, E201, E202} -> (fun (V79, V80, V81, V82) -> fun (V83) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V83)) end end(E199, E200, E201, E202)); {'Idris.Core.Value.NDCon', E203, E204, E205, E206, E207} -> (fun (V84, V85, V86, V87, V88) -> fun (V89) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V89)) end end(E203, E204, E205, E206, E207)); {'Idris.Core.Value.NTCon', E208, E209, E210, E211, E212} -> (fun (V90, V91, V92, V93, V94) -> fun (V95) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V95)) end end(E208, E209, E210, E211, E212)); {'Idris.Core.Value.NPrimVal', E213, E214} -> (fun (V96, V97) -> fun (V98) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V98)) end end(E213, E214)); {'Idris.Core.Value.NType', E215} -> (fun (V99) -> fun (V100) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V100)) end end(E215)); _ -> fun (V101) -> case V3 of 0 -> begin (V103 = begin (V102 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V102} end), case V103 of {'Idris.Prelude.Types.Left', E191} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V105) -> begin (V106 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V105, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V101))), case V106 of {'Idris.Prelude.Types.Left', E193} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V108) -> case V108 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V110 = begin (V109 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V109} end), case V110 of {'Idris.Prelude.Types.Left', E195} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V112) -> begin (V113 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V112, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V101))), case V113 of {'Idris.Prelude.Types.Left', E197} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V115) -> case V115 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E188, E189, E190)); _ -> case V10 of {'Idris.Core.Value.NBind', E171, E172, E173, E174} -> (fun (V116, V117, V118, V119) -> fun (V120) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V120)) end end(E171, E172, E173, E174)); {'Idris.Core.Value.NDCon', E175, E176, E177, E178, E179} -> (fun (V121, V122, V123, V124, V125) -> fun (V126) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V126)) end end(E175, E176, E177, E178, E179)); {'Idris.Core.Value.NTCon', E180, E181, E182, E183, E184} -> (fun (V127, V128, V129, V130, V131) -> fun (V132) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V132)) end end(E180, E181, E182, E183, E184)); {'Idris.Core.Value.NPrimVal', E185, E186} -> (fun (V133, V134) -> fun (V135) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V135)) end end(E185, E186)); {'Idris.Core.Value.NType', E187} -> (fun (V136) -> fun (V137) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V137)) end end(E187)); _ -> fun (V138) -> case V3 of 0 -> begin (V140 = begin (V139 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V139} end), case V140 of {'Idris.Prelude.Types.Left', E163} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V142) -> begin (V143 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V142, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V138))), case V143 of {'Idris.Prelude.Types.Left', E165} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V145) -> case V145 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V147 = begin (V146 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V146} end), case V147 of {'Idris.Prelude.Types.Left', E167} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V149) -> begin (V150 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V149, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V138))), case V150 of {'Idris.Prelude.Types.Left', E169} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V152) -> case V152 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E146, E147, E148, E149} -> (fun (V153, V154, V155, V156) -> fun (V157) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V157)) end end(E146, E147, E148, E149)); {'Idris.Core.Value.NDCon', E150, E151, E152, E153, E154} -> (fun (V158, V159, V160, V161, V162) -> fun (V163) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V163)) end end(E150, E151, E152, E153, E154)); {'Idris.Core.Value.NTCon', E155, E156, E157, E158, E159} -> (fun (V164, V165, V166, V167, V168) -> fun (V169) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V169)) end end(E155, E156, E157, E158, E159)); {'Idris.Core.Value.NPrimVal', E160, E161} -> (fun (V170, V171) -> fun (V172) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V172)) end end(E160, E161)); {'Idris.Core.Value.NType', E162} -> (fun (V173) -> fun (V174) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V174)) end end(E162)); _ -> fun (V175) -> case V3 of 0 -> begin (V177 = begin (V176 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V176} end), case V177 of {'Idris.Prelude.Types.Left', E138} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V179) -> begin (V180 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V179, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V175))), case V180 of {'Idris.Prelude.Types.Left', E140} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V182) -> case V182 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V184 = begin (V183 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V183} end), case V184 of {'Idris.Prelude.Types.Left', E142} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V186) -> begin (V187 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V186, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V175))), case V187 of {'Idris.Prelude.Types.Left', E144} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V189) -> case V189 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E136, E137)); _ -> fun (V190) -> case V3 of 0 -> begin (V192 = begin (V191 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V191} end), case V192 of {'Idris.Prelude.Types.Left', E124} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V194) -> begin (V195 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V194, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V190))), case V195 of {'Idris.Prelude.Types.Left', E126} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V197) -> case V197 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V199 = begin (V198 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V198} end), case V199 of {'Idris.Prelude.Types.Left', E128} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V201) -> begin (V202 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V201, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V190))), case V202 of {'Idris.Prelude.Types.Left', E130} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V204) -> case V204 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E121, E122, E123)); _ -> case V8 of {'Idris.Core.Value.NRef', E8, E9} -> (fun (V205, V206) -> fun (V207) -> begin (V208 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Name against app, unifyIfEq"/utf8>> end, V207))), case V208 of {'Idris.Prelude.Types.Left', E10} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V210) -> case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V205, V206}, V9}, V207)); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V205, V206}, V9}, V10, V207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8, E9)); {'Idris.Core.Value.NLocal', E12, E13} -> (fun (V211, V212) -> case V9 of [] -> case V10 of {'Idris.Core.Value.NApp', E64, E65, E66} -> (fun (V213, V214, V215) -> case V214 of {'Idris.Core.Value.NLocal', E92, E93} -> (fun (V216, V217) -> case V215 of [] -> fun (V218) -> begin (V220 = begin (V219 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V219} end), case V220 of {'Idris.Prelude.Types.Left', E119} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V222) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V212, V217)) of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, []}, {'Idris.Core.Value.NApp', V213, {'Idris.Core.Value.NLocal', V216, V217}, []}, V218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E102, E103, E104, E105} -> (fun (V223, V224, V225, V226) -> fun (V227) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V227)) end end(E102, E103, E104, E105)); {'Idris.Core.Value.NDCon', E106, E107, E108, E109, E110} -> (fun (V228, V229, V230, V231, V232) -> fun (V233) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V233)) end end(E106, E107, E108, E109, E110)); {'Idris.Core.Value.NTCon', E111, E112, E113, E114, E115} -> (fun (V234, V235, V236, V237, V238) -> fun (V239) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V239)) end end(E111, E112, E113, E114, E115)); {'Idris.Core.Value.NPrimVal', E116, E117} -> (fun (V240, V241) -> fun (V242) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V242)) end end(E116, E117)); {'Idris.Core.Value.NType', E118} -> (fun (V243) -> fun (V244) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V244)) end end(E118)); _ -> fun (V245) -> case V3 of 0 -> begin (V247 = begin (V246 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V246} end), case V247 of {'Idris.Prelude.Types.Left', E94} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V249) -> begin (V250 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V249, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V245))), case V250 of {'Idris.Prelude.Types.Left', E96} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V252) -> case V252 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V254 = begin (V253 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V253} end), case V254 of {'Idris.Prelude.Types.Left', E98} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V256) -> begin (V257 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V256, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V245))), case V257 of {'Idris.Prelude.Types.Left', E100} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V259) -> case V259 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E92, E93)); _ -> case V10 of {'Idris.Core.Value.NBind', E75, E76, E77, E78} -> (fun (V260, V261, V262, V263) -> fun (V264) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V264)) end end(E75, E76, E77, E78)); {'Idris.Core.Value.NDCon', E79, E80, E81, E82, E83} -> (fun (V265, V266, V267, V268, V269) -> fun (V270) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V270)) end end(E79, E80, E81, E82, E83)); {'Idris.Core.Value.NTCon', E84, E85, E86, E87, E88} -> (fun (V271, V272, V273, V274, V275) -> fun (V276) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V276)) end end(E84, E85, E86, E87, E88)); {'Idris.Core.Value.NPrimVal', E89, E90} -> (fun (V277, V278) -> fun (V279) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V279)) end end(E89, E90)); {'Idris.Core.Value.NType', E91} -> (fun (V280) -> fun (V281) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V281)) end end(E91)); _ -> fun (V282) -> case V3 of 0 -> begin (V284 = begin (V283 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V283} end), case V284 of {'Idris.Prelude.Types.Left', E67} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V286) -> begin (V287 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V286, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V282))), case V287 of {'Idris.Prelude.Types.Left', E69} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V289) -> case V289 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V291 = begin (V290 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V290} end), case V291 of {'Idris.Prelude.Types.Left', E71} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V293) -> begin (V294 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V293, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V282))), case V294 of {'Idris.Prelude.Types.Left', E73} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V296) -> case V296 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E64, E65, E66)); _ -> case V10 of {'Idris.Core.Value.NBind', E47, E48, E49, E50} -> (fun (V297, V298, V299, V300) -> fun (V301) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V301)) end end(E47, E48, E49, E50)); {'Idris.Core.Value.NDCon', E51, E52, E53, E54, E55} -> (fun (V302, V303, V304, V305, V306) -> fun (V307) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V307)) end end(E51, E52, E53, E54, E55)); {'Idris.Core.Value.NTCon', E56, E57, E58, E59, E60} -> (fun (V308, V309, V310, V311, V312) -> fun (V313) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V313)) end end(E56, E57, E58, E59, E60)); {'Idris.Core.Value.NPrimVal', E61, E62} -> (fun (V314, V315) -> fun (V316) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V316)) end end(E61, E62)); {'Idris.Core.Value.NType', E63} -> (fun (V317) -> fun (V318) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V318)) end end(E63)); _ -> fun (V319) -> case V3 of 0 -> begin (V321 = begin (V320 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V320} end), case V321 of {'Idris.Prelude.Types.Left', E39} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V323) -> begin (V324 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V323, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V319))), case V324 of {'Idris.Prelude.Types.Left', E41} -> (fun (V325) -> {'Idris.Prelude.Types.Left', V325} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V326) -> case V326 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V328 = begin (V327 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V327} end), case V328 of {'Idris.Prelude.Types.Left', E43} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V330) -> begin (V331 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V330, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V319))), case V331 of {'Idris.Prelude.Types.Left', E45} -> (fun (V332) -> {'Idris.Prelude.Types.Left', V332} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V333) -> case V333 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E22, E23, E24, E25} -> (fun (V334, V335, V336, V337) -> fun (V338) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V338)) end end(E22, E23, E24, E25)); {'Idris.Core.Value.NDCon', E26, E27, E28, E29, E30} -> (fun (V339, V340, V341, V342, V343) -> fun (V344) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V344)) end end(E26, E27, E28, E29, E30)); {'Idris.Core.Value.NTCon', E31, E32, E33, E34, E35} -> (fun (V345, V346, V347, V348, V349) -> fun (V350) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V350)) end end(E31, E32, E33, E34, E35)); {'Idris.Core.Value.NPrimVal', E36, E37} -> (fun (V351, V352) -> fun (V353) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V353)) end end(E36, E37)); {'Idris.Core.Value.NType', E38} -> (fun (V354) -> fun (V355) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V355)) end end(E38)); _ -> fun (V356) -> case V3 of 0 -> begin (V358 = begin (V357 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V357} end), case V358 of {'Idris.Prelude.Types.Left', E14} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V360) -> begin (V361 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V360, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V356))), case V361 of {'Idris.Prelude.Types.Left', E16} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V363) -> case V363 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V365 = begin (V364 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V364} end), case V365 of {'Idris.Prelude.Types.Left', E18} -> (fun (V366) -> {'Idris.Prelude.Types.Left', V366} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V367) -> begin (V368 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V367, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V356))), case V368 of {'Idris.Prelude.Types.Left', E20} -> (fun (V369) -> {'Idris.Prelude.Types.Left', V369} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V370) -> case V370 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E12, E13)); _ -> fun (V371) -> case V3 of 0 -> begin (V373 = begin (V372 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V372} end), case V373 of {'Idris.Prelude.Types.Left', E0} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V375) -> begin (V376 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V375, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V371))), case V376 of {'Idris.Prelude.Types.Left', E2} -> (fun (V377) -> {'Idris.Prelude.Types.Left', V377} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V378) -> case V378 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V380 = begin (V379 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V379} end), case V380 of {'Idris.Prelude.Types.Left', E4} -> (fun (V381) -> {'Idris.Prelude.Types.Left', V381} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V382) -> begin (V383 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V382, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V371))), case V383 of {'Idris.Prelude.Types.Left', E6} -> (fun (V384) -> {'Idris.Prelude.Types.Left', V384} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V385) -> case V385 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'un--unify'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V7, V8) -> fun (V9) -> fun (V10) -> ((((((((V7(V1))(V2))(V3))(V4))(V5))(V6))(V9))(V10)) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ufail'(V0, V1, V2) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V0, V1}, V2)).
'un--tooBig'(V0, V1, V2, V3) -> case V1 of 0 -> 1; _ -> case V3 of {'Idris.Core.TT.App', E8, E9, E10} -> (fun (V4, V5, V6) -> ('un--tooBig'(V0, V1, [V6 | V2], V5)) end(E8, E9, E10)); _ -> case V1 of 0 -> 0; _ -> begin (V7 = (V1 - 1)), case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> case ('un--tooBig'(V0, (1 + V7), [], V11)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V23)) end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V27, V28, V29, V30)) end end end end end end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V32)) end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V35, V36, V37)) end end end end end}, fun (V38) -> ('un--tooBig'(V0, V7, [], V38)) end, V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); {'Idris.Core.TT.Meta', E4, E5, E6, E7} -> (fun (V39, V40, V41, V42) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V54)) end end, fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V58, V59, V60, V61)) end end end end end end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V63)) end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V66, V67, V68)) end end end end end}, fun (V69) -> ('un--tooBig'(V0, V7, [], V69)) end, V42)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V72, V73, V74)) end end end end end, fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V77, V78, V79)) end end end end end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V81)) end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V85, V86, V87, V88)) end end end end end end end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V90)) end end, fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V93, V94, V95)) end end end end end}, fun (V96) -> ('un--tooBig'(V0, V7, [], V96)) end, V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5, E6, E7)); _ -> case case V0 of 1 -> 1; 0 -> ('nested--11481-10514--in--un--isFn'(V7, V3, V2, V0, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('nested--11481-10515--in--un--tooBigArgs'(V7, V3, V2, V0, 1, V7, V2)); 0 -> ('nested--11481-10515--in--un--tooBigArgs'(V7, V3, V2, V0, V0, (1 + V7), V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end.
'un--toSubVars'(V0, V1) -> case V0 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V2, V3) -> case ('un--toSubVars'(V3, ('Idris.Idris2.Core.TT':'un--dropFirst'(V1)))) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V4, V5) -> case ('nested--7820-7262--in--un--anyFirst'(V2, V3, V1, V1)) of 1 -> {'Idris.Builtin.DPair.MkDPair', [V2 | V4], {'Idris.Core.TT.KeepCons', V5}}; 0 -> {'Idris.Builtin.DPair.MkDPair', V4, {'Idris.Core.TT.DropCons', V5}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--success'() -> {'Idris.Core.Unify.MkUnifyResult', [], 0, [], {'Idris.Core.Unify.NoLazy'}}.
'un--solvedHole'(V0) -> {'Idris.Core.Unify.MkUnifyResult', [], 1, [V0 | []], {'Idris.Core.Unify.NoLazy'}}.
'un--solveIfUndefined'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V43 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V9}, case V14 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V15 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V43 of {'Idris.Prelude.Types.Left', E34} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V45) -> case V45 of {'Idris.Prelude.Types.Just', E36} -> (fun (V46) -> case V46 of {'Idris.Core.Context.Hole', E37, E38} -> (fun (V47, V48) -> begin (V49 = ('un--patternEnvTm'(V1, V2, V0, V3, V10, V6))), case V49 of {'Idris.Prelude.Types.Left', E39} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V51) -> case V51 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E41} -> (fun (V52) -> case V52 of {'Idris.Builtin.DPair.MkDPair', E42, E43} -> (fun (V53, V54) -> case V54 of {'Idris.Builtin.MkPair', E44, E45} -> (fun (V55, V56) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V5, V56)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E46} -> (fun (V57) -> begin (V86 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V9}, case V14 of {'Idris.Core.Context.MkDefs', E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74} -> (fun (V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85) -> V58 end(E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))), case V86 of {'Idris.Prelude.Types.Left', E75} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V88) -> case V88 of {'Idris.Prelude.Types.Just', E77} -> (fun (V89) -> begin (V90 = ('un--instantiate'(V1, V2, V0, V53, V7, ('un--inTerm'()), V3, V8, V9, ('Idris.Idris2.Prelude.Types.List':'un--length'(V10)), V89, V55, V5, V57, V6))), case V90 of {'Idris.Prelude.Types.Left', E78} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V92) -> {'Idris.Prelude.Types.Right', 1} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Can\x{27}t happen: no definition"/utf8>>}, V6)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37, E38)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E36)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'un--solveHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> begin (V22 = begin (V21 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> begin (V25 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V20, V16))), case V25 of {'Idris.Prelude.Types.Left', E4} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V27) -> case case ('nested--11712-12199--in--un--solutionHeadSame'(V2, V3, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V15)) of 1 -> 1; 0 -> ('nested--11712-12198--in--un--inNoSolve'(V2, V3, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V8, case V24 of {'Idris.Core.UnifyState.MkUState', E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V33 end(E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> begin (V68 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V8}, case V20 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> V40 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V16))), case V68 of {'Idris.Prelude.Types.Left', E34} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V70) -> case V70 of {'Idris.Prelude.Types.Just', E36} -> (fun (V71) -> begin (V72 = ('un--instantiate'(V0, V1, V3, V2, V4, V5, V6, V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--length'(V9)), V71, V11, V13, V14, V16))), case V72 of {'Idris.Prelude.Types.Left', E37} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V74) -> {'Idris.Prelude.Types.Right', ('un--solvedHole'(V8))} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t happen: Lost hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))))}, V16)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--solveConstraintsAfter'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V25 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V10) -> fun (V11) -> ('un--retryGuess'(V0, V1, V3, V4, V10, V11)) end end, ('Idris.Idris2.Data.List':'un--filter'(fun (V12) -> ('nested--22811-20517--in--un--afterStart'(V4, V3, V2, V1, V0, V12)) end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V9 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V14 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), [], V5))), case V25 of {'Idris.Prelude.Types.Left', E14} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V27) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V30, V31, V32)) end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V35, V36, V37)) end end end end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V39)) end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V43, V44, V45, V46)) end end end end end end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V48)) end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V51, V52, V53)) end end end end end}, fun (V54) -> V54 end, V27)) of 1 -> ('un--solveConstraintsAfter'(V0, V1, V2, V3, 0, V5)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--solveConstraints'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V23 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V9) -> fun (V10) -> ('un--retryGuess'(V0, V1, V2, V3, V9, V10)) end end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V8 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V12 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), [], V4))), case V23 of {'Idris.Prelude.Types.Left', E14} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V25) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V41, V42, V43, V44)) end end end end end end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V49, V50, V51)) end end end end end}, fun (V52) -> V52 end, V25)) of 1 -> ('un--solveConstraints'(V0, V1, V2, 0, V4)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--setInvertible'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V36 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V7 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V8 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V36 of {'Idris.Prelude.Types.Left', E30} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V38) -> case V38 of {'Idris.Prelude.Types.Just', E32} -> (fun (V39) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V40) -> case V40 of {'Idris.Prelude.Types.Left', E33} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V42) -> {'Idris.Prelude.Types.Right', 0} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V43) -> ('Idris.Idris2.Core.Context':'un--addDef'(V0, V2, case V39 of {'Idris.Core.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64) -> {'Idris.Core.Context.MkGlobalDef', V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, 1, V59, V60, V61, V62, V63, V64} end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V43)) end, V3)) end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V1, V2, V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--retryGuess'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V42 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V6}, case V13 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V14 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5))), case V42 of {'Idris.Prelude.Types.Left', E34} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V44) -> case V44 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E36} -> (fun (V45) -> begin (V46 = {'Idris.Prelude.Types.Just', V45}), (('case--case block in retryGuess-19195'(V6, V8, V9, V3, V2, V1, V0, V13, V45, V46, case V45 of {'Idris.Core.Context.MkGlobalDef', E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> V64 end(E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5)) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--retry'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> ('case--retry-18608'(V0, V3, V2, V1, V8, ('Idris.Idris2.Libraries.Data.IntMap':'un--lookup'(V3, case V8 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V13 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--postponeS'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V3 of 1 -> ('un--postpone'(V0, V1, V2, V4, ('un--lower'(V5)), V6, V7, V9, V8, V10)); 0 -> ('un--postpone'(V0, V1, V2, V4, V5, V6, V7, V8, V9, V10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> begin (V13 = {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V12) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V12} end, V10))}), fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E0} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Normalise':'dn--un--convert_Convert_NF'(V0, V2, V18, V6, V13, V11, V14))), case V19 of {'Idris.Prelude.Types.Left', E2} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V21) -> case V21 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Not in pattern fragment"/utf8>>, V6, V13, V11, V14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--postpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V42 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V13, V6, V7, V17))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V13, V6, V8, V17))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V30 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V24, V25, V26)) end end end, fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V27, V28, V29)) end end end}, V20, V17))), case V30 of {'Idris.Prelude.Types.Left', E8} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V32) -> begin (V39 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V33, V34, V35)) end end end, fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V36, V37, V38)) end end end}, V23, V17))), case V39 of {'Idris.Prelude.Types.Left', E10} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V41) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V32)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" =?= "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V41))))))))))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V9))), case V42 of {'Idris.Prelude.Types.Left', E12} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V44) -> begin (V45 = ('nested--7125-6621--in--un--checkDefined'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V13, V7, V9))), case V45 of {'Idris.Prelude.Types.Left', E14} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V47) -> begin (V48 = ('nested--7125-6621--in--un--checkDefined'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V13, V8, V9))), case V48 of {'Idris.Prelude.Types.Left', E16} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V50) -> begin (V53 = ('Idris.Idris2.Core.UnifyState':'un--addConstraint'(V2, V1, {'Idris.Core.UnifyState.MkConstraint', V0, V3, case V4 of {'Idris.Core.Unify.MkUnifyInfo', E18, E19} -> (fun (V51, V52) -> V51 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V7, V8}, V9))), case V53 of {'Idris.Prelude.Types.Left', E20} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V55) -> begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V55)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" NEW CONSTRAINT "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3)))))) end, V9))), case V56 of {'Idris.Prelude.Types.Left', E22} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V58) -> begin (V59 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"X"/utf8>> end, V6, V7, V9))), case V59 of {'Idris.Prelude.Types.Left', E24} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V61) -> begin (V62 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Y"/utf8>> end, V6, V8, V9))), case V62 of {'Idris.Prelude.Types.Left', E26} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V64) -> {'Idris.Prelude.Types.Right', ('un--constrain'(V55))} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--patternEnvTm'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V9, V5))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Right', ('case--patternEnvTm-7749'(V2, V4, V3, V1, V0, V9, V12, ('un--getVarsTm'([], V4))))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--patternEnv'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V9, V5))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V14 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V13) -> ('Idris.Idris2.Core.Normalise':'un--evalArg'(V0, V2, V12, V13)) end, V4, [], V5))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Right', ('case--patternEnv-7474'(V2, V4, V3, V1, V0, V9, V12, V16, ('un--getVars'(V2, [], V16))))} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--occursCheck'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = (('un--getMetaNames'(V1, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> ('case--occursCheck-8051'(V0, V6, V5, V4, V3, V2, V1, V10, ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V14)) end end}, V5, V10)), V7)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--lower'(V0) -> case V0 of {'Idris.Core.Unify.MkUnifyInfo', E0, E1} -> (fun (V1, V2) -> {'Idris.Core.Unify.MkUnifyInfo', 0, V2} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isHoleApp'(V0) -> case V0 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V1, V2, V3) -> case V2 of {'Idris.Core.Value.NMeta', E3, E4, E5} -> (fun (V4, V5, V6) -> 1 end(E3, E4, E5)); _ -> 0 end end(E0, E1, E2)); _ -> 0 end.
'un--isDefInvertible'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V36 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V2}, case V7 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V8 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V36 of {'Idris.Prelude.Types.Left', E30} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V38) -> case V38 of {'Idris.Prelude.Types.Just', E32} -> (fun (V39) -> {'Idris.Prelude.Types.Right', case V39 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V54 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.UndefinedName', V1, {'Idris.Core.Name.Resolved', V2}}, V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--instantiate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V3, V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Instantiating in "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V16, V17)) end end}, V3)))) end, V13, V14))), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> begin (V44 = case V10 of {'Idris.Core.Context.MkGlobalDef', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> case V22 of {'Idris.Core.Name.PV', E23, E24} -> (fun (V42, V43) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.PatternVariableUnifies', V2, V4, V6, {'Idris.Core.Name.PV', V42, V43}, V12}, V14)) end(E23, E24)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V44 of {'Idris.Prelude.Types.Left', E25} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V46) -> begin (V68 = case V10 of {'Idris.Core.Context.MkGlobalDef', E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> V49 end(E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V69 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Type: "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)))) end, V68, V14))), case V69 of {'Idris.Prelude.Types.Left', E48} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V71) -> begin (V75 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With locs: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V73, V74)) end end}, V11)))) end, V14))), case V75 of {'Idris.Prelude.Types.Left', E50} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V77) -> begin (V81 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"From vars: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V78)) end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V79, V80)) end end}, V3)))) end, V14))), case V81 of {'Idris.Prelude.Types.Left', E52} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V83) -> begin (V85 = begin (V84 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V84} end), case V85 of {'Idris.Prelude.Types.Left', E54} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V87) -> begin (V88 = (('nested--9088-8385--in--un--mkDef'(V2, V3, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, [], V3, V11, {'Idris.Core.Unify.INil'}, V13, V68))(V14))), case V88 of {'Idris.Prelude.Types.Left', E56} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V90) -> begin (V91 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Definition"/utf8>> end, V90, V14))), case V91 of {'Idris.Prelude.Types.Left', E58} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V93) -> begin (V94 = {'Idris.Core.Context.MkPMDefInfo', {'Idris.Core.Context.SolvedHole', V9}, ('nested--9088-8382--in--un--isSimple'(V2, V3, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V90))}), begin (V116 = case V10 of {'Idris.Core.Context.MkGlobalDef', E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80} -> (fun (V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115) -> {'Idris.Core.Context.MkGlobalDef', V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, {'Idris.Core.Context.PMDef', V94, [], {'Idris.Core.CaseTree.STerm', 0, V90}, {'Idris.Core.CaseTree.STerm', 0, V90}, []}, V113, V114, V115} end(E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V121 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V117) -> case V117 of {'Idris.Prelude.Types.Left', E81} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V119) -> {'Idris.Prelude.Types.Right', 0} end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V120) -> ('Idris.Idris2.Core.Context':'un--addDef'(V0, {'Idris.Core.Name.Resolved', V8}, V116, V120)) end, V14))), case V121 of {'Idris.Prelude.Types.Left', E83} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V123) -> ('Idris.Idris2.Core.UnifyState':'un--removeHole'(V1, V8, V14)) end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inTerm'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 1}.
'un--inSearch'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 3}.
'un--inMatch'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 2}.
'un--inLHS'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 0}.
'un--headsConvert'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Prelude.Types.Just', E2} -> (fun (V8) -> case V7 of {'Idris.Prelude.Types.Just', E5} -> (fun (V9) -> ('case--headsConvert-11032'(V0, V8, V9, V5, V4, V3, V2, V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Data.List':'un--reverse'(V8)), ('Idris.Idris2.Data.List':'un--reverse'(V9))})) end(E5)); _ -> fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing to convert"/utf8>> end, V10))), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Right', 1} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2)); _ -> fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing to convert"/utf8>> end, V14))), case V15 of {'Idris.Prelude.Types.Left', E0} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Right', 1} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--giveUpConstraints'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V7) -> fun (V8) -> ('nested--22869-20571--in--un--constraintToHole'(V1, V0, V7, V8)) end end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V6 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V10 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getVarsTm'(V0, V1) -> case V1 of [] -> {'Idris.Prelude.Types.Just', []}; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Core.TT.Local', E2, E3, E4} -> (fun (V4, V5, V6) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V9, V10)) end end}, V6, V0)) of 1 -> {'Idris.Prelude.Types.Nothing'}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--getVarsTm'([V6 | V0], V3)), fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'([V6 | V11])) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getVars'(V0, V1, V2) -> case V2 of [] -> {'Idris.Prelude.Types.Just', []}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Core.Value.NApp', E2, E3, E4} -> (fun (V5, V6, V7) -> case V6 of {'Idris.Core.Value.NLocal', E5, E6} -> (fun (V8, V9) -> case V7 of [] -> case ('nested--7689-7153--in--un--inArgs'(V0, V9, V8, V5, V4, V1, V9, V1)) of 1 -> {'Idris.Prelude.Types.Nothing'}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--getVars'(V0, [V9 | V1], V4)), fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'([V9 | V10])) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> {'Idris.Prelude.Types.Nothing'} end end(E5, E6)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E2, E3, E4)); {'Idris.Core.Value.NAs', E7, E8, E9, E10} -> (fun (V11, V12, V13, V14) -> ('un--getVars'(V0, V1, [V14 | V4])) end(E7, E8, E9, E10)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getMetaNames'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.TT':'un--getMetas'(V1))), ('un--chaseMetas'(V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V2)), ('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()))) end.
'un--getIVars'(V0) -> case V0 of {'Idris.Core.Unify.INil'} -> (fun () -> [] end()); {'Idris.Core.Unify.ICons', E0, E1} -> (fun (V1, V2) -> [V1 | ('un--getIVars'(V2))] end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getArgTypes'(V0, V1, V2) -> case V1 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V3, V4, V5, V6) -> case V5 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V7, V8, V9, V10) -> fun (V11) -> case V2 of [E8 | E9] -> (fun (V12, V13) -> begin (V17 = begin (V14 = (((V6(V0))(V12))(V11))), case V14 of {'Idris.Prelude.Types.Left', E10} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V16) -> (('un--getArgTypes'(V0, V16, V13))(V11)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V17 of {'Idris.Prelude.Types.Left', E12} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V19) -> case V19 of {'Idris.Prelude.Types.Just', E14} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', [V10 | V20]}} end(E14)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> case V2 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', []}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E4, E5, E6, E7)); _ -> fun (V21) -> case V2 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', []}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E0, E1, E2, E3)); _ -> fun (V22) -> case V2 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', []}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end.
'un--forceMeta'(V0, V1, V2) -> case V1 of 0 -> {'Idris.Core.TT.TForce', ('Idris.Idris2.Core.TT':'un--getLoc'(V2)), V0, V2}; _ -> begin (V3 = (V1 - 1)), case V2 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> {'Idris.Core.TT.Bind', V4, V5, V6, ('un--forceMeta'(V0, V3, V7))} end(E0, E1, E2, E3)); _ -> {'Idris.Core.TT.TForce', ('Idris.Idris2.Core.TT':'un--getLoc'(V2)), V0, V2} end end end.
'un--dumpArg'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.MkClosure', E6, E7, E8, E9, E10} -> (fun (V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E11} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V4))), case V14 of {'Idris.Prelude.Types.Left', E13} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(('Idris.Idris2.Prelude.Types.List':'un--++'(V5, V0)), V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"Term: "/utf8>> end, V9, V4))), case V17 of {'Idris.Prelude.Types.Left', E15} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V19) -> begin (V20 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V1, V0, V16, {'Idris.Core.Value.MkClosure', V5, V6, V7, V8, V9}))(V4))), case V20 of {'Idris.Prelude.Types.Left', E17} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V22) -> ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"  "/utf8>> end, V2, V22, V4)) end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7, E8, E9, E10)); _ -> begin (V24 = begin (V23 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V23} end), case V24 of {'Idris.Prelude.Types.Left', E0} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V26, V4))), case V27 of {'Idris.Prelude.Types.Left', E2} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V29) -> begin (V30 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V1, V0, V29, V3))(V4))), case V30 of {'Idris.Prelude.Types.Left', E4} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V32) -> ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"  "/utf8>> end, V2, V32, V4)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--delayMeta'(V0, V1, V2, V3, V4) -> case V2 of 0 -> {'Idris.Core.TT.TDelay', ('Idris.Idris2.Core.TT':'un--getLoc'(V4)), V1, V3, V4}; _ -> begin (V5 = (V2 - 1)), case V4 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> {'Idris.Core.TT.Bind', V6, V7, V8, ('un--delayMeta'([V7 | V0], V1, V5, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V3)), V9))} end(E0, E1, E2, E3)); _ -> {'Idris.Core.TT.TDelay', ('Idris.Idris2.Core.TT':'un--getLoc'(V4)), V1, V3, V4} end end end.
'un--convertErrorS'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V2 of 1 -> ('un--convertError'(V0, V1, V3, V4, V6, V5, V7)); 0 -> ('un--convertError'(V0, V1, V3, V4, V5, V6, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--convertError'(V0, V1, V2, V3, V4, V5, V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V10, V6))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V13, V3, V4, V6))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V1, V0, V13, V3, V5, V6))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.CantConvert', V0, V2, V3, V16, V19}, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--constrain'(V0) -> {'Idris.Core.Unify.MkUnifyResult', [V0 | []], 0, [], {'Idris.Core.Unify.NoLazy'}}.
'un--checkDots'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V7 = ('Idris.Idris2.Core.UnifyState':'un--getCurrentHoles'(V0, V2))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> begin (V23 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V10) -> ('nested--23319-20973--in--un--checkConstraint'(V1, V0, V10)) end, ('Idris.Idris2.Data.List':'un--reverse'(case V6 of {'Idris.Core.UnifyState.MkUState', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V18 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V2))), case V23 of {'Idris.Prelude.Types.Left', E16} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.UnifyState':'un--getCurrentHoles'(V0, V2))), case V26 of {'Idris.Prelude.Types.Left', E18} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V28) -> begin (V30 = begin (V29 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V29} end), case V30 of {'Idris.Prelude.Types.Left', E20} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V32) -> begin (V45 = ('erlang':'put'(V0, case V32 of {'Idris.Core.UnifyState.MkUState', E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> {'Idris.Core.UnifyState.MkUState', V33, V34, V35, V36, V37, V38, V39, [], V41, V42, V43, V44} end(E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V45} end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkArgsSame'(V0, V1, V2, V3) -> case V2 of [] -> {'Idris.Prelude.Types.Right', 0}; [E0 | E1] -> (fun (V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> begin (V38 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V4}, case V9 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V10 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V38 of {'Idris.Prelude.Types.Left', E32} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V40) -> case V40 of {'Idris.Prelude.Types.Just', E34} -> (fun (V41) -> case V41 of {'Idris.Core.Context.PMDef', E35, E36, E37, E38, E39} -> (fun (V42, V43, V44, V45, V46) -> case V43 of [] -> case V44 of {'Idris.Core.CaseTree.STerm', E40, E41} -> (fun (V47, V48) -> case V47 of 0 -> begin (V49 = ('nested--23004-20707--in--un--anySame'(V4, V5, V1, V0, V48, V5, V3))), case V49 of {'Idris.Prelude.Types.Left', E42} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V51) -> case V51 of 1 -> {'Idris.Prelude.Types.Right', 1}; 0 -> ('un--checkArgsSame'(V0, V1, V5, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E40, E41)); _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end; _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E35, E36, E37, E38, E39)); _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E34)); _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chaseMetas'(V0, V1, V2) -> case V1 of [] -> fun (V3) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V2))} end; [E0 | E1] -> (fun (V4, V5) -> ('case--chaseMetas-6499'(V4, V5, V2, V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V4, V2)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
