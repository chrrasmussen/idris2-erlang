-module('Idris.Idris2.TTImp.Unelab').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--unelabBinder-6587'/13,
  'case--case block in unelabBinder-6520'/17,
  'case--unelabBinder-6479'/14,
  'case--unelabBinder-6420'/14,
  'case--case block in case block in unelabBinder-6319'/18,
  'case--case block in unelabBinder-6236'/18,
  'case--unelabBinder-6191'/14,
  'case--case block in unelabBinder-6104'/17,
  'case--unelabBinder-6063'/14,
  'case--unelabBinder-5996'/14,
  'case--unelabPi-5960'/6,
  'case--unelabTy\x{27}-5839'/8,
  'case--unelabTy\x{27}-5788'/9,
  'case--unelabTy\x{27}-5737'/8,
  'case--case block in case block in case block in unelabTy\x{27}-5610'/16,
  'case--case block in case block in unelabTy\x{27}-5579'/14,
  'case--case block in unelabTy\x{27}-5550'/12,
  'case--unelabTy\x{27}-5517'/9,
  'case--case block in case block in unelabTy\x{27}-5361'/15,
  'case--case block in unelabTy\x{27}-5318'/11,
  'case--unelabTy\x{27}-5289'/8,
  'case--case block in unelabTy\x{27}-5200'/11,
  'case--unelabTy\x{27}-5177'/9,
  'case--unelabTy\x{27},uniqueLocal-5119'/11,
  'case--case block in unelabTy\x{27}-5030'/11,
  'case--unelabTy\x{27}-4975'/11,
  'case--case block in unelabTy\x{27}-4904'/9,
  'case--case block in unelabTy\x{27}-4837'/10,
  'case--unelabTy\x{27}-4801'/9,
  'case--case block in unelabSugar-4629'/7,
  'case--unelabSugar-4611'/6,
  'case--case block in case block in case block in unelabCase-4467'/14,
  'case--case block in case block in unelabCase-4431'/13,
  'case--case block in unelabCase-4407'/8,
  'case--unelabCase-4392'/6,
  'case--unelabCase,getNth-4228'/8,
  'nested--8495-3935--in--un--usedBinder'/7,
  'nested--8751-5092--in--un--uniqueLocal'/10,
  'nested--11717-6688--in--un--toName'/8,
  'nested--11717-6690--in--un--showScope'/8,
  'nested--11717-6689--in--un--showNScope'/8,
  'nested--8743-4171--in--un--nthArg'/8,
  'nested--8751-5091--in--un--next'/9,
  'nested--8743-4172--in--un--mkClause'/7,
  'nested--8743-4173--in--un--mkCase'/8,
  'nested--8757-6161--in--un--isNoSugar'/14,
  'nested--8757-6162--in--un--isDefImp'/15,
  'nested--8743-4169--in--un--idxOrDefault'/8,
  'nested--8743-4170--in--un--getNth'/7,
  'nested--8743-4168--in--un--findArgPos'/6,
  'dn--un--show_Show_IArg'/1,
  'dn--un--showPrec_Show_IArg'/2,
  'dn--un--__Impl_Show_IArg'/0,
  'un--used'/3,
  'un--unelabUniqueBinders'/5,
  'un--unelabTy\x{27}'/5,
  'un--unelabTy'/6,
  'un--unelabSugar'/4,
  'un--unelabPi'/5,
  'un--unelabNoSugar'/5,
  'un--unelabNoPatvars'/5,
  'un--unelabCase'/5,
  'un--unelabBinder'/10,
  'un--unelab'/4,
  'un--getFnArgs'/2
]).
'case--unelabBinder-6587'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V9))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-6520'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, {'Idris.Core.FC.EmptyFC'}, V3, V5, V17, V13, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PLet', V4, V3, V1, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6479'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('un--unelabTy'(V0, V12, V11, V9, V2, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, {'Idris.Core.FC.EmptyFC'}, V3, V5, V20, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PLet', V4, V3, V1, V2}, V6}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6420'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V7, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PVTy', V4, V3, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabBinder-6319'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> {'Idris.Prelude.Types.Just', {'Idris.Core.Name.UN', <<"_"/utf8>>}}; 1 -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-6236'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> {'Idris.Prelude.Types.Just', V5}; 1 -> ('case--case block in case block in unelabBinder-6319'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, ('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V4, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()))), fun () -> ('nested--8757-6162--in--un--isDefImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V3)) end)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6191'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--unelabPi'(V0, V12, V11, V9, V3))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V21 = begin (V20 = {'Idris.Builtin.MkPair', V14, V15}), ('case--case block in unelabBinder-6236'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V15, V14, V20, V19, ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', 0, V8)), fun () -> ('nested--8757-6161--in--un--isNoSugar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V11)) end)))) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPi', V10, V4, V19, V21, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V10))}} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-6104'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, {'Idris.Core.FC.EmptyFC'}, V3, V5, V17, V13, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Let', V4, V3, V1, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6063'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('un--unelabTy'(V0, V12, V11, V9, V2, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, {'Idris.Core.FC.EmptyFC'}, V3, V5, V20, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Let', V4, V3, V1, V2}, V6}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5996'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--unelabPi'(V0, V12, V11, V9, V2))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILam', V10, V3, V19, {'Idris.Prelude.Types.Just', V5}, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Pi', V4, V3, V2, V1}, V6}))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabPi-5960'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V6}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5839'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IForce', V3, V8}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5788'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V7))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelay', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5737'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelayed', V3, V2, V8}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in unelabTy\x{27}-5610'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E0} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V2)), V3, V14, V11}, V12}} end end(E0)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end.
'case--case block in case block in unelabTy\x{27}-5579'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V9 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V2)), V3, V15, V11}, V12}} end end(E2)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end end(E0, E1)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end.
'case--case block in unelabTy\x{27}-5550'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> case V9 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E4} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V2)), V3, V15, V12}, V13}} end end(E4)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V12, V13}} end end end(E2, E3)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V12, V13}} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5517'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V12 = (('un--unelabTy\x{27}'(V0, V7, V6, V5, V1))(V11))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V15, V16) -> case V9 of {'Idris.TTImp.TTImp.IVar', E6, E7} -> (fun (V17, V18) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V2)), V3, V18, V15}, V16}} end(E8)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V16}} end end(E6, E7)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V16}} end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabTy\x{27}-5361'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V15, V16, V17, V18) -> case V17 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V23) -> begin (V24 = (((V18(V14))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V23))), case V24 of {'Idris.Prelude.Types.Left', E10} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V14, V4, V26))}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V27) -> begin (V28 = (((V18(V14))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V27))), case V28 of {'Idris.Prelude.Types.Left', E8} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V3, V7, V16, V10}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V14, V4, V30))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5, E6, E7)); _ -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end end(E0, E1, E2, E3)); _ -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end.
'case--case block in unelabTy\x{27}-5318'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V6, V8))(V13))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> case V16 of {'Idris.Core.Value.NBind', E6, E7, E8, E9} -> (fun (V21, V22, V23, V24) -> case V23 of {'Idris.Core.TT.Pi', E10, E11, E12, E13} -> (fun (V25, V26, V27, V28) -> case V27 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V29 = (((V24(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V13))), case V29 of {'Idris.Prelude.Types.Left', E16} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V20, V4, V31))}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V32 = (((V24(V20))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V13))), case V32 of {'Idris.Prelude.Types.Left', E14} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V3, V7, V22, V11}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V20, V4, V34))}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E6, E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5289'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = ('un--unelabTy'(V0, V6, V5, V4, V1, V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V14, V15) -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V6, V9))(V10))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> case V18 of {'Idris.Core.Value.NBind', E10, E11, E12, E13} -> (fun (V23, V24, V25, V26) -> case V25 of {'Idris.Core.TT.Pi', E14, E15, E16, E17} -> (fun (V27, V28, V29, V30) -> case V29 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V31 = (((V26(V22))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V10))), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V22, V4, V33))}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V34 = (((V26(V22))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V10))), case V34 of {'Idris.Prelude.Types.Left', E18} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V3, V8, V24, V14}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V22, V4, V36))}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14, E15, E16, E17)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E10, E11, E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-5200'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V11) -> case V11 of 0 -> begin (V12 = ('nested--8751-5092--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V0, V1))), fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V13))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V12, V3, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V2)), V8, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V16))))(V13)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V17))), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V8, V20))(V17)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2)); _ -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V21))), case V22 of {'Idris.Prelude.Types.Left', E0} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V24) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V8, V24))(V21)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--unelabTy\x{27}-5177'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E4} -> (fun (V11) -> case V11 of 0 -> begin (V12 = ('nested--8751-5092--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V0, V1))), fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V13))), case V14 of {'Idris.Prelude.Types.Left', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V16) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V12, V3, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V2)), V9, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V16))))(V13)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V17))), case V18 of {'Idris.Prelude.Types.Left', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V20) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V9, V20))(V17)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4)); _ -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V21))), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V9, V24))(V21)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27},uniqueLocal-5119'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of 0 -> ('nested--8751-5092--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V9, ('nested--8751-5091--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V8)))); 1 -> V8; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-5030'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V4, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end()); _ -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end.
'case--unelabTy\x{27}-4975'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V5, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V11))))}} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V6 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V4, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end()); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-4904'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V5 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V3, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end()); _ -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end.
'case--case block in unelabTy\x{27}-4837'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V5 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1)) end(E2)); _ -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V11))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V6, V14, V11)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--unelabTy\x{27}-4801'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> fun (V10) -> begin (V15 = case V5 of {'Idris.TTImp.Unelab.NoSugar', E3} -> (fun (V11) -> (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V10)) end(E3)); _ -> begin (V12 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V10))), case V12 of {'Idris.Prelude.Types.Left', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V6, V14, V10)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V17}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V9))))}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V5 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V3, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end()); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabSugar-4629'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V9, V10) -> case V10 of {'Idris.Core.Name.CaseBlock', E4, E5} -> (fun (V11, V12) -> fun (V13) -> begin (V23 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Data.String':'un--unlines'([('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unelaborating case "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V14) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V14)) end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V15, V16)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V17) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V17)) end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V18, V19)) end end}}, {'Idris.Builtin.MkPair', V11, V12})))) | [('Idris.Idris2.Prelude.Types.String':'un--++'(<<"with arguments: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V20) -> ('dn--un--show_Show_IArg'(V20)) end, fun (V21) -> fun (V22) -> ('dn--un--showPrec_Show_IArg'(V21, V22)) end end}, V6)))) | []]])) end))(V13))), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> begin (V26 = ('un--unelabCase'(V4, {'Idris.Core.Name.NS', V9, {'Idris.Core.Name.CaseBlock', V11, V12}}, V6, V2, V13))), case V26 of {'Idris.Prelude.Types.Left', E8} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V28) -> begin (V29 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unelaborated to: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V28)))) end))(V13))), case V29 of {'Idris.Prelude.Types.Left', E10} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V28, V3}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E2, E3)); _ -> fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E0, E1)); _ -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end.
'case--unelabSugar-4611'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V6 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Core.Name.NS', E4, E5} -> (fun (V10, V11) -> case V11 of {'Idris.Core.Name.CaseBlock', E6, E7} -> (fun (V12, V13) -> fun (V14) -> begin (V24 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Data.String':'un--unlines'([('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unelaborating case "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V15) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V16, V17)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V18) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V18)) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V19, V20)) end end}}, {'Idris.Builtin.MkPair', V12, V13})))) | [('Idris.Idris2.Prelude.Types.String':'un--++'(<<"with arguments: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V21) -> ('dn--un--show_Show_IArg'(V21)) end, fun (V22) -> fun (V23) -> ('dn--un--showPrec_Show_IArg'(V22, V23)) end end}, V7)))) | []]])) end))(V14))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V27 = ('un--unelabCase'(V4, {'Idris.Core.Name.NS', V10, {'Idris.Core.Name.CaseBlock', V12, V13}}, V7, V2, V14))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unelaborated to: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V29)))) end))(V14))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V29, V3}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); _ -> fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E4, E5)); _ -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E2, E3)); _ -> fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in unelabCase-4467'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('nested--8743-4173--in--un--mkCase'(V0, V1, V2, V3, V10, V12, 0, V1)); 1 -> fun (V14) -> {'Idris.Prelude.Types.Right', V0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabCase-4431'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> ('case--case block in case block in case block in unelabCase-4467'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V13, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V1)), ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V8)))))) end(E0)); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', V0} end end.
'case--case block in unelabCase-4407'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.Context.PMDef', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> ('case--case block in case block in unelabCase-4431'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V11, V12, V10, ('nested--8743-4168--in--un--findArgPos'(V0, V1, V2, V3, 'erased', V10)))) end(E0, E1, E2, E3, E4)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', V0} end end.
'case--unelabCase-4392'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> begin (V7 = {'Idris.Prelude.Types.Just', V6}), ('case--case block in unelabCase-4407'(V0, V1, V2, V3, V4, V6, V7, case V6 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V25 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V29) -> {'Idris.Prelude.Types.Right', V0} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabCase,getNth-4228'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> ('nested--8743-4169--in--un--idxOrDefault'(V0, V1, V2, V3, 'erased', V6, V8, V9)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8495-3935--in--un--usedBinder'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.TT.Let', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', V5, V9)), fun () -> ('un--used'('erased', V5, V10)) end)) end(E0, E1, E2, E3)); _ -> ('un--used'('erased', V5, ('Idris.Idris2.Core.TT':'un--binderType'('erased', V6)))) end.
'nested--8751-5092--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('case--unelabTy\x{27},uniqueLocal-5119'(V0, V1, V2, V3, V4, V5, V6, V7, V9, V8, ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V12, V13)) end end}, V9, V8)))).
'nested--11717-6688--in--un--toName'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V8, V9, V10) -> {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.TT':'un--nameAt'('erased', V0, V10, 'erased'))} end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--11717-6690--in--un--showScope'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('nested--11717-6689--in--un--showNScope'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V8) -> ('nested--11717-6688--in--un--toName'(V0, V1, V2, V3, V4, V5, V6, V8)) end, V7)))))).
'nested--11717-6689--in--un--showNScope'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> <<"[no locals in scope]"/utf8>>; _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"[locals in scope: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)) end, ('Idris.Idris2.Data.List':'un--nub'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V11, V12)) end end}, V7)))))), <<"]"/utf8>>)))) end.
'nested--8743-4171--in--un--nthArg'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.TT.App', E0, E1, E2} -> (fun (V8, V9, V10) -> ('nested--8743-4170--in--un--getNth'(V0, V1, V2, V3, 'erased', V6, {'Idris.Core.TT.App', V8, V9, V10})) end(E0, E1, E2)); _ -> {'Idris.Core.TT.Erased', V5, 1} end.
'nested--8751-5091--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Name.MN', E0, E1} -> (fun (V9, V10) -> {'Idris.Core.Name.MN', V9, ((V10 + 1) rem 9223372036854775808)} end(E0, E1)); {'Idris.Core.Name.UN', E2} -> (fun (V11) -> {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V11)), 0} end(E2)); {'Idris.Core.Name.NS', E3, E4} -> (fun (V12, V13) -> {'Idris.Core.Name.NS', V12, ('nested--8751-5091--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V13))} end(E3, E4)); _ -> {'Idris.Core.Name.MN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), 0} end.
'nested--8743-4172--in--un--mkClause'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V11, V12) -> begin (V13 = ('nested--8743-4171--in--un--nthArg'(V0, V1, V2, V3, 'erased', V4, V5, V11))), fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V7, V3, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"Unelaborating LHS"/utf8>> end, V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = ('un--unelabTy'(V7, V3, {'Idris.TTImp.Unelab.Full'}, V9, V13, V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V7, V3, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"Unelaborating RHS"/utf8>> end, V12, V14))), case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Normalise':'un--logEnv'(V7, V3, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), <<"In Env"/utf8>>, V9, V14))), case V24 of {'Idris.Prelude.Types.Left', E12} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V26) -> begin (V27 = ('un--unelabTy'(V7, V3, {'Idris.TTImp.Unelab.Full'}, V9, V12, V14))), case V27 of {'Idris.Prelude.Types.Left', E14} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V4, ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V20)), ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V29))}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8743-4173--in--un--mkCase'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V5 of 0 -> case V7 of [E2 | E3] -> (fun (V8, V9) -> case V8 of {'Idris.TTImp.Unelab.Exp', E4, E5} -> (fun (V10, V11) -> fun (V12) -> begin (V14 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V13) -> ('nested--8743-4172--in--un--mkClause'(V0, V1, V2, V3, V10, V6, V13)) end, V4, []))(V12))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V10, V11, {'Idris.TTImp.TTImp.Implicit', V10, 1}, V16}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> fun (V17) -> {'Idris.Prelude.Types.Right', V0} end end end(E2, E3)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', V0} end end; _ -> begin (V19 = (V5 - 1)), case V7 of [E0 | E1] -> (fun (V20, V21) -> ('nested--8743-4173--in--un--mkCase'(V0, V1, V2, V3, V4, V19, (1 + V6), V21)) end(E0, E1)); _ -> fun (V22) -> {'Idris.Prelude.Types.Right', V0} end end end end.
'nested--8757-6161--in--un--isNoSugar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.TTImp.Unelab.NoSugar', E0} -> (fun (V14) -> 0 end(E0)); _ -> 1 end.
'nested--8757-6162--in--un--isDefImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.TT.DefImplicit', E0} -> (fun (V15) -> 0 end(E0)); _ -> 1 end.
'nested--8743-4169--in--un--idxOrDefault'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V5 of 0 -> case V7 of [E2 | E3] -> (fun (V8, V9) -> V8 end(E2, E3)); _ -> case V7 of [] -> V6; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V10 = (V5 - 1)), case V7 of [E0 | E1] -> (fun (V11, V12) -> ('nested--8743-4169--in--un--idxOrDefault'(V0, V1, V2, V3, 'erased', V10, V6, V12)) end(E0, E1)); _ -> case V7 of [] -> V6; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--8743-4170--in--un--getNth'(V0, V1, V2, V3, V4, V5, V6) -> ('case--unelabCase,getNth-4228'(V0, V1, V2, V3, 'erased', V6, V5, ('Idris.Idris2.Core.TT':'un--getFnArgs'('erased', V6)))).
'nested--8743-4168--in--un--findArgPos'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> {'Idris.Prelude.Types.Just', V7} end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'dn--un--show_Show_IArg'(V0) -> case V0 of {'Idris.TTImp.Unelab.Exp', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V2)) end(E0, E1)); {'Idris.TTImp.Unelab.Auto', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"@{"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V4)), <<"}"/utf8>>)))) end(E2, E3)); {'Idris.TTImp.Unelab.Named', E4, E5, E6} -> (fun (V5, V6, V7) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"{"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V7)), <<"}"/utf8>>)))))))) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show_IArg'(V0, V1) -> ('dn--un--show_Show_IArg'(V1)).
'dn--un--__Impl_Show_IArg'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_IArg'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_IArg'(V1, V2)) end end}.
'un--used'(V0, V1, V2) -> case V2 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V3, V4, V5) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1, V5)) end(E0, E1, E2)); {'Idris.Core.TT.Bind', E3, E4, E5, E6} -> (fun (V6, V7, V8, V9) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('nested--8495-3935--in--un--usedBinder'(V6, V7, 'erased', V9, V8, V1, V8)), fun () -> ('un--used'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(1)), V1)), V9)) end)) end(E3, E4, E5, E6)); {'Idris.Core.TT.Meta', E7, E8, E9, E10} -> (fun (V10, V11, V12, V13) -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V21, V22, V23)) end end end end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V25)) end end}, fun (V26) -> ('un--used'('erased', V1, V26)) end))(V13)) end(E7, E8, E9, E10)); {'Idris.Core.TT.App', E11, E12, E13} -> (fun (V27, V28, V29) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', V1, V28)), fun () -> ('un--used'('erased', V1, V29)) end)) end(E11, E12, E13)); {'Idris.Core.TT.As', E14, E15, E16, E17} -> (fun (V30, V31, V32, V33) -> ('un--used'('erased', V1, V33)) end(E14, E15, E16, E17)); {'Idris.Core.TT.TDelayed', E18, E19, E20} -> (fun (V34, V35, V36) -> ('un--used'('erased', V1, V36)) end(E18, E19, E20)); {'Idris.Core.TT.TDelay', E21, E22, E23, E24} -> (fun (V37, V38, V39, V40) -> ('un--used'('erased', V1, V40)) end(E21, E22, E23, E24)); {'Idris.Core.TT.TForce', E25, E26, E27} -> (fun (V41, V42, V43) -> ('un--used'('erased', V1, V43)) end(E25, E26, E27)); _ -> 1 end.
'un--unelabUniqueBinders'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.NoSugar', 0}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabTy\x{27}'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Core.TT':'un--nameAt'('erased', V0, V7, 'erased'))), fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unelab.case"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Found local name: "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)))) end))(V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V20 = ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--binderType'('erased', ('Idris.Idris2.Core.Env':'un--getBinder'('erased', 'erased', {'Idris.Core.TT.dn--un--__mkWeaken', fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'('erased', 'erased', V15)) end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken_Term'('erased', 'erased', V18, V19)) end end end end}, V0, V7, 'erased', V3))))))), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V5, V8}, V20}} end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1, E2)); {'Idris.Core.TT.Ref', E5, E6, E7} -> (fun (V21, V22, V23) -> fun (V24) -> begin (V26 = begin (V25 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V25} end), case V26 of {'Idris.Prelude.Types.Left', E8} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V28) -> begin (V56 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V23, case V28 of {'Idris.Core.Context.MkDefs', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55) -> V29 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V24))), case V56 of {'Idris.Prelude.Types.Left', E37} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V58) -> case V58 of {'Idris.Prelude.Types.Just', E39} -> (fun (V59) -> begin (V64 = case V2 of {'Idris.TTImp.Unelab.NoSugar', E42} -> (fun (V60) -> (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V23))(V24)) end(E42)); _ -> begin (V61 = (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V23))(V24))), case V61 of {'Idris.Prelude.Types.Left', E40} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V63) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V1, V63, V24)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V64 of {'Idris.Prelude.Types.Left', E43} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V21, V66}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V59))))}} end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V21, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V21))}} end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V21, V23}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V21))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6, E7)); {'Idris.Core.TT.Meta', E45, E46, E47, E48} -> (fun (V67, V68, V69, V70) -> fun (V71) -> begin (V73 = begin (V72 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V72} end), case V73 of {'Idris.Prelude.Types.Left', E49} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V75) -> begin (V76 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V68))), begin (V104 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Idris.Core.Name.Resolved', V69}, case V75 of {'Idris.Core.Context.MkDefs', E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77} -> (fun (V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103) -> V77 end(E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V71))), case V104 of {'Idris.Prelude.Types.Left', E78} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V106) -> case V106 of {'Idris.Prelude.Types.Just', E80} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V67, V76}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V107))))}} end(E80)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V67, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V67))}} end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V67, V76}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V67))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E45, E46, E47, E48)); {'Idris.Core.TT.Bind', E81, E82, E83, E84} -> (fun (V108, V109, V110, V111) -> fun (V112) -> begin (V113 = ('un--unelabTy'([V109 | V0], V1, V2, {'Idris.Core.Env.::', V110, V3}, V111, V112))), case V113 of {'Idris.Prelude.Types.Left', E85} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V115) -> case V115 of {'Idris.Builtin.MkPair', E87, E88} -> (fun (V116, V117) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E91} -> (fun (V118) -> case V118 of 0 -> begin (V119 = ('nested--8751-5092--in--un--uniqueLocal'(V0, V109, V111, V110, V108, V3, V2, V1, V0, V109))), begin (V120 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V117))(V112))), case V120 of {'Idris.Prelude.Types.Left', E94} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V122) -> (('un--unelabBinder'(V0, V1, V2, V108, V3, V119, V110, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V111)), V116, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V122))))(V112)) end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> begin (V123 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V117))(V112))), case V123 of {'Idris.Prelude.Types.Left', E92} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V125) -> (('un--unelabBinder'(V0, V1, V2, V108, V3, V109, V110, V111, V116, V125))(V112)) end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E91)); _ -> begin (V126 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V117))(V112))), case V126 of {'Idris.Prelude.Types.Left', E89} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V128) -> (('un--unelabBinder'(V0, V1, V2, V108, V3, V109, V110, V111, V116, V128))(V112)) end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E81, E82, E83, E84)); {'Idris.Core.TT.App', E96, E97, E98} -> (fun (V129, V130, V131) -> fun (V132) -> begin (V133 = ('un--unelabTy'(V0, V1, V2, V3, V130, V132))), case V133 of {'Idris.Prelude.Types.Left', E99} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V135) -> case V135 of {'Idris.Builtin.MkPair', E101, E102} -> (fun (V136, V137) -> begin (V138 = ('un--unelabTy'(V0, V1, V2, V3, V131, V132))), case V138 of {'Idris.Prelude.Types.Left', E103} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V140) -> case V140 of {'Idris.Builtin.MkPair', E105, E106} -> (fun (V141, V142) -> begin (V143 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V1, V137))(V132))), case V143 of {'Idris.Prelude.Types.Left', E107} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V145) -> begin (V147 = begin (V146 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V146} end), case V147 of {'Idris.Prelude.Types.Left', E109} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V149) -> case V145 of {'Idris.Core.Value.NBind', E111, E112, E113, E114} -> (fun (V150, V151, V152, V153) -> case V152 of {'Idris.Core.TT.Pi', E115, E116, E117, E118} -> (fun (V154, V155, V156, V157) -> case V156 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V158 = (((V153(V149))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, V131))))(V132))), case V158 of {'Idris.Prelude.Types.Left', E121} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V160) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V129, V136, V141}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V1, V0, V149, V3, V160))}} end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V161 = (((V153(V149))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, V131))))(V132))), case V161 of {'Idris.Prelude.Types.Left', E119} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V163) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.INamedApp', V129, V136, V151, V141}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V1, V0, V149, V3, V163))}} end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E115, E116, E117, E118)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V129, V136, V141}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V129))}} end end(E111, E112, E113, E114)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V129, V136, V141}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V129))}} end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E96, E97, E98)); {'Idris.Core.TT.As', E123, E124, E125, E126} -> (fun (V164, V165, V166, V167) -> fun (V168) -> begin (V169 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V166))(V168))), case V169 of {'Idris.Prelude.Types.Left', E127} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V171) -> case V171 of {'Idris.Builtin.MkPair', E129, E130} -> (fun (V172, V173) -> begin (V174 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V167))(V168))), case V174 of {'Idris.Prelude.Types.Left', E131} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V176) -> case V176 of {'Idris.Builtin.MkPair', E133, E134} -> (fun (V177, V178) -> case V172 of {'Idris.TTImp.TTImp.IVar', E135, E136} -> (fun (V179, V180) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E137} -> (fun (V181) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V164, ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V166)), V165, V180, V177}, V178}} end(E137)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V177, V178}} end end(E135, E136)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V177, V178}} end end(E133, E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E123, E124, E125, E126)); {'Idris.Core.TT.TDelayed', E138, E139, E140} -> (fun (V182, V183, V184) -> fun (V185) -> begin (V186 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V184))(V185))), case V186 of {'Idris.Prelude.Types.Left', E141} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V188) -> case V188 of {'Idris.Builtin.MkPair', E143, E144} -> (fun (V189, V190) -> begin (V192 = begin (V191 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V191} end), case V192 of {'Idris.Prelude.Types.Left', E145} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V194) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelayed', V182, V183, V189}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V182))}} end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143, E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E138, E139, E140)); {'Idris.Core.TT.TDelay', E147, E148, E149, E150} -> (fun (V195, V196, V197, V198) -> fun (V199) -> begin (V200 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V198))(V199))), case V200 of {'Idris.Prelude.Types.Left', E151} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V202) -> case V202 of {'Idris.Builtin.MkPair', E153, E154} -> (fun (V203, V204) -> begin (V206 = begin (V205 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V205} end), case V206 of {'Idris.Prelude.Types.Left', E155} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V208) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelay', V195, V203}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V195))}} end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153, E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E147, E148, E149, E150)); {'Idris.Core.TT.TForce', E157, E158, E159} -> (fun (V209, V210, V211) -> fun (V212) -> begin (V213 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V211))(V212))), case V213 of {'Idris.Prelude.Types.Left', E160} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V215) -> case V215 of {'Idris.Builtin.MkPair', E162, E163} -> (fun (V216, V217) -> begin (V219 = begin (V218 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V218} end), case V219 of {'Idris.Prelude.Types.Left', E164} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V221) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IForce', V209, V216}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V209))}} end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162, E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E157, E158, E159)); {'Idris.Core.TT.PrimVal', E166, E167} -> (fun (V222, V223) -> fun (V224) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPrimVal', V222, V223}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V222))}} end end(E166, E167)); {'Idris.Core.TT.Erased', E168, E169} -> (fun (V225, V226) -> fun (V227) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V225, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V225))}} end end(E168, E169)); {'Idris.Core.TT.TType', E170} -> (fun (V228) -> fun (V229) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IType', V228}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V228))}} end end(E170)); _ -> begin (V230 = ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V4))), fun (V231) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V230, 1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V230))}} end end end.
'un--unelabTy'(V0, V1, V2, V3, V4, V5) -> begin (V6 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V4))(V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> (('un--unelabSugar'('erased', V1, V2, V8))(V5)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabSugar'(V0, V1, V2, V3) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', V3} end end(E2)); {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', V3} end end()); _ -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('case--unelabSugar-4611'('erased', V2, V7, V8, V1, ('un--getFnArgs'(V7, [])))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabPi'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V5) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Explicit'}} end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Implicit'}} end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.AutoImplicit'}} end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = ('un--unelabTy'(V0, V1, V2, V3, V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V13, V14) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V13}} end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unelabNoSugar'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.NoSugar', 1}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabNoPatvars'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.ImplicitHoles'}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabCase'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V36 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V8 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V9 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V36 of {'Idris.Prelude.Types.Left', E29} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V38) -> case V38 of {'Idris.Prelude.Types.Just', E31} -> (fun (V39) -> begin (V40 = {'Idris.Prelude.Types.Just', V39}), (('case--case block in unelabCase-4407'(V3, V2, V1, V0, V8, V39, V40, case V39 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V58 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', V3} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabBinder'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V6 of {'Idris.Core.TT.Lam', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> fun (V14) -> begin (V15 = ('un--unelabTy'(V0, V1, V2, V4, V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V18, V19) -> begin (V20 = (('un--unelabPi'(V0, V1, V2, V4, V12))(V14))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILam', V3, V11, V22, {'Idris.Prelude.Types.Just', V5}, V18, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.Pi', V10, V11, V12, V13}, V9}))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); {'Idris.Core.TT.Let', E10, E11, E12, E13} -> (fun (V23, V24, V25, V26) -> fun (V27) -> begin (V28 = ('un--unelabTy'(V0, V1, V2, V4, V25, V27))), case V28 of {'Idris.Prelude.Types.Left', E14} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V30) -> case V30 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V31, V32) -> begin (V33 = ('un--unelabTy'(V0, V1, V2, V4, V26, V27))), case V33 of {'Idris.Prelude.Types.Left', E18} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V35) -> case V35 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V36, V37) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V3, {'Idris.Core.FC.EmptyFC'}, V24, V5, V36, V31, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.Let', V23, V24, V25, V26}, V9}))}} end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); {'Idris.Core.TT.Pi', E22, E23, E24, E25} -> (fun (V38, V39, V40, V41) -> fun (V42) -> begin (V43 = ('un--unelabTy'(V0, V1, V2, V4, V41, V42))), case V43 of {'Idris.Prelude.Types.Left', E26} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V45) -> case V45 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V46, V47) -> begin (V48 = (('un--unelabPi'(V0, V1, V2, V4, V40))(V42))), case V48 of {'Idris.Prelude.Types.Left', E30} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V50) -> begin (V52 = begin (V51 = {'Idris.Builtin.MkPair', V46, V47}), ('case--case block in unelabBinder-6236'(V0, V38, V41, V40, V39, V5, V9, V8, V7, V4, V3, V2, V1, V47, V46, V51, V50, ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', 0, V7)), fun () -> ('nested--8757-6161--in--un--isNoSugar'(V0, V38, V41, V40, V39, V5, V9, V8, V7, V4, V3, V2, V1, V2)) end)))) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPi', V3, V39, V50, V52, V46, V8}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V3))}} end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24, E25)); {'Idris.Core.TT.PVar', E32, E33, E34, E35} -> (fun (V53, V54, V55, V56) -> fun (V57) -> begin (V58 = ('un--unelabTy'(V0, V1, V2, V4, V56, V57))), case V58 of {'Idris.Prelude.Types.Left', E36} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V60) -> case V60 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V61, V62) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.PVTy', V53, V54, V56}, V9}))}} end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34, E35)); {'Idris.Core.TT.PLet', E40, E41, E42, E43} -> (fun (V63, V64, V65, V66) -> fun (V67) -> begin (V68 = ('un--unelabTy'(V0, V1, V2, V4, V65, V67))), case V68 of {'Idris.Prelude.Types.Left', E44} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V70) -> case V70 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V71, V72) -> begin (V73 = ('un--unelabTy'(V0, V1, V2, V4, V66, V67))), case V73 of {'Idris.Prelude.Types.Left', E48} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V75) -> case V75 of {'Idris.Builtin.MkPair', E50, E51} -> (fun (V76, V77) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V3, {'Idris.Core.FC.EmptyFC'}, V64, V5, V76, V71, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.PLet', V63, V64, V65, V66}, V9}))}} end(E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E40, E41, E42, E43)); {'Idris.Core.TT.PVTy', E52, E53, E54} -> (fun (V78, V79, V80) -> fun (V81) -> begin (V82 = ('un--unelabTy'(V0, V1, V2, V4, V80, V81))), case V82 of {'Idris.Prelude.Types.Left', E55} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V84) -> case V84 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V85, V86) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V3))}} end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unelab'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.Meta', E2, E3, E4, E5} -> (fun (V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'un--nameRoot'(V5)), ('nested--11717-6690--in--un--showScope'(V0, V7, V6, V5, V4, V2, V1, V7))))), fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V4, V8}} end end end(E2, E3, E4, E5)); _ -> fun (V10) -> begin (V11 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.Full'}, V2, V3, V10))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V13))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--getFnArgs'(V0, V1) -> case V0 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V2, V3, V4) -> ('un--getFnArgs'(V3, [{'Idris.TTImp.Unelab.Exp', V2, V4} | V1])) end(E0, E1, E2)); {'Idris.TTImp.TTImp.INamedApp', E3, E4, E5, E6} -> (fun (V5, V6, V7, V8) -> ('un--getFnArgs'(V6, [{'Idris.TTImp.Unelab.Named', V5, V7, V8} | V1])) end(E3, E4, E5, E6)); {'Idris.TTImp.TTImp.IAutoApp', E7, E8, E9} -> (fun (V9, V10, V11) -> ('un--getFnArgs'(V10, [{'Idris.TTImp.Unelab.Auto', V9, V11} | V1])) end(E7, E8, E9)); _ -> {'Idris.Builtin.MkPair', V0, V1} end.
