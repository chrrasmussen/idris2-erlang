-module('Idris.Idris2.Control.Monad.Writer.CPS').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case-->>=-1228'/9,
  'case--case block in <*>-974'/12,
  'case--<*>-928'/9,
  'case--map-774'/9,
  'case--mapWriter-691'/7,
  'case--mapWriterT-572'/11,
  'case--writerT-449'/7,
  'dn--un--pure_Applicative_((WriterT $w) $m)'/6,
  'dn--un--map_Functor_((WriterT $w) $m)'/8,
  'dn--un--lift_MonadTrans_(WriterT $w)'/6,
  'dn--un--liftIO_HasIO_((WriterT $w) $m)'/6,
  'dn--un--join_Monad_((WriterT $w) $m)'/6,
  'dn--un--empty_Alternative_((WriterT $w) $m)'/5,
  'dn--un--__Impl_Monad_((WriterT $w) $m)'/3,
  'dn--un--__Impl_MonadTrans_(WriterT $w)'/6,
  'dn--un--__Impl_HasIO_((WriterT $w) $m)'/3,
  'dn--un--__Impl_Functor_((WriterT $w) $m)'/8,
  'dn--un--__Impl_Applicative_((WriterT $w) $m)'/3,
  'dn--un--__Impl_Alternative_((WriterT $w) $m)'/3,
  'dn--un-->>=_Monad_((WriterT $w) $m)'/8,
  'dn--un--<|>_Alternative_((WriterT $w) $m)'/6,
  'dn--un--<*>_Applicative_((WriterT $w) $m)'/8,
  'un--writerT'/6,
  'un--runWriterT'/5,
  'un--runWriter'/4,
  'un--mapWriterT'/10,
  'un--mapWriter'/8,
  'un--execWriterT'/5,
  'un--execWriter'/4,
  'un--Writer'/2
]).
'case-->>=-1228'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> ((V5(V9))(V10)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in <*>-974'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> case case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V14, V15, V16) -> V14 end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E2, E3, E4} -> (fun (V17, V18, V19) -> ((V18('erased'))({'Idris.Builtin.MkPair', (V8(V12)), V13})) end(E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--<*>-928'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E2, E3, E4} -> (fun (V11, V12, V13) -> ((((V12('erased'))('erased'))((V6(V10))))(fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V15, V16) -> case case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E10, E11, E12} -> (fun (V17, V18, V19) -> V17 end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E7, E8, E9} -> (fun (V20, V21, V22) -> ((V21('erased'))({'Idris.Builtin.MkPair', (V9(V15)), V16})) end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--map-774'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', (V6(V9)), V10} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mapWriter-691'(V0, V1, V2, V3, V4, V5, V6) -> (V5(V6)).
'case--mapWriterT-572'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> {'Idris.Builtin.MkPair', V11, ((('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6))))(V9))(V12))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--writerT-449'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V7, ((('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3))(V5))(V8))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--pure_Applicative_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5) -> case case V3 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V6, V7, V8) -> V6 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V9, V10, V11) -> ((V10('erased'))({'Idris.Builtin.MkPair', V4, V5})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--map_Functor_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', V4, fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', (V5(V9)), V10} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V6(V7)))).
'dn--un--lift_MonadTrans_(WriterT $w)'(V0, V1, V2, V3, V4, V5) -> case case V3 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V6, V7, V8) -> V6 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V9, V10, V11) -> ((((V9('erased'))('erased'))(fun (V12) -> {'Idris.Builtin.MkPair', V12, V5} end))(V4)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--liftIO_HasIO_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5) -> case case case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E8, E9} -> (fun (V6, V7) -> V6 end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V8, V9, V10) -> V8 end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> ((((V11('erased'))('erased'))(fun (V16) -> {'Idris.Builtin.MkPair', V16, V5} end))(case V3 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E3, E4} -> (fun (V14, V15) -> ((V15('erased'))(V4)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--join_Monad_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5) -> case V3 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))((V4(V5))))(fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V10, V11) -> (V10(V11)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--empty_Alternative_((WriterT $w) $m)'(V0, V1, V2, V3, V4) -> case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3)) of {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', E0, E1, E2} -> (fun (V5, V6, V7) -> (V6('erased')) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Monad_((WriterT $w) $m)'(V0, V1, V2) -> {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', case case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> V11 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> {'Idris.Builtin.MkPair', (V5(V15)), V16} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V6(V7)))) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> case case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V20, V21, V22) -> V20 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V23, V24, V25) -> ((V24('erased'))({'Idris.Builtin.MkPair', V18, V19})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V31, V32, V33) -> ((((V32('erased'))('erased'))((V28(V30))))(fun (V34) -> case V34 of {'Idris.Builtin.MkPair', E17, E18} -> (fun (V35, V36) -> case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((V29(V36))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E22, E23} -> (fun (V41, V42) -> case case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E27, E28, E29} -> (fun (V43, V44, V45) -> V43 end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E24, E25, E26} -> (fun (V46, V47, V48) -> ((V47('erased'))({'Idris.Builtin.MkPair', (V35(V41)), V42})) end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E30, E31, E32} -> (fun (V54, V55, V56) -> ((((V55('erased'))('erased'))((V51(V53))))(fun (V57) -> case V57 of {'Idris.Builtin.MkPair', E33, E34} -> (fun (V58, V59) -> ((V52(V58))(V59)) end(E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E35, E36, E37} -> (fun (V63, V64, V65) -> ((((V64('erased'))('erased'))((V61(V62))))(fun (V66) -> case V66 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V67, V68) -> (V67(V68)) end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end}.
'dn--un--__Impl_MonadTrans_(WriterT $w)'(V0, V1, V2, V3, V4, V5) -> case case V3 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V6, V7, V8) -> V6 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V9, V10, V11) -> ((((V9('erased'))('erased'))(fun (V12) -> {'Idris.Builtin.MkPair', V12, V5} end))(V4)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_HasIO_((WriterT $w) $m)'(V0, V1, V2) -> {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E6, E7} -> (fun (V8, V9) -> V8 end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V10, V11, V12) -> V10 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V13, V14, V15) -> V13 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V17, V18) -> {'Idris.Builtin.MkPair', (V5(V17)), V18} end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V6(V7)))) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E16, E17} -> (fun (V22, V23) -> V22 end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E13, E14, E15} -> (fun (V24, V25, V26) -> V24 end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E10, E11, E12} -> (fun (V27, V28, V29) -> ((V28('erased'))({'Idris.Builtin.MkPair', V20, V21})) end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E38, E39} -> (fun (V35, V36) -> V35 end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E18, E19, E20} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((V32(V34))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E21, E22} -> (fun (V41, V42) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E36, E37} -> (fun (V43, V44) -> V43 end(E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E23, E24, E25} -> (fun (V45, V46, V47) -> ((((V46('erased'))('erased'))((V33(V42))))(fun (V48) -> case V48 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V49, V50) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E34, E35} -> (fun (V51, V52) -> V51 end(E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E31, E32, E33} -> (fun (V53, V54, V55) -> V53 end(E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E28, E29, E30} -> (fun (V56, V57, V58) -> ((V57('erased'))({'Idris.Builtin.MkPair', (V41(V49)), V50})) end(E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}, fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E45, E46} -> (fun (V64, V65) -> V64 end(E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E40, E41, E42} -> (fun (V66, V67, V68) -> ((((V67('erased'))('erased'))((V61(V63))))(fun (V69) -> case V69 of {'Idris.Builtin.MkPair', E43, E44} -> (fun (V70, V71) -> ((V62(V70))(V71)) end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V72) -> fun (V73) -> fun (V74) -> case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E52, E53} -> (fun (V75, V76) -> V75 end(E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E47, E48, E49} -> (fun (V77, V78, V79) -> ((((V78('erased'))('erased'))((V73(V74))))(fun (V80) -> case V80 of {'Idris.Builtin.MkPair', E50, E51} -> (fun (V81, V82) -> (V81(V82)) end(E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end}, fun (V83) -> fun (V84) -> fun (V85) -> case case case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E62, E63} -> (fun (V86, V87) -> V86 end(E62, E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E59, E60, E61} -> (fun (V88, V89, V90) -> V88 end(E59, E60, E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E54, E55, E56} -> (fun (V91, V92, V93) -> ((((V91('erased'))('erased'))(fun (V96) -> {'Idris.Builtin.MkPair', V96, V85} end))(case V2 of {'Idris.Prelude.IO.dn--un--__mkHasIO', E57, E58} -> (fun (V94, V95) -> ((V95('erased'))(V84)) end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end}.
'dn--un--__Impl_Functor_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', V2, fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', (V5(V9)), V10} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V6(V7)))).
'dn--un--__Impl_Applicative_((WriterT $w) $m)'(V0, V1, V2) -> {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', case case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> V11 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> {'Idris.Builtin.MkPair', (V5(V15)), V16} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V6(V7)))) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> case case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V20, V21, V22) -> V20 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V23, V24, V25) -> ((V24('erased'))({'Idris.Builtin.MkPair', V18, V19})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V31, V32, V33) -> ((((V32('erased'))('erased'))((V28(V30))))(fun (V34) -> case V34 of {'Idris.Builtin.MkPair', E17, E18} -> (fun (V35, V36) -> case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((V29(V36))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E22, E23} -> (fun (V41, V42) -> case case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E27, E28, E29} -> (fun (V43, V44, V45) -> V43 end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E24, E25, E26} -> (fun (V46, V47, V48) -> ((V47('erased'))({'Idris.Builtin.MkPair', (V35(V41)), V42})) end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}.
'dn--un--__Impl_Alternative_((WriterT $w) $m)'(V0, V1, V2) -> {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', case case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V8, V9, V10) -> V8 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V11, V12, V13) -> V11 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> {'Idris.Builtin.MkPair', (V5(V15)), V16} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V6(V7)))) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> case case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E11, E12, E13} -> (fun (V20, V21, V22) -> V20 end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E8, E9, E10} -> (fun (V23, V24, V25) -> ((V24('erased'))({'Idris.Builtin.MkPair', V18, V19})) end(E8, E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E14, E15, E16} -> (fun (V31, V32, V33) -> ((((V32('erased'))('erased'))((V28(V30))))(fun (V34) -> case V34 of {'Idris.Builtin.MkPair', E17, E18} -> (fun (V35, V36) -> case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E19, E20, E21} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((V29(V36))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E22, E23} -> (fun (V41, V42) -> case case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E27, E28, E29} -> (fun (V43, V44, V45) -> V43 end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E24, E25, E26} -> (fun (V46, V47, V48) -> ((V47('erased'))({'Idris.Builtin.MkPair', (V35(V41)), V42})) end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}, fun (V49) -> fun (V50) -> case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', E30, E31, E32} -> (fun (V51, V52, V53) -> (V52('erased')) end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V54) -> fun (V55) -> fun (V56) -> begin (V57 = (V56())), fun (V58) -> case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', E33, E34, E35} -> (fun (V59, V60, V61) -> (((V61('erased'))((V55(V58))))(fun () -> (V57(V58)) end)) end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}.
'dn--un-->>=_Monad_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V8, V9, V10) -> ((((V9('erased'))('erased'))((V5(V7))))(fun (V11) -> case V11 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V12, V13) -> ((V6(V12))(V13)) end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--<|>_Alternative_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5) -> begin (V6 = (V5())), fun (V7) -> case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3)) of {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', E0, E1, E2} -> (fun (V8, V9, V10) -> (((V10('erased'))((V4(V7))))(fun () -> (V6(V7)) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'dn--un--<*>_Applicative_((WriterT $w) $m)'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V8, V9, V10) -> ((((V9('erased'))('erased'))((V5(V7))))(fun (V11) -> case V11 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V12, V13) -> case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E5, E6, E7} -> (fun (V14, V15, V16) -> ((((V15('erased'))('erased'))((V6(V13))))(fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V18, V19) -> case case V4 of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E13, E14, E15} -> (fun (V20, V21, V22) -> V20 end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E10, E11, E12} -> (fun (V23, V24, V25) -> ((V24('erased'))({'Idris.Builtin.MkPair', (V12(V18)), V19})) end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--writerT'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V3)), fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V7, ((('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3))(V5))(V8))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4)).
'un--runWriterT'(V0, V1, V2, V3, V4) -> (V4(case V3 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E0, E1} -> (fun (V5, V6) -> V6 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)).
'un--runWriter'(V0, V1, V2, V3) -> (V3(case V2 of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E0, E1} -> (fun (V4, V5) -> V5 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)).
'un--mapWriterT'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V6)), fun (V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> {'Idris.Builtin.MkPair', V11, ((('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6))))(V9))(V12))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V7((V8(case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6)))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E2, E3} -> (fun (V13, V14) -> V14 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))).
'un--mapWriter'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'('erased', 'erased', V10, V11)) end end end end, V4})), fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> {'Idris.Builtin.MkPair', V13, ((('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'('erased', 'erased', V17, V18)) end end end end, V4}))))(V7))(V14))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V5((V6(case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'('erased', 'erased', V21, V22)) end end end end, V4})))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E2, E3} -> (fun (V23, V24) -> V24 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))).
'un--execWriterT'(V0, V1, V2, V3, V4) -> ((((('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V3))('erased'))('erased'))(fun (V7) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V7)) end))((V4(case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E0, E1} -> (fun (V5, V6) -> V6 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))).
'un--execWriter'(V0, V1, V2, V3) -> ((((('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'('erased', 'erased', V13, V14)) end end end end, V2}))('erased'))('erased'))(fun (V10) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V10)) end))((V3(case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'('erased', 'erased', V6, V7)) end end end end, V2})) of {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', E0, E1} -> (fun (V8, V9) -> V9 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))).
'un--Writer'(V0, V1) -> {'Idris.Control.Monad.Writer.CPS.WriterT', V0, fun (V2) -> {'Idris.Control.Monad.Identity.Identity', V2} end, V1}.
