-module('Idris.Idris2.Compiler.CompileExpr').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in mkForgetDef-6180'/6,
  'case--mkForgetDef-6168'/4,
  'case--compileDef-6108'/4,
  'case--toCDef-5908'/9,
  'case--toCDef-5848'/6,
  'case--toCDef-5776'/7,
  'case--toCDef-5715'/5,
  'case--case block in nfToCFType-5323'/14,
  'case--nfToCFType-5246'/11,
  'case--getNArgs-4987'/6,
  'case--case block in case block in getFieldArgs-4795'/14,
  'case--case block in getFieldArgs-4748'/10,
  'case--getFieldArgs-4722'/4,
  'case--case block in case block in getPArgs-4600'/13,
  'case--case block in getPArgs-4563'/10,
  'case--getPArgs-4534'/4,
  'case--mkArgList-4490'/3,
  'case--toCExpTree\x{27}-4331'/15,
  'case--case block in toCExpTree\x{27}-4153'/19,
  'case--toCExpTree\x{27}-4097'/15,
  'case--getNewType-3888'/12,
  'case--getNewType,mkSubst-3783'/17,
  'case--case block in case block in case block in conCases-3542'/18,
  'case--case block in case block in conCases-3494'/14,
  'case--case block in conCases-3428'/12,
  'case--conCases-3405'/10,
  'case--case block in toCExp-3270'/10,
  'case--toCExp-3220'/5,
  'case--toCExpTm-3154'/7,
  'case--toCExpTm-2848'/8,
  'case--boolHackTree-2785'/6,
  'case--natHackTree-2642'/6,
  'case--natHack-2439'/5,
  'case--natHack-2407'/5,
  'case--natHack-2382'/5,
  'case--natHack-2366'/5,
  'case--natHack-2336'/4,
  'case--natHack-2322'/4,
  'case--magic,go-2115'/7,
  'case--case block in mkDropSubst-1968'/8,
  'case--mkDropSubst-1947'/6,
  'case--dropPos,drop-1850'/10,
  'case--applyNewType,keep-1751'/10,
  'case--case block in numArgs-1343'/8,
  'case--numArgs-1328'/6,
  'nested--10574-2748--in--un--toBool'/6,
  'nested--13757-5796--in--un--toArgExp'/7,
  'nested--13757-5665--in--un--toArgExp'/6,
  'nested--11226-3757--in--un--mkSubst'/15,
  'nested--9281-1547--in--un--mkLocal'/6,
  'nested--9281-1548--in--un--mkApp'/6,
  'nested--9483-1730--in--un--keepArg'/7,
  'nested--9483-1729--in--un--keep'/8,
  'nested--9835-2041--in--un--go'/5,
  'nested--13757-5797--in--un--getVars'/8,
  'nested--13757-5666--in--un--getVars'/7,
  'nested--9835-2040--in--un--fire'/5,
  'nested--9602-1836--in--un--drop'/8,
  'nested--11220-3377--in--un--dcon'/9,
  'nested--9380-1648--in--un--applyAll'/5,
  'nested--9380-1670--in--un--addArg'/7,
  'un--weakenVar'/3,
  'un--tryZBranch'/2,
  'un--trySBranch'/3,
  'un--toCExpTree\x{27}'/4,
  'un--toCExpTree'/4,
  'un--toCExpTm'/4,
  'un--toCExp'/4,
  'un--toCDef'/4,
  'un--numArgs'/3,
  'un--nfToCFType'/4,
  'un--natMinus'/4,
  'un--natHackTree'/2,
  'un--natHack'/2,
  'un--natBranch'/2,
  'un--mkForgetDef'/3,
  'un--mkDropSubst'/4,
  'un--mkArgList'/2,
  'un--magic'/3,
  'un--isNatCon'/1,
  'un--isFiniteEnum'/1,
  'un--getZBranch'/2,
  'un--getSBranch'/3,
  'un--getPArgs'/4,
  'un--getNewType'/6,
  'un--getNArgs'/4,
  'un--getFieldArgs'/4,
  'un--getDef'/4,
  'un--getCFTypes'/3,
  'un--expandToArity'/4,
  'un--etaExpand'/5,
  'un--eraseConArgs'/5,
  'un--dropPos'/3,
  'un--constCases'/4,
  'un--conCases'/4,
  'un--compileExp'/3,
  'un--compileDef'/3,
  'un--boolHackTree'/2,
  'un--applyNewType'/5
]).
'case--case block in mkForgetDef-6180'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.CompileExpr':'un--forgetDef'(V7))), fun (V9) -> ('Idris.Idris2.Core.Context':'un--setNamedCompiled'(V1, V0, V8, V9)) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mkForgetDef-6168'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in mkForgetDef-6180'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))))}, V27)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--compileDef-6108'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> fun (V5) -> begin (V55 = begin (V31 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V8, V9)) end end}, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> V27 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))), case V31 of {'Idris.Prelude.Types.Left', E22} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V33) -> (('un--toCDef'(V1, V0, case V4 of {'Idris.Core.Context.MkGlobalDef', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44} -> (fun (V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54) -> V36 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V33))(V5)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V55 of {'Idris.Prelude.Types.Left', E45} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V57) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V57, V5)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V58) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))))}, V58)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCDef-5908'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Compiler.CompileExpr.NewTypeBy', E0, E1} -> (fun (V9, V10) -> V9 end(E0, E1)); {'Idris.Compiler.CompileExpr.EraseArgs', E2, E3} -> (fun (V11, V12) -> ('Idris.Idris2.Prelude.Types':'un--minus'(V11, ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V12)))) end(E2, E3)); {'Idris.Compiler.CompileExpr.Arity', E4} -> (fun (V13) -> V13 end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCDef-5848'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V6, {'Idris.Core.CompileExpr.COp', V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V1, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'('erased', 'erased', 'erased', fun (V9) -> ('nested--13757-5796--in--un--toArgExp'(V0, V1, V2, V3, V4, 'erased', V9)) end, ('nested--13757-5797--in--un--getVars'(V0, V1, V2, V3, V4, 'erased', 'erased', V7))))}}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCDef-5776'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkForeign', V0, V7, V8}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCDef-5715'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Context':'un--getFullName'(V3, V2))(V7))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V5, {'Idris.Core.CompileExpr.CExtPrim', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V10, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V11) -> ('nested--13757-5665--in--un--toArgExp'(V0, V1, V2, V3, 'erased', V11)) end, ('nested--13757-5666--in--un--getVars'(V0, V1, V2, V3, 'erased', 'erased', V6))))}}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in nfToCFType-5323'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V7, [], V8, V15))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--nfToCFType'(V7, V5, 0, V19))(V16))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V14, V22}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nfToCFType-5246'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Compiler.CompileExpr.User', E0, E1} -> (fun (V11, V12) -> fun (V13) -> begin (V15 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V14) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V7, [], V8, V14)) end, V12, []))(V13))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V19 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V18) -> ('un--nfToCFType'(V7, V5, V6, V18)) end, V17, []))(V13))), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V9, V21}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Compiler.CompileExpr.Struct', E6, E7} -> (fun (V22, V23) -> fun (V24) -> begin (V35 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V25) -> case V25 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V26, V27) -> fun (V28) -> begin (V29 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V7, [], V8, V27))(V28))), case V29 of {'Idris.Prelude.Types.Left', E10} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V31) -> begin (V32 = (('un--nfToCFType'(V7, V5, 0, V31))(V28))), case V32 of {'Idris.Prelude.Types.Left', E12} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V26, V34}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V23, []))(V24))), case V35 of {'Idris.Prelude.Types.Left', E14} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V22, V37}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end end()); {'Idris.Compiler.CompileExpr.NIORes', E16} -> (fun (V42) -> fun (V43) -> begin (V44 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V7, [], V8, V42))(V43))), case V44 of {'Idris.Prelude.Types.Left', E17} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V46) -> begin (V47 = (('un--nfToCFType'(V7, V5, V6, V46))(V43))), case V47 of {'Idris.Prelude.Types.Left', E19} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V49}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNArgs-4987'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.Value.NPrimVal', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Core.TT.Str', E2} -> (fun (V8) -> fun (V9) -> begin (V10 = ('un--getFieldArgs'(V4, V3, V2, V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Struct', V8, V12}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); _ -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V5)), <<"Unknown name for struct"/utf8>>}, V13)) end end end(E0, E1)); _ -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V5)), <<"Unknown name for struct"/utf8>>}, V14)) end end.
'case--case block in case block in getFieldArgs-4795'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V14, V15} | V12]} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in getFieldArgs-4748'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [E2 | E3] -> (fun (V12, V13) -> case V13 of [E4 | E5] -> (fun (V14, V15) -> case V15 of [] -> fun (V16) -> begin (V17 = ('un--getFieldArgs'(V2, V1, V14, V16))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> begin (V20 = ('un--getPArgs'(V2, V1, V12, V16))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V23, V24) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V23, V24} | V19]} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V25) -> {'Idris.Prelude.Types.Right', []} end end end(E4, E5)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', []} end end end(E2, E3)); _ -> fun (V27) -> {'Idris.Prelude.Types.Right', []} end end end(E0, E1)); _ -> fun (V28) -> {'Idris.Prelude.Types.Right', []} end end.
'case--getFieldArgs-4722'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> begin (V9 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), ('case--case block in getFieldArgs-4748'(V0, V1, V2, V5, V6, V7, V8, V4, V9, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V10) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V10)) end, V8)))) end end(E0, E1, E2, E3, E4)); _ -> fun (V11) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), <<"Badly formed struct type"/utf8>>}, V11)) end end.
'case--case block in case block in getPArgs-4600'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Core.Value.NPrimVal', E0, E1} -> (fun (V13, V14) -> case V14 of {'Idris.Core.TT.Str', E2} -> (fun (V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V10}} end end(E2)); _ -> fun (V17) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V12)), <<"Unknown field name"/utf8>>}, V17)) end end end(E0, E1)); _ -> fun (V18) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V12)), <<"Unknown field name"/utf8>>}, V18)) end end.
'case--case block in getPArgs-4563'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [E2 | E3] -> (fun (V12, V13) -> fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V2, [], V1, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> case V17 of {'Idris.Core.Value.NPrimVal', E6, E7} -> (fun (V18, V19) -> case V19 of {'Idris.Core.TT.Str', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, V10}} end(E8)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V17)), <<"Unknown field name"/utf8>>}, V14)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V17)), <<"Unknown field name"/utf8>>}, V14)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> fun (V21) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed struct type"/utf8>>}, V21)) end end end(E0, E1)); _ -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed struct type"/utf8>>}, V22)) end end.
'case--getPArgs-4534'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> begin (V9 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), ('case--case block in getPArgs-4563'(V0, V1, V2, V5, V6, V7, V8, V4, V9, ('Idris.Idris2.Data.List':'un--reverse'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V10) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V10)) end, V8)))))) end end(E0, E1, E2, E3, E4)); _ -> fun (V11) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), <<"Badly formed struct type"/utf8>>}, V11)) end end.
'case--mkArgList-4490'(V0, V1, V2) -> case V2 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V3, V4) -> {'Idris.Builtin.DPair.MkDPair', [{'Idris.Core.Name.MN', <<"arg"/utf8>>, V1} | V3], {'Idris.Compiler.CompileExpr.ConsArg', {'Idris.Core.Name.MN', <<"arg"/utf8>>, V1}, V4}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCExpTree\x{27}-4331'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of 0 -> fun (V15) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'('erased', fun () -> {'Idris.Core.CompileExpr.CErased', V11} end, V13))} end; 1 -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V11, {'Idris.Core.CompileExpr.CLocal', V7, V11}, V12, V13}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in toCExpTree\x{27}-4153'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of 0 -> fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'('erased', fun () -> {'Idris.Core.CompileExpr.CErased', V13} end, V17))} end; 1 -> fun (V20) -> {'Idris.Prelude.Types.Right', ('un--boolHackTree'('erased', ('un--natHackTree'('erased', {'Idris.Core.CompileExpr.CConCase', V13, {'Idris.Core.CompileExpr.CLocal', V2, V13}, V16, V17}))))} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCExpTree\x{27}-4097'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V12))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E0} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V19) -> begin (V20 = (('un--conCases'(V0, V12, V11, V8))(V15))), case V20 of {'Idris.Prelude.Types.Left', E2} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V22) -> begin (V23 = (('un--getDef'(V0, V12, V11, V8))(V15))), case V23 of {'Idris.Prelude.Types.Left', E4} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V25) -> begin (V26 = {'Idris.Prelude.Types.Nothing'}), (('case--case block in toCExpTree\x{27}-4153'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, 'erased', V11, V12, V13, V26, V19, V22, V25, ('Idris.Idris2.Data.List':'un--isNil'('erased', V22))))(V15)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V27) -> fun (V28) -> {'Idris.Prelude.Types.Right', V27} end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewType-3888'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> case V12 of {'Idris.Core.Context.DCon', E1, E2, E3} -> (fun (V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E4} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V17, V18) -> begin (V19 = ('nested--11226-3757--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, 'erased', 0, V7, V18, V0))), fun (V20) -> begin (V21 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1)), V9, V6, V2))(V20))), case V21 of {'Idris.Prelude.Types.Left', E7} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.CompileExpr':'un--substs'(V0, V1, V19, V23))}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E5, E6)); _ -> fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E4)); _ -> fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E1, E2, E3)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0)); _ -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'case--getNewType,mkSubst-3783'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of 0 -> {'Idris.Core.CompileExpr.SubstCEnv.::', V14, ('nested--11226-3757--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, 'erased', ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V15)), V14, V13, V12))}; 1 -> {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CErased', V8}, ('nested--11226-3757--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, 'erased', ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V15)), V14, V13, V12))}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in conCases-3542'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> fun (V18) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V12, {'Idris.Prelude.Types.Just', V3}, V13, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'('erased', 'erased', V14, V15))} | V16]} end; 1 -> fun (V19) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V12, {'Idris.Prelude.Types.Nothing'}, V13, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'('erased', 'erased', V14, V15))} | V16]} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in conCases-3494'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1)), V7, V6, V2))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--conCases'(V1, V7, V6, V5))(V16))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> (('case--case block in case block in case block in conCases-3542'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V14, V15, V19, V22, ('nested--11220-3377--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, case V9 of {'Idris.Core.Context.MkGlobalDef', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V40 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V16)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in conCases-3428'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Core.Context.DCon', E23, E24, E25} -> (fun (V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Just', E49} -> (fun (V15) -> ('un--conCases'(V1, V7, V6, V5)) end(E49)); _ -> fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Context':'un--getFullName'(V7, V4))(V16))), case V17 of {'Idris.Prelude.Types.Left', E26} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V19) -> (('case--case block in case block in conCases-3494'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V19, ('un--mkDropSubst'(0, case V9 of {'Idris.Core.Context.MkGlobalDef', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48} -> (fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V23 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1, V0))))(V16)) end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E23, E24, E25)); _ -> fun (V41) -> begin (V42 = (('Idris.Idris2.Core.Context':'un--getFullName'(V7, V4))(V41))), case V42 of {'Idris.Prelude.Types.Left', E0} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V44) -> (('case--case block in case block in conCases-3494'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V44, ('un--mkDropSubst'(0, case V9 of {'Idris.Core.Context.MkGlobalDef', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> V48 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1, V0))))(V41)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--conCases-3405'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> begin (V11 = {'Idris.Prelude.Types.Just', V10}), ('case--case block in conCases-3428'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V10, V11, case V10 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V29 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V33) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--getFullName'(V7, V4))(V33))), case V34 of {'Idris.Prelude.Types.Left', E22} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V36) -> begin (V37 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1)), V7, V6, V2))(V33))), case V37 of {'Idris.Prelude.Types.Left', E24} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V39) -> begin (V40 = (('un--conCases'(V1, V7, V6, V5))(V33))), case V40 of {'Idris.Prelude.Types.Left', E26} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V42) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V36, {'Idris.Prelude.Types.Nothing'}, V0, V39} | V42]} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in toCExp-3270'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Compiler.CompileExpr.Arity', E0} -> (fun (V10) -> begin (V11 = ('un--expandToArity'(V0, V10, V8, V6))), fun (V12) -> {'Idris.Prelude.Types.Right', ('un--natHack'('erased', V11))} end end end(E0)); {'Idris.Compiler.CompileExpr.NewTypeBy', E1, E2} -> (fun (V13, V14) -> begin (V15 = ('un--applyNewType'(V0, V13, V14, V8, V6))), fun (V16) -> {'Idris.Prelude.Types.Right', ('un--natHack'('erased', V15))} end end end(E1, E2)); {'Idris.Compiler.CompileExpr.EraseArgs', E3, E4} -> (fun (V17, V18) -> begin (V19 = ('un--eraseConArgs'(V0, V17, V18, V8, V6))), fun (V20) -> {'Idris.Prelude.Types.Right', ('un--natHack'('erased', V19))} end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCExp-3220'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V9 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V8) -> ('un--toCExp'(V0, V3, V2, V8)) end, V6, []))(V7))), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V16 = (('un--toCExpTm'(V0, V3, V2, V5))(V7))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V19 = (('un--numArgs'('erased', V15, V5))(V7))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> case V21 of {'Idris.Compiler.CompileExpr.Arity', E10} -> (fun (V22) -> begin (V23 = ('un--expandToArity'(V0, V22, V18, V11))), {'Idris.Prelude.Types.Right', ('un--natHack'('erased', V23))} end end(E10)); {'Idris.Compiler.CompileExpr.NewTypeBy', E11, E12} -> (fun (V24, V25) -> begin (V26 = ('un--applyNewType'(V0, V24, V25, V18, V11))), {'Idris.Prelude.Types.Right', ('un--natHack'('erased', V26))} end end(E11, E12)); {'Idris.Compiler.CompileExpr.EraseArgs', E13, E14} -> (fun (V27, V28) -> begin (V29 = ('un--eraseConArgs'(V0, V27, V28, V18, V11))), {'Idris.Prelude.Types.Right', ('un--natHack'('erased', V29))} end end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCExpTm-3154'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V3, V2}} end; 1 -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V3, {'Idris.Core.Name.UN', ('Idris.Idris2.Core.TT':'dn--un--show_Show_Constant'(V2))}, {'Idris.Prelude.Types.Nothing'}, []}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toCExpTm-2848'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V4, {'Idris.Core.TT.I', V2}}} end; 1 -> fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V3))(V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V4, V12, {'Idris.Prelude.Types.Just', V2}, []}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--boolHackTree-2785'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> {'Idris.Core.CompileExpr.CConstCase', V4, V3, V6, V1} end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Core.CompileExpr.CConCase', V4, V3, V2, V1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHackTree-2642'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> begin (V7 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> {'Idris.Core.CompileExpr.CCrash', V4, <<"Nat case not covered"/utf8>>} end, fun () -> fun (V6) -> V6 end end, V1))), begin (V9 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> V7 end, fun () -> fun (V8) -> V8 end end, ('un--getSBranch'('erased', V3, V2))))), begin (V11 = ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> V7 end, fun () -> fun (V10) -> V10 end end, ('un--getZBranch'('erased', V2))))), {'Idris.Core.CompileExpr.CConstCase', V4, V3, [{'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.BI', 0}, V11} | []], {'Idris.Prelude.Types.Just', V9}} end end end; 1 -> {'Idris.Core.CompileExpr.CConCase', V4, V3, V2, V1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHack-2439'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V7, V8) -> case V8 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V1, {'Idris.Core.CompileExpr.CRef', V2, {'Idris.Core.Name.UN', <<"prim__mul_Integer"/utf8>>}}, [V5 | [V7 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHack-2407'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V7, V8) -> case V8 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V1, {'Idris.Core.CompileExpr.CRef', V2, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [V5 | [V7 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHack-2382'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V1, {'Idris.Core.CompileExpr.CRef', V2, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"prim__integerToNat"/utf8>>}}}, [V5 | []]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHack-2366'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Data.Vect.Nil'} -> (fun () -> V5 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHack-2336'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V1, {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [{'Idris.Core.CompileExpr.CPrimVal', V1, {'Idris.Core.TT.BI', 1}} | [V4 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--natHack-2322'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CPrimVal', V1, {'Idris.Core.TT.BI', 0}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--magic,go-2115'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--9835-2041--in--un--go'('erased', V1, V2, V4, V5)) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> V7 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in mkDropSubst-1968'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> {'Idris.Builtin.DPair.MkDPair', V5, {'Idris.Core.TT.DropCons', V6}}; 1 -> {'Idris.Builtin.DPair.MkDPair', [V0 | V5], {'Idris.Core.TT.KeepCons', V6}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mkDropSubst-1947'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V6, V7) -> ('case--case block in mkDropSubst-1968'(V0, V1, V2, V3, V4, V6, V7, ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V10, V11)) end end}, V4, V3)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--dropPos,drop-1850'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> ('nested--9602-1836--in--un--drop'('erased', V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V8)), V7)); 1 -> [V6 | ('nested--9602-1836--in--un--drop'('erased', V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V8)), V7))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--applyNewType,keep-1751'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> V6; 1 -> ('nested--9483-1729--in--un--keep'(V0, V1, V2, V3, V4, 'erased', ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V8)), V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in numArgs-1343'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.Context.DCon', E0, E1, E2} -> (fun (V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.EraseArgs', V9, case V5 of {'Idris.Core.Context.MkGlobalDef', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V15 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}} end end()); {'Idris.Prelude.Types.Just', E24} -> (fun (V33) -> case V33 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V34, V35) -> fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NewTypeBy', V9, V35}} end end(E25, E26)); _ -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end end(E24)); _ -> fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end end(E0, E1, E2)); {'Idris.Core.Context.PMDef', E27, E28, E29, E30, E31} -> (fun (V39, V40, V41, V42, V43) -> fun (V44) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V40))}} end end(E27, E28, E29, E30, E31)); {'Idris.Core.Context.ExternDef', E32} -> (fun (V45) -> fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V45}} end end(E32)); {'Idris.Core.Context.ForeignDef', E33, E34} -> (fun (V47, V48) -> fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V47}} end end(E33, E34)); {'Idris.Core.Context.Builtin', E35, E36} -> (fun (V50, V51) -> fun (V52) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V50}} end end(E35, E36)); _ -> fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end.
'case--numArgs-1328'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> begin (V7 = {'Idris.Prelude.Types.Just', V6}), ('case--case block in numArgs-1343'('erased', V1, V2, V3, V4, V6, V7, case V6 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V25 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10574-2748--in--un--toBool'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> case V7 of {'Idris.Prelude.Types.Just', E4} -> (fun (V10) -> case V8 of [] -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V13, V14)) end end end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V16)) end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V19, V20)) end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', V23, V24)) end end end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'('erased', V26)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'('erased', {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V29, V30)) end end end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V32)) end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V35, V36)) end end end end}, fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'('erased')) end, fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'('erased', V39, V40)) end end end}, ('un--isFiniteEnum'(V6)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', {'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V10}, V9})) end)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E4)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--13757-5796--in--un--toArgExp'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Core.CompileExpr.CLocal', V6, ('Idris.Idris2.Core.FC':'un--emptyFC'())}.
'nested--13757-5665--in--un--toArgExp'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, ('Idris.Idris2.Core.FC':'un--emptyFC'())}.
'nested--11226-3757--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of [] -> {'Idris.Core.CompileExpr.SubstCEnv.Nil'}; [E0 | E1] -> (fun (V15, V16) -> ('case--getNewType,mkSubst-3783'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, 'erased', V15, V16, V13, V12, V11, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V11, V13)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9281-1547--in--un--mkLocal'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, V4}.
'nested--9281-1548--in--un--mkApp'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> V4; _ -> case V4 of {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> (fun (V6, V7, V8) -> {'Idris.Core.CompileExpr.CApp', V6, V7, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V8, V5))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> (fun (V9, V10, V11, V12) -> {'Idris.Core.CompileExpr.CCon', V9, V10, V11, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V12, V5))} end(E3, E4, E5, E6)); {'Idris.Core.CompileExpr.CExtPrim', E7, E8, E9} -> (fun (V13, V14, V15) -> {'Idris.Core.CompileExpr.CExtPrim', V13, V14, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V15, V5))} end(E7, E8, E9)); _ -> {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V4)), V4, V5} end end.
'nested--9483-1730--in--un--keepArg'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V7, V8, V9) -> {'Idris.Core.CompileExpr.CLam', V7, V8, ('nested--9483-1730--in--un--keepArg'(V0, V1, V2, V3, V4, 'erased', V9))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> (fun (V10, V11, V12, V13) -> ('nested--9483-1729--in--un--keep'(V0, V1, V2, V3, V4, 'erased', 0, V13)) end(E3, E4, E5, E6)); _ -> {'Idris.Core.CompileExpr.CErased', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V2))} end.
'nested--9483-1729--in--un--keep'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> {'Idris.Core.CompileExpr.CErased', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V2))}; [E0 | E1] -> (fun (V8, V9) -> ('case--applyNewType,keep-1751'(V0, V1, V2, V3, V4, 'erased', V8, V9, V6, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V6, V3)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9835-2041--in--un--go'(V0, V1, V2, V3, V4) -> case V3 of [] -> V4; [E0 | E1] -> (fun (V5, V6) -> ('case--magic,go-2115'('erased', V1, V2, V5, V6, V4, ('nested--9835-2040--in--un--fire'('erased', V1, V2, V5, V4)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13757-5797--in--un--getVars'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Compiler.CompileExpr.NoArgs'} -> (fun () -> {'Idris.Data.Vect.Nil'} end()); {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> (fun (V8, V9) -> {'Idris.Data.Vect.::', 0, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'('erased', 'erased', 'erased', fun (V10) -> ('un--weakenVar'('erased', 'erased', V10)) end, ('nested--13757-5797--in--un--getVars'(V0, V1, V2, V3, V4, 'erased', 'erased', V9))))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13757-5666--in--un--getVars'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Compiler.CompileExpr.NoArgs'} -> (fun () -> [] end()); {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> (fun (V7, V8) -> [0 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V9) -> ('un--weakenVar'('erased', 'erased', V9)) end, ('nested--13757-5666--in--un--getVars'(V0, V1, V2, V3, 'erased', 'erased', V8))))] end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9835-2040--in--un--fire'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Compiler.CompileExpr.MagicCCon', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> case V4 of {'Idris.Core.CompileExpr.CCon', E4, E5, E6, E7} -> (fun (V9, V10, V11, V12) -> case V10 of {'Idris.Core.Name.NS', E8, E9} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E10} -> (fun (V15) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V18, V19)) end end end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V21)) end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V24, V25)) end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', V28, V29)) end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'('erased', V31)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'('erased', {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V34, V35)) end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V40, V41)) end end end end}, fun (V42) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'('erased')) end, fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'('erased', V44, V45)) end end end}, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V6, V15)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V5, V13)) end)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', ((V8(V9))('erased')), ('Idris.Idris2.Data.Vect':'un--toVect'('erased', V7, V12)))) end)) end(E10)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E8, E9)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E4, E5, E6, E7)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3)); {'Idris.Compiler.CompileExpr.MagicCRef', E11, E12, E13, E14} -> (fun (V46, V47, V48, V49) -> case V4 of {'Idris.Core.CompileExpr.CApp', E15, E16, E17} -> (fun (V50, V51, V52) -> case V51 of {'Idris.Core.CompileExpr.CRef', E18, E19} -> (fun (V53, V54) -> case V54 of {'Idris.Core.Name.NS', E20, E21} -> (fun (V55, V56) -> case V56 of {'Idris.Core.Name.UN', E22} -> (fun (V57) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V60, V61)) end end end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V63)) end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V66, V67)) end end end end}, fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', V70, V71)) end end end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'('erased', V73)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'('erased', {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V76, V77)) end end end end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V79)) end end, fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V82, V83)) end end end end}, fun (V84) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'('erased')) end, fun (V85) -> fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'('erased', V86, V87)) end end end}, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V47, V57)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V46, V55)) end)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', (((V49(V50))(V53))('erased')), ('Idris.Idris2.Data.Vect':'un--toVect'('erased', V48, V52)))) end)) end(E22)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E20, E21)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E18, E19)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E15, E16, E17)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E11, E12, E13, E14)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--9602-1836--in--un--drop'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> []; [E0 | E1] -> (fun (V8, V9) -> ('case--dropPos,drop-1850'('erased', V1, V2, V3, V4, V5, V8, V9, V6, ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V12, V13)) end end}, V6, V5)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11220-3377--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Context.DCon', E0, E1, E2} -> (fun (V9, V10, V11) -> 0 end(E0, E1, E2)); _ -> 1 end.
'nested--9380-1648--in--un--applyAll'(V0, V1, V2, V3, V4) -> case V4 of [] -> V3; [E0 | E1] -> (fun (V5, V6) -> ('nested--9380-1648--in--un--applyAll'(V0, V1, V2, {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V3)), V3, [V5 | []]}, V6)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9380-1670--in--un--addArg'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> (fun (V7, V8, V9) -> {'Idris.Core.CompileExpr.CApp', V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V9, [V6 | []]))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> (fun (V10, V11, V12, V13) -> {'Idris.Core.CompileExpr.CCon', V10, V11, V12, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V13, [V6 | []]))} end(E3, E4, E5, E6)); {'Idris.Core.CompileExpr.CExtPrim', E7, E8, E9} -> (fun (V14, V15, V16) -> {'Idris.Core.CompileExpr.CExtPrim', V14, V15, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V16, [V6 | []]))} end(E7, E8, E9)); _ -> {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V5)), V5, [V6 | []]} end.
'un--weakenVar'(V0, V1, V2) -> (1 + V2).
'un--tryZBranch'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> case V2 of {'Idris.Core.Name.NS', E4, E5} -> (fun (V6, V7) -> case V7 of {'Idris.Core.Name.UN', E6} -> (fun (V8) -> case V4 of [] -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V11, V12)) end end end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V14)) end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V17, V18)) end end end end}, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', V21, V22)) end end end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'('erased', V24)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'('erased', {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V27, V28)) end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V30)) end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V33, V34)) end end end end}, fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'('erased')) end, fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'('erased', V37, V38)) end end end}, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V8, <<"Z"/utf8>>)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V6, ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()))) end)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V5)) end)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E6)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E4, E5)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--trySBranch'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V3, V4, V5, V6) -> case V3 of {'Idris.Core.Name.NS', E4, E5} -> (fun (V7, V8) -> case V8 of {'Idris.Core.Name.UN', E6} -> (fun (V9) -> case V5 of [E7 | E8] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V14, V15)) end end end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V17)) end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V20, V21)) end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', V24, V25)) end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'('erased', V27)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'('erased', {'Idris.Prelude.Interfaces.dn--un--__mkAlternative', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V30, V31)) end end end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V33)) end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V36, V37)) end end end end}, fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'('erased')) end, fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'('erased', V40, V41)) end end end}, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V9, <<"S"/utf8>>)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V7, ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()))) end)))), begin (V42 = ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V1))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', {'Idris.Core.CompileExpr.CLet', V42, V10, 0, ('un--natMinus'(V42, V42, 'erased', {'Idris.Data.Vect.::', V1, {'Idris.Data.Vect.::', {'Idris.Core.CompileExpr.CPrimVal', V42, {'Idris.Core.TT.BI', 1}}, {'Idris.Data.Vect.Nil'}}})), V6})) end end)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E7, E8)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E6)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E4, E5)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--toCExpTree\x{27}'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> case V7 of [E4 | E5] -> (fun (V8, V9) -> case V8 of {'Idris.Core.CaseTree.ConCase', E6, E7, E8, E9} -> (fun (V10, V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V6))), fun (V15) -> begin (V16 = (('un--getNewType'(V0, V1, V14, {'Idris.Core.CompileExpr.CLocal', V5, V14}, V2, V7))(V15))), case V16 of {'Idris.Prelude.Types.Left', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V18) -> begin (V19 = [{'Idris.Core.CaseTree.ConCase', V10, V11, V12, V13} | V9]), case V18 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V21 = begin (V20 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V20} end), case V21 of {'Idris.Prelude.Types.Left', E12} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V23) -> begin (V24 = (('un--conCases'(V0, V1, V2, V19))(V15))), case V24 of {'Idris.Prelude.Types.Left', E14} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V26) -> begin (V27 = (('un--getDef'(V0, V1, V2, V19))(V15))), case V27 of {'Idris.Prelude.Types.Left', E16} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V29) -> begin (V30 = {'Idris.Prelude.Types.Nothing'}), (('case--case block in toCExpTree\x{27}-4153'(V0, V4, V5, V9, V10, V11, V12, V13, V19, V6, 'erased', V2, V1, V14, V30, V23, V26, V29, ('Idris.Idris2.Data.List':'un--isNil'('erased', V26))))(V15)) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E18} -> (fun (V31) -> {'Idris.Prelude.Types.Right', V31} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8, E9)); {'Idris.Core.CaseTree.DelayCase', E19, E20, E21} -> (fun (V32, V33, V34) -> fun (V35) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Unexpected DelayCase"/utf8>>}, V35)) end end(E19, E20, E21)); {'Idris.Core.CaseTree.ConstCase', E22, E23} -> (fun (V36, V37) -> begin (V38 = ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V6))), fun (V39) -> begin (V40 = (('un--constCases'(V0, V1, V2, V7))(V39))), case V40 of {'Idris.Prelude.Types.Left', E24} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V42) -> begin (V43 = (('un--getDef'(V0, V1, V2, V7))(V39))), case V43 of {'Idris.Prelude.Types.Left', E26} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V45) -> begin (V46 = [{'Idris.Core.CaseTree.ConstCase', V36, V37} | V9]), (('case--toCExpTree\x{27}-4331'(V0, V4, V9, V36, V37, V46, V6, V5, 'erased', V2, V1, V38, V42, V45, ('Idris.Idris2.Data.List':'un--isNil'('erased', V42))))(V39)) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E22, E23)); {'Idris.Core.CaseTree.DefaultCase', E28} -> (fun (V47) -> ('un--toCExpTree'(V0, V1, V2, V47)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); [] -> fun (V48) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Missing case tree in "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); {'Idris.Core.CaseTree.STerm', E29, E30} -> (fun (V49, V50) -> ('un--toCExp'(V0, V1, V2, V50)) end(E29, E30)); {'Idris.Core.CaseTree.Unmatched', E31} -> (fun (V51) -> fun (V52) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V51}} end end(E31)); {'Idris.Core.CaseTree.Impossible'} -> (fun () -> fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Impossible case encountered in "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toCExpTree'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> case V7 of [E4 | E5] -> (fun (V8, V9) -> case V8 of {'Idris.Core.CaseTree.DelayCase', E6, E7, E8} -> (fun (V10, V11, V12) -> begin (V13 = ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V6))), fun (V14) -> begin (V15 = (('un--toCExpTree'([V10 | [V11 | V0]], V1, V2, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V13, V11, 0, {'Idris.Core.CompileExpr.CForce', V13, {'Idris.Core.TT.LInf'}, {'Idris.Core.CompileExpr.CLocal', V5, ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V6))}}, {'Idris.Core.CompileExpr.CLet', V13, V10, 0, {'Idris.Core.CompileExpr.CErased', V13}, V17}}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3)) end end(E4, E5)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3)) end end(E0, E1, E2, E3)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3)) end.
'un--toCExpTm'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V4, V5, V6) -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLocal', V6, V4}} end end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V8, V9, V10) -> case V9 of {'Idris.Core.TT.DataCon', E8, E9} -> (fun (V11, V12) -> ('case--toCExpTm-2848'(V0, V12, V11, V10, V8, V2, V1, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V12, 0)), fun () -> ('un--isFiniteEnum'(V10)) end)))) end(E8, E9)); {'Idris.Core.TT.TyCon', E10, E11} -> (fun (V13, V14) -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V8, V10, {'Idris.Prelude.Types.Nothing'}, []}} end end(E10, E11)); _ -> fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V10))(V16))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V8, {'Idris.Core.CompileExpr.CRef', V8, V19}, []}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3, E4, E5)); {'Idris.Core.TT.Meta', E12, E13, E14, E15} -> (fun (V20, V21, V22, V23) -> fun (V24) -> begin (V26 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V25) -> ('un--toCExp'(V0, V1, V2, V25)) end, V23, []))(V24))), case V26 of {'Idris.Prelude.Types.Left', E16} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V20, {'Idris.Core.CompileExpr.CRef', V20, V21}, V28}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12, E13, E14, E15)); {'Idris.Core.TT.Bind', E18, E19, E20, E21} -> (fun (V29, V30, V31, V32) -> case V31 of {'Idris.Core.TT.Lam', E22, E23, E24, E25} -> (fun (V33, V34, V35, V36) -> fun (V37) -> begin (V38 = (('un--toCExp'([V30 | V0], V1, V2, V32))(V37))), case V38 of {'Idris.Prelude.Types.Left', E26} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V29, V30, V40}} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24, E25)); {'Idris.Core.TT.Let', E28, E29, E30, E31} -> (fun (V41, V42, V43, V44) -> fun (V45) -> begin (V46 = (('un--toCExp'([V30 | V0], V1, V2, V32))(V45))), case V46 of {'Idris.Prelude.Types.Left', E32} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V48) -> begin (V49 = (('un--toCExp'(V0, V1, V2, V43))(V45))), case V49 of {'Idris.Prelude.Types.Left', E34} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V51) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.Semiring':'un--branchZero'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V52) -> fun (V53) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V52, V53)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V54) -> fun (V55) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V54, V55)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())}, {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V56) -> fun (V57) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V58, V59)) end end}}, fun () -> ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'('erased', 'erased', {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}}, V48)) end, fun () -> {'Idris.Core.CompileExpr.CLet', V29, V30, 0, V51, V48} end, V42))} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E28, E29, E30, E31)); {'Idris.Core.TT.Pi', E36, E37, E38, E39} -> (fun (V60, V61, V62, V63) -> fun (V64) -> begin (V65 = (('un--toCExp'(V0, V1, V2, V63))(V64))), case V65 of {'Idris.Prelude.Types.Left', E40} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V67) -> begin (V68 = (('un--toCExp'([V30 | V0], V1, V2, V32))(V64))), case V68 of {'Idris.Prelude.Types.Left', E42} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V70) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V29, {'Idris.Core.Name.UN', <<"->"/utf8>>}, {'Idris.Prelude.Types.Nothing'}, [V67 | [{'Idris.Core.CompileExpr.CLam', V29, V30, V70} | []]]}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E36, E37, E38, E39)); _ -> fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V29}} end end end(E18, E19, E20, E21)); {'Idris.Core.TT.App', E44, E45, E46} -> (fun (V72, V73, V74) -> fun (V75) -> begin (V76 = (('un--toCExp'(V0, V1, V2, V73))(V75))), case V76 of {'Idris.Prelude.Types.Left', E47} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V78) -> begin (V79 = (('un--toCExp'(V0, V1, V2, V74))(V75))), case V79 of {'Idris.Prelude.Types.Left', E49} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V72, V78, [V81 | []]}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E44, E45, E46)); {'Idris.Core.TT.As', E51, E52, E53, E54} -> (fun (V82, V83, V84, V85) -> ('un--toCExpTm'(V0, V1, V2, V85)) end(E51, E52, E53, E54)); {'Idris.Core.TT.TDelayed', E55, E56, E57} -> (fun (V86, V87, V88) -> fun (V89) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V86}} end end(E55, E56, E57)); {'Idris.Core.TT.TDelay', E58, E59, E60, E61} -> (fun (V90, V91, V92, V93) -> fun (V94) -> begin (V95 = (('un--toCExp'(V0, V1, V2, V93))(V94))), case V95 of {'Idris.Prelude.Types.Left', E62} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V97) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CDelay', V90, V91, V97}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E58, E59, E60, E61)); {'Idris.Core.TT.TForce', E64, E65, E66} -> (fun (V98, V99, V100) -> fun (V101) -> begin (V102 = (('un--toCExp'(V0, V1, V2, V100))(V101))), case V102 of {'Idris.Prelude.Types.Left', E67} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V104) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CForce', V98, V99, V104}} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E64, E65, E66)); {'Idris.Core.TT.PrimVal', E69, E70} -> (fun (V105, V106) -> begin (V107 = ('Idris.Idris2.Core.TT':'un--constTag'(V106))), ('case--toCExpTm-3154'(V0, V1, V106, V105, V2, V107, ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V107, 0)))) end end(E69, E70)); {'Idris.Core.TT.Erased', E71, E72} -> (fun (V108, V109) -> fun (V110) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V108}} end end(E71, E72)); {'Idris.Core.TT.TType', E73} -> (fun (V111) -> fun (V112) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V111, {'Idris.Core.Name.UN', <<"Type"/utf8>>}, {'Idris.Prelude.Types.Nothing'}, []}} end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toCExp'(V0, V1, V2, V3) -> ('case--toCExp-3220'(V0, V3, V2, V1, ('Idris.Idris2.Core.TT':'un--getFnArgs'('erased', V3)))).
'un--toCDef'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Context.None'} -> (fun () -> fun (V4) -> begin (V5 = (('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1))(V4))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered undefined name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))))}}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.Context.PMDef', E4, E5, E6, E7, E8} -> (fun (V8, V9, V10, V11, V12) -> fun (V13) -> begin (V14 = (('un--toCExpTree'(V9, V0, V1, V11))(V13))), case V14 of {'Idris.Prelude.Types.Left', E9} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V9, V16}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7, E8)); {'Idris.Core.Context.ExternDef', E11} -> (fun (V17) -> ('case--toCDef-5715'(V17, V2, V1, V0, ('un--mkArgList'(0, V17)))) end(E11)); {'Idris.Core.Context.ForeignDef', E12, E13} -> (fun (V18, V19) -> fun (V20) -> begin (V22 = begin (V21 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E14} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V24) -> begin (V28 = begin (V25 = (('Idris.Idris2.Core.Normalise':'un--nf'(V0, [], V24, {'Idris.Core.Env.Nil'}, V2))(V20))), case V25 of {'Idris.Prelude.Types.Left', E16} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V27) -> (('un--getCFTypes'(V0, [], V27))(V20)) end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V28 of {'Idris.Prelude.Types.Left', E18} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V30) -> case V30 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V31, V32) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkForeign', V19, V31, V32}} end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12, E13)); {'Idris.Core.Context.Builtin', E22, E23} -> (fun (V33, V34) -> ('case--toCDef-5848'(V33, V34, V2, V1, V0, ('un--mkArgList'(0, V33)))) end(E22, E23)); {'Idris.Core.Context.DCon', E24, E25, E26} -> (fun (V35, V36, V37) -> begin (V43 = ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V40, V41)) end end end end, fun (V42) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V42)) end, V37))), fun (V44) -> begin (V46 = begin (V45 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V45} end), case V46 of {'Idris.Prelude.Types.Left', E27} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V48) -> begin (V49 = (('un--numArgs'('erased', V48, {'Idris.Core.TT.Ref', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.DataCon', V35, V36}, V1}))(V44))), case V49 of {'Idris.Prelude.Types.Left', E29} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V51) -> begin (V57 = case V51 of {'Idris.Compiler.CompileExpr.NewTypeBy', E31, E32} -> (fun (V52, V53) -> V52 end(E31, E32)); {'Idris.Compiler.CompileExpr.EraseArgs', E33, E34} -> (fun (V54, V55) -> ('Idris.Idris2.Prelude.Types':'un--minus'(V54, ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V55)))) end(E33, E34)); {'Idris.Compiler.CompileExpr.Arity', E35} -> (fun (V56) -> V56 end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Types.Just', V35}, V57, V43}} end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E24, E25, E26)); {'Idris.Core.Context.TCon', E36, E37, E38, E39, E40, E41, E42, E43} -> (fun (V58, V59, V60, V61, V62, V63, V64, V65) -> fun (V66) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Types.Nothing'}, V59, {'Idris.Prelude.Types.Nothing'}}} end end(E36, E37, E38, E39, E40, E41, E42, E43)); {'Idris.Core.Context.Hole', E44, E45} -> (fun (V67, V68) -> fun (V69) -> begin (V70 = (('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1))(V69))), case V70 of {'Idris.Prelude.Types.Left', E46} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V72) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered unimplemented hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V72))))}}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E44, E45)); {'Idris.Core.Context.Guess', E48, E49, E50} -> (fun (V73, V74, V75) -> fun (V76) -> begin (V77 = (('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1))(V76))), case V77 of {'Idris.Prelude.Types.Left', E51} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered constrained hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V79))))}}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49, E50)); {'Idris.Core.Context.BySearch', E53, E54, E55} -> (fun (V80, V81, V82) -> fun (V83) -> begin (V84 = (('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1))(V83))), case V84 of {'Idris.Prelude.Types.Left', E56} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V86) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered incomplete proof search "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V86))))}}} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E53, E54, E55)); _ -> fun (V87) -> begin (V88 = (('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1))(V87))), case V88 of {'Idris.Prelude.Types.Left', E0} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered uncompilable name "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V91) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V91)) end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V92, V93)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V94) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_Def'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_Def'(V95, V96)) end end}}, {'Idris.Builtin.MkPair', V90, V3}))))}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--numArgs'(V0, V1, V2) -> case V2 of {'Idris.Core.TT.Ref', E0, E1, E2} -> (fun (V3, V4, V5) -> case V4 of {'Idris.Core.TT.TyCon', E54, E55} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V7}} end end(E54, E55)); _ -> fun (V9) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V1 of {'Idris.Core.Context.MkDefs', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V10 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V37 of {'Idris.Prelude.Types.Left', E30} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E32} -> (fun (V40) -> begin (V41 = {'Idris.Prelude.Types.Just', V40}), (('case--case block in numArgs-1343'('erased', V3, V4, V5, V1, V40, V41, case V40 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62) -> V59 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9)) end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1, E2)); _ -> fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end.
'un--nfToCFType'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NPrimVal', E1854, E1855} -> (fun (V4, V5) -> case V5 of {'Idris.Core.TT.IntType'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt'}} end end()); {'Idris.Core.TT.Bits8Type'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned8'}} end end()); {'Idris.Core.TT.Bits16Type'} -> (fun () -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned16'}} end end()); {'Idris.Core.TT.Bits32Type'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned32'}} end end()); {'Idris.Core.TT.Bits64Type'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned64'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NPrimVal', E2596, E2597} -> (fun (V11, V12) -> case V12 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFString'}} end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2782, E2783} -> (fun (V14, V15) -> case V15 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E2866, E2867, E2868, E2869} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Pi', E2911, E2912, E2913, E2914} -> (fun (V23, V24, V25, V26) -> fun (V27) -> begin (V29 = begin (V28 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V28} end), case V29 of {'Idris.Prelude.Types.Left', E2915} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E2915)); {'Idris.Prelude.Types.Right', E2916} -> (fun (V31) -> begin (V32 = (('un--nfToCFType'(V0, V19, 1, V26))(V27))), case V32 of {'Idris.Prelude.Types.Left', E2917} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E2917)); {'Idris.Prelude.Types.Right', E2918} -> (fun (V34) -> begin (V35 = (((V22(V31))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V19, 1}))))(V27))), case V35 of {'Idris.Prelude.Types.Left', E2919} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E2919)); {'Idris.Prelude.Types.Right', E2920} -> (fun (V37) -> begin (V38 = (('un--nfToCFType'(V0, V19, 1, V37))(V27))), case V38 of {'Idris.Prelude.Types.Left', E2921} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E2921)); {'Idris.Prelude.Types.Right', E2922} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V34, V40}} end(E2922)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2920)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2918)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2916)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2911, E2912, E2913, E2914)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2876, E2877, E2878, E2879, E2880} -> (fun (V41, V42, V43, V44, V45) -> fun (V46) -> begin (V48 = begin (V47 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V47} end), case V48 of {'Idris.Prelude.Types.Left', E2881} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E2881)); {'Idris.Prelude.Types.Right', E2882} -> (fun (V50) -> begin (V55 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V51, V52)) end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V53, V54)) end end}, V42, V46))), case V55 of {'Idris.Prelude.Types.Left', E2883} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E2883)); {'Idris.Prelude.Types.Right', E2884} -> (fun (V57) -> begin (V59 = (('un--getNArgs'(V0, V50, V57, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V58) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V58)) end, V45))))(V46))), case V59 of {'Idris.Prelude.Types.Left', E2885} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E2885)); {'Idris.Prelude.Types.Right', E2886} -> (fun (V61) -> case V61 of {'Idris.Compiler.CompileExpr.User', E2887, E2888} -> (fun (V62, V63) -> begin (V65 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V64) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V50, V64)) end, V63, []))(V46))), case V65 of {'Idris.Prelude.Types.Left', E2889} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E2889)); {'Idris.Prelude.Types.Right', E2890} -> (fun (V67) -> begin (V69 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V68) -> ('un--nfToCFType'(V0, V41, V2, V68)) end, V67, []))(V46))), case V69 of {'Idris.Prelude.Types.Left', E2891} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E2891)); {'Idris.Prelude.Types.Right', E2892} -> (fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V57, V71}} end(E2892)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2890)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2887, E2888)); {'Idris.Compiler.CompileExpr.Struct', E2893, E2894} -> (fun (V72, V73) -> begin (V84 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V74) -> case V74 of {'Idris.Builtin.MkPair', E2895, E2896} -> (fun (V75, V76) -> fun (V77) -> begin (V78 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V50, V76))(V77))), case V78 of {'Idris.Prelude.Types.Left', E2897} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E2897)); {'Idris.Prelude.Types.Right', E2898} -> (fun (V80) -> begin (V81 = (('un--nfToCFType'(V0, V41, 0, V80))(V77))), case V81 of {'Idris.Prelude.Types.Left', E2899} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E2899)); {'Idris.Prelude.Types.Right', E2900} -> (fun (V83) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V75, V83}} end(E2900)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2898)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2895, E2896)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V73, []))(V46))), case V84 of {'Idris.Prelude.Types.Left', E2901} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E2901)); {'Idris.Prelude.Types.Right', E2902} -> (fun (V86) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V72, V86}} end(E2902)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2893, E2894)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2903} -> (fun (V87) -> begin (V88 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V50, V87))(V46))), case V88 of {'Idris.Prelude.Types.Left', E2904} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E2904)); {'Idris.Prelude.Types.Right', E2905} -> (fun (V90) -> begin (V91 = (('un--nfToCFType'(V0, V41, V2, V90))(V46))), case V91 of {'Idris.Prelude.Types.Left', E2906} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E2906)); {'Idris.Prelude.Types.Right', E2907} -> (fun (V93) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V93}} end(E2907)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2876, E2877, E2878, E2879, E2880)); {'Idris.Core.Value.NType', E2908} -> (fun (V94) -> fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2908)); {'Idris.Core.Value.NErased', E2909, E2910} -> (fun (V96, V97) -> fun (V98) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2909, E2910)); _ -> fun (V99) -> begin (V101 = begin (V100 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V100} end), case V101 of {'Idris.Prelude.Types.Left', E2870} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E2870)); {'Idris.Prelude.Types.Right', E2871} -> (fun (V103) -> begin (V104 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V103, {'Idris.Core.Env.Nil'}, V3, V99))), case V104 of {'Idris.Prelude.Types.Left', E2872} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E2872)); {'Idris.Prelude.Types.Right', E2873} -> (fun (V106) -> begin (V111 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V107, V108)) end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V109, V110)) end end}, V106, V99))), case V111 of {'Idris.Prelude.Types.Left', E2874} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E2874)); {'Idris.Prelude.Types.Right', E2875} -> (fun (V113) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V113))))}, V99)) end(E2875)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2873)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2871)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2866, E2867, E2868, E2869)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2831, E2832, E2833, E2834, E2835} -> (fun (V114, V115, V116, V117, V118) -> fun (V119) -> begin (V121 = begin (V120 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V120} end), case V121 of {'Idris.Prelude.Types.Left', E2836} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E2836)); {'Idris.Prelude.Types.Right', E2837} -> (fun (V123) -> begin (V128 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V124, V125)) end end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V126, V127)) end end}, V115, V119))), case V128 of {'Idris.Prelude.Types.Left', E2838} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E2838)); {'Idris.Prelude.Types.Right', E2839} -> (fun (V130) -> begin (V132 = (('un--getNArgs'(V0, V123, V130, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V131) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V131)) end, V118))))(V119))), case V132 of {'Idris.Prelude.Types.Left', E2840} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E2840)); {'Idris.Prelude.Types.Right', E2841} -> (fun (V134) -> case V134 of {'Idris.Compiler.CompileExpr.User', E2842, E2843} -> (fun (V135, V136) -> begin (V138 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V137) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V123, V137)) end, V136, []))(V119))), case V138 of {'Idris.Prelude.Types.Left', E2844} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E2844)); {'Idris.Prelude.Types.Right', E2845} -> (fun (V140) -> begin (V142 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V141) -> ('un--nfToCFType'(V0, V114, V2, V141)) end, V140, []))(V119))), case V142 of {'Idris.Prelude.Types.Left', E2846} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E2846)); {'Idris.Prelude.Types.Right', E2847} -> (fun (V144) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V130, V144}} end(E2847)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2845)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2842, E2843)); {'Idris.Compiler.CompileExpr.Struct', E2848, E2849} -> (fun (V145, V146) -> begin (V157 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V147) -> case V147 of {'Idris.Builtin.MkPair', E2850, E2851} -> (fun (V148, V149) -> fun (V150) -> begin (V151 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V123, V149))(V150))), case V151 of {'Idris.Prelude.Types.Left', E2852} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E2852)); {'Idris.Prelude.Types.Right', E2853} -> (fun (V153) -> begin (V154 = (('un--nfToCFType'(V0, V114, 0, V153))(V150))), case V154 of {'Idris.Prelude.Types.Left', E2854} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E2854)); {'Idris.Prelude.Types.Right', E2855} -> (fun (V156) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V148, V156}} end(E2855)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2853)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2850, E2851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V146, []))(V119))), case V157 of {'Idris.Prelude.Types.Left', E2856} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E2856)); {'Idris.Prelude.Types.Right', E2857} -> (fun (V159) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V145, V159}} end(E2857)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2848, E2849)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2858} -> (fun (V160) -> begin (V161 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V123, V160))(V119))), case V161 of {'Idris.Prelude.Types.Left', E2859} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E2859)); {'Idris.Prelude.Types.Right', E2860} -> (fun (V163) -> begin (V164 = (('un--nfToCFType'(V0, V114, V2, V163))(V119))), case V164 of {'Idris.Prelude.Types.Left', E2861} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E2861)); {'Idris.Prelude.Types.Right', E2862} -> (fun (V166) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V166}} end(E2862)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2858)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2841)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2839)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2837)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2831, E2832, E2833, E2834, E2835)); {'Idris.Core.Value.NType', E2863} -> (fun (V167) -> fun (V168) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2863)); {'Idris.Core.Value.NErased', E2864, E2865} -> (fun (V169, V170) -> fun (V171) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2864, E2865)); _ -> fun (V172) -> begin (V174 = begin (V173 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V173} end), case V174 of {'Idris.Prelude.Types.Left', E2825} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E2825)); {'Idris.Prelude.Types.Right', E2826} -> (fun (V176) -> begin (V177 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V176, {'Idris.Core.Env.Nil'}, V3, V172))), case V177 of {'Idris.Prelude.Types.Left', E2827} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E2827)); {'Idris.Prelude.Types.Right', E2828} -> (fun (V179) -> begin (V184 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V180, V181)) end end, fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V182, V183)) end end}, V179, V172))), case V184 of {'Idris.Prelude.Types.Left', E2829} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E2829)); {'Idris.Prelude.Types.Right', E2830} -> (fun (V186) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V186))))}, V172)) end(E2830)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2828)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2826)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E2964, E2965, E2966, E2967} -> (fun (V187, V188, V189, V190) -> fun (V191) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V187, <<"Function types not allowed in a foreign struct"/utf8>>}, V191)) end end(E2964, E2965, E2966, E2967)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2929, E2930, E2931, E2932, E2933} -> (fun (V192, V193, V194, V195, V196) -> fun (V197) -> begin (V199 = begin (V198 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V198} end), case V199 of {'Idris.Prelude.Types.Left', E2934} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E2934)); {'Idris.Prelude.Types.Right', E2935} -> (fun (V201) -> begin (V206 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V202) -> fun (V203) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V202, V203)) end end, fun (V204) -> fun (V205) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V204, V205)) end end}, V193, V197))), case V206 of {'Idris.Prelude.Types.Left', E2936} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E2936)); {'Idris.Prelude.Types.Right', E2937} -> (fun (V208) -> begin (V210 = (('un--getNArgs'(V0, V201, V208, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V209) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V209)) end, V196))))(V197))), case V210 of {'Idris.Prelude.Types.Left', E2938} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E2938)); {'Idris.Prelude.Types.Right', E2939} -> (fun (V212) -> case V212 of {'Idris.Compiler.CompileExpr.User', E2940, E2941} -> (fun (V213, V214) -> begin (V216 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V215) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V201, V215)) end, V214, []))(V197))), case V216 of {'Idris.Prelude.Types.Left', E2942} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E2942)); {'Idris.Prelude.Types.Right', E2943} -> (fun (V218) -> begin (V220 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V219) -> ('un--nfToCFType'(V0, V192, V2, V219)) end, V218, []))(V197))), case V220 of {'Idris.Prelude.Types.Left', E2944} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E2944)); {'Idris.Prelude.Types.Right', E2945} -> (fun (V222) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V208, V222}} end(E2945)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2943)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2940, E2941)); {'Idris.Compiler.CompileExpr.Struct', E2946, E2947} -> (fun (V223, V224) -> begin (V235 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V225) -> case V225 of {'Idris.Builtin.MkPair', E2948, E2949} -> (fun (V226, V227) -> fun (V228) -> begin (V229 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V201, V227))(V228))), case V229 of {'Idris.Prelude.Types.Left', E2950} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E2950)); {'Idris.Prelude.Types.Right', E2951} -> (fun (V231) -> begin (V232 = (('un--nfToCFType'(V0, V192, 0, V231))(V228))), case V232 of {'Idris.Prelude.Types.Left', E2952} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E2952)); {'Idris.Prelude.Types.Right', E2953} -> (fun (V234) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V226, V234}} end(E2953)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2951)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2948, E2949)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V224, []))(V197))), case V235 of {'Idris.Prelude.Types.Left', E2954} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E2954)); {'Idris.Prelude.Types.Right', E2955} -> (fun (V237) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V223, V237}} end(E2955)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2946, E2947)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2956} -> (fun (V238) -> begin (V239 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V201, V238))(V197))), case V239 of {'Idris.Prelude.Types.Left', E2957} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E2957)); {'Idris.Prelude.Types.Right', E2958} -> (fun (V241) -> begin (V242 = (('un--nfToCFType'(V0, V192, V2, V241))(V197))), case V242 of {'Idris.Prelude.Types.Left', E2959} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E2959)); {'Idris.Prelude.Types.Right', E2960} -> (fun (V244) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V244}} end(E2960)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2939)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2937)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2935)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2929, E2930, E2931, E2932, E2933)); {'Idris.Core.Value.NType', E2961} -> (fun (V245) -> fun (V246) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2961)); {'Idris.Core.Value.NErased', E2962, E2963} -> (fun (V247, V248) -> fun (V249) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2962, E2963)); _ -> fun (V250) -> begin (V252 = begin (V251 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V251} end), case V252 of {'Idris.Prelude.Types.Left', E2923} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E2923)); {'Idris.Prelude.Types.Right', E2924} -> (fun (V254) -> begin (V255 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V254, {'Idris.Core.Env.Nil'}, V3, V250))), case V255 of {'Idris.Prelude.Types.Left', E2925} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E2925)); {'Idris.Prelude.Types.Right', E2926} -> (fun (V257) -> begin (V262 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V258) -> fun (V259) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V258, V259)) end end, fun (V260) -> fun (V261) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V260, V261)) end end}, V257, V250))), case V262 of {'Idris.Prelude.Types.Left', E2927} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E2927)); {'Idris.Prelude.Types.Right', E2928} -> (fun (V264) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V264))))}, V250)) end(E2928)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2926)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2924)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E2790, E2791, E2792, E2793, E2794} -> (fun (V265, V266, V267, V268, V269) -> fun (V270) -> begin (V272 = begin (V271 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V271} end), case V272 of {'Idris.Prelude.Types.Left', E2795} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E2795)); {'Idris.Prelude.Types.Right', E2796} -> (fun (V274) -> begin (V279 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V275) -> fun (V276) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V275, V276)) end end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V277, V278)) end end}, V266, V270))), case V279 of {'Idris.Prelude.Types.Left', E2797} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E2797)); {'Idris.Prelude.Types.Right', E2798} -> (fun (V281) -> begin (V283 = (('un--getNArgs'(V0, V274, V281, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V282) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V282)) end, V269))))(V270))), case V283 of {'Idris.Prelude.Types.Left', E2799} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E2799)); {'Idris.Prelude.Types.Right', E2800} -> (fun (V285) -> case V285 of {'Idris.Compiler.CompileExpr.User', E2801, E2802} -> (fun (V286, V287) -> begin (V289 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V288) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V274, V288)) end, V287, []))(V270))), case V289 of {'Idris.Prelude.Types.Left', E2803} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E2803)); {'Idris.Prelude.Types.Right', E2804} -> (fun (V291) -> begin (V293 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V292) -> ('un--nfToCFType'(V0, V265, V2, V292)) end, V291, []))(V270))), case V293 of {'Idris.Prelude.Types.Left', E2805} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E2805)); {'Idris.Prelude.Types.Right', E2806} -> (fun (V295) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V281, V295}} end(E2806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2801, E2802)); {'Idris.Compiler.CompileExpr.Struct', E2807, E2808} -> (fun (V296, V297) -> begin (V308 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V298) -> case V298 of {'Idris.Builtin.MkPair', E2809, E2810} -> (fun (V299, V300) -> fun (V301) -> begin (V302 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V274, V300))(V301))), case V302 of {'Idris.Prelude.Types.Left', E2811} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E2811)); {'Idris.Prelude.Types.Right', E2812} -> (fun (V304) -> begin (V305 = (('un--nfToCFType'(V0, V265, 0, V304))(V301))), case V305 of {'Idris.Prelude.Types.Left', E2813} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E2813)); {'Idris.Prelude.Types.Right', E2814} -> (fun (V307) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V299, V307}} end(E2814)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2812)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2809, E2810)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V297, []))(V270))), case V308 of {'Idris.Prelude.Types.Left', E2815} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E2815)); {'Idris.Prelude.Types.Right', E2816} -> (fun (V310) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V296, V310}} end(E2816)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2807, E2808)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2817} -> (fun (V311) -> begin (V312 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V274, V311))(V270))), case V312 of {'Idris.Prelude.Types.Left', E2818} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E2818)); {'Idris.Prelude.Types.Right', E2819} -> (fun (V314) -> begin (V315 = (('un--nfToCFType'(V0, V265, V2, V314))(V270))), case V315 of {'Idris.Prelude.Types.Left', E2820} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E2820)); {'Idris.Prelude.Types.Right', E2821} -> (fun (V317) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V317}} end(E2821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2819)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2817)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2800)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2798)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2796)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2790, E2791, E2792, E2793, E2794)); {'Idris.Core.Value.NType', E2822} -> (fun (V318) -> fun (V319) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2822)); {'Idris.Core.Value.NErased', E2823, E2824} -> (fun (V320, V321) -> fun (V322) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2823, E2824)); _ -> fun (V323) -> begin (V325 = begin (V324 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V324} end), case V325 of {'Idris.Prelude.Types.Left', E2784} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E2784)); {'Idris.Prelude.Types.Right', E2785} -> (fun (V327) -> begin (V328 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V327, {'Idris.Core.Env.Nil'}, V3, V323))), case V328 of {'Idris.Prelude.Types.Left', E2786} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E2786)); {'Idris.Prelude.Types.Right', E2787} -> (fun (V330) -> begin (V335 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V331) -> fun (V332) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V331, V332)) end end, fun (V333) -> fun (V334) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V333, V334)) end end}, V330, V323))), case V335 of {'Idris.Prelude.Types.Left', E2788} -> (fun (V336) -> {'Idris.Prelude.Types.Left', V336} end(E2788)); {'Idris.Prelude.Types.Right', E2789} -> (fun (V337) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V337))))}, V323)) end(E2789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2787)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2785)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2782, E2783)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E2680, E2681, E2682, E2683} -> (fun (V338, V339, V340, V341) -> case V340 of {'Idris.Core.TT.Pi', E2725, E2726, E2727, E2728} -> (fun (V342, V343, V344, V345) -> fun (V346) -> begin (V348 = begin (V347 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V347} end), case V348 of {'Idris.Prelude.Types.Left', E2729} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E2729)); {'Idris.Prelude.Types.Right', E2730} -> (fun (V350) -> begin (V351 = (('un--nfToCFType'(V0, V338, 1, V345))(V346))), case V351 of {'Idris.Prelude.Types.Left', E2731} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E2731)); {'Idris.Prelude.Types.Right', E2732} -> (fun (V353) -> begin (V354 = (((V341(V350))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V338, 1}))))(V346))), case V354 of {'Idris.Prelude.Types.Left', E2733} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E2733)); {'Idris.Prelude.Types.Right', E2734} -> (fun (V356) -> begin (V357 = (('un--nfToCFType'(V0, V338, 1, V356))(V346))), case V357 of {'Idris.Prelude.Types.Left', E2735} -> (fun (V358) -> {'Idris.Prelude.Types.Left', V358} end(E2735)); {'Idris.Prelude.Types.Right', E2736} -> (fun (V359) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V353, V359}} end(E2736)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2730)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2725, E2726, E2727, E2728)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2690, E2691, E2692, E2693, E2694} -> (fun (V360, V361, V362, V363, V364) -> fun (V365) -> begin (V367 = begin (V366 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V366} end), case V367 of {'Idris.Prelude.Types.Left', E2695} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E2695)); {'Idris.Prelude.Types.Right', E2696} -> (fun (V369) -> begin (V374 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V370) -> fun (V371) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V370, V371)) end end, fun (V372) -> fun (V373) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V372, V373)) end end}, V361, V365))), case V374 of {'Idris.Prelude.Types.Left', E2697} -> (fun (V375) -> {'Idris.Prelude.Types.Left', V375} end(E2697)); {'Idris.Prelude.Types.Right', E2698} -> (fun (V376) -> begin (V378 = (('un--getNArgs'(V0, V369, V376, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V377) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V377)) end, V364))))(V365))), case V378 of {'Idris.Prelude.Types.Left', E2699} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E2699)); {'Idris.Prelude.Types.Right', E2700} -> (fun (V380) -> case V380 of {'Idris.Compiler.CompileExpr.User', E2701, E2702} -> (fun (V381, V382) -> begin (V384 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V383) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V369, V383)) end, V382, []))(V365))), case V384 of {'Idris.Prelude.Types.Left', E2703} -> (fun (V385) -> {'Idris.Prelude.Types.Left', V385} end(E2703)); {'Idris.Prelude.Types.Right', E2704} -> (fun (V386) -> begin (V388 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V387) -> ('un--nfToCFType'(V0, V360, V2, V387)) end, V386, []))(V365))), case V388 of {'Idris.Prelude.Types.Left', E2705} -> (fun (V389) -> {'Idris.Prelude.Types.Left', V389} end(E2705)); {'Idris.Prelude.Types.Right', E2706} -> (fun (V390) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V376, V390}} end(E2706)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2704)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2701, E2702)); {'Idris.Compiler.CompileExpr.Struct', E2707, E2708} -> (fun (V391, V392) -> begin (V403 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V393) -> case V393 of {'Idris.Builtin.MkPair', E2709, E2710} -> (fun (V394, V395) -> fun (V396) -> begin (V397 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V369, V395))(V396))), case V397 of {'Idris.Prelude.Types.Left', E2711} -> (fun (V398) -> {'Idris.Prelude.Types.Left', V398} end(E2711)); {'Idris.Prelude.Types.Right', E2712} -> (fun (V399) -> begin (V400 = (('un--nfToCFType'(V0, V360, 0, V399))(V396))), case V400 of {'Idris.Prelude.Types.Left', E2713} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E2713)); {'Idris.Prelude.Types.Right', E2714} -> (fun (V402) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V394, V402}} end(E2714)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2712)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2709, E2710)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V392, []))(V365))), case V403 of {'Idris.Prelude.Types.Left', E2715} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E2715)); {'Idris.Prelude.Types.Right', E2716} -> (fun (V405) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V391, V405}} end(E2716)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2707, E2708)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2717} -> (fun (V406) -> begin (V407 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V369, V406))(V365))), case V407 of {'Idris.Prelude.Types.Left', E2718} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E2718)); {'Idris.Prelude.Types.Right', E2719} -> (fun (V409) -> begin (V410 = (('un--nfToCFType'(V0, V360, V2, V409))(V365))), case V410 of {'Idris.Prelude.Types.Left', E2720} -> (fun (V411) -> {'Idris.Prelude.Types.Left', V411} end(E2720)); {'Idris.Prelude.Types.Right', E2721} -> (fun (V412) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V412}} end(E2721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2719)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2690, E2691, E2692, E2693, E2694)); {'Idris.Core.Value.NType', E2722} -> (fun (V413) -> fun (V414) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2722)); {'Idris.Core.Value.NErased', E2723, E2724} -> (fun (V415, V416) -> fun (V417) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2723, E2724)); _ -> fun (V418) -> begin (V420 = begin (V419 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V419} end), case V420 of {'Idris.Prelude.Types.Left', E2684} -> (fun (V421) -> {'Idris.Prelude.Types.Left', V421} end(E2684)); {'Idris.Prelude.Types.Right', E2685} -> (fun (V422) -> begin (V423 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V422, {'Idris.Core.Env.Nil'}, V3, V418))), case V423 of {'Idris.Prelude.Types.Left', E2686} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E2686)); {'Idris.Prelude.Types.Right', E2687} -> (fun (V425) -> begin (V430 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V426) -> fun (V427) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V426, V427)) end end, fun (V428) -> fun (V429) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V428, V429)) end end}, V425, V418))), case V430 of {'Idris.Prelude.Types.Left', E2688} -> (fun (V431) -> {'Idris.Prelude.Types.Left', V431} end(E2688)); {'Idris.Prelude.Types.Right', E2689} -> (fun (V432) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V432))))}, V418)) end(E2689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2680, E2681, E2682, E2683)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2645, E2646, E2647, E2648, E2649} -> (fun (V433, V434, V435, V436, V437) -> fun (V438) -> begin (V440 = begin (V439 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V439} end), case V440 of {'Idris.Prelude.Types.Left', E2650} -> (fun (V441) -> {'Idris.Prelude.Types.Left', V441} end(E2650)); {'Idris.Prelude.Types.Right', E2651} -> (fun (V442) -> begin (V447 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V443) -> fun (V444) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V443, V444)) end end, fun (V445) -> fun (V446) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V445, V446)) end end}, V434, V438))), case V447 of {'Idris.Prelude.Types.Left', E2652} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E2652)); {'Idris.Prelude.Types.Right', E2653} -> (fun (V449) -> begin (V451 = (('un--getNArgs'(V0, V442, V449, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V450) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V450)) end, V437))))(V438))), case V451 of {'Idris.Prelude.Types.Left', E2654} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E2654)); {'Idris.Prelude.Types.Right', E2655} -> (fun (V453) -> case V453 of {'Idris.Compiler.CompileExpr.User', E2656, E2657} -> (fun (V454, V455) -> begin (V457 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V456) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V442, V456)) end, V455, []))(V438))), case V457 of {'Idris.Prelude.Types.Left', E2658} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E2658)); {'Idris.Prelude.Types.Right', E2659} -> (fun (V459) -> begin (V461 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V460) -> ('un--nfToCFType'(V0, V433, V2, V460)) end, V459, []))(V438))), case V461 of {'Idris.Prelude.Types.Left', E2660} -> (fun (V462) -> {'Idris.Prelude.Types.Left', V462} end(E2660)); {'Idris.Prelude.Types.Right', E2661} -> (fun (V463) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V449, V463}} end(E2661)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2659)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2656, E2657)); {'Idris.Compiler.CompileExpr.Struct', E2662, E2663} -> (fun (V464, V465) -> begin (V476 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V466) -> case V466 of {'Idris.Builtin.MkPair', E2664, E2665} -> (fun (V467, V468) -> fun (V469) -> begin (V470 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V442, V468))(V469))), case V470 of {'Idris.Prelude.Types.Left', E2666} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E2666)); {'Idris.Prelude.Types.Right', E2667} -> (fun (V472) -> begin (V473 = (('un--nfToCFType'(V0, V433, 0, V472))(V469))), case V473 of {'Idris.Prelude.Types.Left', E2668} -> (fun (V474) -> {'Idris.Prelude.Types.Left', V474} end(E2668)); {'Idris.Prelude.Types.Right', E2669} -> (fun (V475) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V467, V475}} end(E2669)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2667)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2664, E2665)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V465, []))(V438))), case V476 of {'Idris.Prelude.Types.Left', E2670} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E2670)); {'Idris.Prelude.Types.Right', E2671} -> (fun (V478) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V464, V478}} end(E2671)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2662, E2663)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2672} -> (fun (V479) -> begin (V480 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V442, V479))(V438))), case V480 of {'Idris.Prelude.Types.Left', E2673} -> (fun (V481) -> {'Idris.Prelude.Types.Left', V481} end(E2673)); {'Idris.Prelude.Types.Right', E2674} -> (fun (V482) -> begin (V483 = (('un--nfToCFType'(V0, V433, V2, V482))(V438))), case V483 of {'Idris.Prelude.Types.Left', E2675} -> (fun (V484) -> {'Idris.Prelude.Types.Left', V484} end(E2675)); {'Idris.Prelude.Types.Right', E2676} -> (fun (V485) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V485}} end(E2676)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2655)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2645, E2646, E2647, E2648, E2649)); {'Idris.Core.Value.NType', E2677} -> (fun (V486) -> fun (V487) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2677)); {'Idris.Core.Value.NErased', E2678, E2679} -> (fun (V488, V489) -> fun (V490) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2678, E2679)); _ -> fun (V491) -> begin (V493 = begin (V492 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V492} end), case V493 of {'Idris.Prelude.Types.Left', E2639} -> (fun (V494) -> {'Idris.Prelude.Types.Left', V494} end(E2639)); {'Idris.Prelude.Types.Right', E2640} -> (fun (V495) -> begin (V496 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V495, {'Idris.Core.Env.Nil'}, V3, V491))), case V496 of {'Idris.Prelude.Types.Left', E2641} -> (fun (V497) -> {'Idris.Prelude.Types.Left', V497} end(E2641)); {'Idris.Prelude.Types.Right', E2642} -> (fun (V498) -> begin (V503 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V499) -> fun (V500) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V499, V500)) end end, fun (V501) -> fun (V502) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V501, V502)) end end}, V498, V491))), case V503 of {'Idris.Prelude.Types.Left', E2643} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E2643)); {'Idris.Prelude.Types.Right', E2644} -> (fun (V505) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V505))))}, V491)) end(E2644)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E2778, E2779, E2780, E2781} -> (fun (V506, V507, V508, V509) -> fun (V510) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V506, <<"Function types not allowed in a foreign struct"/utf8>>}, V510)) end end(E2778, E2779, E2780, E2781)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2743, E2744, E2745, E2746, E2747} -> (fun (V511, V512, V513, V514, V515) -> fun (V516) -> begin (V518 = begin (V517 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V517} end), case V518 of {'Idris.Prelude.Types.Left', E2748} -> (fun (V519) -> {'Idris.Prelude.Types.Left', V519} end(E2748)); {'Idris.Prelude.Types.Right', E2749} -> (fun (V520) -> begin (V525 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V521) -> fun (V522) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V521, V522)) end end, fun (V523) -> fun (V524) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V523, V524)) end end}, V512, V516))), case V525 of {'Idris.Prelude.Types.Left', E2750} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E2750)); {'Idris.Prelude.Types.Right', E2751} -> (fun (V527) -> begin (V529 = (('un--getNArgs'(V0, V520, V527, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V528) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V528)) end, V515))))(V516))), case V529 of {'Idris.Prelude.Types.Left', E2752} -> (fun (V530) -> {'Idris.Prelude.Types.Left', V530} end(E2752)); {'Idris.Prelude.Types.Right', E2753} -> (fun (V531) -> case V531 of {'Idris.Compiler.CompileExpr.User', E2754, E2755} -> (fun (V532, V533) -> begin (V535 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V534) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V520, V534)) end, V533, []))(V516))), case V535 of {'Idris.Prelude.Types.Left', E2756} -> (fun (V536) -> {'Idris.Prelude.Types.Left', V536} end(E2756)); {'Idris.Prelude.Types.Right', E2757} -> (fun (V537) -> begin (V539 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V538) -> ('un--nfToCFType'(V0, V511, V2, V538)) end, V537, []))(V516))), case V539 of {'Idris.Prelude.Types.Left', E2758} -> (fun (V540) -> {'Idris.Prelude.Types.Left', V540} end(E2758)); {'Idris.Prelude.Types.Right', E2759} -> (fun (V541) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V527, V541}} end(E2759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2754, E2755)); {'Idris.Compiler.CompileExpr.Struct', E2760, E2761} -> (fun (V542, V543) -> begin (V554 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V544) -> case V544 of {'Idris.Builtin.MkPair', E2762, E2763} -> (fun (V545, V546) -> fun (V547) -> begin (V548 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V520, V546))(V547))), case V548 of {'Idris.Prelude.Types.Left', E2764} -> (fun (V549) -> {'Idris.Prelude.Types.Left', V549} end(E2764)); {'Idris.Prelude.Types.Right', E2765} -> (fun (V550) -> begin (V551 = (('un--nfToCFType'(V0, V511, 0, V550))(V547))), case V551 of {'Idris.Prelude.Types.Left', E2766} -> (fun (V552) -> {'Idris.Prelude.Types.Left', V552} end(E2766)); {'Idris.Prelude.Types.Right', E2767} -> (fun (V553) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V545, V553}} end(E2767)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2765)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2762, E2763)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V543, []))(V516))), case V554 of {'Idris.Prelude.Types.Left', E2768} -> (fun (V555) -> {'Idris.Prelude.Types.Left', V555} end(E2768)); {'Idris.Prelude.Types.Right', E2769} -> (fun (V556) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V542, V556}} end(E2769)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2760, E2761)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2770} -> (fun (V557) -> begin (V558 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V520, V557))(V516))), case V558 of {'Idris.Prelude.Types.Left', E2771} -> (fun (V559) -> {'Idris.Prelude.Types.Left', V559} end(E2771)); {'Idris.Prelude.Types.Right', E2772} -> (fun (V560) -> begin (V561 = (('un--nfToCFType'(V0, V511, V2, V560))(V516))), case V561 of {'Idris.Prelude.Types.Left', E2773} -> (fun (V562) -> {'Idris.Prelude.Types.Left', V562} end(E2773)); {'Idris.Prelude.Types.Right', E2774} -> (fun (V563) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V563}} end(E2774)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2753)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2751)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2749)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2743, E2744, E2745, E2746, E2747)); {'Idris.Core.Value.NType', E2775} -> (fun (V564) -> fun (V565) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2775)); {'Idris.Core.Value.NErased', E2776, E2777} -> (fun (V566, V567) -> fun (V568) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2776, E2777)); _ -> fun (V569) -> begin (V571 = begin (V570 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V570} end), case V571 of {'Idris.Prelude.Types.Left', E2737} -> (fun (V572) -> {'Idris.Prelude.Types.Left', V572} end(E2737)); {'Idris.Prelude.Types.Right', E2738} -> (fun (V573) -> begin (V574 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V573, {'Idris.Core.Env.Nil'}, V3, V569))), case V574 of {'Idris.Prelude.Types.Left', E2739} -> (fun (V575) -> {'Idris.Prelude.Types.Left', V575} end(E2739)); {'Idris.Prelude.Types.Right', E2740} -> (fun (V576) -> begin (V581 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V577) -> fun (V578) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V577, V578)) end end, fun (V579) -> fun (V580) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V579, V580)) end end}, V576, V569))), case V581 of {'Idris.Prelude.Types.Left', E2741} -> (fun (V582) -> {'Idris.Prelude.Types.Left', V582} end(E2741)); {'Idris.Prelude.Types.Right', E2742} -> (fun (V583) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V583))))}, V569)) end(E2742)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2740)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E2604, E2605, E2606, E2607, E2608} -> (fun (V584, V585, V586, V587, V588) -> fun (V589) -> begin (V591 = begin (V590 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V590} end), case V591 of {'Idris.Prelude.Types.Left', E2609} -> (fun (V592) -> {'Idris.Prelude.Types.Left', V592} end(E2609)); {'Idris.Prelude.Types.Right', E2610} -> (fun (V593) -> begin (V598 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V594) -> fun (V595) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V594, V595)) end end, fun (V596) -> fun (V597) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V596, V597)) end end}, V585, V589))), case V598 of {'Idris.Prelude.Types.Left', E2611} -> (fun (V599) -> {'Idris.Prelude.Types.Left', V599} end(E2611)); {'Idris.Prelude.Types.Right', E2612} -> (fun (V600) -> begin (V602 = (('un--getNArgs'(V0, V593, V600, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V601) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V601)) end, V588))))(V589))), case V602 of {'Idris.Prelude.Types.Left', E2613} -> (fun (V603) -> {'Idris.Prelude.Types.Left', V603} end(E2613)); {'Idris.Prelude.Types.Right', E2614} -> (fun (V604) -> case V604 of {'Idris.Compiler.CompileExpr.User', E2615, E2616} -> (fun (V605, V606) -> begin (V608 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V607) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V593, V607)) end, V606, []))(V589))), case V608 of {'Idris.Prelude.Types.Left', E2617} -> (fun (V609) -> {'Idris.Prelude.Types.Left', V609} end(E2617)); {'Idris.Prelude.Types.Right', E2618} -> (fun (V610) -> begin (V612 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V611) -> ('un--nfToCFType'(V0, V584, V2, V611)) end, V610, []))(V589))), case V612 of {'Idris.Prelude.Types.Left', E2619} -> (fun (V613) -> {'Idris.Prelude.Types.Left', V613} end(E2619)); {'Idris.Prelude.Types.Right', E2620} -> (fun (V614) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V600, V614}} end(E2620)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2618)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2615, E2616)); {'Idris.Compiler.CompileExpr.Struct', E2621, E2622} -> (fun (V615, V616) -> begin (V627 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V617) -> case V617 of {'Idris.Builtin.MkPair', E2623, E2624} -> (fun (V618, V619) -> fun (V620) -> begin (V621 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V593, V619))(V620))), case V621 of {'Idris.Prelude.Types.Left', E2625} -> (fun (V622) -> {'Idris.Prelude.Types.Left', V622} end(E2625)); {'Idris.Prelude.Types.Right', E2626} -> (fun (V623) -> begin (V624 = (('un--nfToCFType'(V0, V584, 0, V623))(V620))), case V624 of {'Idris.Prelude.Types.Left', E2627} -> (fun (V625) -> {'Idris.Prelude.Types.Left', V625} end(E2627)); {'Idris.Prelude.Types.Right', E2628} -> (fun (V626) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V618, V626}} end(E2628)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2623, E2624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V616, []))(V589))), case V627 of {'Idris.Prelude.Types.Left', E2629} -> (fun (V628) -> {'Idris.Prelude.Types.Left', V628} end(E2629)); {'Idris.Prelude.Types.Right', E2630} -> (fun (V629) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V615, V629}} end(E2630)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2621, E2622)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2631} -> (fun (V630) -> begin (V631 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V593, V630))(V589))), case V631 of {'Idris.Prelude.Types.Left', E2632} -> (fun (V632) -> {'Idris.Prelude.Types.Left', V632} end(E2632)); {'Idris.Prelude.Types.Right', E2633} -> (fun (V633) -> begin (V634 = (('un--nfToCFType'(V0, V584, V2, V633))(V589))), case V634 of {'Idris.Prelude.Types.Left', E2634} -> (fun (V635) -> {'Idris.Prelude.Types.Left', V635} end(E2634)); {'Idris.Prelude.Types.Right', E2635} -> (fun (V636) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V636}} end(E2635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2633)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2631)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2614)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2612)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2610)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2604, E2605, E2606, E2607, E2608)); {'Idris.Core.Value.NType', E2636} -> (fun (V637) -> fun (V638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2636)); {'Idris.Core.Value.NErased', E2637, E2638} -> (fun (V639, V640) -> fun (V641) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2637, E2638)); _ -> fun (V642) -> begin (V644 = begin (V643 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V643} end), case V644 of {'Idris.Prelude.Types.Left', E2598} -> (fun (V645) -> {'Idris.Prelude.Types.Left', V645} end(E2598)); {'Idris.Prelude.Types.Right', E2599} -> (fun (V646) -> begin (V647 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V646, {'Idris.Core.Env.Nil'}, V3, V642))), case V647 of {'Idris.Prelude.Types.Left', E2600} -> (fun (V648) -> {'Idris.Prelude.Types.Left', V648} end(E2600)); {'Idris.Prelude.Types.Right', E2601} -> (fun (V649) -> begin (V654 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V650) -> fun (V651) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V650, V651)) end end, fun (V652) -> fun (V653) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V652, V653)) end end}, V649, V642))), case V654 of {'Idris.Prelude.Types.Left', E2602} -> (fun (V655) -> {'Idris.Prelude.Types.Left', V655} end(E2602)); {'Idris.Prelude.Types.Right', E2603} -> (fun (V656) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V656))))}, V642)) end(E2603)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2601)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E2596, E2597)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2410, E2411} -> (fun (V657, V658) -> case V658 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V659) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V660) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V661) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E2494, E2495, E2496, E2497} -> (fun (V662, V663, V664, V665) -> case V664 of {'Idris.Core.TT.Pi', E2539, E2540, E2541, E2542} -> (fun (V666, V667, V668, V669) -> fun (V670) -> begin (V672 = begin (V671 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V671} end), case V672 of {'Idris.Prelude.Types.Left', E2543} -> (fun (V673) -> {'Idris.Prelude.Types.Left', V673} end(E2543)); {'Idris.Prelude.Types.Right', E2544} -> (fun (V674) -> begin (V675 = (('un--nfToCFType'(V0, V662, 1, V669))(V670))), case V675 of {'Idris.Prelude.Types.Left', E2545} -> (fun (V676) -> {'Idris.Prelude.Types.Left', V676} end(E2545)); {'Idris.Prelude.Types.Right', E2546} -> (fun (V677) -> begin (V678 = (((V665(V674))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V662, 1}))))(V670))), case V678 of {'Idris.Prelude.Types.Left', E2547} -> (fun (V679) -> {'Idris.Prelude.Types.Left', V679} end(E2547)); {'Idris.Prelude.Types.Right', E2548} -> (fun (V680) -> begin (V681 = (('un--nfToCFType'(V0, V662, 1, V680))(V670))), case V681 of {'Idris.Prelude.Types.Left', E2549} -> (fun (V682) -> {'Idris.Prelude.Types.Left', V682} end(E2549)); {'Idris.Prelude.Types.Right', E2550} -> (fun (V683) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V677, V683}} end(E2550)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2548)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2539, E2540, E2541, E2542)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2504, E2505, E2506, E2507, E2508} -> (fun (V684, V685, V686, V687, V688) -> fun (V689) -> begin (V691 = begin (V690 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V690} end), case V691 of {'Idris.Prelude.Types.Left', E2509} -> (fun (V692) -> {'Idris.Prelude.Types.Left', V692} end(E2509)); {'Idris.Prelude.Types.Right', E2510} -> (fun (V693) -> begin (V698 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V694) -> fun (V695) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V694, V695)) end end, fun (V696) -> fun (V697) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V696, V697)) end end}, V685, V689))), case V698 of {'Idris.Prelude.Types.Left', E2511} -> (fun (V699) -> {'Idris.Prelude.Types.Left', V699} end(E2511)); {'Idris.Prelude.Types.Right', E2512} -> (fun (V700) -> begin (V702 = (('un--getNArgs'(V0, V693, V700, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V701) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V701)) end, V688))))(V689))), case V702 of {'Idris.Prelude.Types.Left', E2513} -> (fun (V703) -> {'Idris.Prelude.Types.Left', V703} end(E2513)); {'Idris.Prelude.Types.Right', E2514} -> (fun (V704) -> case V704 of {'Idris.Compiler.CompileExpr.User', E2515, E2516} -> (fun (V705, V706) -> begin (V708 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V707) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V693, V707)) end, V706, []))(V689))), case V708 of {'Idris.Prelude.Types.Left', E2517} -> (fun (V709) -> {'Idris.Prelude.Types.Left', V709} end(E2517)); {'Idris.Prelude.Types.Right', E2518} -> (fun (V710) -> begin (V712 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V711) -> ('un--nfToCFType'(V0, V684, V2, V711)) end, V710, []))(V689))), case V712 of {'Idris.Prelude.Types.Left', E2519} -> (fun (V713) -> {'Idris.Prelude.Types.Left', V713} end(E2519)); {'Idris.Prelude.Types.Right', E2520} -> (fun (V714) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V700, V714}} end(E2520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2518)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2515, E2516)); {'Idris.Compiler.CompileExpr.Struct', E2521, E2522} -> (fun (V715, V716) -> begin (V727 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V717) -> case V717 of {'Idris.Builtin.MkPair', E2523, E2524} -> (fun (V718, V719) -> fun (V720) -> begin (V721 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V693, V719))(V720))), case V721 of {'Idris.Prelude.Types.Left', E2525} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E2525)); {'Idris.Prelude.Types.Right', E2526} -> (fun (V723) -> begin (V724 = (('un--nfToCFType'(V0, V684, 0, V723))(V720))), case V724 of {'Idris.Prelude.Types.Left', E2527} -> (fun (V725) -> {'Idris.Prelude.Types.Left', V725} end(E2527)); {'Idris.Prelude.Types.Right', E2528} -> (fun (V726) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V718, V726}} end(E2528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2523, E2524)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V716, []))(V689))), case V727 of {'Idris.Prelude.Types.Left', E2529} -> (fun (V728) -> {'Idris.Prelude.Types.Left', V728} end(E2529)); {'Idris.Prelude.Types.Right', E2530} -> (fun (V729) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V715, V729}} end(E2530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2521, E2522)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2531} -> (fun (V730) -> begin (V731 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V693, V730))(V689))), case V731 of {'Idris.Prelude.Types.Left', E2532} -> (fun (V732) -> {'Idris.Prelude.Types.Left', V732} end(E2532)); {'Idris.Prelude.Types.Right', E2533} -> (fun (V733) -> begin (V734 = (('un--nfToCFType'(V0, V684, V2, V733))(V689))), case V734 of {'Idris.Prelude.Types.Left', E2534} -> (fun (V735) -> {'Idris.Prelude.Types.Left', V735} end(E2534)); {'Idris.Prelude.Types.Right', E2535} -> (fun (V736) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V736}} end(E2535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2533)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2504, E2505, E2506, E2507, E2508)); {'Idris.Core.Value.NType', E2536} -> (fun (V737) -> fun (V738) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2536)); {'Idris.Core.Value.NErased', E2537, E2538} -> (fun (V739, V740) -> fun (V741) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2537, E2538)); _ -> fun (V742) -> begin (V744 = begin (V743 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V743} end), case V744 of {'Idris.Prelude.Types.Left', E2498} -> (fun (V745) -> {'Idris.Prelude.Types.Left', V745} end(E2498)); {'Idris.Prelude.Types.Right', E2499} -> (fun (V746) -> begin (V747 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V746, {'Idris.Core.Env.Nil'}, V3, V742))), case V747 of {'Idris.Prelude.Types.Left', E2500} -> (fun (V748) -> {'Idris.Prelude.Types.Left', V748} end(E2500)); {'Idris.Prelude.Types.Right', E2501} -> (fun (V749) -> begin (V754 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V750) -> fun (V751) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V750, V751)) end end, fun (V752) -> fun (V753) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V752, V753)) end end}, V749, V742))), case V754 of {'Idris.Prelude.Types.Left', E2502} -> (fun (V755) -> {'Idris.Prelude.Types.Left', V755} end(E2502)); {'Idris.Prelude.Types.Right', E2503} -> (fun (V756) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V756))))}, V742)) end(E2503)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2494, E2495, E2496, E2497)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2459, E2460, E2461, E2462, E2463} -> (fun (V757, V758, V759, V760, V761) -> fun (V762) -> begin (V764 = begin (V763 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V763} end), case V764 of {'Idris.Prelude.Types.Left', E2464} -> (fun (V765) -> {'Idris.Prelude.Types.Left', V765} end(E2464)); {'Idris.Prelude.Types.Right', E2465} -> (fun (V766) -> begin (V771 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V767) -> fun (V768) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V767, V768)) end end, fun (V769) -> fun (V770) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V769, V770)) end end}, V758, V762))), case V771 of {'Idris.Prelude.Types.Left', E2466} -> (fun (V772) -> {'Idris.Prelude.Types.Left', V772} end(E2466)); {'Idris.Prelude.Types.Right', E2467} -> (fun (V773) -> begin (V775 = (('un--getNArgs'(V0, V766, V773, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V774) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V774)) end, V761))))(V762))), case V775 of {'Idris.Prelude.Types.Left', E2468} -> (fun (V776) -> {'Idris.Prelude.Types.Left', V776} end(E2468)); {'Idris.Prelude.Types.Right', E2469} -> (fun (V777) -> case V777 of {'Idris.Compiler.CompileExpr.User', E2470, E2471} -> (fun (V778, V779) -> begin (V781 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V780) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V766, V780)) end, V779, []))(V762))), case V781 of {'Idris.Prelude.Types.Left', E2472} -> (fun (V782) -> {'Idris.Prelude.Types.Left', V782} end(E2472)); {'Idris.Prelude.Types.Right', E2473} -> (fun (V783) -> begin (V785 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V784) -> ('un--nfToCFType'(V0, V757, V2, V784)) end, V783, []))(V762))), case V785 of {'Idris.Prelude.Types.Left', E2474} -> (fun (V786) -> {'Idris.Prelude.Types.Left', V786} end(E2474)); {'Idris.Prelude.Types.Right', E2475} -> (fun (V787) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V773, V787}} end(E2475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2473)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2470, E2471)); {'Idris.Compiler.CompileExpr.Struct', E2476, E2477} -> (fun (V788, V789) -> begin (V800 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V790) -> case V790 of {'Idris.Builtin.MkPair', E2478, E2479} -> (fun (V791, V792) -> fun (V793) -> begin (V794 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V766, V792))(V793))), case V794 of {'Idris.Prelude.Types.Left', E2480} -> (fun (V795) -> {'Idris.Prelude.Types.Left', V795} end(E2480)); {'Idris.Prelude.Types.Right', E2481} -> (fun (V796) -> begin (V797 = (('un--nfToCFType'(V0, V757, 0, V796))(V793))), case V797 of {'Idris.Prelude.Types.Left', E2482} -> (fun (V798) -> {'Idris.Prelude.Types.Left', V798} end(E2482)); {'Idris.Prelude.Types.Right', E2483} -> (fun (V799) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V791, V799}} end(E2483)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2481)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2478, E2479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V789, []))(V762))), case V800 of {'Idris.Prelude.Types.Left', E2484} -> (fun (V801) -> {'Idris.Prelude.Types.Left', V801} end(E2484)); {'Idris.Prelude.Types.Right', E2485} -> (fun (V802) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V788, V802}} end(E2485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2476, E2477)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2486} -> (fun (V803) -> begin (V804 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V766, V803))(V762))), case V804 of {'Idris.Prelude.Types.Left', E2487} -> (fun (V805) -> {'Idris.Prelude.Types.Left', V805} end(E2487)); {'Idris.Prelude.Types.Right', E2488} -> (fun (V806) -> begin (V807 = (('un--nfToCFType'(V0, V757, V2, V806))(V762))), case V807 of {'Idris.Prelude.Types.Left', E2489} -> (fun (V808) -> {'Idris.Prelude.Types.Left', V808} end(E2489)); {'Idris.Prelude.Types.Right', E2490} -> (fun (V809) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V809}} end(E2490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2459, E2460, E2461, E2462, E2463)); {'Idris.Core.Value.NType', E2491} -> (fun (V810) -> fun (V811) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2491)); {'Idris.Core.Value.NErased', E2492, E2493} -> (fun (V812, V813) -> fun (V814) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2492, E2493)); _ -> fun (V815) -> begin (V817 = begin (V816 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V816} end), case V817 of {'Idris.Prelude.Types.Left', E2453} -> (fun (V818) -> {'Idris.Prelude.Types.Left', V818} end(E2453)); {'Idris.Prelude.Types.Right', E2454} -> (fun (V819) -> begin (V820 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V819, {'Idris.Core.Env.Nil'}, V3, V815))), case V820 of {'Idris.Prelude.Types.Left', E2455} -> (fun (V821) -> {'Idris.Prelude.Types.Left', V821} end(E2455)); {'Idris.Prelude.Types.Right', E2456} -> (fun (V822) -> begin (V827 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V823) -> fun (V824) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V823, V824)) end end, fun (V825) -> fun (V826) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V825, V826)) end end}, V822, V815))), case V827 of {'Idris.Prelude.Types.Left', E2457} -> (fun (V828) -> {'Idris.Prelude.Types.Left', V828} end(E2457)); {'Idris.Prelude.Types.Right', E2458} -> (fun (V829) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V829))))}, V815)) end(E2458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E2592, E2593, E2594, E2595} -> (fun (V830, V831, V832, V833) -> fun (V834) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V830, <<"Function types not allowed in a foreign struct"/utf8>>}, V834)) end end(E2592, E2593, E2594, E2595)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2557, E2558, E2559, E2560, E2561} -> (fun (V835, V836, V837, V838, V839) -> fun (V840) -> begin (V842 = begin (V841 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V841} end), case V842 of {'Idris.Prelude.Types.Left', E2562} -> (fun (V843) -> {'Idris.Prelude.Types.Left', V843} end(E2562)); {'Idris.Prelude.Types.Right', E2563} -> (fun (V844) -> begin (V849 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V845) -> fun (V846) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V845, V846)) end end, fun (V847) -> fun (V848) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V847, V848)) end end}, V836, V840))), case V849 of {'Idris.Prelude.Types.Left', E2564} -> (fun (V850) -> {'Idris.Prelude.Types.Left', V850} end(E2564)); {'Idris.Prelude.Types.Right', E2565} -> (fun (V851) -> begin (V853 = (('un--getNArgs'(V0, V844, V851, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V852) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V852)) end, V839))))(V840))), case V853 of {'Idris.Prelude.Types.Left', E2566} -> (fun (V854) -> {'Idris.Prelude.Types.Left', V854} end(E2566)); {'Idris.Prelude.Types.Right', E2567} -> (fun (V855) -> case V855 of {'Idris.Compiler.CompileExpr.User', E2568, E2569} -> (fun (V856, V857) -> begin (V859 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V858) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V844, V858)) end, V857, []))(V840))), case V859 of {'Idris.Prelude.Types.Left', E2570} -> (fun (V860) -> {'Idris.Prelude.Types.Left', V860} end(E2570)); {'Idris.Prelude.Types.Right', E2571} -> (fun (V861) -> begin (V863 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V862) -> ('un--nfToCFType'(V0, V835, V2, V862)) end, V861, []))(V840))), case V863 of {'Idris.Prelude.Types.Left', E2572} -> (fun (V864) -> {'Idris.Prelude.Types.Left', V864} end(E2572)); {'Idris.Prelude.Types.Right', E2573} -> (fun (V865) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V851, V865}} end(E2573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2568, E2569)); {'Idris.Compiler.CompileExpr.Struct', E2574, E2575} -> (fun (V866, V867) -> begin (V878 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V868) -> case V868 of {'Idris.Builtin.MkPair', E2576, E2577} -> (fun (V869, V870) -> fun (V871) -> begin (V872 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V844, V870))(V871))), case V872 of {'Idris.Prelude.Types.Left', E2578} -> (fun (V873) -> {'Idris.Prelude.Types.Left', V873} end(E2578)); {'Idris.Prelude.Types.Right', E2579} -> (fun (V874) -> begin (V875 = (('un--nfToCFType'(V0, V835, 0, V874))(V871))), case V875 of {'Idris.Prelude.Types.Left', E2580} -> (fun (V876) -> {'Idris.Prelude.Types.Left', V876} end(E2580)); {'Idris.Prelude.Types.Right', E2581} -> (fun (V877) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V869, V877}} end(E2581)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2579)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2576, E2577)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V867, []))(V840))), case V878 of {'Idris.Prelude.Types.Left', E2582} -> (fun (V879) -> {'Idris.Prelude.Types.Left', V879} end(E2582)); {'Idris.Prelude.Types.Right', E2583} -> (fun (V880) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V866, V880}} end(E2583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2574, E2575)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2584} -> (fun (V881) -> begin (V882 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V844, V881))(V840))), case V882 of {'Idris.Prelude.Types.Left', E2585} -> (fun (V883) -> {'Idris.Prelude.Types.Left', V883} end(E2585)); {'Idris.Prelude.Types.Right', E2586} -> (fun (V884) -> begin (V885 = (('un--nfToCFType'(V0, V835, V2, V884))(V840))), case V885 of {'Idris.Prelude.Types.Left', E2587} -> (fun (V886) -> {'Idris.Prelude.Types.Left', V886} end(E2587)); {'Idris.Prelude.Types.Right', E2588} -> (fun (V887) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V887}} end(E2588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2565)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2563)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2557, E2558, E2559, E2560, E2561)); {'Idris.Core.Value.NType', E2589} -> (fun (V888) -> fun (V889) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2589)); {'Idris.Core.Value.NErased', E2590, E2591} -> (fun (V890, V891) -> fun (V892) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2590, E2591)); _ -> fun (V893) -> begin (V895 = begin (V894 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V894} end), case V895 of {'Idris.Prelude.Types.Left', E2551} -> (fun (V896) -> {'Idris.Prelude.Types.Left', V896} end(E2551)); {'Idris.Prelude.Types.Right', E2552} -> (fun (V897) -> begin (V898 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V897, {'Idris.Core.Env.Nil'}, V3, V893))), case V898 of {'Idris.Prelude.Types.Left', E2553} -> (fun (V899) -> {'Idris.Prelude.Types.Left', V899} end(E2553)); {'Idris.Prelude.Types.Right', E2554} -> (fun (V900) -> begin (V905 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V901) -> fun (V902) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V901, V902)) end end, fun (V903) -> fun (V904) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V903, V904)) end end}, V900, V893))), case V905 of {'Idris.Prelude.Types.Left', E2555} -> (fun (V906) -> {'Idris.Prelude.Types.Left', V906} end(E2555)); {'Idris.Prelude.Types.Right', E2556} -> (fun (V907) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V907))))}, V893)) end(E2556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E2418, E2419, E2420, E2421, E2422} -> (fun (V908, V909, V910, V911, V912) -> fun (V913) -> begin (V915 = begin (V914 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V914} end), case V915 of {'Idris.Prelude.Types.Left', E2423} -> (fun (V916) -> {'Idris.Prelude.Types.Left', V916} end(E2423)); {'Idris.Prelude.Types.Right', E2424} -> (fun (V917) -> begin (V922 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V918) -> fun (V919) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V918, V919)) end end, fun (V920) -> fun (V921) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V920, V921)) end end}, V909, V913))), case V922 of {'Idris.Prelude.Types.Left', E2425} -> (fun (V923) -> {'Idris.Prelude.Types.Left', V923} end(E2425)); {'Idris.Prelude.Types.Right', E2426} -> (fun (V924) -> begin (V926 = (('un--getNArgs'(V0, V917, V924, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V925) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V925)) end, V912))))(V913))), case V926 of {'Idris.Prelude.Types.Left', E2427} -> (fun (V927) -> {'Idris.Prelude.Types.Left', V927} end(E2427)); {'Idris.Prelude.Types.Right', E2428} -> (fun (V928) -> case V928 of {'Idris.Compiler.CompileExpr.User', E2429, E2430} -> (fun (V929, V930) -> begin (V932 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V931) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V917, V931)) end, V930, []))(V913))), case V932 of {'Idris.Prelude.Types.Left', E2431} -> (fun (V933) -> {'Idris.Prelude.Types.Left', V933} end(E2431)); {'Idris.Prelude.Types.Right', E2432} -> (fun (V934) -> begin (V936 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V935) -> ('un--nfToCFType'(V0, V908, V2, V935)) end, V934, []))(V913))), case V936 of {'Idris.Prelude.Types.Left', E2433} -> (fun (V937) -> {'Idris.Prelude.Types.Left', V937} end(E2433)); {'Idris.Prelude.Types.Right', E2434} -> (fun (V938) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V924, V938}} end(E2434)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2429, E2430)); {'Idris.Compiler.CompileExpr.Struct', E2435, E2436} -> (fun (V939, V940) -> begin (V951 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V941) -> case V941 of {'Idris.Builtin.MkPair', E2437, E2438} -> (fun (V942, V943) -> fun (V944) -> begin (V945 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V917, V943))(V944))), case V945 of {'Idris.Prelude.Types.Left', E2439} -> (fun (V946) -> {'Idris.Prelude.Types.Left', V946} end(E2439)); {'Idris.Prelude.Types.Right', E2440} -> (fun (V947) -> begin (V948 = (('un--nfToCFType'(V0, V908, 0, V947))(V944))), case V948 of {'Idris.Prelude.Types.Left', E2441} -> (fun (V949) -> {'Idris.Prelude.Types.Left', V949} end(E2441)); {'Idris.Prelude.Types.Right', E2442} -> (fun (V950) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V942, V950}} end(E2442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2437, E2438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V940, []))(V913))), case V951 of {'Idris.Prelude.Types.Left', E2443} -> (fun (V952) -> {'Idris.Prelude.Types.Left', V952} end(E2443)); {'Idris.Prelude.Types.Right', E2444} -> (fun (V953) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V939, V953}} end(E2444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2435, E2436)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2445} -> (fun (V954) -> begin (V955 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V917, V954))(V913))), case V955 of {'Idris.Prelude.Types.Left', E2446} -> (fun (V956) -> {'Idris.Prelude.Types.Left', V956} end(E2446)); {'Idris.Prelude.Types.Right', E2447} -> (fun (V957) -> begin (V958 = (('un--nfToCFType'(V0, V908, V2, V957))(V913))), case V958 of {'Idris.Prelude.Types.Left', E2448} -> (fun (V959) -> {'Idris.Prelude.Types.Left', V959} end(E2448)); {'Idris.Prelude.Types.Right', E2449} -> (fun (V960) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V960}} end(E2449)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2447)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2445)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2428)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2418, E2419, E2420, E2421, E2422)); {'Idris.Core.Value.NType', E2450} -> (fun (V961) -> fun (V962) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2450)); {'Idris.Core.Value.NErased', E2451, E2452} -> (fun (V963, V964) -> fun (V965) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2451, E2452)); _ -> fun (V966) -> begin (V968 = begin (V967 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V967} end), case V968 of {'Idris.Prelude.Types.Left', E2412} -> (fun (V969) -> {'Idris.Prelude.Types.Left', V969} end(E2412)); {'Idris.Prelude.Types.Right', E2413} -> (fun (V970) -> begin (V971 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V970, {'Idris.Core.Env.Nil'}, V3, V966))), case V971 of {'Idris.Prelude.Types.Left', E2414} -> (fun (V972) -> {'Idris.Prelude.Types.Left', V972} end(E2414)); {'Idris.Prelude.Types.Right', E2415} -> (fun (V973) -> begin (V978 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V974) -> fun (V975) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V974, V975)) end end, fun (V976) -> fun (V977) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V976, V977)) end end}, V973, V966))), case V978 of {'Idris.Prelude.Types.Left', E2416} -> (fun (V979) -> {'Idris.Prelude.Types.Left', V979} end(E2416)); {'Idris.Prelude.Types.Right', E2417} -> (fun (V980) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V980))))}, V966)) end(E2417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2415)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2410, E2411)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E2308, E2309, E2310, E2311} -> (fun (V981, V982, V983, V984) -> case V983 of {'Idris.Core.TT.Pi', E2353, E2354, E2355, E2356} -> (fun (V985, V986, V987, V988) -> fun (V989) -> begin (V991 = begin (V990 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V990} end), case V991 of {'Idris.Prelude.Types.Left', E2357} -> (fun (V992) -> {'Idris.Prelude.Types.Left', V992} end(E2357)); {'Idris.Prelude.Types.Right', E2358} -> (fun (V993) -> begin (V994 = (('un--nfToCFType'(V0, V981, 1, V988))(V989))), case V994 of {'Idris.Prelude.Types.Left', E2359} -> (fun (V995) -> {'Idris.Prelude.Types.Left', V995} end(E2359)); {'Idris.Prelude.Types.Right', E2360} -> (fun (V996) -> begin (V997 = (((V984(V993))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V981, 1}))))(V989))), case V997 of {'Idris.Prelude.Types.Left', E2361} -> (fun (V998) -> {'Idris.Prelude.Types.Left', V998} end(E2361)); {'Idris.Prelude.Types.Right', E2362} -> (fun (V999) -> begin (V1000 = (('un--nfToCFType'(V0, V981, 1, V999))(V989))), case V1000 of {'Idris.Prelude.Types.Left', E2363} -> (fun (V1001) -> {'Idris.Prelude.Types.Left', V1001} end(E2363)); {'Idris.Prelude.Types.Right', E2364} -> (fun (V1002) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V996, V1002}} end(E2364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2353, E2354, E2355, E2356)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2318, E2319, E2320, E2321, E2322} -> (fun (V1003, V1004, V1005, V1006, V1007) -> fun (V1008) -> begin (V1010 = begin (V1009 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1009} end), case V1010 of {'Idris.Prelude.Types.Left', E2323} -> (fun (V1011) -> {'Idris.Prelude.Types.Left', V1011} end(E2323)); {'Idris.Prelude.Types.Right', E2324} -> (fun (V1012) -> begin (V1017 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1013) -> fun (V1014) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1013, V1014)) end end, fun (V1015) -> fun (V1016) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1015, V1016)) end end}, V1004, V1008))), case V1017 of {'Idris.Prelude.Types.Left', E2325} -> (fun (V1018) -> {'Idris.Prelude.Types.Left', V1018} end(E2325)); {'Idris.Prelude.Types.Right', E2326} -> (fun (V1019) -> begin (V1021 = (('un--getNArgs'(V0, V1012, V1019, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1020) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1020)) end, V1007))))(V1008))), case V1021 of {'Idris.Prelude.Types.Left', E2327} -> (fun (V1022) -> {'Idris.Prelude.Types.Left', V1022} end(E2327)); {'Idris.Prelude.Types.Right', E2328} -> (fun (V1023) -> case V1023 of {'Idris.Compiler.CompileExpr.User', E2329, E2330} -> (fun (V1024, V1025) -> begin (V1027 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1026) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1012, V1026)) end, V1025, []))(V1008))), case V1027 of {'Idris.Prelude.Types.Left', E2331} -> (fun (V1028) -> {'Idris.Prelude.Types.Left', V1028} end(E2331)); {'Idris.Prelude.Types.Right', E2332} -> (fun (V1029) -> begin (V1031 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1030) -> ('un--nfToCFType'(V0, V1003, V2, V1030)) end, V1029, []))(V1008))), case V1031 of {'Idris.Prelude.Types.Left', E2333} -> (fun (V1032) -> {'Idris.Prelude.Types.Left', V1032} end(E2333)); {'Idris.Prelude.Types.Right', E2334} -> (fun (V1033) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1019, V1033}} end(E2334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2329, E2330)); {'Idris.Compiler.CompileExpr.Struct', E2335, E2336} -> (fun (V1034, V1035) -> begin (V1046 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1036) -> case V1036 of {'Idris.Builtin.MkPair', E2337, E2338} -> (fun (V1037, V1038) -> fun (V1039) -> begin (V1040 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1012, V1038))(V1039))), case V1040 of {'Idris.Prelude.Types.Left', E2339} -> (fun (V1041) -> {'Idris.Prelude.Types.Left', V1041} end(E2339)); {'Idris.Prelude.Types.Right', E2340} -> (fun (V1042) -> begin (V1043 = (('un--nfToCFType'(V0, V1003, 0, V1042))(V1039))), case V1043 of {'Idris.Prelude.Types.Left', E2341} -> (fun (V1044) -> {'Idris.Prelude.Types.Left', V1044} end(E2341)); {'Idris.Prelude.Types.Right', E2342} -> (fun (V1045) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1037, V1045}} end(E2342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2337, E2338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1035, []))(V1008))), case V1046 of {'Idris.Prelude.Types.Left', E2343} -> (fun (V1047) -> {'Idris.Prelude.Types.Left', V1047} end(E2343)); {'Idris.Prelude.Types.Right', E2344} -> (fun (V1048) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1034, V1048}} end(E2344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2335, E2336)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2345} -> (fun (V1049) -> begin (V1050 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1012, V1049))(V1008))), case V1050 of {'Idris.Prelude.Types.Left', E2346} -> (fun (V1051) -> {'Idris.Prelude.Types.Left', V1051} end(E2346)); {'Idris.Prelude.Types.Right', E2347} -> (fun (V1052) -> begin (V1053 = (('un--nfToCFType'(V0, V1003, V2, V1052))(V1008))), case V1053 of {'Idris.Prelude.Types.Left', E2348} -> (fun (V1054) -> {'Idris.Prelude.Types.Left', V1054} end(E2348)); {'Idris.Prelude.Types.Right', E2349} -> (fun (V1055) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1055}} end(E2349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2318, E2319, E2320, E2321, E2322)); {'Idris.Core.Value.NType', E2350} -> (fun (V1056) -> fun (V1057) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2350)); {'Idris.Core.Value.NErased', E2351, E2352} -> (fun (V1058, V1059) -> fun (V1060) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2351, E2352)); _ -> fun (V1061) -> begin (V1063 = begin (V1062 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1062} end), case V1063 of {'Idris.Prelude.Types.Left', E2312} -> (fun (V1064) -> {'Idris.Prelude.Types.Left', V1064} end(E2312)); {'Idris.Prelude.Types.Right', E2313} -> (fun (V1065) -> begin (V1066 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1065, {'Idris.Core.Env.Nil'}, V3, V1061))), case V1066 of {'Idris.Prelude.Types.Left', E2314} -> (fun (V1067) -> {'Idris.Prelude.Types.Left', V1067} end(E2314)); {'Idris.Prelude.Types.Right', E2315} -> (fun (V1068) -> begin (V1073 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1069) -> fun (V1070) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1069, V1070)) end end, fun (V1071) -> fun (V1072) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1071, V1072)) end end}, V1068, V1061))), case V1073 of {'Idris.Prelude.Types.Left', E2316} -> (fun (V1074) -> {'Idris.Prelude.Types.Left', V1074} end(E2316)); {'Idris.Prelude.Types.Right', E2317} -> (fun (V1075) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1075))))}, V1061)) end(E2317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2308, E2309, E2310, E2311)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2273, E2274, E2275, E2276, E2277} -> (fun (V1076, V1077, V1078, V1079, V1080) -> fun (V1081) -> begin (V1083 = begin (V1082 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1082} end), case V1083 of {'Idris.Prelude.Types.Left', E2278} -> (fun (V1084) -> {'Idris.Prelude.Types.Left', V1084} end(E2278)); {'Idris.Prelude.Types.Right', E2279} -> (fun (V1085) -> begin (V1090 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1086) -> fun (V1087) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1086, V1087)) end end, fun (V1088) -> fun (V1089) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1088, V1089)) end end}, V1077, V1081))), case V1090 of {'Idris.Prelude.Types.Left', E2280} -> (fun (V1091) -> {'Idris.Prelude.Types.Left', V1091} end(E2280)); {'Idris.Prelude.Types.Right', E2281} -> (fun (V1092) -> begin (V1094 = (('un--getNArgs'(V0, V1085, V1092, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1093) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1093)) end, V1080))))(V1081))), case V1094 of {'Idris.Prelude.Types.Left', E2282} -> (fun (V1095) -> {'Idris.Prelude.Types.Left', V1095} end(E2282)); {'Idris.Prelude.Types.Right', E2283} -> (fun (V1096) -> case V1096 of {'Idris.Compiler.CompileExpr.User', E2284, E2285} -> (fun (V1097, V1098) -> begin (V1100 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1099) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1085, V1099)) end, V1098, []))(V1081))), case V1100 of {'Idris.Prelude.Types.Left', E2286} -> (fun (V1101) -> {'Idris.Prelude.Types.Left', V1101} end(E2286)); {'Idris.Prelude.Types.Right', E2287} -> (fun (V1102) -> begin (V1104 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1103) -> ('un--nfToCFType'(V0, V1076, V2, V1103)) end, V1102, []))(V1081))), case V1104 of {'Idris.Prelude.Types.Left', E2288} -> (fun (V1105) -> {'Idris.Prelude.Types.Left', V1105} end(E2288)); {'Idris.Prelude.Types.Right', E2289} -> (fun (V1106) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1092, V1106}} end(E2289)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2284, E2285)); {'Idris.Compiler.CompileExpr.Struct', E2290, E2291} -> (fun (V1107, V1108) -> begin (V1119 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1109) -> case V1109 of {'Idris.Builtin.MkPair', E2292, E2293} -> (fun (V1110, V1111) -> fun (V1112) -> begin (V1113 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1085, V1111))(V1112))), case V1113 of {'Idris.Prelude.Types.Left', E2294} -> (fun (V1114) -> {'Idris.Prelude.Types.Left', V1114} end(E2294)); {'Idris.Prelude.Types.Right', E2295} -> (fun (V1115) -> begin (V1116 = (('un--nfToCFType'(V0, V1076, 0, V1115))(V1112))), case V1116 of {'Idris.Prelude.Types.Left', E2296} -> (fun (V1117) -> {'Idris.Prelude.Types.Left', V1117} end(E2296)); {'Idris.Prelude.Types.Right', E2297} -> (fun (V1118) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1110, V1118}} end(E2297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2292, E2293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1108, []))(V1081))), case V1119 of {'Idris.Prelude.Types.Left', E2298} -> (fun (V1120) -> {'Idris.Prelude.Types.Left', V1120} end(E2298)); {'Idris.Prelude.Types.Right', E2299} -> (fun (V1121) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1107, V1121}} end(E2299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2290, E2291)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2300} -> (fun (V1122) -> begin (V1123 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1085, V1122))(V1081))), case V1123 of {'Idris.Prelude.Types.Left', E2301} -> (fun (V1124) -> {'Idris.Prelude.Types.Left', V1124} end(E2301)); {'Idris.Prelude.Types.Right', E2302} -> (fun (V1125) -> begin (V1126 = (('un--nfToCFType'(V0, V1076, V2, V1125))(V1081))), case V1126 of {'Idris.Prelude.Types.Left', E2303} -> (fun (V1127) -> {'Idris.Prelude.Types.Left', V1127} end(E2303)); {'Idris.Prelude.Types.Right', E2304} -> (fun (V1128) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1128}} end(E2304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2273, E2274, E2275, E2276, E2277)); {'Idris.Core.Value.NType', E2305} -> (fun (V1129) -> fun (V1130) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2305)); {'Idris.Core.Value.NErased', E2306, E2307} -> (fun (V1131, V1132) -> fun (V1133) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2306, E2307)); _ -> fun (V1134) -> begin (V1136 = begin (V1135 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1135} end), case V1136 of {'Idris.Prelude.Types.Left', E2267} -> (fun (V1137) -> {'Idris.Prelude.Types.Left', V1137} end(E2267)); {'Idris.Prelude.Types.Right', E2268} -> (fun (V1138) -> begin (V1139 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1138, {'Idris.Core.Env.Nil'}, V3, V1134))), case V1139 of {'Idris.Prelude.Types.Left', E2269} -> (fun (V1140) -> {'Idris.Prelude.Types.Left', V1140} end(E2269)); {'Idris.Prelude.Types.Right', E2270} -> (fun (V1141) -> begin (V1146 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1142) -> fun (V1143) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1142, V1143)) end end, fun (V1144) -> fun (V1145) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1144, V1145)) end end}, V1141, V1134))), case V1146 of {'Idris.Prelude.Types.Left', E2271} -> (fun (V1147) -> {'Idris.Prelude.Types.Left', V1147} end(E2271)); {'Idris.Prelude.Types.Right', E2272} -> (fun (V1148) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1148))))}, V1134)) end(E2272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E2406, E2407, E2408, E2409} -> (fun (V1149, V1150, V1151, V1152) -> fun (V1153) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1149, <<"Function types not allowed in a foreign struct"/utf8>>}, V1153)) end end(E2406, E2407, E2408, E2409)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2371, E2372, E2373, E2374, E2375} -> (fun (V1154, V1155, V1156, V1157, V1158) -> fun (V1159) -> begin (V1161 = begin (V1160 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1160} end), case V1161 of {'Idris.Prelude.Types.Left', E2376} -> (fun (V1162) -> {'Idris.Prelude.Types.Left', V1162} end(E2376)); {'Idris.Prelude.Types.Right', E2377} -> (fun (V1163) -> begin (V1168 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1164) -> fun (V1165) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1164, V1165)) end end, fun (V1166) -> fun (V1167) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1166, V1167)) end end}, V1155, V1159))), case V1168 of {'Idris.Prelude.Types.Left', E2378} -> (fun (V1169) -> {'Idris.Prelude.Types.Left', V1169} end(E2378)); {'Idris.Prelude.Types.Right', E2379} -> (fun (V1170) -> begin (V1172 = (('un--getNArgs'(V0, V1163, V1170, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1171) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1171)) end, V1158))))(V1159))), case V1172 of {'Idris.Prelude.Types.Left', E2380} -> (fun (V1173) -> {'Idris.Prelude.Types.Left', V1173} end(E2380)); {'Idris.Prelude.Types.Right', E2381} -> (fun (V1174) -> case V1174 of {'Idris.Compiler.CompileExpr.User', E2382, E2383} -> (fun (V1175, V1176) -> begin (V1178 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1177) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1163, V1177)) end, V1176, []))(V1159))), case V1178 of {'Idris.Prelude.Types.Left', E2384} -> (fun (V1179) -> {'Idris.Prelude.Types.Left', V1179} end(E2384)); {'Idris.Prelude.Types.Right', E2385} -> (fun (V1180) -> begin (V1182 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1181) -> ('un--nfToCFType'(V0, V1154, V2, V1181)) end, V1180, []))(V1159))), case V1182 of {'Idris.Prelude.Types.Left', E2386} -> (fun (V1183) -> {'Idris.Prelude.Types.Left', V1183} end(E2386)); {'Idris.Prelude.Types.Right', E2387} -> (fun (V1184) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1170, V1184}} end(E2387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2382, E2383)); {'Idris.Compiler.CompileExpr.Struct', E2388, E2389} -> (fun (V1185, V1186) -> begin (V1197 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1187) -> case V1187 of {'Idris.Builtin.MkPair', E2390, E2391} -> (fun (V1188, V1189) -> fun (V1190) -> begin (V1191 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1163, V1189))(V1190))), case V1191 of {'Idris.Prelude.Types.Left', E2392} -> (fun (V1192) -> {'Idris.Prelude.Types.Left', V1192} end(E2392)); {'Idris.Prelude.Types.Right', E2393} -> (fun (V1193) -> begin (V1194 = (('un--nfToCFType'(V0, V1154, 0, V1193))(V1190))), case V1194 of {'Idris.Prelude.Types.Left', E2394} -> (fun (V1195) -> {'Idris.Prelude.Types.Left', V1195} end(E2394)); {'Idris.Prelude.Types.Right', E2395} -> (fun (V1196) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1188, V1196}} end(E2395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2393)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2390, E2391)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1186, []))(V1159))), case V1197 of {'Idris.Prelude.Types.Left', E2396} -> (fun (V1198) -> {'Idris.Prelude.Types.Left', V1198} end(E2396)); {'Idris.Prelude.Types.Right', E2397} -> (fun (V1199) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1185, V1199}} end(E2397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2388, E2389)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2398} -> (fun (V1200) -> begin (V1201 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1163, V1200))(V1159))), case V1201 of {'Idris.Prelude.Types.Left', E2399} -> (fun (V1202) -> {'Idris.Prelude.Types.Left', V1202} end(E2399)); {'Idris.Prelude.Types.Right', E2400} -> (fun (V1203) -> begin (V1204 = (('un--nfToCFType'(V0, V1154, V2, V1203))(V1159))), case V1204 of {'Idris.Prelude.Types.Left', E2401} -> (fun (V1205) -> {'Idris.Prelude.Types.Left', V1205} end(E2401)); {'Idris.Prelude.Types.Right', E2402} -> (fun (V1206) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1206}} end(E2402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2371, E2372, E2373, E2374, E2375)); {'Idris.Core.Value.NType', E2403} -> (fun (V1207) -> fun (V1208) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2403)); {'Idris.Core.Value.NErased', E2404, E2405} -> (fun (V1209, V1210) -> fun (V1211) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2404, E2405)); _ -> fun (V1212) -> begin (V1214 = begin (V1213 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1213} end), case V1214 of {'Idris.Prelude.Types.Left', E2365} -> (fun (V1215) -> {'Idris.Prelude.Types.Left', V1215} end(E2365)); {'Idris.Prelude.Types.Right', E2366} -> (fun (V1216) -> begin (V1217 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1216, {'Idris.Core.Env.Nil'}, V3, V1212))), case V1217 of {'Idris.Prelude.Types.Left', E2367} -> (fun (V1218) -> {'Idris.Prelude.Types.Left', V1218} end(E2367)); {'Idris.Prelude.Types.Right', E2368} -> (fun (V1219) -> begin (V1224 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1220) -> fun (V1221) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1220, V1221)) end end, fun (V1222) -> fun (V1223) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1222, V1223)) end end}, V1219, V1212))), case V1224 of {'Idris.Prelude.Types.Left', E2369} -> (fun (V1225) -> {'Idris.Prelude.Types.Left', V1225} end(E2369)); {'Idris.Prelude.Types.Right', E2370} -> (fun (V1226) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1226))))}, V1212)) end(E2370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E2232, E2233, E2234, E2235, E2236} -> (fun (V1227, V1228, V1229, V1230, V1231) -> fun (V1232) -> begin (V1234 = begin (V1233 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1233} end), case V1234 of {'Idris.Prelude.Types.Left', E2237} -> (fun (V1235) -> {'Idris.Prelude.Types.Left', V1235} end(E2237)); {'Idris.Prelude.Types.Right', E2238} -> (fun (V1236) -> begin (V1241 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1237) -> fun (V1238) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1237, V1238)) end end, fun (V1239) -> fun (V1240) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1239, V1240)) end end}, V1228, V1232))), case V1241 of {'Idris.Prelude.Types.Left', E2239} -> (fun (V1242) -> {'Idris.Prelude.Types.Left', V1242} end(E2239)); {'Idris.Prelude.Types.Right', E2240} -> (fun (V1243) -> begin (V1245 = (('un--getNArgs'(V0, V1236, V1243, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1244) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1244)) end, V1231))))(V1232))), case V1245 of {'Idris.Prelude.Types.Left', E2241} -> (fun (V1246) -> {'Idris.Prelude.Types.Left', V1246} end(E2241)); {'Idris.Prelude.Types.Right', E2242} -> (fun (V1247) -> case V1247 of {'Idris.Compiler.CompileExpr.User', E2243, E2244} -> (fun (V1248, V1249) -> begin (V1251 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1250) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1236, V1250)) end, V1249, []))(V1232))), case V1251 of {'Idris.Prelude.Types.Left', E2245} -> (fun (V1252) -> {'Idris.Prelude.Types.Left', V1252} end(E2245)); {'Idris.Prelude.Types.Right', E2246} -> (fun (V1253) -> begin (V1255 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1254) -> ('un--nfToCFType'(V0, V1227, V2, V1254)) end, V1253, []))(V1232))), case V1255 of {'Idris.Prelude.Types.Left', E2247} -> (fun (V1256) -> {'Idris.Prelude.Types.Left', V1256} end(E2247)); {'Idris.Prelude.Types.Right', E2248} -> (fun (V1257) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1243, V1257}} end(E2248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2243, E2244)); {'Idris.Compiler.CompileExpr.Struct', E2249, E2250} -> (fun (V1258, V1259) -> begin (V1270 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1260) -> case V1260 of {'Idris.Builtin.MkPair', E2251, E2252} -> (fun (V1261, V1262) -> fun (V1263) -> begin (V1264 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1236, V1262))(V1263))), case V1264 of {'Idris.Prelude.Types.Left', E2253} -> (fun (V1265) -> {'Idris.Prelude.Types.Left', V1265} end(E2253)); {'Idris.Prelude.Types.Right', E2254} -> (fun (V1266) -> begin (V1267 = (('un--nfToCFType'(V0, V1227, 0, V1266))(V1263))), case V1267 of {'Idris.Prelude.Types.Left', E2255} -> (fun (V1268) -> {'Idris.Prelude.Types.Left', V1268} end(E2255)); {'Idris.Prelude.Types.Right', E2256} -> (fun (V1269) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1261, V1269}} end(E2256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2251, E2252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1259, []))(V1232))), case V1270 of {'Idris.Prelude.Types.Left', E2257} -> (fun (V1271) -> {'Idris.Prelude.Types.Left', V1271} end(E2257)); {'Idris.Prelude.Types.Right', E2258} -> (fun (V1272) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1258, V1272}} end(E2258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2249, E2250)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2259} -> (fun (V1273) -> begin (V1274 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1236, V1273))(V1232))), case V1274 of {'Idris.Prelude.Types.Left', E2260} -> (fun (V1275) -> {'Idris.Prelude.Types.Left', V1275} end(E2260)); {'Idris.Prelude.Types.Right', E2261} -> (fun (V1276) -> begin (V1277 = (('un--nfToCFType'(V0, V1227, V2, V1276))(V1232))), case V1277 of {'Idris.Prelude.Types.Left', E2262} -> (fun (V1278) -> {'Idris.Prelude.Types.Left', V1278} end(E2262)); {'Idris.Prelude.Types.Right', E2263} -> (fun (V1279) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1279}} end(E2263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2261)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2232, E2233, E2234, E2235, E2236)); {'Idris.Core.Value.NType', E2264} -> (fun (V1280) -> fun (V1281) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2264)); {'Idris.Core.Value.NErased', E2265, E2266} -> (fun (V1282, V1283) -> fun (V1284) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2265, E2266)); _ -> fun (V1285) -> begin (V1287 = begin (V1286 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1286} end), case V1287 of {'Idris.Prelude.Types.Left', E2226} -> (fun (V1288) -> {'Idris.Prelude.Types.Left', V1288} end(E2226)); {'Idris.Prelude.Types.Right', E2227} -> (fun (V1289) -> begin (V1290 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1289, {'Idris.Core.Env.Nil'}, V3, V1285))), case V1290 of {'Idris.Prelude.Types.Left', E2228} -> (fun (V1291) -> {'Idris.Prelude.Types.Left', V1291} end(E2228)); {'Idris.Prelude.Types.Right', E2229} -> (fun (V1292) -> begin (V1297 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1293) -> fun (V1294) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1293, V1294)) end end, fun (V1295) -> fun (V1296) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1295, V1296)) end end}, V1292, V1285))), case V1297 of {'Idris.Prelude.Types.Left', E2230} -> (fun (V1298) -> {'Idris.Prelude.Types.Left', V1298} end(E2230)); {'Idris.Prelude.Types.Right', E2231} -> (fun (V1299) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1299))))}, V1285)) end(E2231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; 0 -> case V3 of {'Idris.Core.Value.NPrimVal', E3338, E3339} -> (fun (V1300, V1301) -> case V1301 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V1302) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V1302)) end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E3524, E3525} -> (fun (V1303, V1304) -> case V1304 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V1305) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V1306) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V1307) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E3608, E3609, E3610, E3611} -> (fun (V1308, V1309, V1310, V1311) -> case V1310 of {'Idris.Core.TT.Pi', E3653, E3654, E3655, E3656} -> (fun (V1312, V1313, V1314, V1315) -> fun (V1316) -> begin (V1318 = begin (V1317 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1317} end), case V1318 of {'Idris.Prelude.Types.Left', E3657} -> (fun (V1319) -> {'Idris.Prelude.Types.Left', V1319} end(E3657)); {'Idris.Prelude.Types.Right', E3658} -> (fun (V1320) -> begin (V1321 = (('un--nfToCFType'(V0, V1308, 1, V1315))(V1316))), case V1321 of {'Idris.Prelude.Types.Left', E3659} -> (fun (V1322) -> {'Idris.Prelude.Types.Left', V1322} end(E3659)); {'Idris.Prelude.Types.Right', E3660} -> (fun (V1323) -> begin (V1324 = (((V1311(V1320))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1308, 1}))))(V1316))), case V1324 of {'Idris.Prelude.Types.Left', E3661} -> (fun (V1325) -> {'Idris.Prelude.Types.Left', V1325} end(E3661)); {'Idris.Prelude.Types.Right', E3662} -> (fun (V1326) -> begin (V1327 = (('un--nfToCFType'(V0, V1308, 1, V1326))(V1316))), case V1327 of {'Idris.Prelude.Types.Left', E3663} -> (fun (V1328) -> {'Idris.Prelude.Types.Left', V1328} end(E3663)); {'Idris.Prelude.Types.Right', E3664} -> (fun (V1329) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1323, V1329}} end(E3664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3662)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3660)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3653, E3654, E3655, E3656)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3618, E3619, E3620, E3621, E3622} -> (fun (V1330, V1331, V1332, V1333, V1334) -> fun (V1335) -> begin (V1337 = begin (V1336 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1336} end), case V1337 of {'Idris.Prelude.Types.Left', E3623} -> (fun (V1338) -> {'Idris.Prelude.Types.Left', V1338} end(E3623)); {'Idris.Prelude.Types.Right', E3624} -> (fun (V1339) -> begin (V1344 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1340) -> fun (V1341) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1340, V1341)) end end, fun (V1342) -> fun (V1343) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1342, V1343)) end end}, V1331, V1335))), case V1344 of {'Idris.Prelude.Types.Left', E3625} -> (fun (V1345) -> {'Idris.Prelude.Types.Left', V1345} end(E3625)); {'Idris.Prelude.Types.Right', E3626} -> (fun (V1346) -> begin (V1348 = (('un--getNArgs'(V0, V1339, V1346, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1347) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1347)) end, V1334))))(V1335))), case V1348 of {'Idris.Prelude.Types.Left', E3627} -> (fun (V1349) -> {'Idris.Prelude.Types.Left', V1349} end(E3627)); {'Idris.Prelude.Types.Right', E3628} -> (fun (V1350) -> case V1350 of {'Idris.Compiler.CompileExpr.User', E3629, E3630} -> (fun (V1351, V1352) -> begin (V1354 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1353) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1339, V1353)) end, V1352, []))(V1335))), case V1354 of {'Idris.Prelude.Types.Left', E3631} -> (fun (V1355) -> {'Idris.Prelude.Types.Left', V1355} end(E3631)); {'Idris.Prelude.Types.Right', E3632} -> (fun (V1356) -> begin (V1358 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1357) -> ('un--nfToCFType'(V0, V1330, V2, V1357)) end, V1356, []))(V1335))), case V1358 of {'Idris.Prelude.Types.Left', E3633} -> (fun (V1359) -> {'Idris.Prelude.Types.Left', V1359} end(E3633)); {'Idris.Prelude.Types.Right', E3634} -> (fun (V1360) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1346, V1360}} end(E3634)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3629, E3630)); {'Idris.Compiler.CompileExpr.Struct', E3635, E3636} -> (fun (V1361, V1362) -> begin (V1373 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1363) -> case V1363 of {'Idris.Builtin.MkPair', E3637, E3638} -> (fun (V1364, V1365) -> fun (V1366) -> begin (V1367 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1339, V1365))(V1366))), case V1367 of {'Idris.Prelude.Types.Left', E3639} -> (fun (V1368) -> {'Idris.Prelude.Types.Left', V1368} end(E3639)); {'Idris.Prelude.Types.Right', E3640} -> (fun (V1369) -> begin (V1370 = (('un--nfToCFType'(V0, V1330, 0, V1369))(V1366))), case V1370 of {'Idris.Prelude.Types.Left', E3641} -> (fun (V1371) -> {'Idris.Prelude.Types.Left', V1371} end(E3641)); {'Idris.Prelude.Types.Right', E3642} -> (fun (V1372) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1364, V1372}} end(E3642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3637, E3638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1362, []))(V1335))), case V1373 of {'Idris.Prelude.Types.Left', E3643} -> (fun (V1374) -> {'Idris.Prelude.Types.Left', V1374} end(E3643)); {'Idris.Prelude.Types.Right', E3644} -> (fun (V1375) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1361, V1375}} end(E3644)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3635, E3636)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3645} -> (fun (V1376) -> begin (V1377 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1339, V1376))(V1335))), case V1377 of {'Idris.Prelude.Types.Left', E3646} -> (fun (V1378) -> {'Idris.Prelude.Types.Left', V1378} end(E3646)); {'Idris.Prelude.Types.Right', E3647} -> (fun (V1379) -> begin (V1380 = (('un--nfToCFType'(V0, V1330, V2, V1379))(V1335))), case V1380 of {'Idris.Prelude.Types.Left', E3648} -> (fun (V1381) -> {'Idris.Prelude.Types.Left', V1381} end(E3648)); {'Idris.Prelude.Types.Right', E3649} -> (fun (V1382) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1382}} end(E3649)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3647)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3628)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3618, E3619, E3620, E3621, E3622)); {'Idris.Core.Value.NType', E3650} -> (fun (V1383) -> fun (V1384) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3650)); {'Idris.Core.Value.NErased', E3651, E3652} -> (fun (V1385, V1386) -> fun (V1387) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3651, E3652)); _ -> fun (V1388) -> begin (V1390 = begin (V1389 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1389} end), case V1390 of {'Idris.Prelude.Types.Left', E3612} -> (fun (V1391) -> {'Idris.Prelude.Types.Left', V1391} end(E3612)); {'Idris.Prelude.Types.Right', E3613} -> (fun (V1392) -> begin (V1393 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1392, {'Idris.Core.Env.Nil'}, V3, V1388))), case V1393 of {'Idris.Prelude.Types.Left', E3614} -> (fun (V1394) -> {'Idris.Prelude.Types.Left', V1394} end(E3614)); {'Idris.Prelude.Types.Right', E3615} -> (fun (V1395) -> begin (V1400 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1396) -> fun (V1397) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1396, V1397)) end end, fun (V1398) -> fun (V1399) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1398, V1399)) end end}, V1395, V1388))), case V1400 of {'Idris.Prelude.Types.Left', E3616} -> (fun (V1401) -> {'Idris.Prelude.Types.Left', V1401} end(E3616)); {'Idris.Prelude.Types.Right', E3617} -> (fun (V1402) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1402))))}, V1388)) end(E3617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3615)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3613)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3608, E3609, E3610, E3611)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3573, E3574, E3575, E3576, E3577} -> (fun (V1403, V1404, V1405, V1406, V1407) -> fun (V1408) -> begin (V1410 = begin (V1409 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1409} end), case V1410 of {'Idris.Prelude.Types.Left', E3578} -> (fun (V1411) -> {'Idris.Prelude.Types.Left', V1411} end(E3578)); {'Idris.Prelude.Types.Right', E3579} -> (fun (V1412) -> begin (V1417 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1413) -> fun (V1414) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1413, V1414)) end end, fun (V1415) -> fun (V1416) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1415, V1416)) end end}, V1404, V1408))), case V1417 of {'Idris.Prelude.Types.Left', E3580} -> (fun (V1418) -> {'Idris.Prelude.Types.Left', V1418} end(E3580)); {'Idris.Prelude.Types.Right', E3581} -> (fun (V1419) -> begin (V1421 = (('un--getNArgs'(V0, V1412, V1419, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1420) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1420)) end, V1407))))(V1408))), case V1421 of {'Idris.Prelude.Types.Left', E3582} -> (fun (V1422) -> {'Idris.Prelude.Types.Left', V1422} end(E3582)); {'Idris.Prelude.Types.Right', E3583} -> (fun (V1423) -> case V1423 of {'Idris.Compiler.CompileExpr.User', E3584, E3585} -> (fun (V1424, V1425) -> begin (V1427 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1426) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1412, V1426)) end, V1425, []))(V1408))), case V1427 of {'Idris.Prelude.Types.Left', E3586} -> (fun (V1428) -> {'Idris.Prelude.Types.Left', V1428} end(E3586)); {'Idris.Prelude.Types.Right', E3587} -> (fun (V1429) -> begin (V1431 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1430) -> ('un--nfToCFType'(V0, V1403, V2, V1430)) end, V1429, []))(V1408))), case V1431 of {'Idris.Prelude.Types.Left', E3588} -> (fun (V1432) -> {'Idris.Prelude.Types.Left', V1432} end(E3588)); {'Idris.Prelude.Types.Right', E3589} -> (fun (V1433) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1419, V1433}} end(E3589)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3587)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3584, E3585)); {'Idris.Compiler.CompileExpr.Struct', E3590, E3591} -> (fun (V1434, V1435) -> begin (V1446 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1436) -> case V1436 of {'Idris.Builtin.MkPair', E3592, E3593} -> (fun (V1437, V1438) -> fun (V1439) -> begin (V1440 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1412, V1438))(V1439))), case V1440 of {'Idris.Prelude.Types.Left', E3594} -> (fun (V1441) -> {'Idris.Prelude.Types.Left', V1441} end(E3594)); {'Idris.Prelude.Types.Right', E3595} -> (fun (V1442) -> begin (V1443 = (('un--nfToCFType'(V0, V1403, 0, V1442))(V1439))), case V1443 of {'Idris.Prelude.Types.Left', E3596} -> (fun (V1444) -> {'Idris.Prelude.Types.Left', V1444} end(E3596)); {'Idris.Prelude.Types.Right', E3597} -> (fun (V1445) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1437, V1445}} end(E3597)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3595)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3592, E3593)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1435, []))(V1408))), case V1446 of {'Idris.Prelude.Types.Left', E3598} -> (fun (V1447) -> {'Idris.Prelude.Types.Left', V1447} end(E3598)); {'Idris.Prelude.Types.Right', E3599} -> (fun (V1448) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1434, V1448}} end(E3599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3590, E3591)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3600} -> (fun (V1449) -> begin (V1450 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1412, V1449))(V1408))), case V1450 of {'Idris.Prelude.Types.Left', E3601} -> (fun (V1451) -> {'Idris.Prelude.Types.Left', V1451} end(E3601)); {'Idris.Prelude.Types.Right', E3602} -> (fun (V1452) -> begin (V1453 = (('un--nfToCFType'(V0, V1403, V2, V1452))(V1408))), case V1453 of {'Idris.Prelude.Types.Left', E3603} -> (fun (V1454) -> {'Idris.Prelude.Types.Left', V1454} end(E3603)); {'Idris.Prelude.Types.Right', E3604} -> (fun (V1455) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1455}} end(E3604)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3581)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3579)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3573, E3574, E3575, E3576, E3577)); {'Idris.Core.Value.NType', E3605} -> (fun (V1456) -> fun (V1457) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3605)); {'Idris.Core.Value.NErased', E3606, E3607} -> (fun (V1458, V1459) -> fun (V1460) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3606, E3607)); _ -> fun (V1461) -> begin (V1463 = begin (V1462 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1462} end), case V1463 of {'Idris.Prelude.Types.Left', E3567} -> (fun (V1464) -> {'Idris.Prelude.Types.Left', V1464} end(E3567)); {'Idris.Prelude.Types.Right', E3568} -> (fun (V1465) -> begin (V1466 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1465, {'Idris.Core.Env.Nil'}, V3, V1461))), case V1466 of {'Idris.Prelude.Types.Left', E3569} -> (fun (V1467) -> {'Idris.Prelude.Types.Left', V1467} end(E3569)); {'Idris.Prelude.Types.Right', E3570} -> (fun (V1468) -> begin (V1473 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1469) -> fun (V1470) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1469, V1470)) end end, fun (V1471) -> fun (V1472) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1471, V1472)) end end}, V1468, V1461))), case V1473 of {'Idris.Prelude.Types.Left', E3571} -> (fun (V1474) -> {'Idris.Prelude.Types.Left', V1474} end(E3571)); {'Idris.Prelude.Types.Right', E3572} -> (fun (V1475) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1475))))}, V1461)) end(E3572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3568)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E3706, E3707, E3708, E3709} -> (fun (V1476, V1477, V1478, V1479) -> fun (V1480) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1476, <<"Function types not allowed in a foreign struct"/utf8>>}, V1480)) end end(E3706, E3707, E3708, E3709)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3671, E3672, E3673, E3674, E3675} -> (fun (V1481, V1482, V1483, V1484, V1485) -> fun (V1486) -> begin (V1488 = begin (V1487 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1487} end), case V1488 of {'Idris.Prelude.Types.Left', E3676} -> (fun (V1489) -> {'Idris.Prelude.Types.Left', V1489} end(E3676)); {'Idris.Prelude.Types.Right', E3677} -> (fun (V1490) -> begin (V1495 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1491) -> fun (V1492) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1491, V1492)) end end, fun (V1493) -> fun (V1494) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1493, V1494)) end end}, V1482, V1486))), case V1495 of {'Idris.Prelude.Types.Left', E3678} -> (fun (V1496) -> {'Idris.Prelude.Types.Left', V1496} end(E3678)); {'Idris.Prelude.Types.Right', E3679} -> (fun (V1497) -> begin (V1499 = (('un--getNArgs'(V0, V1490, V1497, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1498) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1498)) end, V1485))))(V1486))), case V1499 of {'Idris.Prelude.Types.Left', E3680} -> (fun (V1500) -> {'Idris.Prelude.Types.Left', V1500} end(E3680)); {'Idris.Prelude.Types.Right', E3681} -> (fun (V1501) -> case V1501 of {'Idris.Compiler.CompileExpr.User', E3682, E3683} -> (fun (V1502, V1503) -> begin (V1505 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1504) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1490, V1504)) end, V1503, []))(V1486))), case V1505 of {'Idris.Prelude.Types.Left', E3684} -> (fun (V1506) -> {'Idris.Prelude.Types.Left', V1506} end(E3684)); {'Idris.Prelude.Types.Right', E3685} -> (fun (V1507) -> begin (V1509 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1508) -> ('un--nfToCFType'(V0, V1481, V2, V1508)) end, V1507, []))(V1486))), case V1509 of {'Idris.Prelude.Types.Left', E3686} -> (fun (V1510) -> {'Idris.Prelude.Types.Left', V1510} end(E3686)); {'Idris.Prelude.Types.Right', E3687} -> (fun (V1511) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1497, V1511}} end(E3687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3682, E3683)); {'Idris.Compiler.CompileExpr.Struct', E3688, E3689} -> (fun (V1512, V1513) -> begin (V1524 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1514) -> case V1514 of {'Idris.Builtin.MkPair', E3690, E3691} -> (fun (V1515, V1516) -> fun (V1517) -> begin (V1518 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1490, V1516))(V1517))), case V1518 of {'Idris.Prelude.Types.Left', E3692} -> (fun (V1519) -> {'Idris.Prelude.Types.Left', V1519} end(E3692)); {'Idris.Prelude.Types.Right', E3693} -> (fun (V1520) -> begin (V1521 = (('un--nfToCFType'(V0, V1481, 0, V1520))(V1517))), case V1521 of {'Idris.Prelude.Types.Left', E3694} -> (fun (V1522) -> {'Idris.Prelude.Types.Left', V1522} end(E3694)); {'Idris.Prelude.Types.Right', E3695} -> (fun (V1523) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1515, V1523}} end(E3695)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3690, E3691)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1513, []))(V1486))), case V1524 of {'Idris.Prelude.Types.Left', E3696} -> (fun (V1525) -> {'Idris.Prelude.Types.Left', V1525} end(E3696)); {'Idris.Prelude.Types.Right', E3697} -> (fun (V1526) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1512, V1526}} end(E3697)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3688, E3689)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3698} -> (fun (V1527) -> begin (V1528 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1490, V1527))(V1486))), case V1528 of {'Idris.Prelude.Types.Left', E3699} -> (fun (V1529) -> {'Idris.Prelude.Types.Left', V1529} end(E3699)); {'Idris.Prelude.Types.Right', E3700} -> (fun (V1530) -> begin (V1531 = (('un--nfToCFType'(V0, V1481, V2, V1530))(V1486))), case V1531 of {'Idris.Prelude.Types.Left', E3701} -> (fun (V1532) -> {'Idris.Prelude.Types.Left', V1532} end(E3701)); {'Idris.Prelude.Types.Right', E3702} -> (fun (V1533) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1533}} end(E3702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3681)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3671, E3672, E3673, E3674, E3675)); {'Idris.Core.Value.NType', E3703} -> (fun (V1534) -> fun (V1535) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3703)); {'Idris.Core.Value.NErased', E3704, E3705} -> (fun (V1536, V1537) -> fun (V1538) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3704, E3705)); _ -> fun (V1539) -> begin (V1541 = begin (V1540 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1540} end), case V1541 of {'Idris.Prelude.Types.Left', E3665} -> (fun (V1542) -> {'Idris.Prelude.Types.Left', V1542} end(E3665)); {'Idris.Prelude.Types.Right', E3666} -> (fun (V1543) -> begin (V1544 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1543, {'Idris.Core.Env.Nil'}, V3, V1539))), case V1544 of {'Idris.Prelude.Types.Left', E3667} -> (fun (V1545) -> {'Idris.Prelude.Types.Left', V1545} end(E3667)); {'Idris.Prelude.Types.Right', E3668} -> (fun (V1546) -> begin (V1551 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1547) -> fun (V1548) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1547, V1548)) end end, fun (V1549) -> fun (V1550) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1549, V1550)) end end}, V1546, V1539))), case V1551 of {'Idris.Prelude.Types.Left', E3669} -> (fun (V1552) -> {'Idris.Prelude.Types.Left', V1552} end(E3669)); {'Idris.Prelude.Types.Right', E3670} -> (fun (V1553) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1553))))}, V1539)) end(E3670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3666)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E3532, E3533, E3534, E3535, E3536} -> (fun (V1554, V1555, V1556, V1557, V1558) -> fun (V1559) -> begin (V1561 = begin (V1560 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1560} end), case V1561 of {'Idris.Prelude.Types.Left', E3537} -> (fun (V1562) -> {'Idris.Prelude.Types.Left', V1562} end(E3537)); {'Idris.Prelude.Types.Right', E3538} -> (fun (V1563) -> begin (V1568 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1564) -> fun (V1565) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1564, V1565)) end end, fun (V1566) -> fun (V1567) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1566, V1567)) end end}, V1555, V1559))), case V1568 of {'Idris.Prelude.Types.Left', E3539} -> (fun (V1569) -> {'Idris.Prelude.Types.Left', V1569} end(E3539)); {'Idris.Prelude.Types.Right', E3540} -> (fun (V1570) -> begin (V1572 = (('un--getNArgs'(V0, V1563, V1570, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1571) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1571)) end, V1558))))(V1559))), case V1572 of {'Idris.Prelude.Types.Left', E3541} -> (fun (V1573) -> {'Idris.Prelude.Types.Left', V1573} end(E3541)); {'Idris.Prelude.Types.Right', E3542} -> (fun (V1574) -> case V1574 of {'Idris.Compiler.CompileExpr.User', E3543, E3544} -> (fun (V1575, V1576) -> begin (V1578 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1577) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1563, V1577)) end, V1576, []))(V1559))), case V1578 of {'Idris.Prelude.Types.Left', E3545} -> (fun (V1579) -> {'Idris.Prelude.Types.Left', V1579} end(E3545)); {'Idris.Prelude.Types.Right', E3546} -> (fun (V1580) -> begin (V1582 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1581) -> ('un--nfToCFType'(V0, V1554, V2, V1581)) end, V1580, []))(V1559))), case V1582 of {'Idris.Prelude.Types.Left', E3547} -> (fun (V1583) -> {'Idris.Prelude.Types.Left', V1583} end(E3547)); {'Idris.Prelude.Types.Right', E3548} -> (fun (V1584) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1570, V1584}} end(E3548)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3543, E3544)); {'Idris.Compiler.CompileExpr.Struct', E3549, E3550} -> (fun (V1585, V1586) -> begin (V1597 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1587) -> case V1587 of {'Idris.Builtin.MkPair', E3551, E3552} -> (fun (V1588, V1589) -> fun (V1590) -> begin (V1591 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1563, V1589))(V1590))), case V1591 of {'Idris.Prelude.Types.Left', E3553} -> (fun (V1592) -> {'Idris.Prelude.Types.Left', V1592} end(E3553)); {'Idris.Prelude.Types.Right', E3554} -> (fun (V1593) -> begin (V1594 = (('un--nfToCFType'(V0, V1554, 0, V1593))(V1590))), case V1594 of {'Idris.Prelude.Types.Left', E3555} -> (fun (V1595) -> {'Idris.Prelude.Types.Left', V1595} end(E3555)); {'Idris.Prelude.Types.Right', E3556} -> (fun (V1596) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1588, V1596}} end(E3556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3551, E3552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1586, []))(V1559))), case V1597 of {'Idris.Prelude.Types.Left', E3557} -> (fun (V1598) -> {'Idris.Prelude.Types.Left', V1598} end(E3557)); {'Idris.Prelude.Types.Right', E3558} -> (fun (V1599) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1585, V1599}} end(E3558)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3549, E3550)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3559} -> (fun (V1600) -> begin (V1601 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1563, V1600))(V1559))), case V1601 of {'Idris.Prelude.Types.Left', E3560} -> (fun (V1602) -> {'Idris.Prelude.Types.Left', V1602} end(E3560)); {'Idris.Prelude.Types.Right', E3561} -> (fun (V1603) -> begin (V1604 = (('un--nfToCFType'(V0, V1554, V2, V1603))(V1559))), case V1604 of {'Idris.Prelude.Types.Left', E3562} -> (fun (V1605) -> {'Idris.Prelude.Types.Left', V1605} end(E3562)); {'Idris.Prelude.Types.Right', E3563} -> (fun (V1606) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1606}} end(E3563)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3561)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3559)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3540)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3538)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3532, E3533, E3534, E3535, E3536)); {'Idris.Core.Value.NType', E3564} -> (fun (V1607) -> fun (V1608) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3564)); {'Idris.Core.Value.NErased', E3565, E3566} -> (fun (V1609, V1610) -> fun (V1611) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3565, E3566)); _ -> fun (V1612) -> begin (V1614 = begin (V1613 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1613} end), case V1614 of {'Idris.Prelude.Types.Left', E3526} -> (fun (V1615) -> {'Idris.Prelude.Types.Left', V1615} end(E3526)); {'Idris.Prelude.Types.Right', E3527} -> (fun (V1616) -> begin (V1617 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1616, {'Idris.Core.Env.Nil'}, V3, V1612))), case V1617 of {'Idris.Prelude.Types.Left', E3528} -> (fun (V1618) -> {'Idris.Prelude.Types.Left', V1618} end(E3528)); {'Idris.Prelude.Types.Right', E3529} -> (fun (V1619) -> begin (V1624 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1620) -> fun (V1621) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1620, V1621)) end end, fun (V1622) -> fun (V1623) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1622, V1623)) end end}, V1619, V1612))), case V1624 of {'Idris.Prelude.Types.Left', E3530} -> (fun (V1625) -> {'Idris.Prelude.Types.Left', V1625} end(E3530)); {'Idris.Prelude.Types.Right', E3531} -> (fun (V1626) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1626))))}, V1612)) end(E3531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3527)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E3524, E3525)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E3422, E3423, E3424, E3425} -> (fun (V1627, V1628, V1629, V1630) -> case V1629 of {'Idris.Core.TT.Pi', E3467, E3468, E3469, E3470} -> (fun (V1631, V1632, V1633, V1634) -> fun (V1635) -> begin (V1637 = begin (V1636 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1636} end), case V1637 of {'Idris.Prelude.Types.Left', E3471} -> (fun (V1638) -> {'Idris.Prelude.Types.Left', V1638} end(E3471)); {'Idris.Prelude.Types.Right', E3472} -> (fun (V1639) -> begin (V1640 = (('un--nfToCFType'(V0, V1627, 1, V1634))(V1635))), case V1640 of {'Idris.Prelude.Types.Left', E3473} -> (fun (V1641) -> {'Idris.Prelude.Types.Left', V1641} end(E3473)); {'Idris.Prelude.Types.Right', E3474} -> (fun (V1642) -> begin (V1643 = (((V1630(V1639))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1627, 1}))))(V1635))), case V1643 of {'Idris.Prelude.Types.Left', E3475} -> (fun (V1644) -> {'Idris.Prelude.Types.Left', V1644} end(E3475)); {'Idris.Prelude.Types.Right', E3476} -> (fun (V1645) -> begin (V1646 = (('un--nfToCFType'(V0, V1627, 1, V1645))(V1635))), case V1646 of {'Idris.Prelude.Types.Left', E3477} -> (fun (V1647) -> {'Idris.Prelude.Types.Left', V1647} end(E3477)); {'Idris.Prelude.Types.Right', E3478} -> (fun (V1648) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1642, V1648}} end(E3478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3474)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3467, E3468, E3469, E3470)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3432, E3433, E3434, E3435, E3436} -> (fun (V1649, V1650, V1651, V1652, V1653) -> fun (V1654) -> begin (V1656 = begin (V1655 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1655} end), case V1656 of {'Idris.Prelude.Types.Left', E3437} -> (fun (V1657) -> {'Idris.Prelude.Types.Left', V1657} end(E3437)); {'Idris.Prelude.Types.Right', E3438} -> (fun (V1658) -> begin (V1663 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1659) -> fun (V1660) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1659, V1660)) end end, fun (V1661) -> fun (V1662) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1661, V1662)) end end}, V1650, V1654))), case V1663 of {'Idris.Prelude.Types.Left', E3439} -> (fun (V1664) -> {'Idris.Prelude.Types.Left', V1664} end(E3439)); {'Idris.Prelude.Types.Right', E3440} -> (fun (V1665) -> begin (V1667 = (('un--getNArgs'(V0, V1658, V1665, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1666) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1666)) end, V1653))))(V1654))), case V1667 of {'Idris.Prelude.Types.Left', E3441} -> (fun (V1668) -> {'Idris.Prelude.Types.Left', V1668} end(E3441)); {'Idris.Prelude.Types.Right', E3442} -> (fun (V1669) -> case V1669 of {'Idris.Compiler.CompileExpr.User', E3443, E3444} -> (fun (V1670, V1671) -> begin (V1673 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1672) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1658, V1672)) end, V1671, []))(V1654))), case V1673 of {'Idris.Prelude.Types.Left', E3445} -> (fun (V1674) -> {'Idris.Prelude.Types.Left', V1674} end(E3445)); {'Idris.Prelude.Types.Right', E3446} -> (fun (V1675) -> begin (V1677 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1676) -> ('un--nfToCFType'(V0, V1649, V2, V1676)) end, V1675, []))(V1654))), case V1677 of {'Idris.Prelude.Types.Left', E3447} -> (fun (V1678) -> {'Idris.Prelude.Types.Left', V1678} end(E3447)); {'Idris.Prelude.Types.Right', E3448} -> (fun (V1679) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1665, V1679}} end(E3448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3443, E3444)); {'Idris.Compiler.CompileExpr.Struct', E3449, E3450} -> (fun (V1680, V1681) -> begin (V1692 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1682) -> case V1682 of {'Idris.Builtin.MkPair', E3451, E3452} -> (fun (V1683, V1684) -> fun (V1685) -> begin (V1686 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1658, V1684))(V1685))), case V1686 of {'Idris.Prelude.Types.Left', E3453} -> (fun (V1687) -> {'Idris.Prelude.Types.Left', V1687} end(E3453)); {'Idris.Prelude.Types.Right', E3454} -> (fun (V1688) -> begin (V1689 = (('un--nfToCFType'(V0, V1649, 0, V1688))(V1685))), case V1689 of {'Idris.Prelude.Types.Left', E3455} -> (fun (V1690) -> {'Idris.Prelude.Types.Left', V1690} end(E3455)); {'Idris.Prelude.Types.Right', E3456} -> (fun (V1691) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1683, V1691}} end(E3456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3451, E3452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1681, []))(V1654))), case V1692 of {'Idris.Prelude.Types.Left', E3457} -> (fun (V1693) -> {'Idris.Prelude.Types.Left', V1693} end(E3457)); {'Idris.Prelude.Types.Right', E3458} -> (fun (V1694) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1680, V1694}} end(E3458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3449, E3450)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3459} -> (fun (V1695) -> begin (V1696 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1658, V1695))(V1654))), case V1696 of {'Idris.Prelude.Types.Left', E3460} -> (fun (V1697) -> {'Idris.Prelude.Types.Left', V1697} end(E3460)); {'Idris.Prelude.Types.Right', E3461} -> (fun (V1698) -> begin (V1699 = (('un--nfToCFType'(V0, V1649, V2, V1698))(V1654))), case V1699 of {'Idris.Prelude.Types.Left', E3462} -> (fun (V1700) -> {'Idris.Prelude.Types.Left', V1700} end(E3462)); {'Idris.Prelude.Types.Right', E3463} -> (fun (V1701) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1701}} end(E3463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3461)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3459)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3432, E3433, E3434, E3435, E3436)); {'Idris.Core.Value.NType', E3464} -> (fun (V1702) -> fun (V1703) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3464)); {'Idris.Core.Value.NErased', E3465, E3466} -> (fun (V1704, V1705) -> fun (V1706) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3465, E3466)); _ -> fun (V1707) -> begin (V1709 = begin (V1708 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1708} end), case V1709 of {'Idris.Prelude.Types.Left', E3426} -> (fun (V1710) -> {'Idris.Prelude.Types.Left', V1710} end(E3426)); {'Idris.Prelude.Types.Right', E3427} -> (fun (V1711) -> begin (V1712 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1711, {'Idris.Core.Env.Nil'}, V3, V1707))), case V1712 of {'Idris.Prelude.Types.Left', E3428} -> (fun (V1713) -> {'Idris.Prelude.Types.Left', V1713} end(E3428)); {'Idris.Prelude.Types.Right', E3429} -> (fun (V1714) -> begin (V1719 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1715) -> fun (V1716) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1715, V1716)) end end, fun (V1717) -> fun (V1718) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1717, V1718)) end end}, V1714, V1707))), case V1719 of {'Idris.Prelude.Types.Left', E3430} -> (fun (V1720) -> {'Idris.Prelude.Types.Left', V1720} end(E3430)); {'Idris.Prelude.Types.Right', E3431} -> (fun (V1721) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1721))))}, V1707)) end(E3431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3422, E3423, E3424, E3425)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3387, E3388, E3389, E3390, E3391} -> (fun (V1722, V1723, V1724, V1725, V1726) -> fun (V1727) -> begin (V1729 = begin (V1728 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1728} end), case V1729 of {'Idris.Prelude.Types.Left', E3392} -> (fun (V1730) -> {'Idris.Prelude.Types.Left', V1730} end(E3392)); {'Idris.Prelude.Types.Right', E3393} -> (fun (V1731) -> begin (V1736 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1732) -> fun (V1733) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1732, V1733)) end end, fun (V1734) -> fun (V1735) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1734, V1735)) end end}, V1723, V1727))), case V1736 of {'Idris.Prelude.Types.Left', E3394} -> (fun (V1737) -> {'Idris.Prelude.Types.Left', V1737} end(E3394)); {'Idris.Prelude.Types.Right', E3395} -> (fun (V1738) -> begin (V1740 = (('un--getNArgs'(V0, V1731, V1738, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1739) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1739)) end, V1726))))(V1727))), case V1740 of {'Idris.Prelude.Types.Left', E3396} -> (fun (V1741) -> {'Idris.Prelude.Types.Left', V1741} end(E3396)); {'Idris.Prelude.Types.Right', E3397} -> (fun (V1742) -> case V1742 of {'Idris.Compiler.CompileExpr.User', E3398, E3399} -> (fun (V1743, V1744) -> begin (V1746 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1745) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1731, V1745)) end, V1744, []))(V1727))), case V1746 of {'Idris.Prelude.Types.Left', E3400} -> (fun (V1747) -> {'Idris.Prelude.Types.Left', V1747} end(E3400)); {'Idris.Prelude.Types.Right', E3401} -> (fun (V1748) -> begin (V1750 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1749) -> ('un--nfToCFType'(V0, V1722, V2, V1749)) end, V1748, []))(V1727))), case V1750 of {'Idris.Prelude.Types.Left', E3402} -> (fun (V1751) -> {'Idris.Prelude.Types.Left', V1751} end(E3402)); {'Idris.Prelude.Types.Right', E3403} -> (fun (V1752) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1738, V1752}} end(E3403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3398, E3399)); {'Idris.Compiler.CompileExpr.Struct', E3404, E3405} -> (fun (V1753, V1754) -> begin (V1765 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1755) -> case V1755 of {'Idris.Builtin.MkPair', E3406, E3407} -> (fun (V1756, V1757) -> fun (V1758) -> begin (V1759 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1731, V1757))(V1758))), case V1759 of {'Idris.Prelude.Types.Left', E3408} -> (fun (V1760) -> {'Idris.Prelude.Types.Left', V1760} end(E3408)); {'Idris.Prelude.Types.Right', E3409} -> (fun (V1761) -> begin (V1762 = (('un--nfToCFType'(V0, V1722, 0, V1761))(V1758))), case V1762 of {'Idris.Prelude.Types.Left', E3410} -> (fun (V1763) -> {'Idris.Prelude.Types.Left', V1763} end(E3410)); {'Idris.Prelude.Types.Right', E3411} -> (fun (V1764) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1756, V1764}} end(E3411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3406, E3407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1754, []))(V1727))), case V1765 of {'Idris.Prelude.Types.Left', E3412} -> (fun (V1766) -> {'Idris.Prelude.Types.Left', V1766} end(E3412)); {'Idris.Prelude.Types.Right', E3413} -> (fun (V1767) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1753, V1767}} end(E3413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3404, E3405)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3414} -> (fun (V1768) -> begin (V1769 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1731, V1768))(V1727))), case V1769 of {'Idris.Prelude.Types.Left', E3415} -> (fun (V1770) -> {'Idris.Prelude.Types.Left', V1770} end(E3415)); {'Idris.Prelude.Types.Right', E3416} -> (fun (V1771) -> begin (V1772 = (('un--nfToCFType'(V0, V1722, V2, V1771))(V1727))), case V1772 of {'Idris.Prelude.Types.Left', E3417} -> (fun (V1773) -> {'Idris.Prelude.Types.Left', V1773} end(E3417)); {'Idris.Prelude.Types.Right', E3418} -> (fun (V1774) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1774}} end(E3418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3393)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3387, E3388, E3389, E3390, E3391)); {'Idris.Core.Value.NType', E3419} -> (fun (V1775) -> fun (V1776) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3419)); {'Idris.Core.Value.NErased', E3420, E3421} -> (fun (V1777, V1778) -> fun (V1779) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3420, E3421)); _ -> fun (V1780) -> begin (V1782 = begin (V1781 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1781} end), case V1782 of {'Idris.Prelude.Types.Left', E3381} -> (fun (V1783) -> {'Idris.Prelude.Types.Left', V1783} end(E3381)); {'Idris.Prelude.Types.Right', E3382} -> (fun (V1784) -> begin (V1785 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1784, {'Idris.Core.Env.Nil'}, V3, V1780))), case V1785 of {'Idris.Prelude.Types.Left', E3383} -> (fun (V1786) -> {'Idris.Prelude.Types.Left', V1786} end(E3383)); {'Idris.Prelude.Types.Right', E3384} -> (fun (V1787) -> begin (V1792 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1788) -> fun (V1789) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1788, V1789)) end end, fun (V1790) -> fun (V1791) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1790, V1791)) end end}, V1787, V1780))), case V1792 of {'Idris.Prelude.Types.Left', E3385} -> (fun (V1793) -> {'Idris.Prelude.Types.Left', V1793} end(E3385)); {'Idris.Prelude.Types.Right', E3386} -> (fun (V1794) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1794))))}, V1780)) end(E3386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E3520, E3521, E3522, E3523} -> (fun (V1795, V1796, V1797, V1798) -> fun (V1799) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1795, <<"Function types not allowed in a foreign struct"/utf8>>}, V1799)) end end(E3520, E3521, E3522, E3523)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3485, E3486, E3487, E3488, E3489} -> (fun (V1800, V1801, V1802, V1803, V1804) -> fun (V1805) -> begin (V1807 = begin (V1806 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1806} end), case V1807 of {'Idris.Prelude.Types.Left', E3490} -> (fun (V1808) -> {'Idris.Prelude.Types.Left', V1808} end(E3490)); {'Idris.Prelude.Types.Right', E3491} -> (fun (V1809) -> begin (V1814 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1810) -> fun (V1811) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1810, V1811)) end end, fun (V1812) -> fun (V1813) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1812, V1813)) end end}, V1801, V1805))), case V1814 of {'Idris.Prelude.Types.Left', E3492} -> (fun (V1815) -> {'Idris.Prelude.Types.Left', V1815} end(E3492)); {'Idris.Prelude.Types.Right', E3493} -> (fun (V1816) -> begin (V1818 = (('un--getNArgs'(V0, V1809, V1816, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1817) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1817)) end, V1804))))(V1805))), case V1818 of {'Idris.Prelude.Types.Left', E3494} -> (fun (V1819) -> {'Idris.Prelude.Types.Left', V1819} end(E3494)); {'Idris.Prelude.Types.Right', E3495} -> (fun (V1820) -> case V1820 of {'Idris.Compiler.CompileExpr.User', E3496, E3497} -> (fun (V1821, V1822) -> begin (V1824 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1823) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1809, V1823)) end, V1822, []))(V1805))), case V1824 of {'Idris.Prelude.Types.Left', E3498} -> (fun (V1825) -> {'Idris.Prelude.Types.Left', V1825} end(E3498)); {'Idris.Prelude.Types.Right', E3499} -> (fun (V1826) -> begin (V1828 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1827) -> ('un--nfToCFType'(V0, V1800, V2, V1827)) end, V1826, []))(V1805))), case V1828 of {'Idris.Prelude.Types.Left', E3500} -> (fun (V1829) -> {'Idris.Prelude.Types.Left', V1829} end(E3500)); {'Idris.Prelude.Types.Right', E3501} -> (fun (V1830) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1816, V1830}} end(E3501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3496, E3497)); {'Idris.Compiler.CompileExpr.Struct', E3502, E3503} -> (fun (V1831, V1832) -> begin (V1843 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1833) -> case V1833 of {'Idris.Builtin.MkPair', E3504, E3505} -> (fun (V1834, V1835) -> fun (V1836) -> begin (V1837 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1809, V1835))(V1836))), case V1837 of {'Idris.Prelude.Types.Left', E3506} -> (fun (V1838) -> {'Idris.Prelude.Types.Left', V1838} end(E3506)); {'Idris.Prelude.Types.Right', E3507} -> (fun (V1839) -> begin (V1840 = (('un--nfToCFType'(V0, V1800, 0, V1839))(V1836))), case V1840 of {'Idris.Prelude.Types.Left', E3508} -> (fun (V1841) -> {'Idris.Prelude.Types.Left', V1841} end(E3508)); {'Idris.Prelude.Types.Right', E3509} -> (fun (V1842) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1834, V1842}} end(E3509)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3507)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3504, E3505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1832, []))(V1805))), case V1843 of {'Idris.Prelude.Types.Left', E3510} -> (fun (V1844) -> {'Idris.Prelude.Types.Left', V1844} end(E3510)); {'Idris.Prelude.Types.Right', E3511} -> (fun (V1845) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1831, V1845}} end(E3511)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3502, E3503)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3512} -> (fun (V1846) -> begin (V1847 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1809, V1846))(V1805))), case V1847 of {'Idris.Prelude.Types.Left', E3513} -> (fun (V1848) -> {'Idris.Prelude.Types.Left', V1848} end(E3513)); {'Idris.Prelude.Types.Right', E3514} -> (fun (V1849) -> begin (V1850 = (('un--nfToCFType'(V0, V1800, V2, V1849))(V1805))), case V1850 of {'Idris.Prelude.Types.Left', E3515} -> (fun (V1851) -> {'Idris.Prelude.Types.Left', V1851} end(E3515)); {'Idris.Prelude.Types.Right', E3516} -> (fun (V1852) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1852}} end(E3516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3495)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3491)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3485, E3486, E3487, E3488, E3489)); {'Idris.Core.Value.NType', E3517} -> (fun (V1853) -> fun (V1854) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3517)); {'Idris.Core.Value.NErased', E3518, E3519} -> (fun (V1855, V1856) -> fun (V1857) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3518, E3519)); _ -> fun (V1858) -> begin (V1860 = begin (V1859 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1859} end), case V1860 of {'Idris.Prelude.Types.Left', E3479} -> (fun (V1861) -> {'Idris.Prelude.Types.Left', V1861} end(E3479)); {'Idris.Prelude.Types.Right', E3480} -> (fun (V1862) -> begin (V1863 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1862, {'Idris.Core.Env.Nil'}, V3, V1858))), case V1863 of {'Idris.Prelude.Types.Left', E3481} -> (fun (V1864) -> {'Idris.Prelude.Types.Left', V1864} end(E3481)); {'Idris.Prelude.Types.Right', E3482} -> (fun (V1865) -> begin (V1870 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1866) -> fun (V1867) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1866, V1867)) end end, fun (V1868) -> fun (V1869) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1868, V1869)) end end}, V1865, V1858))), case V1870 of {'Idris.Prelude.Types.Left', E3483} -> (fun (V1871) -> {'Idris.Prelude.Types.Left', V1871} end(E3483)); {'Idris.Prelude.Types.Right', E3484} -> (fun (V1872) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1872))))}, V1858)) end(E3484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E3346, E3347, E3348, E3349, E3350} -> (fun (V1873, V1874, V1875, V1876, V1877) -> fun (V1878) -> begin (V1880 = begin (V1879 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1879} end), case V1880 of {'Idris.Prelude.Types.Left', E3351} -> (fun (V1881) -> {'Idris.Prelude.Types.Left', V1881} end(E3351)); {'Idris.Prelude.Types.Right', E3352} -> (fun (V1882) -> begin (V1887 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1883) -> fun (V1884) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1883, V1884)) end end, fun (V1885) -> fun (V1886) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1885, V1886)) end end}, V1874, V1878))), case V1887 of {'Idris.Prelude.Types.Left', E3353} -> (fun (V1888) -> {'Idris.Prelude.Types.Left', V1888} end(E3353)); {'Idris.Prelude.Types.Right', E3354} -> (fun (V1889) -> begin (V1891 = (('un--getNArgs'(V0, V1882, V1889, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1890) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1890)) end, V1877))))(V1878))), case V1891 of {'Idris.Prelude.Types.Left', E3355} -> (fun (V1892) -> {'Idris.Prelude.Types.Left', V1892} end(E3355)); {'Idris.Prelude.Types.Right', E3356} -> (fun (V1893) -> case V1893 of {'Idris.Compiler.CompileExpr.User', E3357, E3358} -> (fun (V1894, V1895) -> begin (V1897 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1896) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1882, V1896)) end, V1895, []))(V1878))), case V1897 of {'Idris.Prelude.Types.Left', E3359} -> (fun (V1898) -> {'Idris.Prelude.Types.Left', V1898} end(E3359)); {'Idris.Prelude.Types.Right', E3360} -> (fun (V1899) -> begin (V1901 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1900) -> ('un--nfToCFType'(V0, V1873, V2, V1900)) end, V1899, []))(V1878))), case V1901 of {'Idris.Prelude.Types.Left', E3361} -> (fun (V1902) -> {'Idris.Prelude.Types.Left', V1902} end(E3361)); {'Idris.Prelude.Types.Right', E3362} -> (fun (V1903) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1889, V1903}} end(E3362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3357, E3358)); {'Idris.Compiler.CompileExpr.Struct', E3363, E3364} -> (fun (V1904, V1905) -> begin (V1916 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1906) -> case V1906 of {'Idris.Builtin.MkPair', E3365, E3366} -> (fun (V1907, V1908) -> fun (V1909) -> begin (V1910 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1882, V1908))(V1909))), case V1910 of {'Idris.Prelude.Types.Left', E3367} -> (fun (V1911) -> {'Idris.Prelude.Types.Left', V1911} end(E3367)); {'Idris.Prelude.Types.Right', E3368} -> (fun (V1912) -> begin (V1913 = (('un--nfToCFType'(V0, V1873, 0, V1912))(V1909))), case V1913 of {'Idris.Prelude.Types.Left', E3369} -> (fun (V1914) -> {'Idris.Prelude.Types.Left', V1914} end(E3369)); {'Idris.Prelude.Types.Right', E3370} -> (fun (V1915) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1907, V1915}} end(E3370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3365, E3366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1905, []))(V1878))), case V1916 of {'Idris.Prelude.Types.Left', E3371} -> (fun (V1917) -> {'Idris.Prelude.Types.Left', V1917} end(E3371)); {'Idris.Prelude.Types.Right', E3372} -> (fun (V1918) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1904, V1918}} end(E3372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3363, E3364)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3373} -> (fun (V1919) -> begin (V1920 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1882, V1919))(V1878))), case V1920 of {'Idris.Prelude.Types.Left', E3374} -> (fun (V1921) -> {'Idris.Prelude.Types.Left', V1921} end(E3374)); {'Idris.Prelude.Types.Right', E3375} -> (fun (V1922) -> begin (V1923 = (('un--nfToCFType'(V0, V1873, V2, V1922))(V1878))), case V1923 of {'Idris.Prelude.Types.Left', E3376} -> (fun (V1924) -> {'Idris.Prelude.Types.Left', V1924} end(E3376)); {'Idris.Prelude.Types.Right', E3377} -> (fun (V1925) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1925}} end(E3377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3346, E3347, E3348, E3349, E3350)); {'Idris.Core.Value.NType', E3378} -> (fun (V1926) -> fun (V1927) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3378)); {'Idris.Core.Value.NErased', E3379, E3380} -> (fun (V1928, V1929) -> fun (V1930) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3379, E3380)); _ -> fun (V1931) -> begin (V1933 = begin (V1932 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1932} end), case V1933 of {'Idris.Prelude.Types.Left', E3340} -> (fun (V1934) -> {'Idris.Prelude.Types.Left', V1934} end(E3340)); {'Idris.Prelude.Types.Right', E3341} -> (fun (V1935) -> begin (V1936 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1935, {'Idris.Core.Env.Nil'}, V3, V1931))), case V1936 of {'Idris.Prelude.Types.Left', E3342} -> (fun (V1937) -> {'Idris.Prelude.Types.Left', V1937} end(E3342)); {'Idris.Prelude.Types.Right', E3343} -> (fun (V1938) -> begin (V1943 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1939) -> fun (V1940) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V1939, V1940)) end end, fun (V1941) -> fun (V1942) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V1941, V1942)) end end}, V1938, V1931))), case V1943 of {'Idris.Prelude.Types.Left', E3344} -> (fun (V1944) -> {'Idris.Prelude.Types.Left', V1944} end(E3344)); {'Idris.Prelude.Types.Right', E3345} -> (fun (V1945) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1945))))}, V1931)) end(E3345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E3338, E3339)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E3152, E3153} -> (fun (V1946, V1947) -> case V1947 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V1948) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V1949) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V1950) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E3236, E3237, E3238, E3239} -> (fun (V1951, V1952, V1953, V1954) -> case V1953 of {'Idris.Core.TT.Pi', E3281, E3282, E3283, E3284} -> (fun (V1955, V1956, V1957, V1958) -> fun (V1959) -> begin (V1961 = begin (V1960 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1960} end), case V1961 of {'Idris.Prelude.Types.Left', E3285} -> (fun (V1962) -> {'Idris.Prelude.Types.Left', V1962} end(E3285)); {'Idris.Prelude.Types.Right', E3286} -> (fun (V1963) -> begin (V1964 = (('un--nfToCFType'(V0, V1951, 1, V1958))(V1959))), case V1964 of {'Idris.Prelude.Types.Left', E3287} -> (fun (V1965) -> {'Idris.Prelude.Types.Left', V1965} end(E3287)); {'Idris.Prelude.Types.Right', E3288} -> (fun (V1966) -> begin (V1967 = (((V1954(V1963))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1951, 1}))))(V1959))), case V1967 of {'Idris.Prelude.Types.Left', E3289} -> (fun (V1968) -> {'Idris.Prelude.Types.Left', V1968} end(E3289)); {'Idris.Prelude.Types.Right', E3290} -> (fun (V1969) -> begin (V1970 = (('un--nfToCFType'(V0, V1951, 1, V1969))(V1959))), case V1970 of {'Idris.Prelude.Types.Left', E3291} -> (fun (V1971) -> {'Idris.Prelude.Types.Left', V1971} end(E3291)); {'Idris.Prelude.Types.Right', E3292} -> (fun (V1972) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1966, V1972}} end(E3292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3281, E3282, E3283, E3284)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3246, E3247, E3248, E3249, E3250} -> (fun (V1973, V1974, V1975, V1976, V1977) -> fun (V1978) -> begin (V1980 = begin (V1979 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1979} end), case V1980 of {'Idris.Prelude.Types.Left', E3251} -> (fun (V1981) -> {'Idris.Prelude.Types.Left', V1981} end(E3251)); {'Idris.Prelude.Types.Right', E3252} -> (fun (V1982) -> begin (V1987 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1983) -> fun (V1984) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1983, V1984)) end end, fun (V1985) -> fun (V1986) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1985, V1986)) end end}, V1974, V1978))), case V1987 of {'Idris.Prelude.Types.Left', E3253} -> (fun (V1988) -> {'Idris.Prelude.Types.Left', V1988} end(E3253)); {'Idris.Prelude.Types.Right', E3254} -> (fun (V1989) -> begin (V1991 = (('un--getNArgs'(V0, V1982, V1989, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V1990) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V1990)) end, V1977))))(V1978))), case V1991 of {'Idris.Prelude.Types.Left', E3255} -> (fun (V1992) -> {'Idris.Prelude.Types.Left', V1992} end(E3255)); {'Idris.Prelude.Types.Right', E3256} -> (fun (V1993) -> case V1993 of {'Idris.Compiler.CompileExpr.User', E3257, E3258} -> (fun (V1994, V1995) -> begin (V1997 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V1996) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1982, V1996)) end, V1995, []))(V1978))), case V1997 of {'Idris.Prelude.Types.Left', E3259} -> (fun (V1998) -> {'Idris.Prelude.Types.Left', V1998} end(E3259)); {'Idris.Prelude.Types.Right', E3260} -> (fun (V1999) -> begin (V2001 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2000) -> ('un--nfToCFType'(V0, V1973, V2, V2000)) end, V1999, []))(V1978))), case V2001 of {'Idris.Prelude.Types.Left', E3261} -> (fun (V2002) -> {'Idris.Prelude.Types.Left', V2002} end(E3261)); {'Idris.Prelude.Types.Right', E3262} -> (fun (V2003) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1989, V2003}} end(E3262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3257, E3258)); {'Idris.Compiler.CompileExpr.Struct', E3263, E3264} -> (fun (V2004, V2005) -> begin (V2016 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2006) -> case V2006 of {'Idris.Builtin.MkPair', E3265, E3266} -> (fun (V2007, V2008) -> fun (V2009) -> begin (V2010 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1982, V2008))(V2009))), case V2010 of {'Idris.Prelude.Types.Left', E3267} -> (fun (V2011) -> {'Idris.Prelude.Types.Left', V2011} end(E3267)); {'Idris.Prelude.Types.Right', E3268} -> (fun (V2012) -> begin (V2013 = (('un--nfToCFType'(V0, V1973, 0, V2012))(V2009))), case V2013 of {'Idris.Prelude.Types.Left', E3269} -> (fun (V2014) -> {'Idris.Prelude.Types.Left', V2014} end(E3269)); {'Idris.Prelude.Types.Right', E3270} -> (fun (V2015) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2007, V2015}} end(E3270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3265, E3266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2005, []))(V1978))), case V2016 of {'Idris.Prelude.Types.Left', E3271} -> (fun (V2017) -> {'Idris.Prelude.Types.Left', V2017} end(E3271)); {'Idris.Prelude.Types.Right', E3272} -> (fun (V2018) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2004, V2018}} end(E3272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3263, E3264)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3273} -> (fun (V2019) -> begin (V2020 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1982, V2019))(V1978))), case V2020 of {'Idris.Prelude.Types.Left', E3274} -> (fun (V2021) -> {'Idris.Prelude.Types.Left', V2021} end(E3274)); {'Idris.Prelude.Types.Right', E3275} -> (fun (V2022) -> begin (V2023 = (('un--nfToCFType'(V0, V1973, V2, V2022))(V1978))), case V2023 of {'Idris.Prelude.Types.Left', E3276} -> (fun (V2024) -> {'Idris.Prelude.Types.Left', V2024} end(E3276)); {'Idris.Prelude.Types.Right', E3277} -> (fun (V2025) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2025}} end(E3277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3246, E3247, E3248, E3249, E3250)); {'Idris.Core.Value.NType', E3278} -> (fun (V2026) -> fun (V2027) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3278)); {'Idris.Core.Value.NErased', E3279, E3280} -> (fun (V2028, V2029) -> fun (V2030) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3279, E3280)); _ -> fun (V2031) -> begin (V2033 = begin (V2032 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2032} end), case V2033 of {'Idris.Prelude.Types.Left', E3240} -> (fun (V2034) -> {'Idris.Prelude.Types.Left', V2034} end(E3240)); {'Idris.Prelude.Types.Right', E3241} -> (fun (V2035) -> begin (V2036 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2035, {'Idris.Core.Env.Nil'}, V3, V2031))), case V2036 of {'Idris.Prelude.Types.Left', E3242} -> (fun (V2037) -> {'Idris.Prelude.Types.Left', V2037} end(E3242)); {'Idris.Prelude.Types.Right', E3243} -> (fun (V2038) -> begin (V2043 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2039) -> fun (V2040) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2039, V2040)) end end, fun (V2041) -> fun (V2042) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2041, V2042)) end end}, V2038, V2031))), case V2043 of {'Idris.Prelude.Types.Left', E3244} -> (fun (V2044) -> {'Idris.Prelude.Types.Left', V2044} end(E3244)); {'Idris.Prelude.Types.Right', E3245} -> (fun (V2045) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2045))))}, V2031)) end(E3245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3236, E3237, E3238, E3239)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3201, E3202, E3203, E3204, E3205} -> (fun (V2046, V2047, V2048, V2049, V2050) -> fun (V2051) -> begin (V2053 = begin (V2052 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2052} end), case V2053 of {'Idris.Prelude.Types.Left', E3206} -> (fun (V2054) -> {'Idris.Prelude.Types.Left', V2054} end(E3206)); {'Idris.Prelude.Types.Right', E3207} -> (fun (V2055) -> begin (V2060 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2056) -> fun (V2057) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2056, V2057)) end end, fun (V2058) -> fun (V2059) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2058, V2059)) end end}, V2047, V2051))), case V2060 of {'Idris.Prelude.Types.Left', E3208} -> (fun (V2061) -> {'Idris.Prelude.Types.Left', V2061} end(E3208)); {'Idris.Prelude.Types.Right', E3209} -> (fun (V2062) -> begin (V2064 = (('un--getNArgs'(V0, V2055, V2062, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2063) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2063)) end, V2050))))(V2051))), case V2064 of {'Idris.Prelude.Types.Left', E3210} -> (fun (V2065) -> {'Idris.Prelude.Types.Left', V2065} end(E3210)); {'Idris.Prelude.Types.Right', E3211} -> (fun (V2066) -> case V2066 of {'Idris.Compiler.CompileExpr.User', E3212, E3213} -> (fun (V2067, V2068) -> begin (V2070 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2069) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2055, V2069)) end, V2068, []))(V2051))), case V2070 of {'Idris.Prelude.Types.Left', E3214} -> (fun (V2071) -> {'Idris.Prelude.Types.Left', V2071} end(E3214)); {'Idris.Prelude.Types.Right', E3215} -> (fun (V2072) -> begin (V2074 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2073) -> ('un--nfToCFType'(V0, V2046, V2, V2073)) end, V2072, []))(V2051))), case V2074 of {'Idris.Prelude.Types.Left', E3216} -> (fun (V2075) -> {'Idris.Prelude.Types.Left', V2075} end(E3216)); {'Idris.Prelude.Types.Right', E3217} -> (fun (V2076) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2062, V2076}} end(E3217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3212, E3213)); {'Idris.Compiler.CompileExpr.Struct', E3218, E3219} -> (fun (V2077, V2078) -> begin (V2089 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2079) -> case V2079 of {'Idris.Builtin.MkPair', E3220, E3221} -> (fun (V2080, V2081) -> fun (V2082) -> begin (V2083 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2055, V2081))(V2082))), case V2083 of {'Idris.Prelude.Types.Left', E3222} -> (fun (V2084) -> {'Idris.Prelude.Types.Left', V2084} end(E3222)); {'Idris.Prelude.Types.Right', E3223} -> (fun (V2085) -> begin (V2086 = (('un--nfToCFType'(V0, V2046, 0, V2085))(V2082))), case V2086 of {'Idris.Prelude.Types.Left', E3224} -> (fun (V2087) -> {'Idris.Prelude.Types.Left', V2087} end(E3224)); {'Idris.Prelude.Types.Right', E3225} -> (fun (V2088) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2080, V2088}} end(E3225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3220, E3221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2078, []))(V2051))), case V2089 of {'Idris.Prelude.Types.Left', E3226} -> (fun (V2090) -> {'Idris.Prelude.Types.Left', V2090} end(E3226)); {'Idris.Prelude.Types.Right', E3227} -> (fun (V2091) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2077, V2091}} end(E3227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3218, E3219)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3228} -> (fun (V2092) -> begin (V2093 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2055, V2092))(V2051))), case V2093 of {'Idris.Prelude.Types.Left', E3229} -> (fun (V2094) -> {'Idris.Prelude.Types.Left', V2094} end(E3229)); {'Idris.Prelude.Types.Right', E3230} -> (fun (V2095) -> begin (V2096 = (('un--nfToCFType'(V0, V2046, V2, V2095))(V2051))), case V2096 of {'Idris.Prelude.Types.Left', E3231} -> (fun (V2097) -> {'Idris.Prelude.Types.Left', V2097} end(E3231)); {'Idris.Prelude.Types.Right', E3232} -> (fun (V2098) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2098}} end(E3232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3201, E3202, E3203, E3204, E3205)); {'Idris.Core.Value.NType', E3233} -> (fun (V2099) -> fun (V2100) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3233)); {'Idris.Core.Value.NErased', E3234, E3235} -> (fun (V2101, V2102) -> fun (V2103) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3234, E3235)); _ -> fun (V2104) -> begin (V2106 = begin (V2105 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2105} end), case V2106 of {'Idris.Prelude.Types.Left', E3195} -> (fun (V2107) -> {'Idris.Prelude.Types.Left', V2107} end(E3195)); {'Idris.Prelude.Types.Right', E3196} -> (fun (V2108) -> begin (V2109 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2108, {'Idris.Core.Env.Nil'}, V3, V2104))), case V2109 of {'Idris.Prelude.Types.Left', E3197} -> (fun (V2110) -> {'Idris.Prelude.Types.Left', V2110} end(E3197)); {'Idris.Prelude.Types.Right', E3198} -> (fun (V2111) -> begin (V2116 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2112) -> fun (V2113) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2112, V2113)) end end, fun (V2114) -> fun (V2115) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2114, V2115)) end end}, V2111, V2104))), case V2116 of {'Idris.Prelude.Types.Left', E3199} -> (fun (V2117) -> {'Idris.Prelude.Types.Left', V2117} end(E3199)); {'Idris.Prelude.Types.Right', E3200} -> (fun (V2118) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2118))))}, V2104)) end(E3200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E3334, E3335, E3336, E3337} -> (fun (V2119, V2120, V2121, V2122) -> fun (V2123) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V2119, <<"Function types not allowed in a foreign struct"/utf8>>}, V2123)) end end(E3334, E3335, E3336, E3337)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3299, E3300, E3301, E3302, E3303} -> (fun (V2124, V2125, V2126, V2127, V2128) -> fun (V2129) -> begin (V2131 = begin (V2130 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2130} end), case V2131 of {'Idris.Prelude.Types.Left', E3304} -> (fun (V2132) -> {'Idris.Prelude.Types.Left', V2132} end(E3304)); {'Idris.Prelude.Types.Right', E3305} -> (fun (V2133) -> begin (V2138 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2134) -> fun (V2135) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2134, V2135)) end end, fun (V2136) -> fun (V2137) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2136, V2137)) end end}, V2125, V2129))), case V2138 of {'Idris.Prelude.Types.Left', E3306} -> (fun (V2139) -> {'Idris.Prelude.Types.Left', V2139} end(E3306)); {'Idris.Prelude.Types.Right', E3307} -> (fun (V2140) -> begin (V2142 = (('un--getNArgs'(V0, V2133, V2140, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2141) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2141)) end, V2128))))(V2129))), case V2142 of {'Idris.Prelude.Types.Left', E3308} -> (fun (V2143) -> {'Idris.Prelude.Types.Left', V2143} end(E3308)); {'Idris.Prelude.Types.Right', E3309} -> (fun (V2144) -> case V2144 of {'Idris.Compiler.CompileExpr.User', E3310, E3311} -> (fun (V2145, V2146) -> begin (V2148 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2147) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2133, V2147)) end, V2146, []))(V2129))), case V2148 of {'Idris.Prelude.Types.Left', E3312} -> (fun (V2149) -> {'Idris.Prelude.Types.Left', V2149} end(E3312)); {'Idris.Prelude.Types.Right', E3313} -> (fun (V2150) -> begin (V2152 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2151) -> ('un--nfToCFType'(V0, V2124, V2, V2151)) end, V2150, []))(V2129))), case V2152 of {'Idris.Prelude.Types.Left', E3314} -> (fun (V2153) -> {'Idris.Prelude.Types.Left', V2153} end(E3314)); {'Idris.Prelude.Types.Right', E3315} -> (fun (V2154) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2140, V2154}} end(E3315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3310, E3311)); {'Idris.Compiler.CompileExpr.Struct', E3316, E3317} -> (fun (V2155, V2156) -> begin (V2167 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2157) -> case V2157 of {'Idris.Builtin.MkPair', E3318, E3319} -> (fun (V2158, V2159) -> fun (V2160) -> begin (V2161 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2133, V2159))(V2160))), case V2161 of {'Idris.Prelude.Types.Left', E3320} -> (fun (V2162) -> {'Idris.Prelude.Types.Left', V2162} end(E3320)); {'Idris.Prelude.Types.Right', E3321} -> (fun (V2163) -> begin (V2164 = (('un--nfToCFType'(V0, V2124, 0, V2163))(V2160))), case V2164 of {'Idris.Prelude.Types.Left', E3322} -> (fun (V2165) -> {'Idris.Prelude.Types.Left', V2165} end(E3322)); {'Idris.Prelude.Types.Right', E3323} -> (fun (V2166) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2158, V2166}} end(E3323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3318, E3319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2156, []))(V2129))), case V2167 of {'Idris.Prelude.Types.Left', E3324} -> (fun (V2168) -> {'Idris.Prelude.Types.Left', V2168} end(E3324)); {'Idris.Prelude.Types.Right', E3325} -> (fun (V2169) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2155, V2169}} end(E3325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3316, E3317)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3326} -> (fun (V2170) -> begin (V2171 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2133, V2170))(V2129))), case V2171 of {'Idris.Prelude.Types.Left', E3327} -> (fun (V2172) -> {'Idris.Prelude.Types.Left', V2172} end(E3327)); {'Idris.Prelude.Types.Right', E3328} -> (fun (V2173) -> begin (V2174 = (('un--nfToCFType'(V0, V2124, V2, V2173))(V2129))), case V2174 of {'Idris.Prelude.Types.Left', E3329} -> (fun (V2175) -> {'Idris.Prelude.Types.Left', V2175} end(E3329)); {'Idris.Prelude.Types.Right', E3330} -> (fun (V2176) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2176}} end(E3330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3299, E3300, E3301, E3302, E3303)); {'Idris.Core.Value.NType', E3331} -> (fun (V2177) -> fun (V2178) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3331)); {'Idris.Core.Value.NErased', E3332, E3333} -> (fun (V2179, V2180) -> fun (V2181) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3332, E3333)); _ -> fun (V2182) -> begin (V2184 = begin (V2183 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2183} end), case V2184 of {'Idris.Prelude.Types.Left', E3293} -> (fun (V2185) -> {'Idris.Prelude.Types.Left', V2185} end(E3293)); {'Idris.Prelude.Types.Right', E3294} -> (fun (V2186) -> begin (V2187 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2186, {'Idris.Core.Env.Nil'}, V3, V2182))), case V2187 of {'Idris.Prelude.Types.Left', E3295} -> (fun (V2188) -> {'Idris.Prelude.Types.Left', V2188} end(E3295)); {'Idris.Prelude.Types.Right', E3296} -> (fun (V2189) -> begin (V2194 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2190) -> fun (V2191) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2190, V2191)) end end, fun (V2192) -> fun (V2193) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2192, V2193)) end end}, V2189, V2182))), case V2194 of {'Idris.Prelude.Types.Left', E3297} -> (fun (V2195) -> {'Idris.Prelude.Types.Left', V2195} end(E3297)); {'Idris.Prelude.Types.Right', E3298} -> (fun (V2196) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2196))))}, V2182)) end(E3298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E3160, E3161, E3162, E3163, E3164} -> (fun (V2197, V2198, V2199, V2200, V2201) -> fun (V2202) -> begin (V2204 = begin (V2203 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2203} end), case V2204 of {'Idris.Prelude.Types.Left', E3165} -> (fun (V2205) -> {'Idris.Prelude.Types.Left', V2205} end(E3165)); {'Idris.Prelude.Types.Right', E3166} -> (fun (V2206) -> begin (V2211 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2207) -> fun (V2208) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2207, V2208)) end end, fun (V2209) -> fun (V2210) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2209, V2210)) end end}, V2198, V2202))), case V2211 of {'Idris.Prelude.Types.Left', E3167} -> (fun (V2212) -> {'Idris.Prelude.Types.Left', V2212} end(E3167)); {'Idris.Prelude.Types.Right', E3168} -> (fun (V2213) -> begin (V2215 = (('un--getNArgs'(V0, V2206, V2213, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2214) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2214)) end, V2201))))(V2202))), case V2215 of {'Idris.Prelude.Types.Left', E3169} -> (fun (V2216) -> {'Idris.Prelude.Types.Left', V2216} end(E3169)); {'Idris.Prelude.Types.Right', E3170} -> (fun (V2217) -> case V2217 of {'Idris.Compiler.CompileExpr.User', E3171, E3172} -> (fun (V2218, V2219) -> begin (V2221 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2220) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2206, V2220)) end, V2219, []))(V2202))), case V2221 of {'Idris.Prelude.Types.Left', E3173} -> (fun (V2222) -> {'Idris.Prelude.Types.Left', V2222} end(E3173)); {'Idris.Prelude.Types.Right', E3174} -> (fun (V2223) -> begin (V2225 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2224) -> ('un--nfToCFType'(V0, V2197, V2, V2224)) end, V2223, []))(V2202))), case V2225 of {'Idris.Prelude.Types.Left', E3175} -> (fun (V2226) -> {'Idris.Prelude.Types.Left', V2226} end(E3175)); {'Idris.Prelude.Types.Right', E3176} -> (fun (V2227) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2213, V2227}} end(E3176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3171, E3172)); {'Idris.Compiler.CompileExpr.Struct', E3177, E3178} -> (fun (V2228, V2229) -> begin (V2240 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2230) -> case V2230 of {'Idris.Builtin.MkPair', E3179, E3180} -> (fun (V2231, V2232) -> fun (V2233) -> begin (V2234 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2206, V2232))(V2233))), case V2234 of {'Idris.Prelude.Types.Left', E3181} -> (fun (V2235) -> {'Idris.Prelude.Types.Left', V2235} end(E3181)); {'Idris.Prelude.Types.Right', E3182} -> (fun (V2236) -> begin (V2237 = (('un--nfToCFType'(V0, V2197, 0, V2236))(V2233))), case V2237 of {'Idris.Prelude.Types.Left', E3183} -> (fun (V2238) -> {'Idris.Prelude.Types.Left', V2238} end(E3183)); {'Idris.Prelude.Types.Right', E3184} -> (fun (V2239) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2231, V2239}} end(E3184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3179, E3180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2229, []))(V2202))), case V2240 of {'Idris.Prelude.Types.Left', E3185} -> (fun (V2241) -> {'Idris.Prelude.Types.Left', V2241} end(E3185)); {'Idris.Prelude.Types.Right', E3186} -> (fun (V2242) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2228, V2242}} end(E3186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3177, E3178)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3187} -> (fun (V2243) -> begin (V2244 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2206, V2243))(V2202))), case V2244 of {'Idris.Prelude.Types.Left', E3188} -> (fun (V2245) -> {'Idris.Prelude.Types.Left', V2245} end(E3188)); {'Idris.Prelude.Types.Right', E3189} -> (fun (V2246) -> begin (V2247 = (('un--nfToCFType'(V0, V2197, V2, V2246))(V2202))), case V2247 of {'Idris.Prelude.Types.Left', E3190} -> (fun (V2248) -> {'Idris.Prelude.Types.Left', V2248} end(E3190)); {'Idris.Prelude.Types.Right', E3191} -> (fun (V2249) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2249}} end(E3191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3160, E3161, E3162, E3163, E3164)); {'Idris.Core.Value.NType', E3192} -> (fun (V2250) -> fun (V2251) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3192)); {'Idris.Core.Value.NErased', E3193, E3194} -> (fun (V2252, V2253) -> fun (V2254) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3193, E3194)); _ -> fun (V2255) -> begin (V2257 = begin (V2256 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2256} end), case V2257 of {'Idris.Prelude.Types.Left', E3154} -> (fun (V2258) -> {'Idris.Prelude.Types.Left', V2258} end(E3154)); {'Idris.Prelude.Types.Right', E3155} -> (fun (V2259) -> begin (V2260 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2259, {'Idris.Core.Env.Nil'}, V3, V2255))), case V2260 of {'Idris.Prelude.Types.Left', E3156} -> (fun (V2261) -> {'Idris.Prelude.Types.Left', V2261} end(E3156)); {'Idris.Prelude.Types.Right', E3157} -> (fun (V2262) -> begin (V2267 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2263) -> fun (V2264) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2263, V2264)) end end, fun (V2265) -> fun (V2266) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2265, V2266)) end end}, V2262, V2255))), case V2267 of {'Idris.Prelude.Types.Left', E3158} -> (fun (V2268) -> {'Idris.Prelude.Types.Left', V2268} end(E3158)); {'Idris.Prelude.Types.Right', E3159} -> (fun (V2269) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2269))))}, V2255)) end(E3159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E3152, E3153)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E3050, E3051, E3052, E3053} -> (fun (V2270, V2271, V2272, V2273) -> case V2272 of {'Idris.Core.TT.Pi', E3095, E3096, E3097, E3098} -> (fun (V2274, V2275, V2276, V2277) -> fun (V2278) -> begin (V2280 = begin (V2279 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2279} end), case V2280 of {'Idris.Prelude.Types.Left', E3099} -> (fun (V2281) -> {'Idris.Prelude.Types.Left', V2281} end(E3099)); {'Idris.Prelude.Types.Right', E3100} -> (fun (V2282) -> begin (V2283 = (('un--nfToCFType'(V0, V2270, 1, V2277))(V2278))), case V2283 of {'Idris.Prelude.Types.Left', E3101} -> (fun (V2284) -> {'Idris.Prelude.Types.Left', V2284} end(E3101)); {'Idris.Prelude.Types.Right', E3102} -> (fun (V2285) -> begin (V2286 = (((V2273(V2282))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2270, 1}))))(V2278))), case V2286 of {'Idris.Prelude.Types.Left', E3103} -> (fun (V2287) -> {'Idris.Prelude.Types.Left', V2287} end(E3103)); {'Idris.Prelude.Types.Right', E3104} -> (fun (V2288) -> begin (V2289 = (('un--nfToCFType'(V0, V2270, 1, V2288))(V2278))), case V2289 of {'Idris.Prelude.Types.Left', E3105} -> (fun (V2290) -> {'Idris.Prelude.Types.Left', V2290} end(E3105)); {'Idris.Prelude.Types.Right', E3106} -> (fun (V2291) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2285, V2291}} end(E3106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3095, E3096, E3097, E3098)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3060, E3061, E3062, E3063, E3064} -> (fun (V2292, V2293, V2294, V2295, V2296) -> fun (V2297) -> begin (V2299 = begin (V2298 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2298} end), case V2299 of {'Idris.Prelude.Types.Left', E3065} -> (fun (V2300) -> {'Idris.Prelude.Types.Left', V2300} end(E3065)); {'Idris.Prelude.Types.Right', E3066} -> (fun (V2301) -> begin (V2306 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2302) -> fun (V2303) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2302, V2303)) end end, fun (V2304) -> fun (V2305) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2304, V2305)) end end}, V2293, V2297))), case V2306 of {'Idris.Prelude.Types.Left', E3067} -> (fun (V2307) -> {'Idris.Prelude.Types.Left', V2307} end(E3067)); {'Idris.Prelude.Types.Right', E3068} -> (fun (V2308) -> begin (V2310 = (('un--getNArgs'(V0, V2301, V2308, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2309) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2309)) end, V2296))))(V2297))), case V2310 of {'Idris.Prelude.Types.Left', E3069} -> (fun (V2311) -> {'Idris.Prelude.Types.Left', V2311} end(E3069)); {'Idris.Prelude.Types.Right', E3070} -> (fun (V2312) -> case V2312 of {'Idris.Compiler.CompileExpr.User', E3071, E3072} -> (fun (V2313, V2314) -> begin (V2316 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2315) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2301, V2315)) end, V2314, []))(V2297))), case V2316 of {'Idris.Prelude.Types.Left', E3073} -> (fun (V2317) -> {'Idris.Prelude.Types.Left', V2317} end(E3073)); {'Idris.Prelude.Types.Right', E3074} -> (fun (V2318) -> begin (V2320 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2319) -> ('un--nfToCFType'(V0, V2292, V2, V2319)) end, V2318, []))(V2297))), case V2320 of {'Idris.Prelude.Types.Left', E3075} -> (fun (V2321) -> {'Idris.Prelude.Types.Left', V2321} end(E3075)); {'Idris.Prelude.Types.Right', E3076} -> (fun (V2322) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2308, V2322}} end(E3076)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3071, E3072)); {'Idris.Compiler.CompileExpr.Struct', E3077, E3078} -> (fun (V2323, V2324) -> begin (V2335 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2325) -> case V2325 of {'Idris.Builtin.MkPair', E3079, E3080} -> (fun (V2326, V2327) -> fun (V2328) -> begin (V2329 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2301, V2327))(V2328))), case V2329 of {'Idris.Prelude.Types.Left', E3081} -> (fun (V2330) -> {'Idris.Prelude.Types.Left', V2330} end(E3081)); {'Idris.Prelude.Types.Right', E3082} -> (fun (V2331) -> begin (V2332 = (('un--nfToCFType'(V0, V2292, 0, V2331))(V2328))), case V2332 of {'Idris.Prelude.Types.Left', E3083} -> (fun (V2333) -> {'Idris.Prelude.Types.Left', V2333} end(E3083)); {'Idris.Prelude.Types.Right', E3084} -> (fun (V2334) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2326, V2334}} end(E3084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3082)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3079, E3080)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2324, []))(V2297))), case V2335 of {'Idris.Prelude.Types.Left', E3085} -> (fun (V2336) -> {'Idris.Prelude.Types.Left', V2336} end(E3085)); {'Idris.Prelude.Types.Right', E3086} -> (fun (V2337) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2323, V2337}} end(E3086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3077, E3078)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3087} -> (fun (V2338) -> begin (V2339 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2301, V2338))(V2297))), case V2339 of {'Idris.Prelude.Types.Left', E3088} -> (fun (V2340) -> {'Idris.Prelude.Types.Left', V2340} end(E3088)); {'Idris.Prelude.Types.Right', E3089} -> (fun (V2341) -> begin (V2342 = (('un--nfToCFType'(V0, V2292, V2, V2341))(V2297))), case V2342 of {'Idris.Prelude.Types.Left', E3090} -> (fun (V2343) -> {'Idris.Prelude.Types.Left', V2343} end(E3090)); {'Idris.Prelude.Types.Right', E3091} -> (fun (V2344) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2344}} end(E3091)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3089)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3087)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3066)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3060, E3061, E3062, E3063, E3064)); {'Idris.Core.Value.NType', E3092} -> (fun (V2345) -> fun (V2346) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3092)); {'Idris.Core.Value.NErased', E3093, E3094} -> (fun (V2347, V2348) -> fun (V2349) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3093, E3094)); _ -> fun (V2350) -> begin (V2352 = begin (V2351 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2351} end), case V2352 of {'Idris.Prelude.Types.Left', E3054} -> (fun (V2353) -> {'Idris.Prelude.Types.Left', V2353} end(E3054)); {'Idris.Prelude.Types.Right', E3055} -> (fun (V2354) -> begin (V2355 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2354, {'Idris.Core.Env.Nil'}, V3, V2350))), case V2355 of {'Idris.Prelude.Types.Left', E3056} -> (fun (V2356) -> {'Idris.Prelude.Types.Left', V2356} end(E3056)); {'Idris.Prelude.Types.Right', E3057} -> (fun (V2357) -> begin (V2362 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2358) -> fun (V2359) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2358, V2359)) end end, fun (V2360) -> fun (V2361) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2360, V2361)) end end}, V2357, V2350))), case V2362 of {'Idris.Prelude.Types.Left', E3058} -> (fun (V2363) -> {'Idris.Prelude.Types.Left', V2363} end(E3058)); {'Idris.Prelude.Types.Right', E3059} -> (fun (V2364) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2364))))}, V2350)) end(E3059)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3055)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3050, E3051, E3052, E3053)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3015, E3016, E3017, E3018, E3019} -> (fun (V2365, V2366, V2367, V2368, V2369) -> fun (V2370) -> begin (V2372 = begin (V2371 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2371} end), case V2372 of {'Idris.Prelude.Types.Left', E3020} -> (fun (V2373) -> {'Idris.Prelude.Types.Left', V2373} end(E3020)); {'Idris.Prelude.Types.Right', E3021} -> (fun (V2374) -> begin (V2379 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2375) -> fun (V2376) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2375, V2376)) end end, fun (V2377) -> fun (V2378) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2377, V2378)) end end}, V2366, V2370))), case V2379 of {'Idris.Prelude.Types.Left', E3022} -> (fun (V2380) -> {'Idris.Prelude.Types.Left', V2380} end(E3022)); {'Idris.Prelude.Types.Right', E3023} -> (fun (V2381) -> begin (V2383 = (('un--getNArgs'(V0, V2374, V2381, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2382) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2382)) end, V2369))))(V2370))), case V2383 of {'Idris.Prelude.Types.Left', E3024} -> (fun (V2384) -> {'Idris.Prelude.Types.Left', V2384} end(E3024)); {'Idris.Prelude.Types.Right', E3025} -> (fun (V2385) -> case V2385 of {'Idris.Compiler.CompileExpr.User', E3026, E3027} -> (fun (V2386, V2387) -> begin (V2389 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2388) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2374, V2388)) end, V2387, []))(V2370))), case V2389 of {'Idris.Prelude.Types.Left', E3028} -> (fun (V2390) -> {'Idris.Prelude.Types.Left', V2390} end(E3028)); {'Idris.Prelude.Types.Right', E3029} -> (fun (V2391) -> begin (V2393 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2392) -> ('un--nfToCFType'(V0, V2365, V2, V2392)) end, V2391, []))(V2370))), case V2393 of {'Idris.Prelude.Types.Left', E3030} -> (fun (V2394) -> {'Idris.Prelude.Types.Left', V2394} end(E3030)); {'Idris.Prelude.Types.Right', E3031} -> (fun (V2395) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2381, V2395}} end(E3031)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3029)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3026, E3027)); {'Idris.Compiler.CompileExpr.Struct', E3032, E3033} -> (fun (V2396, V2397) -> begin (V2408 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2398) -> case V2398 of {'Idris.Builtin.MkPair', E3034, E3035} -> (fun (V2399, V2400) -> fun (V2401) -> begin (V2402 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2374, V2400))(V2401))), case V2402 of {'Idris.Prelude.Types.Left', E3036} -> (fun (V2403) -> {'Idris.Prelude.Types.Left', V2403} end(E3036)); {'Idris.Prelude.Types.Right', E3037} -> (fun (V2404) -> begin (V2405 = (('un--nfToCFType'(V0, V2365, 0, V2404))(V2401))), case V2405 of {'Idris.Prelude.Types.Left', E3038} -> (fun (V2406) -> {'Idris.Prelude.Types.Left', V2406} end(E3038)); {'Idris.Prelude.Types.Right', E3039} -> (fun (V2407) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2399, V2407}} end(E3039)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3034, E3035)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2397, []))(V2370))), case V2408 of {'Idris.Prelude.Types.Left', E3040} -> (fun (V2409) -> {'Idris.Prelude.Types.Left', V2409} end(E3040)); {'Idris.Prelude.Types.Right', E3041} -> (fun (V2410) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2396, V2410}} end(E3041)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3032, E3033)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3042} -> (fun (V2411) -> begin (V2412 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2374, V2411))(V2370))), case V2412 of {'Idris.Prelude.Types.Left', E3043} -> (fun (V2413) -> {'Idris.Prelude.Types.Left', V2413} end(E3043)); {'Idris.Prelude.Types.Right', E3044} -> (fun (V2414) -> begin (V2415 = (('un--nfToCFType'(V0, V2365, V2, V2414))(V2370))), case V2415 of {'Idris.Prelude.Types.Left', E3045} -> (fun (V2416) -> {'Idris.Prelude.Types.Left', V2416} end(E3045)); {'Idris.Prelude.Types.Right', E3046} -> (fun (V2417) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2417}} end(E3046)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3044)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3042)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3025)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3021)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3015, E3016, E3017, E3018, E3019)); {'Idris.Core.Value.NType', E3047} -> (fun (V2418) -> fun (V2419) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3047)); {'Idris.Core.Value.NErased', E3048, E3049} -> (fun (V2420, V2421) -> fun (V2422) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3048, E3049)); _ -> fun (V2423) -> begin (V2425 = begin (V2424 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2424} end), case V2425 of {'Idris.Prelude.Types.Left', E3009} -> (fun (V2426) -> {'Idris.Prelude.Types.Left', V2426} end(E3009)); {'Idris.Prelude.Types.Right', E3010} -> (fun (V2427) -> begin (V2428 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2427, {'Idris.Core.Env.Nil'}, V3, V2423))), case V2428 of {'Idris.Prelude.Types.Left', E3011} -> (fun (V2429) -> {'Idris.Prelude.Types.Left', V2429} end(E3011)); {'Idris.Prelude.Types.Right', E3012} -> (fun (V2430) -> begin (V2435 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2431) -> fun (V2432) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2431, V2432)) end end, fun (V2433) -> fun (V2434) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2433, V2434)) end end}, V2430, V2423))), case V2435 of {'Idris.Prelude.Types.Left', E3013} -> (fun (V2436) -> {'Idris.Prelude.Types.Left', V2436} end(E3013)); {'Idris.Prelude.Types.Right', E3014} -> (fun (V2437) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2437))))}, V2423)) end(E3014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3010)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E3148, E3149, E3150, E3151} -> (fun (V2438, V2439, V2440, V2441) -> fun (V2442) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V2438, <<"Function types not allowed in a foreign struct"/utf8>>}, V2442)) end end(E3148, E3149, E3150, E3151)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3113, E3114, E3115, E3116, E3117} -> (fun (V2443, V2444, V2445, V2446, V2447) -> fun (V2448) -> begin (V2450 = begin (V2449 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2449} end), case V2450 of {'Idris.Prelude.Types.Left', E3118} -> (fun (V2451) -> {'Idris.Prelude.Types.Left', V2451} end(E3118)); {'Idris.Prelude.Types.Right', E3119} -> (fun (V2452) -> begin (V2457 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2453) -> fun (V2454) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2453, V2454)) end end, fun (V2455) -> fun (V2456) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2455, V2456)) end end}, V2444, V2448))), case V2457 of {'Idris.Prelude.Types.Left', E3120} -> (fun (V2458) -> {'Idris.Prelude.Types.Left', V2458} end(E3120)); {'Idris.Prelude.Types.Right', E3121} -> (fun (V2459) -> begin (V2461 = (('un--getNArgs'(V0, V2452, V2459, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2460) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2460)) end, V2447))))(V2448))), case V2461 of {'Idris.Prelude.Types.Left', E3122} -> (fun (V2462) -> {'Idris.Prelude.Types.Left', V2462} end(E3122)); {'Idris.Prelude.Types.Right', E3123} -> (fun (V2463) -> case V2463 of {'Idris.Compiler.CompileExpr.User', E3124, E3125} -> (fun (V2464, V2465) -> begin (V2467 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2466) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2452, V2466)) end, V2465, []))(V2448))), case V2467 of {'Idris.Prelude.Types.Left', E3126} -> (fun (V2468) -> {'Idris.Prelude.Types.Left', V2468} end(E3126)); {'Idris.Prelude.Types.Right', E3127} -> (fun (V2469) -> begin (V2471 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2470) -> ('un--nfToCFType'(V0, V2443, V2, V2470)) end, V2469, []))(V2448))), case V2471 of {'Idris.Prelude.Types.Left', E3128} -> (fun (V2472) -> {'Idris.Prelude.Types.Left', V2472} end(E3128)); {'Idris.Prelude.Types.Right', E3129} -> (fun (V2473) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2459, V2473}} end(E3129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3124, E3125)); {'Idris.Compiler.CompileExpr.Struct', E3130, E3131} -> (fun (V2474, V2475) -> begin (V2486 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2476) -> case V2476 of {'Idris.Builtin.MkPair', E3132, E3133} -> (fun (V2477, V2478) -> fun (V2479) -> begin (V2480 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2452, V2478))(V2479))), case V2480 of {'Idris.Prelude.Types.Left', E3134} -> (fun (V2481) -> {'Idris.Prelude.Types.Left', V2481} end(E3134)); {'Idris.Prelude.Types.Right', E3135} -> (fun (V2482) -> begin (V2483 = (('un--nfToCFType'(V0, V2443, 0, V2482))(V2479))), case V2483 of {'Idris.Prelude.Types.Left', E3136} -> (fun (V2484) -> {'Idris.Prelude.Types.Left', V2484} end(E3136)); {'Idris.Prelude.Types.Right', E3137} -> (fun (V2485) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2477, V2485}} end(E3137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3132, E3133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2475, []))(V2448))), case V2486 of {'Idris.Prelude.Types.Left', E3138} -> (fun (V2487) -> {'Idris.Prelude.Types.Left', V2487} end(E3138)); {'Idris.Prelude.Types.Right', E3139} -> (fun (V2488) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2474, V2488}} end(E3139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3130, E3131)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3140} -> (fun (V2489) -> begin (V2490 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2452, V2489))(V2448))), case V2490 of {'Idris.Prelude.Types.Left', E3141} -> (fun (V2491) -> {'Idris.Prelude.Types.Left', V2491} end(E3141)); {'Idris.Prelude.Types.Right', E3142} -> (fun (V2492) -> begin (V2493 = (('un--nfToCFType'(V0, V2443, V2, V2492))(V2448))), case V2493 of {'Idris.Prelude.Types.Left', E3143} -> (fun (V2494) -> {'Idris.Prelude.Types.Left', V2494} end(E3143)); {'Idris.Prelude.Types.Right', E3144} -> (fun (V2495) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2495}} end(E3144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3113, E3114, E3115, E3116, E3117)); {'Idris.Core.Value.NType', E3145} -> (fun (V2496) -> fun (V2497) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3145)); {'Idris.Core.Value.NErased', E3146, E3147} -> (fun (V2498, V2499) -> fun (V2500) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3146, E3147)); _ -> fun (V2501) -> begin (V2503 = begin (V2502 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2502} end), case V2503 of {'Idris.Prelude.Types.Left', E3107} -> (fun (V2504) -> {'Idris.Prelude.Types.Left', V2504} end(E3107)); {'Idris.Prelude.Types.Right', E3108} -> (fun (V2505) -> begin (V2506 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2505, {'Idris.Core.Env.Nil'}, V3, V2501))), case V2506 of {'Idris.Prelude.Types.Left', E3109} -> (fun (V2507) -> {'Idris.Prelude.Types.Left', V2507} end(E3109)); {'Idris.Prelude.Types.Right', E3110} -> (fun (V2508) -> begin (V2513 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2509) -> fun (V2510) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2509, V2510)) end end, fun (V2511) -> fun (V2512) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2511, V2512)) end end}, V2508, V2501))), case V2513 of {'Idris.Prelude.Types.Left', E3111} -> (fun (V2514) -> {'Idris.Prelude.Types.Left', V2514} end(E3111)); {'Idris.Prelude.Types.Right', E3112} -> (fun (V2515) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2515))))}, V2501)) end(E3112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E2974, E2975, E2976, E2977, E2978} -> (fun (V2516, V2517, V2518, V2519, V2520) -> fun (V2521) -> begin (V2523 = begin (V2522 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2522} end), case V2523 of {'Idris.Prelude.Types.Left', E2979} -> (fun (V2524) -> {'Idris.Prelude.Types.Left', V2524} end(E2979)); {'Idris.Prelude.Types.Right', E2980} -> (fun (V2525) -> begin (V2530 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2526) -> fun (V2527) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2526, V2527)) end end, fun (V2528) -> fun (V2529) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2528, V2529)) end end}, V2517, V2521))), case V2530 of {'Idris.Prelude.Types.Left', E2981} -> (fun (V2531) -> {'Idris.Prelude.Types.Left', V2531} end(E2981)); {'Idris.Prelude.Types.Right', E2982} -> (fun (V2532) -> begin (V2534 = (('un--getNArgs'(V0, V2525, V2532, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2533) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2533)) end, V2520))))(V2521))), case V2534 of {'Idris.Prelude.Types.Left', E2983} -> (fun (V2535) -> {'Idris.Prelude.Types.Left', V2535} end(E2983)); {'Idris.Prelude.Types.Right', E2984} -> (fun (V2536) -> case V2536 of {'Idris.Compiler.CompileExpr.User', E2985, E2986} -> (fun (V2537, V2538) -> begin (V2540 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2539) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2525, V2539)) end, V2538, []))(V2521))), case V2540 of {'Idris.Prelude.Types.Left', E2987} -> (fun (V2541) -> {'Idris.Prelude.Types.Left', V2541} end(E2987)); {'Idris.Prelude.Types.Right', E2988} -> (fun (V2542) -> begin (V2544 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2543) -> ('un--nfToCFType'(V0, V2516, V2, V2543)) end, V2542, []))(V2521))), case V2544 of {'Idris.Prelude.Types.Left', E2989} -> (fun (V2545) -> {'Idris.Prelude.Types.Left', V2545} end(E2989)); {'Idris.Prelude.Types.Right', E2990} -> (fun (V2546) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2532, V2546}} end(E2990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2985, E2986)); {'Idris.Compiler.CompileExpr.Struct', E2991, E2992} -> (fun (V2547, V2548) -> begin (V2559 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2549) -> case V2549 of {'Idris.Builtin.MkPair', E2993, E2994} -> (fun (V2550, V2551) -> fun (V2552) -> begin (V2553 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2525, V2551))(V2552))), case V2553 of {'Idris.Prelude.Types.Left', E2995} -> (fun (V2554) -> {'Idris.Prelude.Types.Left', V2554} end(E2995)); {'Idris.Prelude.Types.Right', E2996} -> (fun (V2555) -> begin (V2556 = (('un--nfToCFType'(V0, V2516, 0, V2555))(V2552))), case V2556 of {'Idris.Prelude.Types.Left', E2997} -> (fun (V2557) -> {'Idris.Prelude.Types.Left', V2557} end(E2997)); {'Idris.Prelude.Types.Right', E2998} -> (fun (V2558) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2550, V2558}} end(E2998)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2996)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2993, E2994)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2548, []))(V2521))), case V2559 of {'Idris.Prelude.Types.Left', E2999} -> (fun (V2560) -> {'Idris.Prelude.Types.Left', V2560} end(E2999)); {'Idris.Prelude.Types.Right', E3000} -> (fun (V2561) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2547, V2561}} end(E3000)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2991, E2992)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3001} -> (fun (V2562) -> begin (V2563 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2525, V2562))(V2521))), case V2563 of {'Idris.Prelude.Types.Left', E3002} -> (fun (V2564) -> {'Idris.Prelude.Types.Left', V2564} end(E3002)); {'Idris.Prelude.Types.Right', E3003} -> (fun (V2565) -> begin (V2566 = (('un--nfToCFType'(V0, V2516, V2, V2565))(V2521))), case V2566 of {'Idris.Prelude.Types.Left', E3004} -> (fun (V2567) -> {'Idris.Prelude.Types.Left', V2567} end(E3004)); {'Idris.Prelude.Types.Right', E3005} -> (fun (V2568) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2568}} end(E3005)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3003)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2984)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2982)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2980)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2974, E2975, E2976, E2977, E2978)); {'Idris.Core.Value.NType', E3006} -> (fun (V2569) -> fun (V2570) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E3006)); {'Idris.Core.Value.NErased', E3007, E3008} -> (fun (V2571, V2572) -> fun (V2573) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E3007, E3008)); _ -> fun (V2574) -> begin (V2576 = begin (V2575 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2575} end), case V2576 of {'Idris.Prelude.Types.Left', E2968} -> (fun (V2577) -> {'Idris.Prelude.Types.Left', V2577} end(E2968)); {'Idris.Prelude.Types.Right', E2969} -> (fun (V2578) -> begin (V2579 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2578, {'Idris.Core.Env.Nil'}, V3, V2574))), case V2579 of {'Idris.Prelude.Types.Left', E2970} -> (fun (V2580) -> {'Idris.Prelude.Types.Left', V2580} end(E2970)); {'Idris.Prelude.Types.Right', E2971} -> (fun (V2581) -> begin (V2586 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2582) -> fun (V2583) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2582, V2583)) end end, fun (V2584) -> fun (V2585) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2584, V2585)) end end}, V2581, V2574))), case V2586 of {'Idris.Prelude.Types.Left', E2972} -> (fun (V2587) -> {'Idris.Prelude.Types.Left', V2587} end(E2972)); {'Idris.Prelude.Types.Right', E2973} -> (fun (V2588) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2588))))}, V2574)) end(E2973)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2971)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2969)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2040, E2041} -> (fun (V2589, V2590) -> case V2590 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V2591) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V2592) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V2593) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E2124, E2125, E2126, E2127} -> (fun (V2594, V2595, V2596, V2597) -> case V2596 of {'Idris.Core.TT.Pi', E2169, E2170, E2171, E2172} -> (fun (V2598, V2599, V2600, V2601) -> fun (V2602) -> begin (V2604 = begin (V2603 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2603} end), case V2604 of {'Idris.Prelude.Types.Left', E2173} -> (fun (V2605) -> {'Idris.Prelude.Types.Left', V2605} end(E2173)); {'Idris.Prelude.Types.Right', E2174} -> (fun (V2606) -> begin (V2607 = (('un--nfToCFType'(V0, V2594, 1, V2601))(V2602))), case V2607 of {'Idris.Prelude.Types.Left', E2175} -> (fun (V2608) -> {'Idris.Prelude.Types.Left', V2608} end(E2175)); {'Idris.Prelude.Types.Right', E2176} -> (fun (V2609) -> begin (V2610 = (((V2597(V2606))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2594, 1}))))(V2602))), case V2610 of {'Idris.Prelude.Types.Left', E2177} -> (fun (V2611) -> {'Idris.Prelude.Types.Left', V2611} end(E2177)); {'Idris.Prelude.Types.Right', E2178} -> (fun (V2612) -> begin (V2613 = (('un--nfToCFType'(V0, V2594, 1, V2612))(V2602))), case V2613 of {'Idris.Prelude.Types.Left', E2179} -> (fun (V2614) -> {'Idris.Prelude.Types.Left', V2614} end(E2179)); {'Idris.Prelude.Types.Right', E2180} -> (fun (V2615) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2609, V2615}} end(E2180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2169, E2170, E2171, E2172)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2134, E2135, E2136, E2137, E2138} -> (fun (V2616, V2617, V2618, V2619, V2620) -> fun (V2621) -> begin (V2623 = begin (V2622 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2622} end), case V2623 of {'Idris.Prelude.Types.Left', E2139} -> (fun (V2624) -> {'Idris.Prelude.Types.Left', V2624} end(E2139)); {'Idris.Prelude.Types.Right', E2140} -> (fun (V2625) -> begin (V2630 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2626) -> fun (V2627) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2626, V2627)) end end, fun (V2628) -> fun (V2629) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2628, V2629)) end end}, V2617, V2621))), case V2630 of {'Idris.Prelude.Types.Left', E2141} -> (fun (V2631) -> {'Idris.Prelude.Types.Left', V2631} end(E2141)); {'Idris.Prelude.Types.Right', E2142} -> (fun (V2632) -> begin (V2634 = (('un--getNArgs'(V0, V2625, V2632, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2633) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2633)) end, V2620))))(V2621))), case V2634 of {'Idris.Prelude.Types.Left', E2143} -> (fun (V2635) -> {'Idris.Prelude.Types.Left', V2635} end(E2143)); {'Idris.Prelude.Types.Right', E2144} -> (fun (V2636) -> case V2636 of {'Idris.Compiler.CompileExpr.User', E2145, E2146} -> (fun (V2637, V2638) -> begin (V2640 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2639) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2625, V2639)) end, V2638, []))(V2621))), case V2640 of {'Idris.Prelude.Types.Left', E2147} -> (fun (V2641) -> {'Idris.Prelude.Types.Left', V2641} end(E2147)); {'Idris.Prelude.Types.Right', E2148} -> (fun (V2642) -> begin (V2644 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2643) -> ('un--nfToCFType'(V0, V2616, V2, V2643)) end, V2642, []))(V2621))), case V2644 of {'Idris.Prelude.Types.Left', E2149} -> (fun (V2645) -> {'Idris.Prelude.Types.Left', V2645} end(E2149)); {'Idris.Prelude.Types.Right', E2150} -> (fun (V2646) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2632, V2646}} end(E2150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2145, E2146)); {'Idris.Compiler.CompileExpr.Struct', E2151, E2152} -> (fun (V2647, V2648) -> begin (V2659 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2649) -> case V2649 of {'Idris.Builtin.MkPair', E2153, E2154} -> (fun (V2650, V2651) -> fun (V2652) -> begin (V2653 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2625, V2651))(V2652))), case V2653 of {'Idris.Prelude.Types.Left', E2155} -> (fun (V2654) -> {'Idris.Prelude.Types.Left', V2654} end(E2155)); {'Idris.Prelude.Types.Right', E2156} -> (fun (V2655) -> begin (V2656 = (('un--nfToCFType'(V0, V2616, 0, V2655))(V2652))), case V2656 of {'Idris.Prelude.Types.Left', E2157} -> (fun (V2657) -> {'Idris.Prelude.Types.Left', V2657} end(E2157)); {'Idris.Prelude.Types.Right', E2158} -> (fun (V2658) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2650, V2658}} end(E2158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2153, E2154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2648, []))(V2621))), case V2659 of {'Idris.Prelude.Types.Left', E2159} -> (fun (V2660) -> {'Idris.Prelude.Types.Left', V2660} end(E2159)); {'Idris.Prelude.Types.Right', E2160} -> (fun (V2661) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2647, V2661}} end(E2160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2151, E2152)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2161} -> (fun (V2662) -> begin (V2663 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2625, V2662))(V2621))), case V2663 of {'Idris.Prelude.Types.Left', E2162} -> (fun (V2664) -> {'Idris.Prelude.Types.Left', V2664} end(E2162)); {'Idris.Prelude.Types.Right', E2163} -> (fun (V2665) -> begin (V2666 = (('un--nfToCFType'(V0, V2616, V2, V2665))(V2621))), case V2666 of {'Idris.Prelude.Types.Left', E2164} -> (fun (V2667) -> {'Idris.Prelude.Types.Left', V2667} end(E2164)); {'Idris.Prelude.Types.Right', E2165} -> (fun (V2668) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2668}} end(E2165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2134, E2135, E2136, E2137, E2138)); {'Idris.Core.Value.NType', E2166} -> (fun (V2669) -> fun (V2670) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2166)); {'Idris.Core.Value.NErased', E2167, E2168} -> (fun (V2671, V2672) -> fun (V2673) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2167, E2168)); _ -> fun (V2674) -> begin (V2676 = begin (V2675 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2675} end), case V2676 of {'Idris.Prelude.Types.Left', E2128} -> (fun (V2677) -> {'Idris.Prelude.Types.Left', V2677} end(E2128)); {'Idris.Prelude.Types.Right', E2129} -> (fun (V2678) -> begin (V2679 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2678, {'Idris.Core.Env.Nil'}, V3, V2674))), case V2679 of {'Idris.Prelude.Types.Left', E2130} -> (fun (V2680) -> {'Idris.Prelude.Types.Left', V2680} end(E2130)); {'Idris.Prelude.Types.Right', E2131} -> (fun (V2681) -> begin (V2686 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2682) -> fun (V2683) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2682, V2683)) end end, fun (V2684) -> fun (V2685) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2684, V2685)) end end}, V2681, V2674))), case V2686 of {'Idris.Prelude.Types.Left', E2132} -> (fun (V2687) -> {'Idris.Prelude.Types.Left', V2687} end(E2132)); {'Idris.Prelude.Types.Right', E2133} -> (fun (V2688) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2688))))}, V2674)) end(E2133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2124, E2125, E2126, E2127)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2089, E2090, E2091, E2092, E2093} -> (fun (V2689, V2690, V2691, V2692, V2693) -> fun (V2694) -> begin (V2696 = begin (V2695 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2695} end), case V2696 of {'Idris.Prelude.Types.Left', E2094} -> (fun (V2697) -> {'Idris.Prelude.Types.Left', V2697} end(E2094)); {'Idris.Prelude.Types.Right', E2095} -> (fun (V2698) -> begin (V2703 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2699) -> fun (V2700) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2699, V2700)) end end, fun (V2701) -> fun (V2702) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2701, V2702)) end end}, V2690, V2694))), case V2703 of {'Idris.Prelude.Types.Left', E2096} -> (fun (V2704) -> {'Idris.Prelude.Types.Left', V2704} end(E2096)); {'Idris.Prelude.Types.Right', E2097} -> (fun (V2705) -> begin (V2707 = (('un--getNArgs'(V0, V2698, V2705, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2706) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2706)) end, V2693))))(V2694))), case V2707 of {'Idris.Prelude.Types.Left', E2098} -> (fun (V2708) -> {'Idris.Prelude.Types.Left', V2708} end(E2098)); {'Idris.Prelude.Types.Right', E2099} -> (fun (V2709) -> case V2709 of {'Idris.Compiler.CompileExpr.User', E2100, E2101} -> (fun (V2710, V2711) -> begin (V2713 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2712) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2698, V2712)) end, V2711, []))(V2694))), case V2713 of {'Idris.Prelude.Types.Left', E2102} -> (fun (V2714) -> {'Idris.Prelude.Types.Left', V2714} end(E2102)); {'Idris.Prelude.Types.Right', E2103} -> (fun (V2715) -> begin (V2717 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2716) -> ('un--nfToCFType'(V0, V2689, V2, V2716)) end, V2715, []))(V2694))), case V2717 of {'Idris.Prelude.Types.Left', E2104} -> (fun (V2718) -> {'Idris.Prelude.Types.Left', V2718} end(E2104)); {'Idris.Prelude.Types.Right', E2105} -> (fun (V2719) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2705, V2719}} end(E2105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2100, E2101)); {'Idris.Compiler.CompileExpr.Struct', E2106, E2107} -> (fun (V2720, V2721) -> begin (V2732 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2722) -> case V2722 of {'Idris.Builtin.MkPair', E2108, E2109} -> (fun (V2723, V2724) -> fun (V2725) -> begin (V2726 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2698, V2724))(V2725))), case V2726 of {'Idris.Prelude.Types.Left', E2110} -> (fun (V2727) -> {'Idris.Prelude.Types.Left', V2727} end(E2110)); {'Idris.Prelude.Types.Right', E2111} -> (fun (V2728) -> begin (V2729 = (('un--nfToCFType'(V0, V2689, 0, V2728))(V2725))), case V2729 of {'Idris.Prelude.Types.Left', E2112} -> (fun (V2730) -> {'Idris.Prelude.Types.Left', V2730} end(E2112)); {'Idris.Prelude.Types.Right', E2113} -> (fun (V2731) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2723, V2731}} end(E2113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2108, E2109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2721, []))(V2694))), case V2732 of {'Idris.Prelude.Types.Left', E2114} -> (fun (V2733) -> {'Idris.Prelude.Types.Left', V2733} end(E2114)); {'Idris.Prelude.Types.Right', E2115} -> (fun (V2734) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2720, V2734}} end(E2115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2106, E2107)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2116} -> (fun (V2735) -> begin (V2736 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2698, V2735))(V2694))), case V2736 of {'Idris.Prelude.Types.Left', E2117} -> (fun (V2737) -> {'Idris.Prelude.Types.Left', V2737} end(E2117)); {'Idris.Prelude.Types.Right', E2118} -> (fun (V2738) -> begin (V2739 = (('un--nfToCFType'(V0, V2689, V2, V2738))(V2694))), case V2739 of {'Idris.Prelude.Types.Left', E2119} -> (fun (V2740) -> {'Idris.Prelude.Types.Left', V2740} end(E2119)); {'Idris.Prelude.Types.Right', E2120} -> (fun (V2741) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2741}} end(E2120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2099)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2095)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2089, E2090, E2091, E2092, E2093)); {'Idris.Core.Value.NType', E2121} -> (fun (V2742) -> fun (V2743) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2121)); {'Idris.Core.Value.NErased', E2122, E2123} -> (fun (V2744, V2745) -> fun (V2746) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2122, E2123)); _ -> fun (V2747) -> begin (V2749 = begin (V2748 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2748} end), case V2749 of {'Idris.Prelude.Types.Left', E2083} -> (fun (V2750) -> {'Idris.Prelude.Types.Left', V2750} end(E2083)); {'Idris.Prelude.Types.Right', E2084} -> (fun (V2751) -> begin (V2752 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2751, {'Idris.Core.Env.Nil'}, V3, V2747))), case V2752 of {'Idris.Prelude.Types.Left', E2085} -> (fun (V2753) -> {'Idris.Prelude.Types.Left', V2753} end(E2085)); {'Idris.Prelude.Types.Right', E2086} -> (fun (V2754) -> begin (V2759 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2755) -> fun (V2756) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2755, V2756)) end end, fun (V2757) -> fun (V2758) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2757, V2758)) end end}, V2754, V2747))), case V2759 of {'Idris.Prelude.Types.Left', E2087} -> (fun (V2760) -> {'Idris.Prelude.Types.Left', V2760} end(E2087)); {'Idris.Prelude.Types.Right', E2088} -> (fun (V2761) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2761))))}, V2747)) end(E2088)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E2222, E2223, E2224, E2225} -> (fun (V2762, V2763, V2764, V2765) -> fun (V2766) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V2762, <<"Function types not allowed in a foreign struct"/utf8>>}, V2766)) end end(E2222, E2223, E2224, E2225)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2187, E2188, E2189, E2190, E2191} -> (fun (V2767, V2768, V2769, V2770, V2771) -> fun (V2772) -> begin (V2774 = begin (V2773 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2773} end), case V2774 of {'Idris.Prelude.Types.Left', E2192} -> (fun (V2775) -> {'Idris.Prelude.Types.Left', V2775} end(E2192)); {'Idris.Prelude.Types.Right', E2193} -> (fun (V2776) -> begin (V2781 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2777) -> fun (V2778) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2777, V2778)) end end, fun (V2779) -> fun (V2780) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2779, V2780)) end end}, V2768, V2772))), case V2781 of {'Idris.Prelude.Types.Left', E2194} -> (fun (V2782) -> {'Idris.Prelude.Types.Left', V2782} end(E2194)); {'Idris.Prelude.Types.Right', E2195} -> (fun (V2783) -> begin (V2785 = (('un--getNArgs'(V0, V2776, V2783, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2784) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2784)) end, V2771))))(V2772))), case V2785 of {'Idris.Prelude.Types.Left', E2196} -> (fun (V2786) -> {'Idris.Prelude.Types.Left', V2786} end(E2196)); {'Idris.Prelude.Types.Right', E2197} -> (fun (V2787) -> case V2787 of {'Idris.Compiler.CompileExpr.User', E2198, E2199} -> (fun (V2788, V2789) -> begin (V2791 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2790) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2776, V2790)) end, V2789, []))(V2772))), case V2791 of {'Idris.Prelude.Types.Left', E2200} -> (fun (V2792) -> {'Idris.Prelude.Types.Left', V2792} end(E2200)); {'Idris.Prelude.Types.Right', E2201} -> (fun (V2793) -> begin (V2795 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2794) -> ('un--nfToCFType'(V0, V2767, V2, V2794)) end, V2793, []))(V2772))), case V2795 of {'Idris.Prelude.Types.Left', E2202} -> (fun (V2796) -> {'Idris.Prelude.Types.Left', V2796} end(E2202)); {'Idris.Prelude.Types.Right', E2203} -> (fun (V2797) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2783, V2797}} end(E2203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2198, E2199)); {'Idris.Compiler.CompileExpr.Struct', E2204, E2205} -> (fun (V2798, V2799) -> begin (V2810 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2800) -> case V2800 of {'Idris.Builtin.MkPair', E2206, E2207} -> (fun (V2801, V2802) -> fun (V2803) -> begin (V2804 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2776, V2802))(V2803))), case V2804 of {'Idris.Prelude.Types.Left', E2208} -> (fun (V2805) -> {'Idris.Prelude.Types.Left', V2805} end(E2208)); {'Idris.Prelude.Types.Right', E2209} -> (fun (V2806) -> begin (V2807 = (('un--nfToCFType'(V0, V2767, 0, V2806))(V2803))), case V2807 of {'Idris.Prelude.Types.Left', E2210} -> (fun (V2808) -> {'Idris.Prelude.Types.Left', V2808} end(E2210)); {'Idris.Prelude.Types.Right', E2211} -> (fun (V2809) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2801, V2809}} end(E2211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2206, E2207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2799, []))(V2772))), case V2810 of {'Idris.Prelude.Types.Left', E2212} -> (fun (V2811) -> {'Idris.Prelude.Types.Left', V2811} end(E2212)); {'Idris.Prelude.Types.Right', E2213} -> (fun (V2812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2798, V2812}} end(E2213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2204, E2205)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2214} -> (fun (V2813) -> begin (V2814 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2776, V2813))(V2772))), case V2814 of {'Idris.Prelude.Types.Left', E2215} -> (fun (V2815) -> {'Idris.Prelude.Types.Left', V2815} end(E2215)); {'Idris.Prelude.Types.Right', E2216} -> (fun (V2816) -> begin (V2817 = (('un--nfToCFType'(V0, V2767, V2, V2816))(V2772))), case V2817 of {'Idris.Prelude.Types.Left', E2217} -> (fun (V2818) -> {'Idris.Prelude.Types.Left', V2818} end(E2217)); {'Idris.Prelude.Types.Right', E2218} -> (fun (V2819) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2819}} end(E2218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2187, E2188, E2189, E2190, E2191)); {'Idris.Core.Value.NType', E2219} -> (fun (V2820) -> fun (V2821) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2219)); {'Idris.Core.Value.NErased', E2220, E2221} -> (fun (V2822, V2823) -> fun (V2824) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2220, E2221)); _ -> fun (V2825) -> begin (V2827 = begin (V2826 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2826} end), case V2827 of {'Idris.Prelude.Types.Left', E2181} -> (fun (V2828) -> {'Idris.Prelude.Types.Left', V2828} end(E2181)); {'Idris.Prelude.Types.Right', E2182} -> (fun (V2829) -> begin (V2830 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2829, {'Idris.Core.Env.Nil'}, V3, V2825))), case V2830 of {'Idris.Prelude.Types.Left', E2183} -> (fun (V2831) -> {'Idris.Prelude.Types.Left', V2831} end(E2183)); {'Idris.Prelude.Types.Right', E2184} -> (fun (V2832) -> begin (V2837 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2833) -> fun (V2834) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2833, V2834)) end end, fun (V2835) -> fun (V2836) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2835, V2836)) end end}, V2832, V2825))), case V2837 of {'Idris.Prelude.Types.Left', E2185} -> (fun (V2838) -> {'Idris.Prelude.Types.Left', V2838} end(E2185)); {'Idris.Prelude.Types.Right', E2186} -> (fun (V2839) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2839))))}, V2825)) end(E2186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E2048, E2049, E2050, E2051, E2052} -> (fun (V2840, V2841, V2842, V2843, V2844) -> fun (V2845) -> begin (V2847 = begin (V2846 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2846} end), case V2847 of {'Idris.Prelude.Types.Left', E2053} -> (fun (V2848) -> {'Idris.Prelude.Types.Left', V2848} end(E2053)); {'Idris.Prelude.Types.Right', E2054} -> (fun (V2849) -> begin (V2854 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2850) -> fun (V2851) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2850, V2851)) end end, fun (V2852) -> fun (V2853) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2852, V2853)) end end}, V2841, V2845))), case V2854 of {'Idris.Prelude.Types.Left', E2055} -> (fun (V2855) -> {'Idris.Prelude.Types.Left', V2855} end(E2055)); {'Idris.Prelude.Types.Right', E2056} -> (fun (V2856) -> begin (V2858 = (('un--getNArgs'(V0, V2849, V2856, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2857) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2857)) end, V2844))))(V2845))), case V2858 of {'Idris.Prelude.Types.Left', E2057} -> (fun (V2859) -> {'Idris.Prelude.Types.Left', V2859} end(E2057)); {'Idris.Prelude.Types.Right', E2058} -> (fun (V2860) -> case V2860 of {'Idris.Compiler.CompileExpr.User', E2059, E2060} -> (fun (V2861, V2862) -> begin (V2864 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2863) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2849, V2863)) end, V2862, []))(V2845))), case V2864 of {'Idris.Prelude.Types.Left', E2061} -> (fun (V2865) -> {'Idris.Prelude.Types.Left', V2865} end(E2061)); {'Idris.Prelude.Types.Right', E2062} -> (fun (V2866) -> begin (V2868 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2867) -> ('un--nfToCFType'(V0, V2840, V2, V2867)) end, V2866, []))(V2845))), case V2868 of {'Idris.Prelude.Types.Left', E2063} -> (fun (V2869) -> {'Idris.Prelude.Types.Left', V2869} end(E2063)); {'Idris.Prelude.Types.Right', E2064} -> (fun (V2870) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2856, V2870}} end(E2064)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2062)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2059, E2060)); {'Idris.Compiler.CompileExpr.Struct', E2065, E2066} -> (fun (V2871, V2872) -> begin (V2883 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2873) -> case V2873 of {'Idris.Builtin.MkPair', E2067, E2068} -> (fun (V2874, V2875) -> fun (V2876) -> begin (V2877 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2849, V2875))(V2876))), case V2877 of {'Idris.Prelude.Types.Left', E2069} -> (fun (V2878) -> {'Idris.Prelude.Types.Left', V2878} end(E2069)); {'Idris.Prelude.Types.Right', E2070} -> (fun (V2879) -> begin (V2880 = (('un--nfToCFType'(V0, V2840, 0, V2879))(V2876))), case V2880 of {'Idris.Prelude.Types.Left', E2071} -> (fun (V2881) -> {'Idris.Prelude.Types.Left', V2881} end(E2071)); {'Idris.Prelude.Types.Right', E2072} -> (fun (V2882) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2874, V2882}} end(E2072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2067, E2068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2872, []))(V2845))), case V2883 of {'Idris.Prelude.Types.Left', E2073} -> (fun (V2884) -> {'Idris.Prelude.Types.Left', V2884} end(E2073)); {'Idris.Prelude.Types.Right', E2074} -> (fun (V2885) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2871, V2885}} end(E2074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2065, E2066)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2075} -> (fun (V2886) -> begin (V2887 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2849, V2886))(V2845))), case V2887 of {'Idris.Prelude.Types.Left', E2076} -> (fun (V2888) -> {'Idris.Prelude.Types.Left', V2888} end(E2076)); {'Idris.Prelude.Types.Right', E2077} -> (fun (V2889) -> begin (V2890 = (('un--nfToCFType'(V0, V2840, V2, V2889))(V2845))), case V2890 of {'Idris.Prelude.Types.Left', E2078} -> (fun (V2891) -> {'Idris.Prelude.Types.Left', V2891} end(E2078)); {'Idris.Prelude.Types.Right', E2079} -> (fun (V2892) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2892}} end(E2079)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2077)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2075)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2058)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2056)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2054)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2048, E2049, E2050, E2051, E2052)); {'Idris.Core.Value.NType', E2080} -> (fun (V2893) -> fun (V2894) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2080)); {'Idris.Core.Value.NErased', E2081, E2082} -> (fun (V2895, V2896) -> fun (V2897) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2081, E2082)); _ -> fun (V2898) -> begin (V2900 = begin (V2899 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2899} end), case V2900 of {'Idris.Prelude.Types.Left', E2042} -> (fun (V2901) -> {'Idris.Prelude.Types.Left', V2901} end(E2042)); {'Idris.Prelude.Types.Right', E2043} -> (fun (V2902) -> begin (V2903 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2902, {'Idris.Core.Env.Nil'}, V3, V2898))), case V2903 of {'Idris.Prelude.Types.Left', E2044} -> (fun (V2904) -> {'Idris.Prelude.Types.Left', V2904} end(E2044)); {'Idris.Prelude.Types.Right', E2045} -> (fun (V2905) -> begin (V2910 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2906) -> fun (V2907) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V2906, V2907)) end end, fun (V2908) -> fun (V2909) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V2908, V2909)) end end}, V2905, V2898))), case V2910 of {'Idris.Prelude.Types.Left', E2046} -> (fun (V2911) -> {'Idris.Prelude.Types.Left', V2911} end(E2046)); {'Idris.Prelude.Types.Right', E2047} -> (fun (V2912) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2912))))}, V2898)) end(E2047)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2045)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2043)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2040, E2041)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E1938, E1939, E1940, E1941} -> (fun (V2913, V2914, V2915, V2916) -> case V2915 of {'Idris.Core.TT.Pi', E1983, E1984, E1985, E1986} -> (fun (V2917, V2918, V2919, V2920) -> fun (V2921) -> begin (V2923 = begin (V2922 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2922} end), case V2923 of {'Idris.Prelude.Types.Left', E1987} -> (fun (V2924) -> {'Idris.Prelude.Types.Left', V2924} end(E1987)); {'Idris.Prelude.Types.Right', E1988} -> (fun (V2925) -> begin (V2926 = (('un--nfToCFType'(V0, V2913, 1, V2920))(V2921))), case V2926 of {'Idris.Prelude.Types.Left', E1989} -> (fun (V2927) -> {'Idris.Prelude.Types.Left', V2927} end(E1989)); {'Idris.Prelude.Types.Right', E1990} -> (fun (V2928) -> begin (V2929 = (((V2916(V2925))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2913, 1}))))(V2921))), case V2929 of {'Idris.Prelude.Types.Left', E1991} -> (fun (V2930) -> {'Idris.Prelude.Types.Left', V2930} end(E1991)); {'Idris.Prelude.Types.Right', E1992} -> (fun (V2931) -> begin (V2932 = (('un--nfToCFType'(V0, V2913, 1, V2931))(V2921))), case V2932 of {'Idris.Prelude.Types.Left', E1993} -> (fun (V2933) -> {'Idris.Prelude.Types.Left', V2933} end(E1993)); {'Idris.Prelude.Types.Right', E1994} -> (fun (V2934) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2928, V2934}} end(E1994)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1992)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1983, E1984, E1985, E1986)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1948, E1949, E1950, E1951, E1952} -> (fun (V2935, V2936, V2937, V2938, V2939) -> fun (V2940) -> begin (V2942 = begin (V2941 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2941} end), case V2942 of {'Idris.Prelude.Types.Left', E1953} -> (fun (V2943) -> {'Idris.Prelude.Types.Left', V2943} end(E1953)); {'Idris.Prelude.Types.Right', E1954} -> (fun (V2944) -> begin (V2949 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2945) -> fun (V2946) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2945, V2946)) end end, fun (V2947) -> fun (V2948) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2947, V2948)) end end}, V2936, V2940))), case V2949 of {'Idris.Prelude.Types.Left', E1955} -> (fun (V2950) -> {'Idris.Prelude.Types.Left', V2950} end(E1955)); {'Idris.Prelude.Types.Right', E1956} -> (fun (V2951) -> begin (V2953 = (('un--getNArgs'(V0, V2944, V2951, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V2952) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2952)) end, V2939))))(V2940))), case V2953 of {'Idris.Prelude.Types.Left', E1957} -> (fun (V2954) -> {'Idris.Prelude.Types.Left', V2954} end(E1957)); {'Idris.Prelude.Types.Right', E1958} -> (fun (V2955) -> case V2955 of {'Idris.Compiler.CompileExpr.User', E1959, E1960} -> (fun (V2956, V2957) -> begin (V2959 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2958) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2944, V2958)) end, V2957, []))(V2940))), case V2959 of {'Idris.Prelude.Types.Left', E1961} -> (fun (V2960) -> {'Idris.Prelude.Types.Left', V2960} end(E1961)); {'Idris.Prelude.Types.Right', E1962} -> (fun (V2961) -> begin (V2963 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2962) -> ('un--nfToCFType'(V0, V2935, V2, V2962)) end, V2961, []))(V2940))), case V2963 of {'Idris.Prelude.Types.Left', E1963} -> (fun (V2964) -> {'Idris.Prelude.Types.Left', V2964} end(E1963)); {'Idris.Prelude.Types.Right', E1964} -> (fun (V2965) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2951, V2965}} end(E1964)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1962)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1959, E1960)); {'Idris.Compiler.CompileExpr.Struct', E1965, E1966} -> (fun (V2966, V2967) -> begin (V2978 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V2968) -> case V2968 of {'Idris.Builtin.MkPair', E1967, E1968} -> (fun (V2969, V2970) -> fun (V2971) -> begin (V2972 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2944, V2970))(V2971))), case V2972 of {'Idris.Prelude.Types.Left', E1969} -> (fun (V2973) -> {'Idris.Prelude.Types.Left', V2973} end(E1969)); {'Idris.Prelude.Types.Right', E1970} -> (fun (V2974) -> begin (V2975 = (('un--nfToCFType'(V0, V2935, 0, V2974))(V2971))), case V2975 of {'Idris.Prelude.Types.Left', E1971} -> (fun (V2976) -> {'Idris.Prelude.Types.Left', V2976} end(E1971)); {'Idris.Prelude.Types.Right', E1972} -> (fun (V2977) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2969, V2977}} end(E1972)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1970)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1967, E1968)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V2967, []))(V2940))), case V2978 of {'Idris.Prelude.Types.Left', E1973} -> (fun (V2979) -> {'Idris.Prelude.Types.Left', V2979} end(E1973)); {'Idris.Prelude.Types.Right', E1974} -> (fun (V2980) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2966, V2980}} end(E1974)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1965, E1966)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1975} -> (fun (V2981) -> begin (V2982 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2944, V2981))(V2940))), case V2982 of {'Idris.Prelude.Types.Left', E1976} -> (fun (V2983) -> {'Idris.Prelude.Types.Left', V2983} end(E1976)); {'Idris.Prelude.Types.Right', E1977} -> (fun (V2984) -> begin (V2985 = (('un--nfToCFType'(V0, V2935, V2, V2984))(V2940))), case V2985 of {'Idris.Prelude.Types.Left', E1978} -> (fun (V2986) -> {'Idris.Prelude.Types.Left', V2986} end(E1978)); {'Idris.Prelude.Types.Right', E1979} -> (fun (V2987) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2987}} end(E1979)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1977)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1975)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1948, E1949, E1950, E1951, E1952)); {'Idris.Core.Value.NType', E1980} -> (fun (V2988) -> fun (V2989) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1980)); {'Idris.Core.Value.NErased', E1981, E1982} -> (fun (V2990, V2991) -> fun (V2992) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1981, E1982)); _ -> fun (V2993) -> begin (V2995 = begin (V2994 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2994} end), case V2995 of {'Idris.Prelude.Types.Left', E1942} -> (fun (V2996) -> {'Idris.Prelude.Types.Left', V2996} end(E1942)); {'Idris.Prelude.Types.Right', E1943} -> (fun (V2997) -> begin (V2998 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2997, {'Idris.Core.Env.Nil'}, V3, V2993))), case V2998 of {'Idris.Prelude.Types.Left', E1944} -> (fun (V2999) -> {'Idris.Prelude.Types.Left', V2999} end(E1944)); {'Idris.Prelude.Types.Right', E1945} -> (fun (V3000) -> begin (V3005 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3001) -> fun (V3002) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3001, V3002)) end end, fun (V3003) -> fun (V3004) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3003, V3004)) end end}, V3000, V2993))), case V3005 of {'Idris.Prelude.Types.Left', E1946} -> (fun (V3006) -> {'Idris.Prelude.Types.Left', V3006} end(E1946)); {'Idris.Prelude.Types.Right', E1947} -> (fun (V3007) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3007))))}, V2993)) end(E1947)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1945)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1943)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1938, E1939, E1940, E1941)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1903, E1904, E1905, E1906, E1907} -> (fun (V3008, V3009, V3010, V3011, V3012) -> fun (V3013) -> begin (V3015 = begin (V3014 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3014} end), case V3015 of {'Idris.Prelude.Types.Left', E1908} -> (fun (V3016) -> {'Idris.Prelude.Types.Left', V3016} end(E1908)); {'Idris.Prelude.Types.Right', E1909} -> (fun (V3017) -> begin (V3022 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3018) -> fun (V3019) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3018, V3019)) end end, fun (V3020) -> fun (V3021) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3020, V3021)) end end}, V3009, V3013))), case V3022 of {'Idris.Prelude.Types.Left', E1910} -> (fun (V3023) -> {'Idris.Prelude.Types.Left', V3023} end(E1910)); {'Idris.Prelude.Types.Right', E1911} -> (fun (V3024) -> begin (V3026 = (('un--getNArgs'(V0, V3017, V3024, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3025) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3025)) end, V3012))))(V3013))), case V3026 of {'Idris.Prelude.Types.Left', E1912} -> (fun (V3027) -> {'Idris.Prelude.Types.Left', V3027} end(E1912)); {'Idris.Prelude.Types.Right', E1913} -> (fun (V3028) -> case V3028 of {'Idris.Compiler.CompileExpr.User', E1914, E1915} -> (fun (V3029, V3030) -> begin (V3032 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3031) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3017, V3031)) end, V3030, []))(V3013))), case V3032 of {'Idris.Prelude.Types.Left', E1916} -> (fun (V3033) -> {'Idris.Prelude.Types.Left', V3033} end(E1916)); {'Idris.Prelude.Types.Right', E1917} -> (fun (V3034) -> begin (V3036 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3035) -> ('un--nfToCFType'(V0, V3008, V2, V3035)) end, V3034, []))(V3013))), case V3036 of {'Idris.Prelude.Types.Left', E1918} -> (fun (V3037) -> {'Idris.Prelude.Types.Left', V3037} end(E1918)); {'Idris.Prelude.Types.Right', E1919} -> (fun (V3038) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3024, V3038}} end(E1919)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1917)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1914, E1915)); {'Idris.Compiler.CompileExpr.Struct', E1920, E1921} -> (fun (V3039, V3040) -> begin (V3051 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3041) -> case V3041 of {'Idris.Builtin.MkPair', E1922, E1923} -> (fun (V3042, V3043) -> fun (V3044) -> begin (V3045 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3017, V3043))(V3044))), case V3045 of {'Idris.Prelude.Types.Left', E1924} -> (fun (V3046) -> {'Idris.Prelude.Types.Left', V3046} end(E1924)); {'Idris.Prelude.Types.Right', E1925} -> (fun (V3047) -> begin (V3048 = (('un--nfToCFType'(V0, V3008, 0, V3047))(V3044))), case V3048 of {'Idris.Prelude.Types.Left', E1926} -> (fun (V3049) -> {'Idris.Prelude.Types.Left', V3049} end(E1926)); {'Idris.Prelude.Types.Right', E1927} -> (fun (V3050) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3042, V3050}} end(E1927)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1925)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1922, E1923)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3040, []))(V3013))), case V3051 of {'Idris.Prelude.Types.Left', E1928} -> (fun (V3052) -> {'Idris.Prelude.Types.Left', V3052} end(E1928)); {'Idris.Prelude.Types.Right', E1929} -> (fun (V3053) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3039, V3053}} end(E1929)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1920, E1921)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1930} -> (fun (V3054) -> begin (V3055 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3017, V3054))(V3013))), case V3055 of {'Idris.Prelude.Types.Left', E1931} -> (fun (V3056) -> {'Idris.Prelude.Types.Left', V3056} end(E1931)); {'Idris.Prelude.Types.Right', E1932} -> (fun (V3057) -> begin (V3058 = (('un--nfToCFType'(V0, V3008, V2, V3057))(V3013))), case V3058 of {'Idris.Prelude.Types.Left', E1933} -> (fun (V3059) -> {'Idris.Prelude.Types.Left', V3059} end(E1933)); {'Idris.Prelude.Types.Right', E1934} -> (fun (V3060) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3060}} end(E1934)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1932)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1930)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1913)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1911)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1909)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1903, E1904, E1905, E1906, E1907)); {'Idris.Core.Value.NType', E1935} -> (fun (V3061) -> fun (V3062) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1935)); {'Idris.Core.Value.NErased', E1936, E1937} -> (fun (V3063, V3064) -> fun (V3065) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1936, E1937)); _ -> fun (V3066) -> begin (V3068 = begin (V3067 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3067} end), case V3068 of {'Idris.Prelude.Types.Left', E1897} -> (fun (V3069) -> {'Idris.Prelude.Types.Left', V3069} end(E1897)); {'Idris.Prelude.Types.Right', E1898} -> (fun (V3070) -> begin (V3071 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3070, {'Idris.Core.Env.Nil'}, V3, V3066))), case V3071 of {'Idris.Prelude.Types.Left', E1899} -> (fun (V3072) -> {'Idris.Prelude.Types.Left', V3072} end(E1899)); {'Idris.Prelude.Types.Right', E1900} -> (fun (V3073) -> begin (V3078 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3074) -> fun (V3075) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3074, V3075)) end end, fun (V3076) -> fun (V3077) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3076, V3077)) end end}, V3073, V3066))), case V3078 of {'Idris.Prelude.Types.Left', E1901} -> (fun (V3079) -> {'Idris.Prelude.Types.Left', V3079} end(E1901)); {'Idris.Prelude.Types.Right', E1902} -> (fun (V3080) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3080))))}, V3066)) end(E1902)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1900)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1898)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E2036, E2037, E2038, E2039} -> (fun (V3081, V3082, V3083, V3084) -> fun (V3085) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V3081, <<"Function types not allowed in a foreign struct"/utf8>>}, V3085)) end end(E2036, E2037, E2038, E2039)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2001, E2002, E2003, E2004, E2005} -> (fun (V3086, V3087, V3088, V3089, V3090) -> fun (V3091) -> begin (V3093 = begin (V3092 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3092} end), case V3093 of {'Idris.Prelude.Types.Left', E2006} -> (fun (V3094) -> {'Idris.Prelude.Types.Left', V3094} end(E2006)); {'Idris.Prelude.Types.Right', E2007} -> (fun (V3095) -> begin (V3100 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3096) -> fun (V3097) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3096, V3097)) end end, fun (V3098) -> fun (V3099) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3098, V3099)) end end}, V3087, V3091))), case V3100 of {'Idris.Prelude.Types.Left', E2008} -> (fun (V3101) -> {'Idris.Prelude.Types.Left', V3101} end(E2008)); {'Idris.Prelude.Types.Right', E2009} -> (fun (V3102) -> begin (V3104 = (('un--getNArgs'(V0, V3095, V3102, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3103) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3103)) end, V3090))))(V3091))), case V3104 of {'Idris.Prelude.Types.Left', E2010} -> (fun (V3105) -> {'Idris.Prelude.Types.Left', V3105} end(E2010)); {'Idris.Prelude.Types.Right', E2011} -> (fun (V3106) -> case V3106 of {'Idris.Compiler.CompileExpr.User', E2012, E2013} -> (fun (V3107, V3108) -> begin (V3110 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3109) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3095, V3109)) end, V3108, []))(V3091))), case V3110 of {'Idris.Prelude.Types.Left', E2014} -> (fun (V3111) -> {'Idris.Prelude.Types.Left', V3111} end(E2014)); {'Idris.Prelude.Types.Right', E2015} -> (fun (V3112) -> begin (V3114 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3113) -> ('un--nfToCFType'(V0, V3086, V2, V3113)) end, V3112, []))(V3091))), case V3114 of {'Idris.Prelude.Types.Left', E2016} -> (fun (V3115) -> {'Idris.Prelude.Types.Left', V3115} end(E2016)); {'Idris.Prelude.Types.Right', E2017} -> (fun (V3116) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3102, V3116}} end(E2017)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2015)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2012, E2013)); {'Idris.Compiler.CompileExpr.Struct', E2018, E2019} -> (fun (V3117, V3118) -> begin (V3129 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3119) -> case V3119 of {'Idris.Builtin.MkPair', E2020, E2021} -> (fun (V3120, V3121) -> fun (V3122) -> begin (V3123 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3095, V3121))(V3122))), case V3123 of {'Idris.Prelude.Types.Left', E2022} -> (fun (V3124) -> {'Idris.Prelude.Types.Left', V3124} end(E2022)); {'Idris.Prelude.Types.Right', E2023} -> (fun (V3125) -> begin (V3126 = (('un--nfToCFType'(V0, V3086, 0, V3125))(V3122))), case V3126 of {'Idris.Prelude.Types.Left', E2024} -> (fun (V3127) -> {'Idris.Prelude.Types.Left', V3127} end(E2024)); {'Idris.Prelude.Types.Right', E2025} -> (fun (V3128) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3120, V3128}} end(E2025)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2020, E2021)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3118, []))(V3091))), case V3129 of {'Idris.Prelude.Types.Left', E2026} -> (fun (V3130) -> {'Idris.Prelude.Types.Left', V3130} end(E2026)); {'Idris.Prelude.Types.Right', E2027} -> (fun (V3131) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3117, V3131}} end(E2027)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2018, E2019)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2028} -> (fun (V3132) -> begin (V3133 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3095, V3132))(V3091))), case V3133 of {'Idris.Prelude.Types.Left', E2029} -> (fun (V3134) -> {'Idris.Prelude.Types.Left', V3134} end(E2029)); {'Idris.Prelude.Types.Right', E2030} -> (fun (V3135) -> begin (V3136 = (('un--nfToCFType'(V0, V3086, V2, V3135))(V3091))), case V3136 of {'Idris.Prelude.Types.Left', E2031} -> (fun (V3137) -> {'Idris.Prelude.Types.Left', V3137} end(E2031)); {'Idris.Prelude.Types.Right', E2032} -> (fun (V3138) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3138}} end(E2032)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2030)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2028)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2011)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2009)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2007)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2001, E2002, E2003, E2004, E2005)); {'Idris.Core.Value.NType', E2033} -> (fun (V3139) -> fun (V3140) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E2033)); {'Idris.Core.Value.NErased', E2034, E2035} -> (fun (V3141, V3142) -> fun (V3143) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E2034, E2035)); _ -> fun (V3144) -> begin (V3146 = begin (V3145 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3145} end), case V3146 of {'Idris.Prelude.Types.Left', E1995} -> (fun (V3147) -> {'Idris.Prelude.Types.Left', V3147} end(E1995)); {'Idris.Prelude.Types.Right', E1996} -> (fun (V3148) -> begin (V3149 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3148, {'Idris.Core.Env.Nil'}, V3, V3144))), case V3149 of {'Idris.Prelude.Types.Left', E1997} -> (fun (V3150) -> {'Idris.Prelude.Types.Left', V3150} end(E1997)); {'Idris.Prelude.Types.Right', E1998} -> (fun (V3151) -> begin (V3156 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3152) -> fun (V3153) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3152, V3153)) end end, fun (V3154) -> fun (V3155) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3154, V3155)) end end}, V3151, V3144))), case V3156 of {'Idris.Prelude.Types.Left', E1999} -> (fun (V3157) -> {'Idris.Prelude.Types.Left', V3157} end(E1999)); {'Idris.Prelude.Types.Right', E2000} -> (fun (V3158) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3158))))}, V3144)) end(E2000)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1998)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1996)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E1862, E1863, E1864, E1865, E1866} -> (fun (V3159, V3160, V3161, V3162, V3163) -> fun (V3164) -> begin (V3166 = begin (V3165 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3165} end), case V3166 of {'Idris.Prelude.Types.Left', E1867} -> (fun (V3167) -> {'Idris.Prelude.Types.Left', V3167} end(E1867)); {'Idris.Prelude.Types.Right', E1868} -> (fun (V3168) -> begin (V3173 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3169) -> fun (V3170) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3169, V3170)) end end, fun (V3171) -> fun (V3172) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3171, V3172)) end end}, V3160, V3164))), case V3173 of {'Idris.Prelude.Types.Left', E1869} -> (fun (V3174) -> {'Idris.Prelude.Types.Left', V3174} end(E1869)); {'Idris.Prelude.Types.Right', E1870} -> (fun (V3175) -> begin (V3177 = (('un--getNArgs'(V0, V3168, V3175, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3176) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3176)) end, V3163))))(V3164))), case V3177 of {'Idris.Prelude.Types.Left', E1871} -> (fun (V3178) -> {'Idris.Prelude.Types.Left', V3178} end(E1871)); {'Idris.Prelude.Types.Right', E1872} -> (fun (V3179) -> case V3179 of {'Idris.Compiler.CompileExpr.User', E1873, E1874} -> (fun (V3180, V3181) -> begin (V3183 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3182) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3168, V3182)) end, V3181, []))(V3164))), case V3183 of {'Idris.Prelude.Types.Left', E1875} -> (fun (V3184) -> {'Idris.Prelude.Types.Left', V3184} end(E1875)); {'Idris.Prelude.Types.Right', E1876} -> (fun (V3185) -> begin (V3187 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3186) -> ('un--nfToCFType'(V0, V3159, V2, V3186)) end, V3185, []))(V3164))), case V3187 of {'Idris.Prelude.Types.Left', E1877} -> (fun (V3188) -> {'Idris.Prelude.Types.Left', V3188} end(E1877)); {'Idris.Prelude.Types.Right', E1878} -> (fun (V3189) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3175, V3189}} end(E1878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1873, E1874)); {'Idris.Compiler.CompileExpr.Struct', E1879, E1880} -> (fun (V3190, V3191) -> begin (V3202 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3192) -> case V3192 of {'Idris.Builtin.MkPair', E1881, E1882} -> (fun (V3193, V3194) -> fun (V3195) -> begin (V3196 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3168, V3194))(V3195))), case V3196 of {'Idris.Prelude.Types.Left', E1883} -> (fun (V3197) -> {'Idris.Prelude.Types.Left', V3197} end(E1883)); {'Idris.Prelude.Types.Right', E1884} -> (fun (V3198) -> begin (V3199 = (('un--nfToCFType'(V0, V3159, 0, V3198))(V3195))), case V3199 of {'Idris.Prelude.Types.Left', E1885} -> (fun (V3200) -> {'Idris.Prelude.Types.Left', V3200} end(E1885)); {'Idris.Prelude.Types.Right', E1886} -> (fun (V3201) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3193, V3201}} end(E1886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1881, E1882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3191, []))(V3164))), case V3202 of {'Idris.Prelude.Types.Left', E1887} -> (fun (V3203) -> {'Idris.Prelude.Types.Left', V3203} end(E1887)); {'Idris.Prelude.Types.Right', E1888} -> (fun (V3204) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3190, V3204}} end(E1888)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1879, E1880)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1889} -> (fun (V3205) -> begin (V3206 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3168, V3205))(V3164))), case V3206 of {'Idris.Prelude.Types.Left', E1890} -> (fun (V3207) -> {'Idris.Prelude.Types.Left', V3207} end(E1890)); {'Idris.Prelude.Types.Right', E1891} -> (fun (V3208) -> begin (V3209 = (('un--nfToCFType'(V0, V3159, V2, V3208))(V3164))), case V3209 of {'Idris.Prelude.Types.Left', E1892} -> (fun (V3210) -> {'Idris.Prelude.Types.Left', V3210} end(E1892)); {'Idris.Prelude.Types.Right', E1893} -> (fun (V3211) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3211}} end(E1893)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1891)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1889)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1872)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1870)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1868)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1862, E1863, E1864, E1865, E1866)); {'Idris.Core.Value.NType', E1894} -> (fun (V3212) -> fun (V3213) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1894)); {'Idris.Core.Value.NErased', E1895, E1896} -> (fun (V3214, V3215) -> fun (V3216) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1895, E1896)); _ -> fun (V3217) -> begin (V3219 = begin (V3218 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3218} end), case V3219 of {'Idris.Prelude.Types.Left', E1856} -> (fun (V3220) -> {'Idris.Prelude.Types.Left', V3220} end(E1856)); {'Idris.Prelude.Types.Right', E1857} -> (fun (V3221) -> begin (V3222 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3221, {'Idris.Core.Env.Nil'}, V3, V3217))), case V3222 of {'Idris.Prelude.Types.Left', E1858} -> (fun (V3223) -> {'Idris.Prelude.Types.Left', V3223} end(E1858)); {'Idris.Prelude.Types.Right', E1859} -> (fun (V3224) -> begin (V3229 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3225) -> fun (V3226) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3225, V3226)) end end, fun (V3227) -> fun (V3228) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3227, V3228)) end end}, V3224, V3217))), case V3229 of {'Idris.Prelude.Types.Left', E1860} -> (fun (V3230) -> {'Idris.Prelude.Types.Left', V3230} end(E1860)); {'Idris.Prelude.Types.Right', E1861} -> (fun (V3231) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3231))))}, V3217)) end(E1861)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1859)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1857)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end end(E1854, E1855)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NPrimVal', E740, E741} -> (fun (V3232, V3233) -> case V3233 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V3234) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFString'}} end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E926, E927} -> (fun (V3235, V3236) -> case V3236 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V3237) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V3238) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V3239) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E1010, E1011, E1012, E1013} -> (fun (V3240, V3241, V3242, V3243) -> case V3242 of {'Idris.Core.TT.Pi', E1055, E1056, E1057, E1058} -> (fun (V3244, V3245, V3246, V3247) -> fun (V3248) -> begin (V3250 = begin (V3249 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3249} end), case V3250 of {'Idris.Prelude.Types.Left', E1059} -> (fun (V3251) -> {'Idris.Prelude.Types.Left', V3251} end(E1059)); {'Idris.Prelude.Types.Right', E1060} -> (fun (V3252) -> begin (V3253 = (('un--nfToCFType'(V0, V3240, 1, V3247))(V3248))), case V3253 of {'Idris.Prelude.Types.Left', E1061} -> (fun (V3254) -> {'Idris.Prelude.Types.Left', V3254} end(E1061)); {'Idris.Prelude.Types.Right', E1062} -> (fun (V3255) -> begin (V3256 = (((V3243(V3252))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3240, 1}))))(V3248))), case V3256 of {'Idris.Prelude.Types.Left', E1063} -> (fun (V3257) -> {'Idris.Prelude.Types.Left', V3257} end(E1063)); {'Idris.Prelude.Types.Right', E1064} -> (fun (V3258) -> begin (V3259 = (('un--nfToCFType'(V0, V3240, 1, V3258))(V3248))), case V3259 of {'Idris.Prelude.Types.Left', E1065} -> (fun (V3260) -> {'Idris.Prelude.Types.Left', V3260} end(E1065)); {'Idris.Prelude.Types.Right', E1066} -> (fun (V3261) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3255, V3261}} end(E1066)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1064)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1062)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1060)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1055, E1056, E1057, E1058)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1020, E1021, E1022, E1023, E1024} -> (fun (V3262, V3263, V3264, V3265, V3266) -> fun (V3267) -> begin (V3269 = begin (V3268 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3268} end), case V3269 of {'Idris.Prelude.Types.Left', E1025} -> (fun (V3270) -> {'Idris.Prelude.Types.Left', V3270} end(E1025)); {'Idris.Prelude.Types.Right', E1026} -> (fun (V3271) -> begin (V3276 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3272) -> fun (V3273) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3272, V3273)) end end, fun (V3274) -> fun (V3275) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3274, V3275)) end end}, V3263, V3267))), case V3276 of {'Idris.Prelude.Types.Left', E1027} -> (fun (V3277) -> {'Idris.Prelude.Types.Left', V3277} end(E1027)); {'Idris.Prelude.Types.Right', E1028} -> (fun (V3278) -> begin (V3280 = (('un--getNArgs'(V0, V3271, V3278, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3279) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3279)) end, V3266))))(V3267))), case V3280 of {'Idris.Prelude.Types.Left', E1029} -> (fun (V3281) -> {'Idris.Prelude.Types.Left', V3281} end(E1029)); {'Idris.Prelude.Types.Right', E1030} -> (fun (V3282) -> case V3282 of {'Idris.Compiler.CompileExpr.User', E1031, E1032} -> (fun (V3283, V3284) -> begin (V3286 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3285) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3271, V3285)) end, V3284, []))(V3267))), case V3286 of {'Idris.Prelude.Types.Left', E1033} -> (fun (V3287) -> {'Idris.Prelude.Types.Left', V3287} end(E1033)); {'Idris.Prelude.Types.Right', E1034} -> (fun (V3288) -> begin (V3290 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3289) -> ('un--nfToCFType'(V0, V3262, V2, V3289)) end, V3288, []))(V3267))), case V3290 of {'Idris.Prelude.Types.Left', E1035} -> (fun (V3291) -> {'Idris.Prelude.Types.Left', V3291} end(E1035)); {'Idris.Prelude.Types.Right', E1036} -> (fun (V3292) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3278, V3292}} end(E1036)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1034)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1031, E1032)); {'Idris.Compiler.CompileExpr.Struct', E1037, E1038} -> (fun (V3293, V3294) -> begin (V3305 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3295) -> case V3295 of {'Idris.Builtin.MkPair', E1039, E1040} -> (fun (V3296, V3297) -> fun (V3298) -> begin (V3299 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3271, V3297))(V3298))), case V3299 of {'Idris.Prelude.Types.Left', E1041} -> (fun (V3300) -> {'Idris.Prelude.Types.Left', V3300} end(E1041)); {'Idris.Prelude.Types.Right', E1042} -> (fun (V3301) -> begin (V3302 = (('un--nfToCFType'(V0, V3262, 0, V3301))(V3298))), case V3302 of {'Idris.Prelude.Types.Left', E1043} -> (fun (V3303) -> {'Idris.Prelude.Types.Left', V3303} end(E1043)); {'Idris.Prelude.Types.Right', E1044} -> (fun (V3304) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3296, V3304}} end(E1044)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1042)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1039, E1040)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3294, []))(V3267))), case V3305 of {'Idris.Prelude.Types.Left', E1045} -> (fun (V3306) -> {'Idris.Prelude.Types.Left', V3306} end(E1045)); {'Idris.Prelude.Types.Right', E1046} -> (fun (V3307) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3293, V3307}} end(E1046)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1037, E1038)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1047} -> (fun (V3308) -> begin (V3309 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3271, V3308))(V3267))), case V3309 of {'Idris.Prelude.Types.Left', E1048} -> (fun (V3310) -> {'Idris.Prelude.Types.Left', V3310} end(E1048)); {'Idris.Prelude.Types.Right', E1049} -> (fun (V3311) -> begin (V3312 = (('un--nfToCFType'(V0, V3262, V2, V3311))(V3267))), case V3312 of {'Idris.Prelude.Types.Left', E1050} -> (fun (V3313) -> {'Idris.Prelude.Types.Left', V3313} end(E1050)); {'Idris.Prelude.Types.Right', E1051} -> (fun (V3314) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3314}} end(E1051)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1049)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1047)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1030)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1028)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1026)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1020, E1021, E1022, E1023, E1024)); {'Idris.Core.Value.NType', E1052} -> (fun (V3315) -> fun (V3316) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1052)); {'Idris.Core.Value.NErased', E1053, E1054} -> (fun (V3317, V3318) -> fun (V3319) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1053, E1054)); _ -> fun (V3320) -> begin (V3322 = begin (V3321 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3321} end), case V3322 of {'Idris.Prelude.Types.Left', E1014} -> (fun (V3323) -> {'Idris.Prelude.Types.Left', V3323} end(E1014)); {'Idris.Prelude.Types.Right', E1015} -> (fun (V3324) -> begin (V3325 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3324, {'Idris.Core.Env.Nil'}, V3, V3320))), case V3325 of {'Idris.Prelude.Types.Left', E1016} -> (fun (V3326) -> {'Idris.Prelude.Types.Left', V3326} end(E1016)); {'Idris.Prelude.Types.Right', E1017} -> (fun (V3327) -> begin (V3332 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3328) -> fun (V3329) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3328, V3329)) end end, fun (V3330) -> fun (V3331) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3330, V3331)) end end}, V3327, V3320))), case V3332 of {'Idris.Prelude.Types.Left', E1018} -> (fun (V3333) -> {'Idris.Prelude.Types.Left', V3333} end(E1018)); {'Idris.Prelude.Types.Right', E1019} -> (fun (V3334) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3334))))}, V3320)) end(E1019)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1017)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1015)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1010, E1011, E1012, E1013)); _ -> case V3 of {'Idris.Core.Value.NTCon', E975, E976, E977, E978, E979} -> (fun (V3335, V3336, V3337, V3338, V3339) -> fun (V3340) -> begin (V3342 = begin (V3341 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3341} end), case V3342 of {'Idris.Prelude.Types.Left', E980} -> (fun (V3343) -> {'Idris.Prelude.Types.Left', V3343} end(E980)); {'Idris.Prelude.Types.Right', E981} -> (fun (V3344) -> begin (V3349 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3345) -> fun (V3346) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3345, V3346)) end end, fun (V3347) -> fun (V3348) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3347, V3348)) end end}, V3336, V3340))), case V3349 of {'Idris.Prelude.Types.Left', E982} -> (fun (V3350) -> {'Idris.Prelude.Types.Left', V3350} end(E982)); {'Idris.Prelude.Types.Right', E983} -> (fun (V3351) -> begin (V3353 = (('un--getNArgs'(V0, V3344, V3351, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3352) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3352)) end, V3339))))(V3340))), case V3353 of {'Idris.Prelude.Types.Left', E984} -> (fun (V3354) -> {'Idris.Prelude.Types.Left', V3354} end(E984)); {'Idris.Prelude.Types.Right', E985} -> (fun (V3355) -> case V3355 of {'Idris.Compiler.CompileExpr.User', E986, E987} -> (fun (V3356, V3357) -> begin (V3359 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3358) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3344, V3358)) end, V3357, []))(V3340))), case V3359 of {'Idris.Prelude.Types.Left', E988} -> (fun (V3360) -> {'Idris.Prelude.Types.Left', V3360} end(E988)); {'Idris.Prelude.Types.Right', E989} -> (fun (V3361) -> begin (V3363 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3362) -> ('un--nfToCFType'(V0, V3335, V2, V3362)) end, V3361, []))(V3340))), case V3363 of {'Idris.Prelude.Types.Left', E990} -> (fun (V3364) -> {'Idris.Prelude.Types.Left', V3364} end(E990)); {'Idris.Prelude.Types.Right', E991} -> (fun (V3365) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3351, V3365}} end(E991)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E989)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E986, E987)); {'Idris.Compiler.CompileExpr.Struct', E992, E993} -> (fun (V3366, V3367) -> begin (V3378 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3368) -> case V3368 of {'Idris.Builtin.MkPair', E994, E995} -> (fun (V3369, V3370) -> fun (V3371) -> begin (V3372 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3344, V3370))(V3371))), case V3372 of {'Idris.Prelude.Types.Left', E996} -> (fun (V3373) -> {'Idris.Prelude.Types.Left', V3373} end(E996)); {'Idris.Prelude.Types.Right', E997} -> (fun (V3374) -> begin (V3375 = (('un--nfToCFType'(V0, V3335, 0, V3374))(V3371))), case V3375 of {'Idris.Prelude.Types.Left', E998} -> (fun (V3376) -> {'Idris.Prelude.Types.Left', V3376} end(E998)); {'Idris.Prelude.Types.Right', E999} -> (fun (V3377) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3369, V3377}} end(E999)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E997)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E994, E995)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3367, []))(V3340))), case V3378 of {'Idris.Prelude.Types.Left', E1000} -> (fun (V3379) -> {'Idris.Prelude.Types.Left', V3379} end(E1000)); {'Idris.Prelude.Types.Right', E1001} -> (fun (V3380) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3366, V3380}} end(E1001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E992, E993)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1002} -> (fun (V3381) -> begin (V3382 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3344, V3381))(V3340))), case V3382 of {'Idris.Prelude.Types.Left', E1003} -> (fun (V3383) -> {'Idris.Prelude.Types.Left', V3383} end(E1003)); {'Idris.Prelude.Types.Right', E1004} -> (fun (V3384) -> begin (V3385 = (('un--nfToCFType'(V0, V3335, V2, V3384))(V3340))), case V3385 of {'Idris.Prelude.Types.Left', E1005} -> (fun (V3386) -> {'Idris.Prelude.Types.Left', V3386} end(E1005)); {'Idris.Prelude.Types.Right', E1006} -> (fun (V3387) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3387}} end(E1006)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1004)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1002)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E985)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E983)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E981)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E975, E976, E977, E978, E979)); {'Idris.Core.Value.NType', E1007} -> (fun (V3388) -> fun (V3389) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1007)); {'Idris.Core.Value.NErased', E1008, E1009} -> (fun (V3390, V3391) -> fun (V3392) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1008, E1009)); _ -> fun (V3393) -> begin (V3395 = begin (V3394 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3394} end), case V3395 of {'Idris.Prelude.Types.Left', E969} -> (fun (V3396) -> {'Idris.Prelude.Types.Left', V3396} end(E969)); {'Idris.Prelude.Types.Right', E970} -> (fun (V3397) -> begin (V3398 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3397, {'Idris.Core.Env.Nil'}, V3, V3393))), case V3398 of {'Idris.Prelude.Types.Left', E971} -> (fun (V3399) -> {'Idris.Prelude.Types.Left', V3399} end(E971)); {'Idris.Prelude.Types.Right', E972} -> (fun (V3400) -> begin (V3405 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3401) -> fun (V3402) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3401, V3402)) end end, fun (V3403) -> fun (V3404) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3403, V3404)) end end}, V3400, V3393))), case V3405 of {'Idris.Prelude.Types.Left', E973} -> (fun (V3406) -> {'Idris.Prelude.Types.Left', V3406} end(E973)); {'Idris.Prelude.Types.Right', E974} -> (fun (V3407) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3407))))}, V3393)) end(E974)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E972)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E970)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E1108, E1109, E1110, E1111} -> (fun (V3408, V3409, V3410, V3411) -> fun (V3412) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V3408, <<"Function types not allowed in a foreign struct"/utf8>>}, V3412)) end end(E1108, E1109, E1110, E1111)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1073, E1074, E1075, E1076, E1077} -> (fun (V3413, V3414, V3415, V3416, V3417) -> fun (V3418) -> begin (V3420 = begin (V3419 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3419} end), case V3420 of {'Idris.Prelude.Types.Left', E1078} -> (fun (V3421) -> {'Idris.Prelude.Types.Left', V3421} end(E1078)); {'Idris.Prelude.Types.Right', E1079} -> (fun (V3422) -> begin (V3427 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3423) -> fun (V3424) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3423, V3424)) end end, fun (V3425) -> fun (V3426) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3425, V3426)) end end}, V3414, V3418))), case V3427 of {'Idris.Prelude.Types.Left', E1080} -> (fun (V3428) -> {'Idris.Prelude.Types.Left', V3428} end(E1080)); {'Idris.Prelude.Types.Right', E1081} -> (fun (V3429) -> begin (V3431 = (('un--getNArgs'(V0, V3422, V3429, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3430) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3430)) end, V3417))))(V3418))), case V3431 of {'Idris.Prelude.Types.Left', E1082} -> (fun (V3432) -> {'Idris.Prelude.Types.Left', V3432} end(E1082)); {'Idris.Prelude.Types.Right', E1083} -> (fun (V3433) -> case V3433 of {'Idris.Compiler.CompileExpr.User', E1084, E1085} -> (fun (V3434, V3435) -> begin (V3437 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3436) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3422, V3436)) end, V3435, []))(V3418))), case V3437 of {'Idris.Prelude.Types.Left', E1086} -> (fun (V3438) -> {'Idris.Prelude.Types.Left', V3438} end(E1086)); {'Idris.Prelude.Types.Right', E1087} -> (fun (V3439) -> begin (V3441 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3440) -> ('un--nfToCFType'(V0, V3413, V2, V3440)) end, V3439, []))(V3418))), case V3441 of {'Idris.Prelude.Types.Left', E1088} -> (fun (V3442) -> {'Idris.Prelude.Types.Left', V3442} end(E1088)); {'Idris.Prelude.Types.Right', E1089} -> (fun (V3443) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3429, V3443}} end(E1089)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1087)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1084, E1085)); {'Idris.Compiler.CompileExpr.Struct', E1090, E1091} -> (fun (V3444, V3445) -> begin (V3456 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3446) -> case V3446 of {'Idris.Builtin.MkPair', E1092, E1093} -> (fun (V3447, V3448) -> fun (V3449) -> begin (V3450 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3422, V3448))(V3449))), case V3450 of {'Idris.Prelude.Types.Left', E1094} -> (fun (V3451) -> {'Idris.Prelude.Types.Left', V3451} end(E1094)); {'Idris.Prelude.Types.Right', E1095} -> (fun (V3452) -> begin (V3453 = (('un--nfToCFType'(V0, V3413, 0, V3452))(V3449))), case V3453 of {'Idris.Prelude.Types.Left', E1096} -> (fun (V3454) -> {'Idris.Prelude.Types.Left', V3454} end(E1096)); {'Idris.Prelude.Types.Right', E1097} -> (fun (V3455) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3447, V3455}} end(E1097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1095)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1092, E1093)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3445, []))(V3418))), case V3456 of {'Idris.Prelude.Types.Left', E1098} -> (fun (V3457) -> {'Idris.Prelude.Types.Left', V3457} end(E1098)); {'Idris.Prelude.Types.Right', E1099} -> (fun (V3458) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3444, V3458}} end(E1099)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1090, E1091)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1100} -> (fun (V3459) -> begin (V3460 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3422, V3459))(V3418))), case V3460 of {'Idris.Prelude.Types.Left', E1101} -> (fun (V3461) -> {'Idris.Prelude.Types.Left', V3461} end(E1101)); {'Idris.Prelude.Types.Right', E1102} -> (fun (V3462) -> begin (V3463 = (('un--nfToCFType'(V0, V3413, V2, V3462))(V3418))), case V3463 of {'Idris.Prelude.Types.Left', E1103} -> (fun (V3464) -> {'Idris.Prelude.Types.Left', V3464} end(E1103)); {'Idris.Prelude.Types.Right', E1104} -> (fun (V3465) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3465}} end(E1104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1083)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1081)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1079)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1073, E1074, E1075, E1076, E1077)); {'Idris.Core.Value.NType', E1105} -> (fun (V3466) -> fun (V3467) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1105)); {'Idris.Core.Value.NErased', E1106, E1107} -> (fun (V3468, V3469) -> fun (V3470) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1106, E1107)); _ -> fun (V3471) -> begin (V3473 = begin (V3472 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3472} end), case V3473 of {'Idris.Prelude.Types.Left', E1067} -> (fun (V3474) -> {'Idris.Prelude.Types.Left', V3474} end(E1067)); {'Idris.Prelude.Types.Right', E1068} -> (fun (V3475) -> begin (V3476 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3475, {'Idris.Core.Env.Nil'}, V3, V3471))), case V3476 of {'Idris.Prelude.Types.Left', E1069} -> (fun (V3477) -> {'Idris.Prelude.Types.Left', V3477} end(E1069)); {'Idris.Prelude.Types.Right', E1070} -> (fun (V3478) -> begin (V3483 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3479) -> fun (V3480) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3479, V3480)) end end, fun (V3481) -> fun (V3482) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3481, V3482)) end end}, V3478, V3471))), case V3483 of {'Idris.Prelude.Types.Left', E1071} -> (fun (V3484) -> {'Idris.Prelude.Types.Left', V3484} end(E1071)); {'Idris.Prelude.Types.Right', E1072} -> (fun (V3485) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3485))))}, V3471)) end(E1072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E934, E935, E936, E937, E938} -> (fun (V3486, V3487, V3488, V3489, V3490) -> fun (V3491) -> begin (V3493 = begin (V3492 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3492} end), case V3493 of {'Idris.Prelude.Types.Left', E939} -> (fun (V3494) -> {'Idris.Prelude.Types.Left', V3494} end(E939)); {'Idris.Prelude.Types.Right', E940} -> (fun (V3495) -> begin (V3500 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3496) -> fun (V3497) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3496, V3497)) end end, fun (V3498) -> fun (V3499) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3498, V3499)) end end}, V3487, V3491))), case V3500 of {'Idris.Prelude.Types.Left', E941} -> (fun (V3501) -> {'Idris.Prelude.Types.Left', V3501} end(E941)); {'Idris.Prelude.Types.Right', E942} -> (fun (V3502) -> begin (V3504 = (('un--getNArgs'(V0, V3495, V3502, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3503) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3503)) end, V3490))))(V3491))), case V3504 of {'Idris.Prelude.Types.Left', E943} -> (fun (V3505) -> {'Idris.Prelude.Types.Left', V3505} end(E943)); {'Idris.Prelude.Types.Right', E944} -> (fun (V3506) -> case V3506 of {'Idris.Compiler.CompileExpr.User', E945, E946} -> (fun (V3507, V3508) -> begin (V3510 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3509) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3495, V3509)) end, V3508, []))(V3491))), case V3510 of {'Idris.Prelude.Types.Left', E947} -> (fun (V3511) -> {'Idris.Prelude.Types.Left', V3511} end(E947)); {'Idris.Prelude.Types.Right', E948} -> (fun (V3512) -> begin (V3514 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3513) -> ('un--nfToCFType'(V0, V3486, V2, V3513)) end, V3512, []))(V3491))), case V3514 of {'Idris.Prelude.Types.Left', E949} -> (fun (V3515) -> {'Idris.Prelude.Types.Left', V3515} end(E949)); {'Idris.Prelude.Types.Right', E950} -> (fun (V3516) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3502, V3516}} end(E950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E948)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E945, E946)); {'Idris.Compiler.CompileExpr.Struct', E951, E952} -> (fun (V3517, V3518) -> begin (V3529 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3519) -> case V3519 of {'Idris.Builtin.MkPair', E953, E954} -> (fun (V3520, V3521) -> fun (V3522) -> begin (V3523 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3495, V3521))(V3522))), case V3523 of {'Idris.Prelude.Types.Left', E955} -> (fun (V3524) -> {'Idris.Prelude.Types.Left', V3524} end(E955)); {'Idris.Prelude.Types.Right', E956} -> (fun (V3525) -> begin (V3526 = (('un--nfToCFType'(V0, V3486, 0, V3525))(V3522))), case V3526 of {'Idris.Prelude.Types.Left', E957} -> (fun (V3527) -> {'Idris.Prelude.Types.Left', V3527} end(E957)); {'Idris.Prelude.Types.Right', E958} -> (fun (V3528) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3520, V3528}} end(E958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E953, E954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3518, []))(V3491))), case V3529 of {'Idris.Prelude.Types.Left', E959} -> (fun (V3530) -> {'Idris.Prelude.Types.Left', V3530} end(E959)); {'Idris.Prelude.Types.Right', E960} -> (fun (V3531) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3517, V3531}} end(E960)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E951, E952)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E961} -> (fun (V3532) -> begin (V3533 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3495, V3532))(V3491))), case V3533 of {'Idris.Prelude.Types.Left', E962} -> (fun (V3534) -> {'Idris.Prelude.Types.Left', V3534} end(E962)); {'Idris.Prelude.Types.Right', E963} -> (fun (V3535) -> begin (V3536 = (('un--nfToCFType'(V0, V3486, V2, V3535))(V3491))), case V3536 of {'Idris.Prelude.Types.Left', E964} -> (fun (V3537) -> {'Idris.Prelude.Types.Left', V3537} end(E964)); {'Idris.Prelude.Types.Right', E965} -> (fun (V3538) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3538}} end(E965)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E963)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E961)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E944)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E942)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E940)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E934, E935, E936, E937, E938)); {'Idris.Core.Value.NType', E966} -> (fun (V3539) -> fun (V3540) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E966)); {'Idris.Core.Value.NErased', E967, E968} -> (fun (V3541, V3542) -> fun (V3543) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E967, E968)); _ -> fun (V3544) -> begin (V3546 = begin (V3545 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3545} end), case V3546 of {'Idris.Prelude.Types.Left', E928} -> (fun (V3547) -> {'Idris.Prelude.Types.Left', V3547} end(E928)); {'Idris.Prelude.Types.Right', E929} -> (fun (V3548) -> begin (V3549 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3548, {'Idris.Core.Env.Nil'}, V3, V3544))), case V3549 of {'Idris.Prelude.Types.Left', E930} -> (fun (V3550) -> {'Idris.Prelude.Types.Left', V3550} end(E930)); {'Idris.Prelude.Types.Right', E931} -> (fun (V3551) -> begin (V3556 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3552) -> fun (V3553) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3552, V3553)) end end, fun (V3554) -> fun (V3555) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3554, V3555)) end end}, V3551, V3544))), case V3556 of {'Idris.Prelude.Types.Left', E932} -> (fun (V3557) -> {'Idris.Prelude.Types.Left', V3557} end(E932)); {'Idris.Prelude.Types.Right', E933} -> (fun (V3558) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3558))))}, V3544)) end(E933)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E931)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E929)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E926, E927)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E824, E825, E826, E827} -> (fun (V3559, V3560, V3561, V3562) -> case V3561 of {'Idris.Core.TT.Pi', E869, E870, E871, E872} -> (fun (V3563, V3564, V3565, V3566) -> fun (V3567) -> begin (V3569 = begin (V3568 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3568} end), case V3569 of {'Idris.Prelude.Types.Left', E873} -> (fun (V3570) -> {'Idris.Prelude.Types.Left', V3570} end(E873)); {'Idris.Prelude.Types.Right', E874} -> (fun (V3571) -> begin (V3572 = (('un--nfToCFType'(V0, V3559, 1, V3566))(V3567))), case V3572 of {'Idris.Prelude.Types.Left', E875} -> (fun (V3573) -> {'Idris.Prelude.Types.Left', V3573} end(E875)); {'Idris.Prelude.Types.Right', E876} -> (fun (V3574) -> begin (V3575 = (((V3562(V3571))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3559, 1}))))(V3567))), case V3575 of {'Idris.Prelude.Types.Left', E877} -> (fun (V3576) -> {'Idris.Prelude.Types.Left', V3576} end(E877)); {'Idris.Prelude.Types.Right', E878} -> (fun (V3577) -> begin (V3578 = (('un--nfToCFType'(V0, V3559, 1, V3577))(V3567))), case V3578 of {'Idris.Prelude.Types.Left', E879} -> (fun (V3579) -> {'Idris.Prelude.Types.Left', V3579} end(E879)); {'Idris.Prelude.Types.Right', E880} -> (fun (V3580) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3574, V3580}} end(E880)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E874)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E869, E870, E871, E872)); _ -> case V3 of {'Idris.Core.Value.NTCon', E834, E835, E836, E837, E838} -> (fun (V3581, V3582, V3583, V3584, V3585) -> fun (V3586) -> begin (V3588 = begin (V3587 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3587} end), case V3588 of {'Idris.Prelude.Types.Left', E839} -> (fun (V3589) -> {'Idris.Prelude.Types.Left', V3589} end(E839)); {'Idris.Prelude.Types.Right', E840} -> (fun (V3590) -> begin (V3595 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3591) -> fun (V3592) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3591, V3592)) end end, fun (V3593) -> fun (V3594) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3593, V3594)) end end}, V3582, V3586))), case V3595 of {'Idris.Prelude.Types.Left', E841} -> (fun (V3596) -> {'Idris.Prelude.Types.Left', V3596} end(E841)); {'Idris.Prelude.Types.Right', E842} -> (fun (V3597) -> begin (V3599 = (('un--getNArgs'(V0, V3590, V3597, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3598) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3598)) end, V3585))))(V3586))), case V3599 of {'Idris.Prelude.Types.Left', E843} -> (fun (V3600) -> {'Idris.Prelude.Types.Left', V3600} end(E843)); {'Idris.Prelude.Types.Right', E844} -> (fun (V3601) -> case V3601 of {'Idris.Compiler.CompileExpr.User', E845, E846} -> (fun (V3602, V3603) -> begin (V3605 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3604) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3590, V3604)) end, V3603, []))(V3586))), case V3605 of {'Idris.Prelude.Types.Left', E847} -> (fun (V3606) -> {'Idris.Prelude.Types.Left', V3606} end(E847)); {'Idris.Prelude.Types.Right', E848} -> (fun (V3607) -> begin (V3609 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3608) -> ('un--nfToCFType'(V0, V3581, V2, V3608)) end, V3607, []))(V3586))), case V3609 of {'Idris.Prelude.Types.Left', E849} -> (fun (V3610) -> {'Idris.Prelude.Types.Left', V3610} end(E849)); {'Idris.Prelude.Types.Right', E850} -> (fun (V3611) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3597, V3611}} end(E850)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E848)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E845, E846)); {'Idris.Compiler.CompileExpr.Struct', E851, E852} -> (fun (V3612, V3613) -> begin (V3624 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3614) -> case V3614 of {'Idris.Builtin.MkPair', E853, E854} -> (fun (V3615, V3616) -> fun (V3617) -> begin (V3618 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3590, V3616))(V3617))), case V3618 of {'Idris.Prelude.Types.Left', E855} -> (fun (V3619) -> {'Idris.Prelude.Types.Left', V3619} end(E855)); {'Idris.Prelude.Types.Right', E856} -> (fun (V3620) -> begin (V3621 = (('un--nfToCFType'(V0, V3581, 0, V3620))(V3617))), case V3621 of {'Idris.Prelude.Types.Left', E857} -> (fun (V3622) -> {'Idris.Prelude.Types.Left', V3622} end(E857)); {'Idris.Prelude.Types.Right', E858} -> (fun (V3623) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3615, V3623}} end(E858)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E856)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E853, E854)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3613, []))(V3586))), case V3624 of {'Idris.Prelude.Types.Left', E859} -> (fun (V3625) -> {'Idris.Prelude.Types.Left', V3625} end(E859)); {'Idris.Prelude.Types.Right', E860} -> (fun (V3626) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3612, V3626}} end(E860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E851, E852)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E861} -> (fun (V3627) -> begin (V3628 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3590, V3627))(V3586))), case V3628 of {'Idris.Prelude.Types.Left', E862} -> (fun (V3629) -> {'Idris.Prelude.Types.Left', V3629} end(E862)); {'Idris.Prelude.Types.Right', E863} -> (fun (V3630) -> begin (V3631 = (('un--nfToCFType'(V0, V3581, V2, V3630))(V3586))), case V3631 of {'Idris.Prelude.Types.Left', E864} -> (fun (V3632) -> {'Idris.Prelude.Types.Left', V3632} end(E864)); {'Idris.Prelude.Types.Right', E865} -> (fun (V3633) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3633}} end(E865)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E863)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E861)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E844)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E842)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E840)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E834, E835, E836, E837, E838)); {'Idris.Core.Value.NType', E866} -> (fun (V3634) -> fun (V3635) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E866)); {'Idris.Core.Value.NErased', E867, E868} -> (fun (V3636, V3637) -> fun (V3638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E867, E868)); _ -> fun (V3639) -> begin (V3641 = begin (V3640 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3640} end), case V3641 of {'Idris.Prelude.Types.Left', E828} -> (fun (V3642) -> {'Idris.Prelude.Types.Left', V3642} end(E828)); {'Idris.Prelude.Types.Right', E829} -> (fun (V3643) -> begin (V3644 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3643, {'Idris.Core.Env.Nil'}, V3, V3639))), case V3644 of {'Idris.Prelude.Types.Left', E830} -> (fun (V3645) -> {'Idris.Prelude.Types.Left', V3645} end(E830)); {'Idris.Prelude.Types.Right', E831} -> (fun (V3646) -> begin (V3651 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3647) -> fun (V3648) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3647, V3648)) end end, fun (V3649) -> fun (V3650) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3649, V3650)) end end}, V3646, V3639))), case V3651 of {'Idris.Prelude.Types.Left', E832} -> (fun (V3652) -> {'Idris.Prelude.Types.Left', V3652} end(E832)); {'Idris.Prelude.Types.Right', E833} -> (fun (V3653) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3653))))}, V3639)) end(E833)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E831)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E824, E825, E826, E827)); _ -> case V3 of {'Idris.Core.Value.NTCon', E789, E790, E791, E792, E793} -> (fun (V3654, V3655, V3656, V3657, V3658) -> fun (V3659) -> begin (V3661 = begin (V3660 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3660} end), case V3661 of {'Idris.Prelude.Types.Left', E794} -> (fun (V3662) -> {'Idris.Prelude.Types.Left', V3662} end(E794)); {'Idris.Prelude.Types.Right', E795} -> (fun (V3663) -> begin (V3668 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3664) -> fun (V3665) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3664, V3665)) end end, fun (V3666) -> fun (V3667) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3666, V3667)) end end}, V3655, V3659))), case V3668 of {'Idris.Prelude.Types.Left', E796} -> (fun (V3669) -> {'Idris.Prelude.Types.Left', V3669} end(E796)); {'Idris.Prelude.Types.Right', E797} -> (fun (V3670) -> begin (V3672 = (('un--getNArgs'(V0, V3663, V3670, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3671) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3671)) end, V3658))))(V3659))), case V3672 of {'Idris.Prelude.Types.Left', E798} -> (fun (V3673) -> {'Idris.Prelude.Types.Left', V3673} end(E798)); {'Idris.Prelude.Types.Right', E799} -> (fun (V3674) -> case V3674 of {'Idris.Compiler.CompileExpr.User', E800, E801} -> (fun (V3675, V3676) -> begin (V3678 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3677) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3663, V3677)) end, V3676, []))(V3659))), case V3678 of {'Idris.Prelude.Types.Left', E802} -> (fun (V3679) -> {'Idris.Prelude.Types.Left', V3679} end(E802)); {'Idris.Prelude.Types.Right', E803} -> (fun (V3680) -> begin (V3682 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3681) -> ('un--nfToCFType'(V0, V3654, V2, V3681)) end, V3680, []))(V3659))), case V3682 of {'Idris.Prelude.Types.Left', E804} -> (fun (V3683) -> {'Idris.Prelude.Types.Left', V3683} end(E804)); {'Idris.Prelude.Types.Right', E805} -> (fun (V3684) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3670, V3684}} end(E805)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E803)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E800, E801)); {'Idris.Compiler.CompileExpr.Struct', E806, E807} -> (fun (V3685, V3686) -> begin (V3697 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3687) -> case V3687 of {'Idris.Builtin.MkPair', E808, E809} -> (fun (V3688, V3689) -> fun (V3690) -> begin (V3691 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3663, V3689))(V3690))), case V3691 of {'Idris.Prelude.Types.Left', E810} -> (fun (V3692) -> {'Idris.Prelude.Types.Left', V3692} end(E810)); {'Idris.Prelude.Types.Right', E811} -> (fun (V3693) -> begin (V3694 = (('un--nfToCFType'(V0, V3654, 0, V3693))(V3690))), case V3694 of {'Idris.Prelude.Types.Left', E812} -> (fun (V3695) -> {'Idris.Prelude.Types.Left', V3695} end(E812)); {'Idris.Prelude.Types.Right', E813} -> (fun (V3696) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3688, V3696}} end(E813)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E811)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E808, E809)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3686, []))(V3659))), case V3697 of {'Idris.Prelude.Types.Left', E814} -> (fun (V3698) -> {'Idris.Prelude.Types.Left', V3698} end(E814)); {'Idris.Prelude.Types.Right', E815} -> (fun (V3699) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3685, V3699}} end(E815)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E806, E807)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E816} -> (fun (V3700) -> begin (V3701 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3663, V3700))(V3659))), case V3701 of {'Idris.Prelude.Types.Left', E817} -> (fun (V3702) -> {'Idris.Prelude.Types.Left', V3702} end(E817)); {'Idris.Prelude.Types.Right', E818} -> (fun (V3703) -> begin (V3704 = (('un--nfToCFType'(V0, V3654, V2, V3703))(V3659))), case V3704 of {'Idris.Prelude.Types.Left', E819} -> (fun (V3705) -> {'Idris.Prelude.Types.Left', V3705} end(E819)); {'Idris.Prelude.Types.Right', E820} -> (fun (V3706) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3706}} end(E820)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E818)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E816)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E799)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E797)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E795)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E789, E790, E791, E792, E793)); {'Idris.Core.Value.NType', E821} -> (fun (V3707) -> fun (V3708) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E821)); {'Idris.Core.Value.NErased', E822, E823} -> (fun (V3709, V3710) -> fun (V3711) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E822, E823)); _ -> fun (V3712) -> begin (V3714 = begin (V3713 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3713} end), case V3714 of {'Idris.Prelude.Types.Left', E783} -> (fun (V3715) -> {'Idris.Prelude.Types.Left', V3715} end(E783)); {'Idris.Prelude.Types.Right', E784} -> (fun (V3716) -> begin (V3717 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3716, {'Idris.Core.Env.Nil'}, V3, V3712))), case V3717 of {'Idris.Prelude.Types.Left', E785} -> (fun (V3718) -> {'Idris.Prelude.Types.Left', V3718} end(E785)); {'Idris.Prelude.Types.Right', E786} -> (fun (V3719) -> begin (V3724 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3720) -> fun (V3721) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3720, V3721)) end end, fun (V3722) -> fun (V3723) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3722, V3723)) end end}, V3719, V3712))), case V3724 of {'Idris.Prelude.Types.Left', E787} -> (fun (V3725) -> {'Idris.Prelude.Types.Left', V3725} end(E787)); {'Idris.Prelude.Types.Right', E788} -> (fun (V3726) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3726))))}, V3712)) end(E788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E786)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E784)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E922, E923, E924, E925} -> (fun (V3727, V3728, V3729, V3730) -> fun (V3731) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V3727, <<"Function types not allowed in a foreign struct"/utf8>>}, V3731)) end end(E922, E923, E924, E925)); _ -> case V3 of {'Idris.Core.Value.NTCon', E887, E888, E889, E890, E891} -> (fun (V3732, V3733, V3734, V3735, V3736) -> fun (V3737) -> begin (V3739 = begin (V3738 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3738} end), case V3739 of {'Idris.Prelude.Types.Left', E892} -> (fun (V3740) -> {'Idris.Prelude.Types.Left', V3740} end(E892)); {'Idris.Prelude.Types.Right', E893} -> (fun (V3741) -> begin (V3746 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3742) -> fun (V3743) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3742, V3743)) end end, fun (V3744) -> fun (V3745) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3744, V3745)) end end}, V3733, V3737))), case V3746 of {'Idris.Prelude.Types.Left', E894} -> (fun (V3747) -> {'Idris.Prelude.Types.Left', V3747} end(E894)); {'Idris.Prelude.Types.Right', E895} -> (fun (V3748) -> begin (V3750 = (('un--getNArgs'(V0, V3741, V3748, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3749) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3749)) end, V3736))))(V3737))), case V3750 of {'Idris.Prelude.Types.Left', E896} -> (fun (V3751) -> {'Idris.Prelude.Types.Left', V3751} end(E896)); {'Idris.Prelude.Types.Right', E897} -> (fun (V3752) -> case V3752 of {'Idris.Compiler.CompileExpr.User', E898, E899} -> (fun (V3753, V3754) -> begin (V3756 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3755) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3741, V3755)) end, V3754, []))(V3737))), case V3756 of {'Idris.Prelude.Types.Left', E900} -> (fun (V3757) -> {'Idris.Prelude.Types.Left', V3757} end(E900)); {'Idris.Prelude.Types.Right', E901} -> (fun (V3758) -> begin (V3760 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3759) -> ('un--nfToCFType'(V0, V3732, V2, V3759)) end, V3758, []))(V3737))), case V3760 of {'Idris.Prelude.Types.Left', E902} -> (fun (V3761) -> {'Idris.Prelude.Types.Left', V3761} end(E902)); {'Idris.Prelude.Types.Right', E903} -> (fun (V3762) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3748, V3762}} end(E903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E901)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E898, E899)); {'Idris.Compiler.CompileExpr.Struct', E904, E905} -> (fun (V3763, V3764) -> begin (V3775 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3765) -> case V3765 of {'Idris.Builtin.MkPair', E906, E907} -> (fun (V3766, V3767) -> fun (V3768) -> begin (V3769 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3741, V3767))(V3768))), case V3769 of {'Idris.Prelude.Types.Left', E908} -> (fun (V3770) -> {'Idris.Prelude.Types.Left', V3770} end(E908)); {'Idris.Prelude.Types.Right', E909} -> (fun (V3771) -> begin (V3772 = (('un--nfToCFType'(V0, V3732, 0, V3771))(V3768))), case V3772 of {'Idris.Prelude.Types.Left', E910} -> (fun (V3773) -> {'Idris.Prelude.Types.Left', V3773} end(E910)); {'Idris.Prelude.Types.Right', E911} -> (fun (V3774) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3766, V3774}} end(E911)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E909)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E906, E907)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3764, []))(V3737))), case V3775 of {'Idris.Prelude.Types.Left', E912} -> (fun (V3776) -> {'Idris.Prelude.Types.Left', V3776} end(E912)); {'Idris.Prelude.Types.Right', E913} -> (fun (V3777) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3763, V3777}} end(E913)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E904, E905)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E914} -> (fun (V3778) -> begin (V3779 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3741, V3778))(V3737))), case V3779 of {'Idris.Prelude.Types.Left', E915} -> (fun (V3780) -> {'Idris.Prelude.Types.Left', V3780} end(E915)); {'Idris.Prelude.Types.Right', E916} -> (fun (V3781) -> begin (V3782 = (('un--nfToCFType'(V0, V3732, V2, V3781))(V3737))), case V3782 of {'Idris.Prelude.Types.Left', E917} -> (fun (V3783) -> {'Idris.Prelude.Types.Left', V3783} end(E917)); {'Idris.Prelude.Types.Right', E918} -> (fun (V3784) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3784}} end(E918)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E916)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E914)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E897)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E895)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E893)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E887, E888, E889, E890, E891)); {'Idris.Core.Value.NType', E919} -> (fun (V3785) -> fun (V3786) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E919)); {'Idris.Core.Value.NErased', E920, E921} -> (fun (V3787, V3788) -> fun (V3789) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E920, E921)); _ -> fun (V3790) -> begin (V3792 = begin (V3791 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3791} end), case V3792 of {'Idris.Prelude.Types.Left', E881} -> (fun (V3793) -> {'Idris.Prelude.Types.Left', V3793} end(E881)); {'Idris.Prelude.Types.Right', E882} -> (fun (V3794) -> begin (V3795 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3794, {'Idris.Core.Env.Nil'}, V3, V3790))), case V3795 of {'Idris.Prelude.Types.Left', E883} -> (fun (V3796) -> {'Idris.Prelude.Types.Left', V3796} end(E883)); {'Idris.Prelude.Types.Right', E884} -> (fun (V3797) -> begin (V3802 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3798) -> fun (V3799) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3798, V3799)) end end, fun (V3800) -> fun (V3801) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3800, V3801)) end end}, V3797, V3790))), case V3802 of {'Idris.Prelude.Types.Left', E885} -> (fun (V3803) -> {'Idris.Prelude.Types.Left', V3803} end(E885)); {'Idris.Prelude.Types.Right', E886} -> (fun (V3804) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3804))))}, V3790)) end(E886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E748, E749, E750, E751, E752} -> (fun (V3805, V3806, V3807, V3808, V3809) -> fun (V3810) -> begin (V3812 = begin (V3811 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3811} end), case V3812 of {'Idris.Prelude.Types.Left', E753} -> (fun (V3813) -> {'Idris.Prelude.Types.Left', V3813} end(E753)); {'Idris.Prelude.Types.Right', E754} -> (fun (V3814) -> begin (V3819 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3815) -> fun (V3816) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3815, V3816)) end end, fun (V3817) -> fun (V3818) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3817, V3818)) end end}, V3806, V3810))), case V3819 of {'Idris.Prelude.Types.Left', E755} -> (fun (V3820) -> {'Idris.Prelude.Types.Left', V3820} end(E755)); {'Idris.Prelude.Types.Right', E756} -> (fun (V3821) -> begin (V3823 = (('un--getNArgs'(V0, V3814, V3821, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3822) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3822)) end, V3809))))(V3810))), case V3823 of {'Idris.Prelude.Types.Left', E757} -> (fun (V3824) -> {'Idris.Prelude.Types.Left', V3824} end(E757)); {'Idris.Prelude.Types.Right', E758} -> (fun (V3825) -> case V3825 of {'Idris.Compiler.CompileExpr.User', E759, E760} -> (fun (V3826, V3827) -> begin (V3829 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3828) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3814, V3828)) end, V3827, []))(V3810))), case V3829 of {'Idris.Prelude.Types.Left', E761} -> (fun (V3830) -> {'Idris.Prelude.Types.Left', V3830} end(E761)); {'Idris.Prelude.Types.Right', E762} -> (fun (V3831) -> begin (V3833 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3832) -> ('un--nfToCFType'(V0, V3805, V2, V3832)) end, V3831, []))(V3810))), case V3833 of {'Idris.Prelude.Types.Left', E763} -> (fun (V3834) -> {'Idris.Prelude.Types.Left', V3834} end(E763)); {'Idris.Prelude.Types.Right', E764} -> (fun (V3835) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3821, V3835}} end(E764)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E762)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E759, E760)); {'Idris.Compiler.CompileExpr.Struct', E765, E766} -> (fun (V3836, V3837) -> begin (V3848 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3838) -> case V3838 of {'Idris.Builtin.MkPair', E767, E768} -> (fun (V3839, V3840) -> fun (V3841) -> begin (V3842 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3814, V3840))(V3841))), case V3842 of {'Idris.Prelude.Types.Left', E769} -> (fun (V3843) -> {'Idris.Prelude.Types.Left', V3843} end(E769)); {'Idris.Prelude.Types.Right', E770} -> (fun (V3844) -> begin (V3845 = (('un--nfToCFType'(V0, V3805, 0, V3844))(V3841))), case V3845 of {'Idris.Prelude.Types.Left', E771} -> (fun (V3846) -> {'Idris.Prelude.Types.Left', V3846} end(E771)); {'Idris.Prelude.Types.Right', E772} -> (fun (V3847) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3839, V3847}} end(E772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E767, E768)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3837, []))(V3810))), case V3848 of {'Idris.Prelude.Types.Left', E773} -> (fun (V3849) -> {'Idris.Prelude.Types.Left', V3849} end(E773)); {'Idris.Prelude.Types.Right', E774} -> (fun (V3850) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3836, V3850}} end(E774)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E765, E766)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E775} -> (fun (V3851) -> begin (V3852 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3814, V3851))(V3810))), case V3852 of {'Idris.Prelude.Types.Left', E776} -> (fun (V3853) -> {'Idris.Prelude.Types.Left', V3853} end(E776)); {'Idris.Prelude.Types.Right', E777} -> (fun (V3854) -> begin (V3855 = (('un--nfToCFType'(V0, V3805, V2, V3854))(V3810))), case V3855 of {'Idris.Prelude.Types.Left', E778} -> (fun (V3856) -> {'Idris.Prelude.Types.Left', V3856} end(E778)); {'Idris.Prelude.Types.Right', E779} -> (fun (V3857) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3857}} end(E779)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E777)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E775)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E758)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E756)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E754)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E748, E749, E750, E751, E752)); {'Idris.Core.Value.NType', E780} -> (fun (V3858) -> fun (V3859) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E780)); {'Idris.Core.Value.NErased', E781, E782} -> (fun (V3860, V3861) -> fun (V3862) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E781, E782)); _ -> fun (V3863) -> begin (V3865 = begin (V3864 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3864} end), case V3865 of {'Idris.Prelude.Types.Left', E742} -> (fun (V3866) -> {'Idris.Prelude.Types.Left', V3866} end(E742)); {'Idris.Prelude.Types.Right', E743} -> (fun (V3867) -> begin (V3868 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3867, {'Idris.Core.Env.Nil'}, V3, V3863))), case V3868 of {'Idris.Prelude.Types.Left', E744} -> (fun (V3869) -> {'Idris.Prelude.Types.Left', V3869} end(E744)); {'Idris.Prelude.Types.Right', E745} -> (fun (V3870) -> begin (V3875 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3871) -> fun (V3872) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3871, V3872)) end end, fun (V3873) -> fun (V3874) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3873, V3874)) end end}, V3870, V3863))), case V3875 of {'Idris.Prelude.Types.Left', E746} -> (fun (V3876) -> {'Idris.Prelude.Types.Left', V3876} end(E746)); {'Idris.Prelude.Types.Right', E747} -> (fun (V3877) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3877))))}, V3863)) end(E747)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E745)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E740, E741)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E554, E555} -> (fun (V3878, V3879) -> case V3879 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V3880) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V3881) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V3882) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E638, E639, E640, E641} -> (fun (V3883, V3884, V3885, V3886) -> case V3885 of {'Idris.Core.TT.Pi', E683, E684, E685, E686} -> (fun (V3887, V3888, V3889, V3890) -> fun (V3891) -> begin (V3893 = begin (V3892 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3892} end), case V3893 of {'Idris.Prelude.Types.Left', E687} -> (fun (V3894) -> {'Idris.Prelude.Types.Left', V3894} end(E687)); {'Idris.Prelude.Types.Right', E688} -> (fun (V3895) -> begin (V3896 = (('un--nfToCFType'(V0, V3883, 1, V3890))(V3891))), case V3896 of {'Idris.Prelude.Types.Left', E689} -> (fun (V3897) -> {'Idris.Prelude.Types.Left', V3897} end(E689)); {'Idris.Prelude.Types.Right', E690} -> (fun (V3898) -> begin (V3899 = (((V3886(V3895))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3883, 1}))))(V3891))), case V3899 of {'Idris.Prelude.Types.Left', E691} -> (fun (V3900) -> {'Idris.Prelude.Types.Left', V3900} end(E691)); {'Idris.Prelude.Types.Right', E692} -> (fun (V3901) -> begin (V3902 = (('un--nfToCFType'(V0, V3883, 1, V3901))(V3891))), case V3902 of {'Idris.Prelude.Types.Left', E693} -> (fun (V3903) -> {'Idris.Prelude.Types.Left', V3903} end(E693)); {'Idris.Prelude.Types.Right', E694} -> (fun (V3904) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3898, V3904}} end(E694)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E692)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E690)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E688)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E683, E684, E685, E686)); _ -> case V3 of {'Idris.Core.Value.NTCon', E648, E649, E650, E651, E652} -> (fun (V3905, V3906, V3907, V3908, V3909) -> fun (V3910) -> begin (V3912 = begin (V3911 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3911} end), case V3912 of {'Idris.Prelude.Types.Left', E653} -> (fun (V3913) -> {'Idris.Prelude.Types.Left', V3913} end(E653)); {'Idris.Prelude.Types.Right', E654} -> (fun (V3914) -> begin (V3919 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3915) -> fun (V3916) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3915, V3916)) end end, fun (V3917) -> fun (V3918) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3917, V3918)) end end}, V3906, V3910))), case V3919 of {'Idris.Prelude.Types.Left', E655} -> (fun (V3920) -> {'Idris.Prelude.Types.Left', V3920} end(E655)); {'Idris.Prelude.Types.Right', E656} -> (fun (V3921) -> begin (V3923 = (('un--getNArgs'(V0, V3914, V3921, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3922) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3922)) end, V3909))))(V3910))), case V3923 of {'Idris.Prelude.Types.Left', E657} -> (fun (V3924) -> {'Idris.Prelude.Types.Left', V3924} end(E657)); {'Idris.Prelude.Types.Right', E658} -> (fun (V3925) -> case V3925 of {'Idris.Compiler.CompileExpr.User', E659, E660} -> (fun (V3926, V3927) -> begin (V3929 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3928) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3914, V3928)) end, V3927, []))(V3910))), case V3929 of {'Idris.Prelude.Types.Left', E661} -> (fun (V3930) -> {'Idris.Prelude.Types.Left', V3930} end(E661)); {'Idris.Prelude.Types.Right', E662} -> (fun (V3931) -> begin (V3933 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3932) -> ('un--nfToCFType'(V0, V3905, V2, V3932)) end, V3931, []))(V3910))), case V3933 of {'Idris.Prelude.Types.Left', E663} -> (fun (V3934) -> {'Idris.Prelude.Types.Left', V3934} end(E663)); {'Idris.Prelude.Types.Right', E664} -> (fun (V3935) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3921, V3935}} end(E664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E662)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E659, E660)); {'Idris.Compiler.CompileExpr.Struct', E665, E666} -> (fun (V3936, V3937) -> begin (V3948 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3938) -> case V3938 of {'Idris.Builtin.MkPair', E667, E668} -> (fun (V3939, V3940) -> fun (V3941) -> begin (V3942 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3914, V3940))(V3941))), case V3942 of {'Idris.Prelude.Types.Left', E669} -> (fun (V3943) -> {'Idris.Prelude.Types.Left', V3943} end(E669)); {'Idris.Prelude.Types.Right', E670} -> (fun (V3944) -> begin (V3945 = (('un--nfToCFType'(V0, V3905, 0, V3944))(V3941))), case V3945 of {'Idris.Prelude.Types.Left', E671} -> (fun (V3946) -> {'Idris.Prelude.Types.Left', V3946} end(E671)); {'Idris.Prelude.Types.Right', E672} -> (fun (V3947) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3939, V3947}} end(E672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E667, E668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V3937, []))(V3910))), case V3948 of {'Idris.Prelude.Types.Left', E673} -> (fun (V3949) -> {'Idris.Prelude.Types.Left', V3949} end(E673)); {'Idris.Prelude.Types.Right', E674} -> (fun (V3950) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3936, V3950}} end(E674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E665, E666)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E675} -> (fun (V3951) -> begin (V3952 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3914, V3951))(V3910))), case V3952 of {'Idris.Prelude.Types.Left', E676} -> (fun (V3953) -> {'Idris.Prelude.Types.Left', V3953} end(E676)); {'Idris.Prelude.Types.Right', E677} -> (fun (V3954) -> begin (V3955 = (('un--nfToCFType'(V0, V3905, V2, V3954))(V3910))), case V3955 of {'Idris.Prelude.Types.Left', E678} -> (fun (V3956) -> {'Idris.Prelude.Types.Left', V3956} end(E678)); {'Idris.Prelude.Types.Right', E679} -> (fun (V3957) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3957}} end(E679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E656)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E654)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E648, E649, E650, E651, E652)); {'Idris.Core.Value.NType', E680} -> (fun (V3958) -> fun (V3959) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E680)); {'Idris.Core.Value.NErased', E681, E682} -> (fun (V3960, V3961) -> fun (V3962) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E681, E682)); _ -> fun (V3963) -> begin (V3965 = begin (V3964 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3964} end), case V3965 of {'Idris.Prelude.Types.Left', E642} -> (fun (V3966) -> {'Idris.Prelude.Types.Left', V3966} end(E642)); {'Idris.Prelude.Types.Right', E643} -> (fun (V3967) -> begin (V3968 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3967, {'Idris.Core.Env.Nil'}, V3, V3963))), case V3968 of {'Idris.Prelude.Types.Left', E644} -> (fun (V3969) -> {'Idris.Prelude.Types.Left', V3969} end(E644)); {'Idris.Prelude.Types.Right', E645} -> (fun (V3970) -> begin (V3975 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3971) -> fun (V3972) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V3971, V3972)) end end, fun (V3973) -> fun (V3974) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V3973, V3974)) end end}, V3970, V3963))), case V3975 of {'Idris.Prelude.Types.Left', E646} -> (fun (V3976) -> {'Idris.Prelude.Types.Left', V3976} end(E646)); {'Idris.Prelude.Types.Right', E647} -> (fun (V3977) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3977))))}, V3963)) end(E647)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E643)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E638, E639, E640, E641)); _ -> case V3 of {'Idris.Core.Value.NTCon', E603, E604, E605, E606, E607} -> (fun (V3978, V3979, V3980, V3981, V3982) -> fun (V3983) -> begin (V3985 = begin (V3984 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3984} end), case V3985 of {'Idris.Prelude.Types.Left', E608} -> (fun (V3986) -> {'Idris.Prelude.Types.Left', V3986} end(E608)); {'Idris.Prelude.Types.Right', E609} -> (fun (V3987) -> begin (V3992 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3988) -> fun (V3989) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3988, V3989)) end end, fun (V3990) -> fun (V3991) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3990, V3991)) end end}, V3979, V3983))), case V3992 of {'Idris.Prelude.Types.Left', E610} -> (fun (V3993) -> {'Idris.Prelude.Types.Left', V3993} end(E610)); {'Idris.Prelude.Types.Right', E611} -> (fun (V3994) -> begin (V3996 = (('un--getNArgs'(V0, V3987, V3994, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3995) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V3995)) end, V3982))))(V3983))), case V3996 of {'Idris.Prelude.Types.Left', E612} -> (fun (V3997) -> {'Idris.Prelude.Types.Left', V3997} end(E612)); {'Idris.Prelude.Types.Right', E613} -> (fun (V3998) -> case V3998 of {'Idris.Compiler.CompileExpr.User', E614, E615} -> (fun (V3999, V4000) -> begin (V4002 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4001) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3987, V4001)) end, V4000, []))(V3983))), case V4002 of {'Idris.Prelude.Types.Left', E616} -> (fun (V4003) -> {'Idris.Prelude.Types.Left', V4003} end(E616)); {'Idris.Prelude.Types.Right', E617} -> (fun (V4004) -> begin (V4006 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4005) -> ('un--nfToCFType'(V0, V3978, V2, V4005)) end, V4004, []))(V3983))), case V4006 of {'Idris.Prelude.Types.Left', E618} -> (fun (V4007) -> {'Idris.Prelude.Types.Left', V4007} end(E618)); {'Idris.Prelude.Types.Right', E619} -> (fun (V4008) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3994, V4008}} end(E619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E614, E615)); {'Idris.Compiler.CompileExpr.Struct', E620, E621} -> (fun (V4009, V4010) -> begin (V4021 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4011) -> case V4011 of {'Idris.Builtin.MkPair', E622, E623} -> (fun (V4012, V4013) -> fun (V4014) -> begin (V4015 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3987, V4013))(V4014))), case V4015 of {'Idris.Prelude.Types.Left', E624} -> (fun (V4016) -> {'Idris.Prelude.Types.Left', V4016} end(E624)); {'Idris.Prelude.Types.Right', E625} -> (fun (V4017) -> begin (V4018 = (('un--nfToCFType'(V0, V3978, 0, V4017))(V4014))), case V4018 of {'Idris.Prelude.Types.Left', E626} -> (fun (V4019) -> {'Idris.Prelude.Types.Left', V4019} end(E626)); {'Idris.Prelude.Types.Right', E627} -> (fun (V4020) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4012, V4020}} end(E627)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E622, E623)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4010, []))(V3983))), case V4021 of {'Idris.Prelude.Types.Left', E628} -> (fun (V4022) -> {'Idris.Prelude.Types.Left', V4022} end(E628)); {'Idris.Prelude.Types.Right', E629} -> (fun (V4023) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4009, V4023}} end(E629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E620, E621)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E630} -> (fun (V4024) -> begin (V4025 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3987, V4024))(V3983))), case V4025 of {'Idris.Prelude.Types.Left', E631} -> (fun (V4026) -> {'Idris.Prelude.Types.Left', V4026} end(E631)); {'Idris.Prelude.Types.Right', E632} -> (fun (V4027) -> begin (V4028 = (('un--nfToCFType'(V0, V3978, V2, V4027))(V3983))), case V4028 of {'Idris.Prelude.Types.Left', E633} -> (fun (V4029) -> {'Idris.Prelude.Types.Left', V4029} end(E633)); {'Idris.Prelude.Types.Right', E634} -> (fun (V4030) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4030}} end(E634)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E630)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E613)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E611)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E609)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E603, E604, E605, E606, E607)); {'Idris.Core.Value.NType', E635} -> (fun (V4031) -> fun (V4032) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E635)); {'Idris.Core.Value.NErased', E636, E637} -> (fun (V4033, V4034) -> fun (V4035) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E636, E637)); _ -> fun (V4036) -> begin (V4038 = begin (V4037 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4037} end), case V4038 of {'Idris.Prelude.Types.Left', E597} -> (fun (V4039) -> {'Idris.Prelude.Types.Left', V4039} end(E597)); {'Idris.Prelude.Types.Right', E598} -> (fun (V4040) -> begin (V4041 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4040, {'Idris.Core.Env.Nil'}, V3, V4036))), case V4041 of {'Idris.Prelude.Types.Left', E599} -> (fun (V4042) -> {'Idris.Prelude.Types.Left', V4042} end(E599)); {'Idris.Prelude.Types.Right', E600} -> (fun (V4043) -> begin (V4048 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4044) -> fun (V4045) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4044, V4045)) end end, fun (V4046) -> fun (V4047) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4046, V4047)) end end}, V4043, V4036))), case V4048 of {'Idris.Prelude.Types.Left', E601} -> (fun (V4049) -> {'Idris.Prelude.Types.Left', V4049} end(E601)); {'Idris.Prelude.Types.Right', E602} -> (fun (V4050) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4050))))}, V4036)) end(E602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E736, E737, E738, E739} -> (fun (V4051, V4052, V4053, V4054) -> fun (V4055) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V4051, <<"Function types not allowed in a foreign struct"/utf8>>}, V4055)) end end(E736, E737, E738, E739)); _ -> case V3 of {'Idris.Core.Value.NTCon', E701, E702, E703, E704, E705} -> (fun (V4056, V4057, V4058, V4059, V4060) -> fun (V4061) -> begin (V4063 = begin (V4062 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4062} end), case V4063 of {'Idris.Prelude.Types.Left', E706} -> (fun (V4064) -> {'Idris.Prelude.Types.Left', V4064} end(E706)); {'Idris.Prelude.Types.Right', E707} -> (fun (V4065) -> begin (V4070 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4066) -> fun (V4067) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4066, V4067)) end end, fun (V4068) -> fun (V4069) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4068, V4069)) end end}, V4057, V4061))), case V4070 of {'Idris.Prelude.Types.Left', E708} -> (fun (V4071) -> {'Idris.Prelude.Types.Left', V4071} end(E708)); {'Idris.Prelude.Types.Right', E709} -> (fun (V4072) -> begin (V4074 = (('un--getNArgs'(V0, V4065, V4072, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4073) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4073)) end, V4060))))(V4061))), case V4074 of {'Idris.Prelude.Types.Left', E710} -> (fun (V4075) -> {'Idris.Prelude.Types.Left', V4075} end(E710)); {'Idris.Prelude.Types.Right', E711} -> (fun (V4076) -> case V4076 of {'Idris.Compiler.CompileExpr.User', E712, E713} -> (fun (V4077, V4078) -> begin (V4080 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4079) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4065, V4079)) end, V4078, []))(V4061))), case V4080 of {'Idris.Prelude.Types.Left', E714} -> (fun (V4081) -> {'Idris.Prelude.Types.Left', V4081} end(E714)); {'Idris.Prelude.Types.Right', E715} -> (fun (V4082) -> begin (V4084 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4083) -> ('un--nfToCFType'(V0, V4056, V2, V4083)) end, V4082, []))(V4061))), case V4084 of {'Idris.Prelude.Types.Left', E716} -> (fun (V4085) -> {'Idris.Prelude.Types.Left', V4085} end(E716)); {'Idris.Prelude.Types.Right', E717} -> (fun (V4086) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4072, V4086}} end(E717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E715)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E712, E713)); {'Idris.Compiler.CompileExpr.Struct', E718, E719} -> (fun (V4087, V4088) -> begin (V4099 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4089) -> case V4089 of {'Idris.Builtin.MkPair', E720, E721} -> (fun (V4090, V4091) -> fun (V4092) -> begin (V4093 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4065, V4091))(V4092))), case V4093 of {'Idris.Prelude.Types.Left', E722} -> (fun (V4094) -> {'Idris.Prelude.Types.Left', V4094} end(E722)); {'Idris.Prelude.Types.Right', E723} -> (fun (V4095) -> begin (V4096 = (('un--nfToCFType'(V0, V4056, 0, V4095))(V4092))), case V4096 of {'Idris.Prelude.Types.Left', E724} -> (fun (V4097) -> {'Idris.Prelude.Types.Left', V4097} end(E724)); {'Idris.Prelude.Types.Right', E725} -> (fun (V4098) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4090, V4098}} end(E725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E720, E721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4088, []))(V4061))), case V4099 of {'Idris.Prelude.Types.Left', E726} -> (fun (V4100) -> {'Idris.Prelude.Types.Left', V4100} end(E726)); {'Idris.Prelude.Types.Right', E727} -> (fun (V4101) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4087, V4101}} end(E727)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E718, E719)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E728} -> (fun (V4102) -> begin (V4103 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4065, V4102))(V4061))), case V4103 of {'Idris.Prelude.Types.Left', E729} -> (fun (V4104) -> {'Idris.Prelude.Types.Left', V4104} end(E729)); {'Idris.Prelude.Types.Right', E730} -> (fun (V4105) -> begin (V4106 = (('un--nfToCFType'(V0, V4056, V2, V4105))(V4061))), case V4106 of {'Idris.Prelude.Types.Left', E731} -> (fun (V4107) -> {'Idris.Prelude.Types.Left', V4107} end(E731)); {'Idris.Prelude.Types.Right', E732} -> (fun (V4108) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4108}} end(E732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E730)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E728)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E711)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E709)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E701, E702, E703, E704, E705)); {'Idris.Core.Value.NType', E733} -> (fun (V4109) -> fun (V4110) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E733)); {'Idris.Core.Value.NErased', E734, E735} -> (fun (V4111, V4112) -> fun (V4113) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E734, E735)); _ -> fun (V4114) -> begin (V4116 = begin (V4115 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4115} end), case V4116 of {'Idris.Prelude.Types.Left', E695} -> (fun (V4117) -> {'Idris.Prelude.Types.Left', V4117} end(E695)); {'Idris.Prelude.Types.Right', E696} -> (fun (V4118) -> begin (V4119 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4118, {'Idris.Core.Env.Nil'}, V3, V4114))), case V4119 of {'Idris.Prelude.Types.Left', E697} -> (fun (V4120) -> {'Idris.Prelude.Types.Left', V4120} end(E697)); {'Idris.Prelude.Types.Right', E698} -> (fun (V4121) -> begin (V4126 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4122) -> fun (V4123) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4122, V4123)) end end, fun (V4124) -> fun (V4125) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4124, V4125)) end end}, V4121, V4114))), case V4126 of {'Idris.Prelude.Types.Left', E699} -> (fun (V4127) -> {'Idris.Prelude.Types.Left', V4127} end(E699)); {'Idris.Prelude.Types.Right', E700} -> (fun (V4128) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4128))))}, V4114)) end(E700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E562, E563, E564, E565, E566} -> (fun (V4129, V4130, V4131, V4132, V4133) -> fun (V4134) -> begin (V4136 = begin (V4135 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4135} end), case V4136 of {'Idris.Prelude.Types.Left', E567} -> (fun (V4137) -> {'Idris.Prelude.Types.Left', V4137} end(E567)); {'Idris.Prelude.Types.Right', E568} -> (fun (V4138) -> begin (V4143 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4139) -> fun (V4140) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4139, V4140)) end end, fun (V4141) -> fun (V4142) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4141, V4142)) end end}, V4130, V4134))), case V4143 of {'Idris.Prelude.Types.Left', E569} -> (fun (V4144) -> {'Idris.Prelude.Types.Left', V4144} end(E569)); {'Idris.Prelude.Types.Right', E570} -> (fun (V4145) -> begin (V4147 = (('un--getNArgs'(V0, V4138, V4145, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4146) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4146)) end, V4133))))(V4134))), case V4147 of {'Idris.Prelude.Types.Left', E571} -> (fun (V4148) -> {'Idris.Prelude.Types.Left', V4148} end(E571)); {'Idris.Prelude.Types.Right', E572} -> (fun (V4149) -> case V4149 of {'Idris.Compiler.CompileExpr.User', E573, E574} -> (fun (V4150, V4151) -> begin (V4153 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4152) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4138, V4152)) end, V4151, []))(V4134))), case V4153 of {'Idris.Prelude.Types.Left', E575} -> (fun (V4154) -> {'Idris.Prelude.Types.Left', V4154} end(E575)); {'Idris.Prelude.Types.Right', E576} -> (fun (V4155) -> begin (V4157 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4156) -> ('un--nfToCFType'(V0, V4129, V2, V4156)) end, V4155, []))(V4134))), case V4157 of {'Idris.Prelude.Types.Left', E577} -> (fun (V4158) -> {'Idris.Prelude.Types.Left', V4158} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V4159) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4145, V4159}} end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E573, E574)); {'Idris.Compiler.CompileExpr.Struct', E579, E580} -> (fun (V4160, V4161) -> begin (V4172 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4162) -> case V4162 of {'Idris.Builtin.MkPair', E581, E582} -> (fun (V4163, V4164) -> fun (V4165) -> begin (V4166 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4138, V4164))(V4165))), case V4166 of {'Idris.Prelude.Types.Left', E583} -> (fun (V4167) -> {'Idris.Prelude.Types.Left', V4167} end(E583)); {'Idris.Prelude.Types.Right', E584} -> (fun (V4168) -> begin (V4169 = (('un--nfToCFType'(V0, V4129, 0, V4168))(V4165))), case V4169 of {'Idris.Prelude.Types.Left', E585} -> (fun (V4170) -> {'Idris.Prelude.Types.Left', V4170} end(E585)); {'Idris.Prelude.Types.Right', E586} -> (fun (V4171) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4163, V4171}} end(E586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E581, E582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4161, []))(V4134))), case V4172 of {'Idris.Prelude.Types.Left', E587} -> (fun (V4173) -> {'Idris.Prelude.Types.Left', V4173} end(E587)); {'Idris.Prelude.Types.Right', E588} -> (fun (V4174) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4160, V4174}} end(E588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E579, E580)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E589} -> (fun (V4175) -> begin (V4176 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4138, V4175))(V4134))), case V4176 of {'Idris.Prelude.Types.Left', E590} -> (fun (V4177) -> {'Idris.Prelude.Types.Left', V4177} end(E590)); {'Idris.Prelude.Types.Right', E591} -> (fun (V4178) -> begin (V4179 = (('un--nfToCFType'(V0, V4129, V2, V4178))(V4134))), case V4179 of {'Idris.Prelude.Types.Left', E592} -> (fun (V4180) -> {'Idris.Prelude.Types.Left', V4180} end(E592)); {'Idris.Prelude.Types.Right', E593} -> (fun (V4181) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4181}} end(E593)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E591)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E589)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E568)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E562, E563, E564, E565, E566)); {'Idris.Core.Value.NType', E594} -> (fun (V4182) -> fun (V4183) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E594)); {'Idris.Core.Value.NErased', E595, E596} -> (fun (V4184, V4185) -> fun (V4186) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E595, E596)); _ -> fun (V4187) -> begin (V4189 = begin (V4188 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4188} end), case V4189 of {'Idris.Prelude.Types.Left', E556} -> (fun (V4190) -> {'Idris.Prelude.Types.Left', V4190} end(E556)); {'Idris.Prelude.Types.Right', E557} -> (fun (V4191) -> begin (V4192 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4191, {'Idris.Core.Env.Nil'}, V3, V4187))), case V4192 of {'Idris.Prelude.Types.Left', E558} -> (fun (V4193) -> {'Idris.Prelude.Types.Left', V4193} end(E558)); {'Idris.Prelude.Types.Right', E559} -> (fun (V4194) -> begin (V4199 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4195) -> fun (V4196) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4195, V4196)) end end, fun (V4197) -> fun (V4198) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4197, V4198)) end end}, V4194, V4187))), case V4199 of {'Idris.Prelude.Types.Left', E560} -> (fun (V4200) -> {'Idris.Prelude.Types.Left', V4200} end(E560)); {'Idris.Prelude.Types.Right', E561} -> (fun (V4201) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4201))))}, V4187)) end(E561)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E559)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E554, E555)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E452, E453, E454, E455} -> (fun (V4202, V4203, V4204, V4205) -> case V4204 of {'Idris.Core.TT.Pi', E497, E498, E499, E500} -> (fun (V4206, V4207, V4208, V4209) -> fun (V4210) -> begin (V4212 = begin (V4211 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4211} end), case V4212 of {'Idris.Prelude.Types.Left', E501} -> (fun (V4213) -> {'Idris.Prelude.Types.Left', V4213} end(E501)); {'Idris.Prelude.Types.Right', E502} -> (fun (V4214) -> begin (V4215 = (('un--nfToCFType'(V0, V4202, 1, V4209))(V4210))), case V4215 of {'Idris.Prelude.Types.Left', E503} -> (fun (V4216) -> {'Idris.Prelude.Types.Left', V4216} end(E503)); {'Idris.Prelude.Types.Right', E504} -> (fun (V4217) -> begin (V4218 = (((V4205(V4214))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4202, 1}))))(V4210))), case V4218 of {'Idris.Prelude.Types.Left', E505} -> (fun (V4219) -> {'Idris.Prelude.Types.Left', V4219} end(E505)); {'Idris.Prelude.Types.Right', E506} -> (fun (V4220) -> begin (V4221 = (('un--nfToCFType'(V0, V4202, 1, V4220))(V4210))), case V4221 of {'Idris.Prelude.Types.Left', E507} -> (fun (V4222) -> {'Idris.Prelude.Types.Left', V4222} end(E507)); {'Idris.Prelude.Types.Right', E508} -> (fun (V4223) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4217, V4223}} end(E508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E502)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E497, E498, E499, E500)); _ -> case V3 of {'Idris.Core.Value.NTCon', E462, E463, E464, E465, E466} -> (fun (V4224, V4225, V4226, V4227, V4228) -> fun (V4229) -> begin (V4231 = begin (V4230 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4230} end), case V4231 of {'Idris.Prelude.Types.Left', E467} -> (fun (V4232) -> {'Idris.Prelude.Types.Left', V4232} end(E467)); {'Idris.Prelude.Types.Right', E468} -> (fun (V4233) -> begin (V4238 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4234) -> fun (V4235) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4234, V4235)) end end, fun (V4236) -> fun (V4237) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4236, V4237)) end end}, V4225, V4229))), case V4238 of {'Idris.Prelude.Types.Left', E469} -> (fun (V4239) -> {'Idris.Prelude.Types.Left', V4239} end(E469)); {'Idris.Prelude.Types.Right', E470} -> (fun (V4240) -> begin (V4242 = (('un--getNArgs'(V0, V4233, V4240, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4241) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4241)) end, V4228))))(V4229))), case V4242 of {'Idris.Prelude.Types.Left', E471} -> (fun (V4243) -> {'Idris.Prelude.Types.Left', V4243} end(E471)); {'Idris.Prelude.Types.Right', E472} -> (fun (V4244) -> case V4244 of {'Idris.Compiler.CompileExpr.User', E473, E474} -> (fun (V4245, V4246) -> begin (V4248 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4247) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4233, V4247)) end, V4246, []))(V4229))), case V4248 of {'Idris.Prelude.Types.Left', E475} -> (fun (V4249) -> {'Idris.Prelude.Types.Left', V4249} end(E475)); {'Idris.Prelude.Types.Right', E476} -> (fun (V4250) -> begin (V4252 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4251) -> ('un--nfToCFType'(V0, V4224, V2, V4251)) end, V4250, []))(V4229))), case V4252 of {'Idris.Prelude.Types.Left', E477} -> (fun (V4253) -> {'Idris.Prelude.Types.Left', V4253} end(E477)); {'Idris.Prelude.Types.Right', E478} -> (fun (V4254) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4240, V4254}} end(E478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E473, E474)); {'Idris.Compiler.CompileExpr.Struct', E479, E480} -> (fun (V4255, V4256) -> begin (V4267 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4257) -> case V4257 of {'Idris.Builtin.MkPair', E481, E482} -> (fun (V4258, V4259) -> fun (V4260) -> begin (V4261 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4233, V4259))(V4260))), case V4261 of {'Idris.Prelude.Types.Left', E483} -> (fun (V4262) -> {'Idris.Prelude.Types.Left', V4262} end(E483)); {'Idris.Prelude.Types.Right', E484} -> (fun (V4263) -> begin (V4264 = (('un--nfToCFType'(V0, V4224, 0, V4263))(V4260))), case V4264 of {'Idris.Prelude.Types.Left', E485} -> (fun (V4265) -> {'Idris.Prelude.Types.Left', V4265} end(E485)); {'Idris.Prelude.Types.Right', E486} -> (fun (V4266) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4258, V4266}} end(E486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E481, E482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4256, []))(V4229))), case V4267 of {'Idris.Prelude.Types.Left', E487} -> (fun (V4268) -> {'Idris.Prelude.Types.Left', V4268} end(E487)); {'Idris.Prelude.Types.Right', E488} -> (fun (V4269) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4255, V4269}} end(E488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E479, E480)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E489} -> (fun (V4270) -> begin (V4271 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4233, V4270))(V4229))), case V4271 of {'Idris.Prelude.Types.Left', E490} -> (fun (V4272) -> {'Idris.Prelude.Types.Left', V4272} end(E490)); {'Idris.Prelude.Types.Right', E491} -> (fun (V4273) -> begin (V4274 = (('un--nfToCFType'(V0, V4224, V2, V4273))(V4229))), case V4274 of {'Idris.Prelude.Types.Left', E492} -> (fun (V4275) -> {'Idris.Prelude.Types.Left', V4275} end(E492)); {'Idris.Prelude.Types.Right', E493} -> (fun (V4276) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4276}} end(E493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E491)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E468)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E462, E463, E464, E465, E466)); {'Idris.Core.Value.NType', E494} -> (fun (V4277) -> fun (V4278) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E494)); {'Idris.Core.Value.NErased', E495, E496} -> (fun (V4279, V4280) -> fun (V4281) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E495, E496)); _ -> fun (V4282) -> begin (V4284 = begin (V4283 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4283} end), case V4284 of {'Idris.Prelude.Types.Left', E456} -> (fun (V4285) -> {'Idris.Prelude.Types.Left', V4285} end(E456)); {'Idris.Prelude.Types.Right', E457} -> (fun (V4286) -> begin (V4287 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4286, {'Idris.Core.Env.Nil'}, V3, V4282))), case V4287 of {'Idris.Prelude.Types.Left', E458} -> (fun (V4288) -> {'Idris.Prelude.Types.Left', V4288} end(E458)); {'Idris.Prelude.Types.Right', E459} -> (fun (V4289) -> begin (V4294 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4290) -> fun (V4291) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4290, V4291)) end end, fun (V4292) -> fun (V4293) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4292, V4293)) end end}, V4289, V4282))), case V4294 of {'Idris.Prelude.Types.Left', E460} -> (fun (V4295) -> {'Idris.Prelude.Types.Left', V4295} end(E460)); {'Idris.Prelude.Types.Right', E461} -> (fun (V4296) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4296))))}, V4282)) end(E461)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E459)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E452, E453, E454, E455)); _ -> case V3 of {'Idris.Core.Value.NTCon', E417, E418, E419, E420, E421} -> (fun (V4297, V4298, V4299, V4300, V4301) -> fun (V4302) -> begin (V4304 = begin (V4303 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4303} end), case V4304 of {'Idris.Prelude.Types.Left', E422} -> (fun (V4305) -> {'Idris.Prelude.Types.Left', V4305} end(E422)); {'Idris.Prelude.Types.Right', E423} -> (fun (V4306) -> begin (V4311 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4307) -> fun (V4308) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4307, V4308)) end end, fun (V4309) -> fun (V4310) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4309, V4310)) end end}, V4298, V4302))), case V4311 of {'Idris.Prelude.Types.Left', E424} -> (fun (V4312) -> {'Idris.Prelude.Types.Left', V4312} end(E424)); {'Idris.Prelude.Types.Right', E425} -> (fun (V4313) -> begin (V4315 = (('un--getNArgs'(V0, V4306, V4313, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4314) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4314)) end, V4301))))(V4302))), case V4315 of {'Idris.Prelude.Types.Left', E426} -> (fun (V4316) -> {'Idris.Prelude.Types.Left', V4316} end(E426)); {'Idris.Prelude.Types.Right', E427} -> (fun (V4317) -> case V4317 of {'Idris.Compiler.CompileExpr.User', E428, E429} -> (fun (V4318, V4319) -> begin (V4321 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4320) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4306, V4320)) end, V4319, []))(V4302))), case V4321 of {'Idris.Prelude.Types.Left', E430} -> (fun (V4322) -> {'Idris.Prelude.Types.Left', V4322} end(E430)); {'Idris.Prelude.Types.Right', E431} -> (fun (V4323) -> begin (V4325 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4324) -> ('un--nfToCFType'(V0, V4297, V2, V4324)) end, V4323, []))(V4302))), case V4325 of {'Idris.Prelude.Types.Left', E432} -> (fun (V4326) -> {'Idris.Prelude.Types.Left', V4326} end(E432)); {'Idris.Prelude.Types.Right', E433} -> (fun (V4327) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4313, V4327}} end(E433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E428, E429)); {'Idris.Compiler.CompileExpr.Struct', E434, E435} -> (fun (V4328, V4329) -> begin (V4340 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4330) -> case V4330 of {'Idris.Builtin.MkPair', E436, E437} -> (fun (V4331, V4332) -> fun (V4333) -> begin (V4334 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4306, V4332))(V4333))), case V4334 of {'Idris.Prelude.Types.Left', E438} -> (fun (V4335) -> {'Idris.Prelude.Types.Left', V4335} end(E438)); {'Idris.Prelude.Types.Right', E439} -> (fun (V4336) -> begin (V4337 = (('un--nfToCFType'(V0, V4297, 0, V4336))(V4333))), case V4337 of {'Idris.Prelude.Types.Left', E440} -> (fun (V4338) -> {'Idris.Prelude.Types.Left', V4338} end(E440)); {'Idris.Prelude.Types.Right', E441} -> (fun (V4339) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4331, V4339}} end(E441)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E439)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E436, E437)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4329, []))(V4302))), case V4340 of {'Idris.Prelude.Types.Left', E442} -> (fun (V4341) -> {'Idris.Prelude.Types.Left', V4341} end(E442)); {'Idris.Prelude.Types.Right', E443} -> (fun (V4342) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4328, V4342}} end(E443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E434, E435)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E444} -> (fun (V4343) -> begin (V4344 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4306, V4343))(V4302))), case V4344 of {'Idris.Prelude.Types.Left', E445} -> (fun (V4345) -> {'Idris.Prelude.Types.Left', V4345} end(E445)); {'Idris.Prelude.Types.Right', E446} -> (fun (V4346) -> begin (V4347 = (('un--nfToCFType'(V0, V4297, V2, V4346))(V4302))), case V4347 of {'Idris.Prelude.Types.Left', E447} -> (fun (V4348) -> {'Idris.Prelude.Types.Left', V4348} end(E447)); {'Idris.Prelude.Types.Right', E448} -> (fun (V4349) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4349}} end(E448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E425)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E423)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E417, E418, E419, E420, E421)); {'Idris.Core.Value.NType', E449} -> (fun (V4350) -> fun (V4351) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E449)); {'Idris.Core.Value.NErased', E450, E451} -> (fun (V4352, V4353) -> fun (V4354) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E450, E451)); _ -> fun (V4355) -> begin (V4357 = begin (V4356 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4356} end), case V4357 of {'Idris.Prelude.Types.Left', E411} -> (fun (V4358) -> {'Idris.Prelude.Types.Left', V4358} end(E411)); {'Idris.Prelude.Types.Right', E412} -> (fun (V4359) -> begin (V4360 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4359, {'Idris.Core.Env.Nil'}, V3, V4355))), case V4360 of {'Idris.Prelude.Types.Left', E413} -> (fun (V4361) -> {'Idris.Prelude.Types.Left', V4361} end(E413)); {'Idris.Prelude.Types.Right', E414} -> (fun (V4362) -> begin (V4367 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4363) -> fun (V4364) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4363, V4364)) end end, fun (V4365) -> fun (V4366) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4365, V4366)) end end}, V4362, V4355))), case V4367 of {'Idris.Prelude.Types.Left', E415} -> (fun (V4368) -> {'Idris.Prelude.Types.Left', V4368} end(E415)); {'Idris.Prelude.Types.Right', E416} -> (fun (V4369) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4369))))}, V4355)) end(E416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E550, E551, E552, E553} -> (fun (V4370, V4371, V4372, V4373) -> fun (V4374) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V4370, <<"Function types not allowed in a foreign struct"/utf8>>}, V4374)) end end(E550, E551, E552, E553)); _ -> case V3 of {'Idris.Core.Value.NTCon', E515, E516, E517, E518, E519} -> (fun (V4375, V4376, V4377, V4378, V4379) -> fun (V4380) -> begin (V4382 = begin (V4381 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4381} end), case V4382 of {'Idris.Prelude.Types.Left', E520} -> (fun (V4383) -> {'Idris.Prelude.Types.Left', V4383} end(E520)); {'Idris.Prelude.Types.Right', E521} -> (fun (V4384) -> begin (V4389 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4385) -> fun (V4386) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4385, V4386)) end end, fun (V4387) -> fun (V4388) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4387, V4388)) end end}, V4376, V4380))), case V4389 of {'Idris.Prelude.Types.Left', E522} -> (fun (V4390) -> {'Idris.Prelude.Types.Left', V4390} end(E522)); {'Idris.Prelude.Types.Right', E523} -> (fun (V4391) -> begin (V4393 = (('un--getNArgs'(V0, V4384, V4391, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4392) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4392)) end, V4379))))(V4380))), case V4393 of {'Idris.Prelude.Types.Left', E524} -> (fun (V4394) -> {'Idris.Prelude.Types.Left', V4394} end(E524)); {'Idris.Prelude.Types.Right', E525} -> (fun (V4395) -> case V4395 of {'Idris.Compiler.CompileExpr.User', E526, E527} -> (fun (V4396, V4397) -> begin (V4399 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4398) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4384, V4398)) end, V4397, []))(V4380))), case V4399 of {'Idris.Prelude.Types.Left', E528} -> (fun (V4400) -> {'Idris.Prelude.Types.Left', V4400} end(E528)); {'Idris.Prelude.Types.Right', E529} -> (fun (V4401) -> begin (V4403 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4402) -> ('un--nfToCFType'(V0, V4375, V2, V4402)) end, V4401, []))(V4380))), case V4403 of {'Idris.Prelude.Types.Left', E530} -> (fun (V4404) -> {'Idris.Prelude.Types.Left', V4404} end(E530)); {'Idris.Prelude.Types.Right', E531} -> (fun (V4405) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4391, V4405}} end(E531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E526, E527)); {'Idris.Compiler.CompileExpr.Struct', E532, E533} -> (fun (V4406, V4407) -> begin (V4418 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4408) -> case V4408 of {'Idris.Builtin.MkPair', E534, E535} -> (fun (V4409, V4410) -> fun (V4411) -> begin (V4412 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4384, V4410))(V4411))), case V4412 of {'Idris.Prelude.Types.Left', E536} -> (fun (V4413) -> {'Idris.Prelude.Types.Left', V4413} end(E536)); {'Idris.Prelude.Types.Right', E537} -> (fun (V4414) -> begin (V4415 = (('un--nfToCFType'(V0, V4375, 0, V4414))(V4411))), case V4415 of {'Idris.Prelude.Types.Left', E538} -> (fun (V4416) -> {'Idris.Prelude.Types.Left', V4416} end(E538)); {'Idris.Prelude.Types.Right', E539} -> (fun (V4417) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4409, V4417}} end(E539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E534, E535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4407, []))(V4380))), case V4418 of {'Idris.Prelude.Types.Left', E540} -> (fun (V4419) -> {'Idris.Prelude.Types.Left', V4419} end(E540)); {'Idris.Prelude.Types.Right', E541} -> (fun (V4420) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4406, V4420}} end(E541)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E532, E533)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E542} -> (fun (V4421) -> begin (V4422 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4384, V4421))(V4380))), case V4422 of {'Idris.Prelude.Types.Left', E543} -> (fun (V4423) -> {'Idris.Prelude.Types.Left', V4423} end(E543)); {'Idris.Prelude.Types.Right', E544} -> (fun (V4424) -> begin (V4425 = (('un--nfToCFType'(V0, V4375, V2, V4424))(V4380))), case V4425 of {'Idris.Prelude.Types.Left', E545} -> (fun (V4426) -> {'Idris.Prelude.Types.Left', V4426} end(E545)); {'Idris.Prelude.Types.Right', E546} -> (fun (V4427) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4427}} end(E546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E525)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E523)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E521)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E515, E516, E517, E518, E519)); {'Idris.Core.Value.NType', E547} -> (fun (V4428) -> fun (V4429) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E547)); {'Idris.Core.Value.NErased', E548, E549} -> (fun (V4430, V4431) -> fun (V4432) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E548, E549)); _ -> fun (V4433) -> begin (V4435 = begin (V4434 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4434} end), case V4435 of {'Idris.Prelude.Types.Left', E509} -> (fun (V4436) -> {'Idris.Prelude.Types.Left', V4436} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V4437) -> begin (V4438 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4437, {'Idris.Core.Env.Nil'}, V3, V4433))), case V4438 of {'Idris.Prelude.Types.Left', E511} -> (fun (V4439) -> {'Idris.Prelude.Types.Left', V4439} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V4440) -> begin (V4445 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4441) -> fun (V4442) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4441, V4442)) end end, fun (V4443) -> fun (V4444) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4443, V4444)) end end}, V4440, V4433))), case V4445 of {'Idris.Prelude.Types.Left', E513} -> (fun (V4446) -> {'Idris.Prelude.Types.Left', V4446} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V4447) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4447))))}, V4433)) end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E376, E377, E378, E379, E380} -> (fun (V4448, V4449, V4450, V4451, V4452) -> fun (V4453) -> begin (V4455 = begin (V4454 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4454} end), case V4455 of {'Idris.Prelude.Types.Left', E381} -> (fun (V4456) -> {'Idris.Prelude.Types.Left', V4456} end(E381)); {'Idris.Prelude.Types.Right', E382} -> (fun (V4457) -> begin (V4462 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4458) -> fun (V4459) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4458, V4459)) end end, fun (V4460) -> fun (V4461) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4460, V4461)) end end}, V4449, V4453))), case V4462 of {'Idris.Prelude.Types.Left', E383} -> (fun (V4463) -> {'Idris.Prelude.Types.Left', V4463} end(E383)); {'Idris.Prelude.Types.Right', E384} -> (fun (V4464) -> begin (V4466 = (('un--getNArgs'(V0, V4457, V4464, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4465) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4465)) end, V4452))))(V4453))), case V4466 of {'Idris.Prelude.Types.Left', E385} -> (fun (V4467) -> {'Idris.Prelude.Types.Left', V4467} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V4468) -> case V4468 of {'Idris.Compiler.CompileExpr.User', E387, E388} -> (fun (V4469, V4470) -> begin (V4472 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4471) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4457, V4471)) end, V4470, []))(V4453))), case V4472 of {'Idris.Prelude.Types.Left', E389} -> (fun (V4473) -> {'Idris.Prelude.Types.Left', V4473} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V4474) -> begin (V4476 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4475) -> ('un--nfToCFType'(V0, V4448, V2, V4475)) end, V4474, []))(V4453))), case V4476 of {'Idris.Prelude.Types.Left', E391} -> (fun (V4477) -> {'Idris.Prelude.Types.Left', V4477} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V4478) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4464, V4478}} end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E387, E388)); {'Idris.Compiler.CompileExpr.Struct', E393, E394} -> (fun (V4479, V4480) -> begin (V4491 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4481) -> case V4481 of {'Idris.Builtin.MkPair', E395, E396} -> (fun (V4482, V4483) -> fun (V4484) -> begin (V4485 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4457, V4483))(V4484))), case V4485 of {'Idris.Prelude.Types.Left', E397} -> (fun (V4486) -> {'Idris.Prelude.Types.Left', V4486} end(E397)); {'Idris.Prelude.Types.Right', E398} -> (fun (V4487) -> begin (V4488 = (('un--nfToCFType'(V0, V4448, 0, V4487))(V4484))), case V4488 of {'Idris.Prelude.Types.Left', E399} -> (fun (V4489) -> {'Idris.Prelude.Types.Left', V4489} end(E399)); {'Idris.Prelude.Types.Right', E400} -> (fun (V4490) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4482, V4490}} end(E400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E395, E396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4480, []))(V4453))), case V4491 of {'Idris.Prelude.Types.Left', E401} -> (fun (V4492) -> {'Idris.Prelude.Types.Left', V4492} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V4493) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4479, V4493}} end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E393, E394)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E403} -> (fun (V4494) -> begin (V4495 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4457, V4494))(V4453))), case V4495 of {'Idris.Prelude.Types.Left', E404} -> (fun (V4496) -> {'Idris.Prelude.Types.Left', V4496} end(E404)); {'Idris.Prelude.Types.Right', E405} -> (fun (V4497) -> begin (V4498 = (('un--nfToCFType'(V0, V4448, V2, V4497))(V4453))), case V4498 of {'Idris.Prelude.Types.Left', E406} -> (fun (V4499) -> {'Idris.Prelude.Types.Left', V4499} end(E406)); {'Idris.Prelude.Types.Right', E407} -> (fun (V4500) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4500}} end(E407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E405)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E376, E377, E378, E379, E380)); {'Idris.Core.Value.NType', E408} -> (fun (V4501) -> fun (V4502) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E408)); {'Idris.Core.Value.NErased', E409, E410} -> (fun (V4503, V4504) -> fun (V4505) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E409, E410)); _ -> fun (V4506) -> begin (V4508 = begin (V4507 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4507} end), case V4508 of {'Idris.Prelude.Types.Left', E370} -> (fun (V4509) -> {'Idris.Prelude.Types.Left', V4509} end(E370)); {'Idris.Prelude.Types.Right', E371} -> (fun (V4510) -> begin (V4511 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4510, {'Idris.Core.Env.Nil'}, V3, V4506))), case V4511 of {'Idris.Prelude.Types.Left', E372} -> (fun (V4512) -> {'Idris.Prelude.Types.Left', V4512} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V4513) -> begin (V4518 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4514) -> fun (V4515) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4514, V4515)) end end, fun (V4516) -> fun (V4517) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4516, V4517)) end end}, V4513, V4506))), case V4518 of {'Idris.Prelude.Types.Left', E374} -> (fun (V4519) -> {'Idris.Prelude.Types.Left', V4519} end(E374)); {'Idris.Prelude.Types.Right', E375} -> (fun (V4520) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4520))))}, V4506)) end(E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; 0 -> case V3 of {'Idris.Core.Value.NPrimVal', E1482, E1483} -> (fun (V4521, V4522) -> case V4522 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V4523) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V4523)) end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E1668, E1669} -> (fun (V4524, V4525) -> case V4525 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V4526) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V4527) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V4528) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E1752, E1753, E1754, E1755} -> (fun (V4529, V4530, V4531, V4532) -> case V4531 of {'Idris.Core.TT.Pi', E1797, E1798, E1799, E1800} -> (fun (V4533, V4534, V4535, V4536) -> fun (V4537) -> begin (V4539 = begin (V4538 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4538} end), case V4539 of {'Idris.Prelude.Types.Left', E1801} -> (fun (V4540) -> {'Idris.Prelude.Types.Left', V4540} end(E1801)); {'Idris.Prelude.Types.Right', E1802} -> (fun (V4541) -> begin (V4542 = (('un--nfToCFType'(V0, V4529, 1, V4536))(V4537))), case V4542 of {'Idris.Prelude.Types.Left', E1803} -> (fun (V4543) -> {'Idris.Prelude.Types.Left', V4543} end(E1803)); {'Idris.Prelude.Types.Right', E1804} -> (fun (V4544) -> begin (V4545 = (((V4532(V4541))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4529, 1}))))(V4537))), case V4545 of {'Idris.Prelude.Types.Left', E1805} -> (fun (V4546) -> {'Idris.Prelude.Types.Left', V4546} end(E1805)); {'Idris.Prelude.Types.Right', E1806} -> (fun (V4547) -> begin (V4548 = (('un--nfToCFType'(V0, V4529, 1, V4547))(V4537))), case V4548 of {'Idris.Prelude.Types.Left', E1807} -> (fun (V4549) -> {'Idris.Prelude.Types.Left', V4549} end(E1807)); {'Idris.Prelude.Types.Right', E1808} -> (fun (V4550) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4544, V4550}} end(E1808)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1802)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1797, E1798, E1799, E1800)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1762, E1763, E1764, E1765, E1766} -> (fun (V4551, V4552, V4553, V4554, V4555) -> fun (V4556) -> begin (V4558 = begin (V4557 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4557} end), case V4558 of {'Idris.Prelude.Types.Left', E1767} -> (fun (V4559) -> {'Idris.Prelude.Types.Left', V4559} end(E1767)); {'Idris.Prelude.Types.Right', E1768} -> (fun (V4560) -> begin (V4565 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4561) -> fun (V4562) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4561, V4562)) end end, fun (V4563) -> fun (V4564) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4563, V4564)) end end}, V4552, V4556))), case V4565 of {'Idris.Prelude.Types.Left', E1769} -> (fun (V4566) -> {'Idris.Prelude.Types.Left', V4566} end(E1769)); {'Idris.Prelude.Types.Right', E1770} -> (fun (V4567) -> begin (V4569 = (('un--getNArgs'(V0, V4560, V4567, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4568) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4568)) end, V4555))))(V4556))), case V4569 of {'Idris.Prelude.Types.Left', E1771} -> (fun (V4570) -> {'Idris.Prelude.Types.Left', V4570} end(E1771)); {'Idris.Prelude.Types.Right', E1772} -> (fun (V4571) -> case V4571 of {'Idris.Compiler.CompileExpr.User', E1773, E1774} -> (fun (V4572, V4573) -> begin (V4575 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4574) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4560, V4574)) end, V4573, []))(V4556))), case V4575 of {'Idris.Prelude.Types.Left', E1775} -> (fun (V4576) -> {'Idris.Prelude.Types.Left', V4576} end(E1775)); {'Idris.Prelude.Types.Right', E1776} -> (fun (V4577) -> begin (V4579 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4578) -> ('un--nfToCFType'(V0, V4551, V2, V4578)) end, V4577, []))(V4556))), case V4579 of {'Idris.Prelude.Types.Left', E1777} -> (fun (V4580) -> {'Idris.Prelude.Types.Left', V4580} end(E1777)); {'Idris.Prelude.Types.Right', E1778} -> (fun (V4581) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4567, V4581}} end(E1778)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1776)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1773, E1774)); {'Idris.Compiler.CompileExpr.Struct', E1779, E1780} -> (fun (V4582, V4583) -> begin (V4594 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4584) -> case V4584 of {'Idris.Builtin.MkPair', E1781, E1782} -> (fun (V4585, V4586) -> fun (V4587) -> begin (V4588 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4560, V4586))(V4587))), case V4588 of {'Idris.Prelude.Types.Left', E1783} -> (fun (V4589) -> {'Idris.Prelude.Types.Left', V4589} end(E1783)); {'Idris.Prelude.Types.Right', E1784} -> (fun (V4590) -> begin (V4591 = (('un--nfToCFType'(V0, V4551, 0, V4590))(V4587))), case V4591 of {'Idris.Prelude.Types.Left', E1785} -> (fun (V4592) -> {'Idris.Prelude.Types.Left', V4592} end(E1785)); {'Idris.Prelude.Types.Right', E1786} -> (fun (V4593) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4585, V4593}} end(E1786)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1784)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1781, E1782)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4583, []))(V4556))), case V4594 of {'Idris.Prelude.Types.Left', E1787} -> (fun (V4595) -> {'Idris.Prelude.Types.Left', V4595} end(E1787)); {'Idris.Prelude.Types.Right', E1788} -> (fun (V4596) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4582, V4596}} end(E1788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1779, E1780)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1789} -> (fun (V4597) -> begin (V4598 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4560, V4597))(V4556))), case V4598 of {'Idris.Prelude.Types.Left', E1790} -> (fun (V4599) -> {'Idris.Prelude.Types.Left', V4599} end(E1790)); {'Idris.Prelude.Types.Right', E1791} -> (fun (V4600) -> begin (V4601 = (('un--nfToCFType'(V0, V4551, V2, V4600))(V4556))), case V4601 of {'Idris.Prelude.Types.Left', E1792} -> (fun (V4602) -> {'Idris.Prelude.Types.Left', V4602} end(E1792)); {'Idris.Prelude.Types.Right', E1793} -> (fun (V4603) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4603}} end(E1793)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1791)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1768)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1762, E1763, E1764, E1765, E1766)); {'Idris.Core.Value.NType', E1794} -> (fun (V4604) -> fun (V4605) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1794)); {'Idris.Core.Value.NErased', E1795, E1796} -> (fun (V4606, V4607) -> fun (V4608) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1795, E1796)); _ -> fun (V4609) -> begin (V4611 = begin (V4610 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4610} end), case V4611 of {'Idris.Prelude.Types.Left', E1756} -> (fun (V4612) -> {'Idris.Prelude.Types.Left', V4612} end(E1756)); {'Idris.Prelude.Types.Right', E1757} -> (fun (V4613) -> begin (V4614 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4613, {'Idris.Core.Env.Nil'}, V3, V4609))), case V4614 of {'Idris.Prelude.Types.Left', E1758} -> (fun (V4615) -> {'Idris.Prelude.Types.Left', V4615} end(E1758)); {'Idris.Prelude.Types.Right', E1759} -> (fun (V4616) -> begin (V4621 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4617) -> fun (V4618) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4617, V4618)) end end, fun (V4619) -> fun (V4620) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4619, V4620)) end end}, V4616, V4609))), case V4621 of {'Idris.Prelude.Types.Left', E1760} -> (fun (V4622) -> {'Idris.Prelude.Types.Left', V4622} end(E1760)); {'Idris.Prelude.Types.Right', E1761} -> (fun (V4623) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4623))))}, V4609)) end(E1761)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1752, E1753, E1754, E1755)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1717, E1718, E1719, E1720, E1721} -> (fun (V4624, V4625, V4626, V4627, V4628) -> fun (V4629) -> begin (V4631 = begin (V4630 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4630} end), case V4631 of {'Idris.Prelude.Types.Left', E1722} -> (fun (V4632) -> {'Idris.Prelude.Types.Left', V4632} end(E1722)); {'Idris.Prelude.Types.Right', E1723} -> (fun (V4633) -> begin (V4638 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4634) -> fun (V4635) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4634, V4635)) end end, fun (V4636) -> fun (V4637) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4636, V4637)) end end}, V4625, V4629))), case V4638 of {'Idris.Prelude.Types.Left', E1724} -> (fun (V4639) -> {'Idris.Prelude.Types.Left', V4639} end(E1724)); {'Idris.Prelude.Types.Right', E1725} -> (fun (V4640) -> begin (V4642 = (('un--getNArgs'(V0, V4633, V4640, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4641) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4641)) end, V4628))))(V4629))), case V4642 of {'Idris.Prelude.Types.Left', E1726} -> (fun (V4643) -> {'Idris.Prelude.Types.Left', V4643} end(E1726)); {'Idris.Prelude.Types.Right', E1727} -> (fun (V4644) -> case V4644 of {'Idris.Compiler.CompileExpr.User', E1728, E1729} -> (fun (V4645, V4646) -> begin (V4648 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4647) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4633, V4647)) end, V4646, []))(V4629))), case V4648 of {'Idris.Prelude.Types.Left', E1730} -> (fun (V4649) -> {'Idris.Prelude.Types.Left', V4649} end(E1730)); {'Idris.Prelude.Types.Right', E1731} -> (fun (V4650) -> begin (V4652 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4651) -> ('un--nfToCFType'(V0, V4624, V2, V4651)) end, V4650, []))(V4629))), case V4652 of {'Idris.Prelude.Types.Left', E1732} -> (fun (V4653) -> {'Idris.Prelude.Types.Left', V4653} end(E1732)); {'Idris.Prelude.Types.Right', E1733} -> (fun (V4654) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4640, V4654}} end(E1733)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1731)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1728, E1729)); {'Idris.Compiler.CompileExpr.Struct', E1734, E1735} -> (fun (V4655, V4656) -> begin (V4667 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4657) -> case V4657 of {'Idris.Builtin.MkPair', E1736, E1737} -> (fun (V4658, V4659) -> fun (V4660) -> begin (V4661 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4633, V4659))(V4660))), case V4661 of {'Idris.Prelude.Types.Left', E1738} -> (fun (V4662) -> {'Idris.Prelude.Types.Left', V4662} end(E1738)); {'Idris.Prelude.Types.Right', E1739} -> (fun (V4663) -> begin (V4664 = (('un--nfToCFType'(V0, V4624, 0, V4663))(V4660))), case V4664 of {'Idris.Prelude.Types.Left', E1740} -> (fun (V4665) -> {'Idris.Prelude.Types.Left', V4665} end(E1740)); {'Idris.Prelude.Types.Right', E1741} -> (fun (V4666) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4658, V4666}} end(E1741)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1739)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1736, E1737)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4656, []))(V4629))), case V4667 of {'Idris.Prelude.Types.Left', E1742} -> (fun (V4668) -> {'Idris.Prelude.Types.Left', V4668} end(E1742)); {'Idris.Prelude.Types.Right', E1743} -> (fun (V4669) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4655, V4669}} end(E1743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1734, E1735)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1744} -> (fun (V4670) -> begin (V4671 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4633, V4670))(V4629))), case V4671 of {'Idris.Prelude.Types.Left', E1745} -> (fun (V4672) -> {'Idris.Prelude.Types.Left', V4672} end(E1745)); {'Idris.Prelude.Types.Right', E1746} -> (fun (V4673) -> begin (V4674 = (('un--nfToCFType'(V0, V4624, V2, V4673))(V4629))), case V4674 of {'Idris.Prelude.Types.Left', E1747} -> (fun (V4675) -> {'Idris.Prelude.Types.Left', V4675} end(E1747)); {'Idris.Prelude.Types.Right', E1748} -> (fun (V4676) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4676}} end(E1748)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1746)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1744)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1727)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1717, E1718, E1719, E1720, E1721)); {'Idris.Core.Value.NType', E1749} -> (fun (V4677) -> fun (V4678) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1749)); {'Idris.Core.Value.NErased', E1750, E1751} -> (fun (V4679, V4680) -> fun (V4681) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1750, E1751)); _ -> fun (V4682) -> begin (V4684 = begin (V4683 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4683} end), case V4684 of {'Idris.Prelude.Types.Left', E1711} -> (fun (V4685) -> {'Idris.Prelude.Types.Left', V4685} end(E1711)); {'Idris.Prelude.Types.Right', E1712} -> (fun (V4686) -> begin (V4687 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4686, {'Idris.Core.Env.Nil'}, V3, V4682))), case V4687 of {'Idris.Prelude.Types.Left', E1713} -> (fun (V4688) -> {'Idris.Prelude.Types.Left', V4688} end(E1713)); {'Idris.Prelude.Types.Right', E1714} -> (fun (V4689) -> begin (V4694 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4690) -> fun (V4691) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4690, V4691)) end end, fun (V4692) -> fun (V4693) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4692, V4693)) end end}, V4689, V4682))), case V4694 of {'Idris.Prelude.Types.Left', E1715} -> (fun (V4695) -> {'Idris.Prelude.Types.Left', V4695} end(E1715)); {'Idris.Prelude.Types.Right', E1716} -> (fun (V4696) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4696))))}, V4682)) end(E1716)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1714)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1712)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E1850, E1851, E1852, E1853} -> (fun (V4697, V4698, V4699, V4700) -> fun (V4701) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V4697, <<"Function types not allowed in a foreign struct"/utf8>>}, V4701)) end end(E1850, E1851, E1852, E1853)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1815, E1816, E1817, E1818, E1819} -> (fun (V4702, V4703, V4704, V4705, V4706) -> fun (V4707) -> begin (V4709 = begin (V4708 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4708} end), case V4709 of {'Idris.Prelude.Types.Left', E1820} -> (fun (V4710) -> {'Idris.Prelude.Types.Left', V4710} end(E1820)); {'Idris.Prelude.Types.Right', E1821} -> (fun (V4711) -> begin (V4716 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4712) -> fun (V4713) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4712, V4713)) end end, fun (V4714) -> fun (V4715) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4714, V4715)) end end}, V4703, V4707))), case V4716 of {'Idris.Prelude.Types.Left', E1822} -> (fun (V4717) -> {'Idris.Prelude.Types.Left', V4717} end(E1822)); {'Idris.Prelude.Types.Right', E1823} -> (fun (V4718) -> begin (V4720 = (('un--getNArgs'(V0, V4711, V4718, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4719) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4719)) end, V4706))))(V4707))), case V4720 of {'Idris.Prelude.Types.Left', E1824} -> (fun (V4721) -> {'Idris.Prelude.Types.Left', V4721} end(E1824)); {'Idris.Prelude.Types.Right', E1825} -> (fun (V4722) -> case V4722 of {'Idris.Compiler.CompileExpr.User', E1826, E1827} -> (fun (V4723, V4724) -> begin (V4726 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4725) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4711, V4725)) end, V4724, []))(V4707))), case V4726 of {'Idris.Prelude.Types.Left', E1828} -> (fun (V4727) -> {'Idris.Prelude.Types.Left', V4727} end(E1828)); {'Idris.Prelude.Types.Right', E1829} -> (fun (V4728) -> begin (V4730 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4729) -> ('un--nfToCFType'(V0, V4702, V2, V4729)) end, V4728, []))(V4707))), case V4730 of {'Idris.Prelude.Types.Left', E1830} -> (fun (V4731) -> {'Idris.Prelude.Types.Left', V4731} end(E1830)); {'Idris.Prelude.Types.Right', E1831} -> (fun (V4732) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4718, V4732}} end(E1831)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1826, E1827)); {'Idris.Compiler.CompileExpr.Struct', E1832, E1833} -> (fun (V4733, V4734) -> begin (V4745 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4735) -> case V4735 of {'Idris.Builtin.MkPair', E1834, E1835} -> (fun (V4736, V4737) -> fun (V4738) -> begin (V4739 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4711, V4737))(V4738))), case V4739 of {'Idris.Prelude.Types.Left', E1836} -> (fun (V4740) -> {'Idris.Prelude.Types.Left', V4740} end(E1836)); {'Idris.Prelude.Types.Right', E1837} -> (fun (V4741) -> begin (V4742 = (('un--nfToCFType'(V0, V4702, 0, V4741))(V4738))), case V4742 of {'Idris.Prelude.Types.Left', E1838} -> (fun (V4743) -> {'Idris.Prelude.Types.Left', V4743} end(E1838)); {'Idris.Prelude.Types.Right', E1839} -> (fun (V4744) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4736, V4744}} end(E1839)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1837)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1834, E1835)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4734, []))(V4707))), case V4745 of {'Idris.Prelude.Types.Left', E1840} -> (fun (V4746) -> {'Idris.Prelude.Types.Left', V4746} end(E1840)); {'Idris.Prelude.Types.Right', E1841} -> (fun (V4747) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4733, V4747}} end(E1841)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1832, E1833)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1842} -> (fun (V4748) -> begin (V4749 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4711, V4748))(V4707))), case V4749 of {'Idris.Prelude.Types.Left', E1843} -> (fun (V4750) -> {'Idris.Prelude.Types.Left', V4750} end(E1843)); {'Idris.Prelude.Types.Right', E1844} -> (fun (V4751) -> begin (V4752 = (('un--nfToCFType'(V0, V4702, V2, V4751))(V4707))), case V4752 of {'Idris.Prelude.Types.Left', E1845} -> (fun (V4753) -> {'Idris.Prelude.Types.Left', V4753} end(E1845)); {'Idris.Prelude.Types.Right', E1846} -> (fun (V4754) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4754}} end(E1846)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1844)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1842)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1825)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1823)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1815, E1816, E1817, E1818, E1819)); {'Idris.Core.Value.NType', E1847} -> (fun (V4755) -> fun (V4756) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1847)); {'Idris.Core.Value.NErased', E1848, E1849} -> (fun (V4757, V4758) -> fun (V4759) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1848, E1849)); _ -> fun (V4760) -> begin (V4762 = begin (V4761 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4761} end), case V4762 of {'Idris.Prelude.Types.Left', E1809} -> (fun (V4763) -> {'Idris.Prelude.Types.Left', V4763} end(E1809)); {'Idris.Prelude.Types.Right', E1810} -> (fun (V4764) -> begin (V4765 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4764, {'Idris.Core.Env.Nil'}, V3, V4760))), case V4765 of {'Idris.Prelude.Types.Left', E1811} -> (fun (V4766) -> {'Idris.Prelude.Types.Left', V4766} end(E1811)); {'Idris.Prelude.Types.Right', E1812} -> (fun (V4767) -> begin (V4772 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4768) -> fun (V4769) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4768, V4769)) end end, fun (V4770) -> fun (V4771) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4770, V4771)) end end}, V4767, V4760))), case V4772 of {'Idris.Prelude.Types.Left', E1813} -> (fun (V4773) -> {'Idris.Prelude.Types.Left', V4773} end(E1813)); {'Idris.Prelude.Types.Right', E1814} -> (fun (V4774) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4774))))}, V4760)) end(E1814)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1812)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1810)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E1676, E1677, E1678, E1679, E1680} -> (fun (V4775, V4776, V4777, V4778, V4779) -> fun (V4780) -> begin (V4782 = begin (V4781 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4781} end), case V4782 of {'Idris.Prelude.Types.Left', E1681} -> (fun (V4783) -> {'Idris.Prelude.Types.Left', V4783} end(E1681)); {'Idris.Prelude.Types.Right', E1682} -> (fun (V4784) -> begin (V4789 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4785) -> fun (V4786) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4785, V4786)) end end, fun (V4787) -> fun (V4788) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4787, V4788)) end end}, V4776, V4780))), case V4789 of {'Idris.Prelude.Types.Left', E1683} -> (fun (V4790) -> {'Idris.Prelude.Types.Left', V4790} end(E1683)); {'Idris.Prelude.Types.Right', E1684} -> (fun (V4791) -> begin (V4793 = (('un--getNArgs'(V0, V4784, V4791, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4792) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4792)) end, V4779))))(V4780))), case V4793 of {'Idris.Prelude.Types.Left', E1685} -> (fun (V4794) -> {'Idris.Prelude.Types.Left', V4794} end(E1685)); {'Idris.Prelude.Types.Right', E1686} -> (fun (V4795) -> case V4795 of {'Idris.Compiler.CompileExpr.User', E1687, E1688} -> (fun (V4796, V4797) -> begin (V4799 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4798) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4784, V4798)) end, V4797, []))(V4780))), case V4799 of {'Idris.Prelude.Types.Left', E1689} -> (fun (V4800) -> {'Idris.Prelude.Types.Left', V4800} end(E1689)); {'Idris.Prelude.Types.Right', E1690} -> (fun (V4801) -> begin (V4803 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4802) -> ('un--nfToCFType'(V0, V4775, V2, V4802)) end, V4801, []))(V4780))), case V4803 of {'Idris.Prelude.Types.Left', E1691} -> (fun (V4804) -> {'Idris.Prelude.Types.Left', V4804} end(E1691)); {'Idris.Prelude.Types.Right', E1692} -> (fun (V4805) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4791, V4805}} end(E1692)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1690)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1687, E1688)); {'Idris.Compiler.CompileExpr.Struct', E1693, E1694} -> (fun (V4806, V4807) -> begin (V4818 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4808) -> case V4808 of {'Idris.Builtin.MkPair', E1695, E1696} -> (fun (V4809, V4810) -> fun (V4811) -> begin (V4812 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4784, V4810))(V4811))), case V4812 of {'Idris.Prelude.Types.Left', E1697} -> (fun (V4813) -> {'Idris.Prelude.Types.Left', V4813} end(E1697)); {'Idris.Prelude.Types.Right', E1698} -> (fun (V4814) -> begin (V4815 = (('un--nfToCFType'(V0, V4775, 0, V4814))(V4811))), case V4815 of {'Idris.Prelude.Types.Left', E1699} -> (fun (V4816) -> {'Idris.Prelude.Types.Left', V4816} end(E1699)); {'Idris.Prelude.Types.Right', E1700} -> (fun (V4817) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4809, V4817}} end(E1700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1695, E1696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4807, []))(V4780))), case V4818 of {'Idris.Prelude.Types.Left', E1701} -> (fun (V4819) -> {'Idris.Prelude.Types.Left', V4819} end(E1701)); {'Idris.Prelude.Types.Right', E1702} -> (fun (V4820) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4806, V4820}} end(E1702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1693, E1694)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1703} -> (fun (V4821) -> begin (V4822 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4784, V4821))(V4780))), case V4822 of {'Idris.Prelude.Types.Left', E1704} -> (fun (V4823) -> {'Idris.Prelude.Types.Left', V4823} end(E1704)); {'Idris.Prelude.Types.Right', E1705} -> (fun (V4824) -> begin (V4825 = (('un--nfToCFType'(V0, V4775, V2, V4824))(V4780))), case V4825 of {'Idris.Prelude.Types.Left', E1706} -> (fun (V4826) -> {'Idris.Prelude.Types.Left', V4826} end(E1706)); {'Idris.Prelude.Types.Right', E1707} -> (fun (V4827) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4827}} end(E1707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1705)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1703)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1686)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1684)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1682)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1676, E1677, E1678, E1679, E1680)); {'Idris.Core.Value.NType', E1708} -> (fun (V4828) -> fun (V4829) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1708)); {'Idris.Core.Value.NErased', E1709, E1710} -> (fun (V4830, V4831) -> fun (V4832) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1709, E1710)); _ -> fun (V4833) -> begin (V4835 = begin (V4834 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4834} end), case V4835 of {'Idris.Prelude.Types.Left', E1670} -> (fun (V4836) -> {'Idris.Prelude.Types.Left', V4836} end(E1670)); {'Idris.Prelude.Types.Right', E1671} -> (fun (V4837) -> begin (V4838 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4837, {'Idris.Core.Env.Nil'}, V3, V4833))), case V4838 of {'Idris.Prelude.Types.Left', E1672} -> (fun (V4839) -> {'Idris.Prelude.Types.Left', V4839} end(E1672)); {'Idris.Prelude.Types.Right', E1673} -> (fun (V4840) -> begin (V4845 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4841) -> fun (V4842) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4841, V4842)) end end, fun (V4843) -> fun (V4844) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4843, V4844)) end end}, V4840, V4833))), case V4845 of {'Idris.Prelude.Types.Left', E1674} -> (fun (V4846) -> {'Idris.Prelude.Types.Left', V4846} end(E1674)); {'Idris.Prelude.Types.Right', E1675} -> (fun (V4847) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4847))))}, V4833)) end(E1675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1673)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1671)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E1668, E1669)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E1566, E1567, E1568, E1569} -> (fun (V4848, V4849, V4850, V4851) -> case V4850 of {'Idris.Core.TT.Pi', E1611, E1612, E1613, E1614} -> (fun (V4852, V4853, V4854, V4855) -> fun (V4856) -> begin (V4858 = begin (V4857 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4857} end), case V4858 of {'Idris.Prelude.Types.Left', E1615} -> (fun (V4859) -> {'Idris.Prelude.Types.Left', V4859} end(E1615)); {'Idris.Prelude.Types.Right', E1616} -> (fun (V4860) -> begin (V4861 = (('un--nfToCFType'(V0, V4848, 1, V4855))(V4856))), case V4861 of {'Idris.Prelude.Types.Left', E1617} -> (fun (V4862) -> {'Idris.Prelude.Types.Left', V4862} end(E1617)); {'Idris.Prelude.Types.Right', E1618} -> (fun (V4863) -> begin (V4864 = (((V4851(V4860))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4848, 1}))))(V4856))), case V4864 of {'Idris.Prelude.Types.Left', E1619} -> (fun (V4865) -> {'Idris.Prelude.Types.Left', V4865} end(E1619)); {'Idris.Prelude.Types.Right', E1620} -> (fun (V4866) -> begin (V4867 = (('un--nfToCFType'(V0, V4848, 1, V4866))(V4856))), case V4867 of {'Idris.Prelude.Types.Left', E1621} -> (fun (V4868) -> {'Idris.Prelude.Types.Left', V4868} end(E1621)); {'Idris.Prelude.Types.Right', E1622} -> (fun (V4869) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4863, V4869}} end(E1622)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1620)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1618)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1616)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1611, E1612, E1613, E1614)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1576, E1577, E1578, E1579, E1580} -> (fun (V4870, V4871, V4872, V4873, V4874) -> fun (V4875) -> begin (V4877 = begin (V4876 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4876} end), case V4877 of {'Idris.Prelude.Types.Left', E1581} -> (fun (V4878) -> {'Idris.Prelude.Types.Left', V4878} end(E1581)); {'Idris.Prelude.Types.Right', E1582} -> (fun (V4879) -> begin (V4884 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4880) -> fun (V4881) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4880, V4881)) end end, fun (V4882) -> fun (V4883) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4882, V4883)) end end}, V4871, V4875))), case V4884 of {'Idris.Prelude.Types.Left', E1583} -> (fun (V4885) -> {'Idris.Prelude.Types.Left', V4885} end(E1583)); {'Idris.Prelude.Types.Right', E1584} -> (fun (V4886) -> begin (V4888 = (('un--getNArgs'(V0, V4879, V4886, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4887) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4887)) end, V4874))))(V4875))), case V4888 of {'Idris.Prelude.Types.Left', E1585} -> (fun (V4889) -> {'Idris.Prelude.Types.Left', V4889} end(E1585)); {'Idris.Prelude.Types.Right', E1586} -> (fun (V4890) -> case V4890 of {'Idris.Compiler.CompileExpr.User', E1587, E1588} -> (fun (V4891, V4892) -> begin (V4894 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4893) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4879, V4893)) end, V4892, []))(V4875))), case V4894 of {'Idris.Prelude.Types.Left', E1589} -> (fun (V4895) -> {'Idris.Prelude.Types.Left', V4895} end(E1589)); {'Idris.Prelude.Types.Right', E1590} -> (fun (V4896) -> begin (V4898 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4897) -> ('un--nfToCFType'(V0, V4870, V2, V4897)) end, V4896, []))(V4875))), case V4898 of {'Idris.Prelude.Types.Left', E1591} -> (fun (V4899) -> {'Idris.Prelude.Types.Left', V4899} end(E1591)); {'Idris.Prelude.Types.Right', E1592} -> (fun (V4900) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4886, V4900}} end(E1592)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1590)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1587, E1588)); {'Idris.Compiler.CompileExpr.Struct', E1593, E1594} -> (fun (V4901, V4902) -> begin (V4913 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4903) -> case V4903 of {'Idris.Builtin.MkPair', E1595, E1596} -> (fun (V4904, V4905) -> fun (V4906) -> begin (V4907 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4879, V4905))(V4906))), case V4907 of {'Idris.Prelude.Types.Left', E1597} -> (fun (V4908) -> {'Idris.Prelude.Types.Left', V4908} end(E1597)); {'Idris.Prelude.Types.Right', E1598} -> (fun (V4909) -> begin (V4910 = (('un--nfToCFType'(V0, V4870, 0, V4909))(V4906))), case V4910 of {'Idris.Prelude.Types.Left', E1599} -> (fun (V4911) -> {'Idris.Prelude.Types.Left', V4911} end(E1599)); {'Idris.Prelude.Types.Right', E1600} -> (fun (V4912) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4904, V4912}} end(E1600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1595, E1596)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4902, []))(V4875))), case V4913 of {'Idris.Prelude.Types.Left', E1601} -> (fun (V4914) -> {'Idris.Prelude.Types.Left', V4914} end(E1601)); {'Idris.Prelude.Types.Right', E1602} -> (fun (V4915) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4901, V4915}} end(E1602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1593, E1594)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1603} -> (fun (V4916) -> begin (V4917 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4879, V4916))(V4875))), case V4917 of {'Idris.Prelude.Types.Left', E1604} -> (fun (V4918) -> {'Idris.Prelude.Types.Left', V4918} end(E1604)); {'Idris.Prelude.Types.Right', E1605} -> (fun (V4919) -> begin (V4920 = (('un--nfToCFType'(V0, V4870, V2, V4919))(V4875))), case V4920 of {'Idris.Prelude.Types.Left', E1606} -> (fun (V4921) -> {'Idris.Prelude.Types.Left', V4921} end(E1606)); {'Idris.Prelude.Types.Right', E1607} -> (fun (V4922) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4922}} end(E1607)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1605)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1603)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1576, E1577, E1578, E1579, E1580)); {'Idris.Core.Value.NType', E1608} -> (fun (V4923) -> fun (V4924) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1608)); {'Idris.Core.Value.NErased', E1609, E1610} -> (fun (V4925, V4926) -> fun (V4927) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1609, E1610)); _ -> fun (V4928) -> begin (V4930 = begin (V4929 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4929} end), case V4930 of {'Idris.Prelude.Types.Left', E1570} -> (fun (V4931) -> {'Idris.Prelude.Types.Left', V4931} end(E1570)); {'Idris.Prelude.Types.Right', E1571} -> (fun (V4932) -> begin (V4933 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4932, {'Idris.Core.Env.Nil'}, V3, V4928))), case V4933 of {'Idris.Prelude.Types.Left', E1572} -> (fun (V4934) -> {'Idris.Prelude.Types.Left', V4934} end(E1572)); {'Idris.Prelude.Types.Right', E1573} -> (fun (V4935) -> begin (V4940 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4936) -> fun (V4937) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V4936, V4937)) end end, fun (V4938) -> fun (V4939) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V4938, V4939)) end end}, V4935, V4928))), case V4940 of {'Idris.Prelude.Types.Left', E1574} -> (fun (V4941) -> {'Idris.Prelude.Types.Left', V4941} end(E1574)); {'Idris.Prelude.Types.Right', E1575} -> (fun (V4942) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4942))))}, V4928)) end(E1575)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1566, E1567, E1568, E1569)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1531, E1532, E1533, E1534, E1535} -> (fun (V4943, V4944, V4945, V4946, V4947) -> fun (V4948) -> begin (V4950 = begin (V4949 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4949} end), case V4950 of {'Idris.Prelude.Types.Left', E1536} -> (fun (V4951) -> {'Idris.Prelude.Types.Left', V4951} end(E1536)); {'Idris.Prelude.Types.Right', E1537} -> (fun (V4952) -> begin (V4957 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4953) -> fun (V4954) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4953, V4954)) end end, fun (V4955) -> fun (V4956) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4955, V4956)) end end}, V4944, V4948))), case V4957 of {'Idris.Prelude.Types.Left', E1538} -> (fun (V4958) -> {'Idris.Prelude.Types.Left', V4958} end(E1538)); {'Idris.Prelude.Types.Right', E1539} -> (fun (V4959) -> begin (V4961 = (('un--getNArgs'(V0, V4952, V4959, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4960) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4960)) end, V4947))))(V4948))), case V4961 of {'Idris.Prelude.Types.Left', E1540} -> (fun (V4962) -> {'Idris.Prelude.Types.Left', V4962} end(E1540)); {'Idris.Prelude.Types.Right', E1541} -> (fun (V4963) -> case V4963 of {'Idris.Compiler.CompileExpr.User', E1542, E1543} -> (fun (V4964, V4965) -> begin (V4967 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4966) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4952, V4966)) end, V4965, []))(V4948))), case V4967 of {'Idris.Prelude.Types.Left', E1544} -> (fun (V4968) -> {'Idris.Prelude.Types.Left', V4968} end(E1544)); {'Idris.Prelude.Types.Right', E1545} -> (fun (V4969) -> begin (V4971 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4970) -> ('un--nfToCFType'(V0, V4943, V2, V4970)) end, V4969, []))(V4948))), case V4971 of {'Idris.Prelude.Types.Left', E1546} -> (fun (V4972) -> {'Idris.Prelude.Types.Left', V4972} end(E1546)); {'Idris.Prelude.Types.Right', E1547} -> (fun (V4973) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4959, V4973}} end(E1547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1545)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1542, E1543)); {'Idris.Compiler.CompileExpr.Struct', E1548, E1549} -> (fun (V4974, V4975) -> begin (V4986 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V4976) -> case V4976 of {'Idris.Builtin.MkPair', E1550, E1551} -> (fun (V4977, V4978) -> fun (V4979) -> begin (V4980 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4952, V4978))(V4979))), case V4980 of {'Idris.Prelude.Types.Left', E1552} -> (fun (V4981) -> {'Idris.Prelude.Types.Left', V4981} end(E1552)); {'Idris.Prelude.Types.Right', E1553} -> (fun (V4982) -> begin (V4983 = (('un--nfToCFType'(V0, V4943, 0, V4982))(V4979))), case V4983 of {'Idris.Prelude.Types.Left', E1554} -> (fun (V4984) -> {'Idris.Prelude.Types.Left', V4984} end(E1554)); {'Idris.Prelude.Types.Right', E1555} -> (fun (V4985) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4977, V4985}} end(E1555)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1550, E1551)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V4975, []))(V4948))), case V4986 of {'Idris.Prelude.Types.Left', E1556} -> (fun (V4987) -> {'Idris.Prelude.Types.Left', V4987} end(E1556)); {'Idris.Prelude.Types.Right', E1557} -> (fun (V4988) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4974, V4988}} end(E1557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1548, E1549)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1558} -> (fun (V4989) -> begin (V4990 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4952, V4989))(V4948))), case V4990 of {'Idris.Prelude.Types.Left', E1559} -> (fun (V4991) -> {'Idris.Prelude.Types.Left', V4991} end(E1559)); {'Idris.Prelude.Types.Right', E1560} -> (fun (V4992) -> begin (V4993 = (('un--nfToCFType'(V0, V4943, V2, V4992))(V4948))), case V4993 of {'Idris.Prelude.Types.Left', E1561} -> (fun (V4994) -> {'Idris.Prelude.Types.Left', V4994} end(E1561)); {'Idris.Prelude.Types.Right', E1562} -> (fun (V4995) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4995}} end(E1562)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1560)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1558)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1541)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1531, E1532, E1533, E1534, E1535)); {'Idris.Core.Value.NType', E1563} -> (fun (V4996) -> fun (V4997) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1563)); {'Idris.Core.Value.NErased', E1564, E1565} -> (fun (V4998, V4999) -> fun (V5000) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1564, E1565)); _ -> fun (V5001) -> begin (V5003 = begin (V5002 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5002} end), case V5003 of {'Idris.Prelude.Types.Left', E1525} -> (fun (V5004) -> {'Idris.Prelude.Types.Left', V5004} end(E1525)); {'Idris.Prelude.Types.Right', E1526} -> (fun (V5005) -> begin (V5006 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5005, {'Idris.Core.Env.Nil'}, V3, V5001))), case V5006 of {'Idris.Prelude.Types.Left', E1527} -> (fun (V5007) -> {'Idris.Prelude.Types.Left', V5007} end(E1527)); {'Idris.Prelude.Types.Right', E1528} -> (fun (V5008) -> begin (V5013 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5009) -> fun (V5010) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5009, V5010)) end end, fun (V5011) -> fun (V5012) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5011, V5012)) end end}, V5008, V5001))), case V5013 of {'Idris.Prelude.Types.Left', E1529} -> (fun (V5014) -> {'Idris.Prelude.Types.Left', V5014} end(E1529)); {'Idris.Prelude.Types.Right', E1530} -> (fun (V5015) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5015))))}, V5001)) end(E1530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E1664, E1665, E1666, E1667} -> (fun (V5016, V5017, V5018, V5019) -> fun (V5020) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V5016, <<"Function types not allowed in a foreign struct"/utf8>>}, V5020)) end end(E1664, E1665, E1666, E1667)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1629, E1630, E1631, E1632, E1633} -> (fun (V5021, V5022, V5023, V5024, V5025) -> fun (V5026) -> begin (V5028 = begin (V5027 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5027} end), case V5028 of {'Idris.Prelude.Types.Left', E1634} -> (fun (V5029) -> {'Idris.Prelude.Types.Left', V5029} end(E1634)); {'Idris.Prelude.Types.Right', E1635} -> (fun (V5030) -> begin (V5035 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5031) -> fun (V5032) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5031, V5032)) end end, fun (V5033) -> fun (V5034) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5033, V5034)) end end}, V5022, V5026))), case V5035 of {'Idris.Prelude.Types.Left', E1636} -> (fun (V5036) -> {'Idris.Prelude.Types.Left', V5036} end(E1636)); {'Idris.Prelude.Types.Right', E1637} -> (fun (V5037) -> begin (V5039 = (('un--getNArgs'(V0, V5030, V5037, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5038) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5038)) end, V5025))))(V5026))), case V5039 of {'Idris.Prelude.Types.Left', E1638} -> (fun (V5040) -> {'Idris.Prelude.Types.Left', V5040} end(E1638)); {'Idris.Prelude.Types.Right', E1639} -> (fun (V5041) -> case V5041 of {'Idris.Compiler.CompileExpr.User', E1640, E1641} -> (fun (V5042, V5043) -> begin (V5045 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5044) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5030, V5044)) end, V5043, []))(V5026))), case V5045 of {'Idris.Prelude.Types.Left', E1642} -> (fun (V5046) -> {'Idris.Prelude.Types.Left', V5046} end(E1642)); {'Idris.Prelude.Types.Right', E1643} -> (fun (V5047) -> begin (V5049 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5048) -> ('un--nfToCFType'(V0, V5021, V2, V5048)) end, V5047, []))(V5026))), case V5049 of {'Idris.Prelude.Types.Left', E1644} -> (fun (V5050) -> {'Idris.Prelude.Types.Left', V5050} end(E1644)); {'Idris.Prelude.Types.Right', E1645} -> (fun (V5051) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5037, V5051}} end(E1645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1643)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1640, E1641)); {'Idris.Compiler.CompileExpr.Struct', E1646, E1647} -> (fun (V5052, V5053) -> begin (V5064 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5054) -> case V5054 of {'Idris.Builtin.MkPair', E1648, E1649} -> (fun (V5055, V5056) -> fun (V5057) -> begin (V5058 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5030, V5056))(V5057))), case V5058 of {'Idris.Prelude.Types.Left', E1650} -> (fun (V5059) -> {'Idris.Prelude.Types.Left', V5059} end(E1650)); {'Idris.Prelude.Types.Right', E1651} -> (fun (V5060) -> begin (V5061 = (('un--nfToCFType'(V0, V5021, 0, V5060))(V5057))), case V5061 of {'Idris.Prelude.Types.Left', E1652} -> (fun (V5062) -> {'Idris.Prelude.Types.Left', V5062} end(E1652)); {'Idris.Prelude.Types.Right', E1653} -> (fun (V5063) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5055, V5063}} end(E1653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1648, E1649)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5053, []))(V5026))), case V5064 of {'Idris.Prelude.Types.Left', E1654} -> (fun (V5065) -> {'Idris.Prelude.Types.Left', V5065} end(E1654)); {'Idris.Prelude.Types.Right', E1655} -> (fun (V5066) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5052, V5066}} end(E1655)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1646, E1647)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1656} -> (fun (V5067) -> begin (V5068 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5030, V5067))(V5026))), case V5068 of {'Idris.Prelude.Types.Left', E1657} -> (fun (V5069) -> {'Idris.Prelude.Types.Left', V5069} end(E1657)); {'Idris.Prelude.Types.Right', E1658} -> (fun (V5070) -> begin (V5071 = (('un--nfToCFType'(V0, V5021, V2, V5070))(V5026))), case V5071 of {'Idris.Prelude.Types.Left', E1659} -> (fun (V5072) -> {'Idris.Prelude.Types.Left', V5072} end(E1659)); {'Idris.Prelude.Types.Right', E1660} -> (fun (V5073) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5073}} end(E1660)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1656)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1639)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1637)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1629, E1630, E1631, E1632, E1633)); {'Idris.Core.Value.NType', E1661} -> (fun (V5074) -> fun (V5075) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1661)); {'Idris.Core.Value.NErased', E1662, E1663} -> (fun (V5076, V5077) -> fun (V5078) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1662, E1663)); _ -> fun (V5079) -> begin (V5081 = begin (V5080 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5080} end), case V5081 of {'Idris.Prelude.Types.Left', E1623} -> (fun (V5082) -> {'Idris.Prelude.Types.Left', V5082} end(E1623)); {'Idris.Prelude.Types.Right', E1624} -> (fun (V5083) -> begin (V5084 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5083, {'Idris.Core.Env.Nil'}, V3, V5079))), case V5084 of {'Idris.Prelude.Types.Left', E1625} -> (fun (V5085) -> {'Idris.Prelude.Types.Left', V5085} end(E1625)); {'Idris.Prelude.Types.Right', E1626} -> (fun (V5086) -> begin (V5091 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5087) -> fun (V5088) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5087, V5088)) end end, fun (V5089) -> fun (V5090) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5089, V5090)) end end}, V5086, V5079))), case V5091 of {'Idris.Prelude.Types.Left', E1627} -> (fun (V5092) -> {'Idris.Prelude.Types.Left', V5092} end(E1627)); {'Idris.Prelude.Types.Right', E1628} -> (fun (V5093) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5093))))}, V5079)) end(E1628)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E1490, E1491, E1492, E1493, E1494} -> (fun (V5094, V5095, V5096, V5097, V5098) -> fun (V5099) -> begin (V5101 = begin (V5100 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5100} end), case V5101 of {'Idris.Prelude.Types.Left', E1495} -> (fun (V5102) -> {'Idris.Prelude.Types.Left', V5102} end(E1495)); {'Idris.Prelude.Types.Right', E1496} -> (fun (V5103) -> begin (V5108 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5104) -> fun (V5105) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5104, V5105)) end end, fun (V5106) -> fun (V5107) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5106, V5107)) end end}, V5095, V5099))), case V5108 of {'Idris.Prelude.Types.Left', E1497} -> (fun (V5109) -> {'Idris.Prelude.Types.Left', V5109} end(E1497)); {'Idris.Prelude.Types.Right', E1498} -> (fun (V5110) -> begin (V5112 = (('un--getNArgs'(V0, V5103, V5110, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5111) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5111)) end, V5098))))(V5099))), case V5112 of {'Idris.Prelude.Types.Left', E1499} -> (fun (V5113) -> {'Idris.Prelude.Types.Left', V5113} end(E1499)); {'Idris.Prelude.Types.Right', E1500} -> (fun (V5114) -> case V5114 of {'Idris.Compiler.CompileExpr.User', E1501, E1502} -> (fun (V5115, V5116) -> begin (V5118 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5117) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5103, V5117)) end, V5116, []))(V5099))), case V5118 of {'Idris.Prelude.Types.Left', E1503} -> (fun (V5119) -> {'Idris.Prelude.Types.Left', V5119} end(E1503)); {'Idris.Prelude.Types.Right', E1504} -> (fun (V5120) -> begin (V5122 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5121) -> ('un--nfToCFType'(V0, V5094, V2, V5121)) end, V5120, []))(V5099))), case V5122 of {'Idris.Prelude.Types.Left', E1505} -> (fun (V5123) -> {'Idris.Prelude.Types.Left', V5123} end(E1505)); {'Idris.Prelude.Types.Right', E1506} -> (fun (V5124) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5110, V5124}} end(E1506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1501, E1502)); {'Idris.Compiler.CompileExpr.Struct', E1507, E1508} -> (fun (V5125, V5126) -> begin (V5137 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5127) -> case V5127 of {'Idris.Builtin.MkPair', E1509, E1510} -> (fun (V5128, V5129) -> fun (V5130) -> begin (V5131 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5103, V5129))(V5130))), case V5131 of {'Idris.Prelude.Types.Left', E1511} -> (fun (V5132) -> {'Idris.Prelude.Types.Left', V5132} end(E1511)); {'Idris.Prelude.Types.Right', E1512} -> (fun (V5133) -> begin (V5134 = (('un--nfToCFType'(V0, V5094, 0, V5133))(V5130))), case V5134 of {'Idris.Prelude.Types.Left', E1513} -> (fun (V5135) -> {'Idris.Prelude.Types.Left', V5135} end(E1513)); {'Idris.Prelude.Types.Right', E1514} -> (fun (V5136) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5128, V5136}} end(E1514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1509, E1510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5126, []))(V5099))), case V5137 of {'Idris.Prelude.Types.Left', E1515} -> (fun (V5138) -> {'Idris.Prelude.Types.Left', V5138} end(E1515)); {'Idris.Prelude.Types.Right', E1516} -> (fun (V5139) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5125, V5139}} end(E1516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1507, E1508)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1517} -> (fun (V5140) -> begin (V5141 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5103, V5140))(V5099))), case V5141 of {'Idris.Prelude.Types.Left', E1518} -> (fun (V5142) -> {'Idris.Prelude.Types.Left', V5142} end(E1518)); {'Idris.Prelude.Types.Right', E1519} -> (fun (V5143) -> begin (V5144 = (('un--nfToCFType'(V0, V5094, V2, V5143))(V5099))), case V5144 of {'Idris.Prelude.Types.Left', E1520} -> (fun (V5145) -> {'Idris.Prelude.Types.Left', V5145} end(E1520)); {'Idris.Prelude.Types.Right', E1521} -> (fun (V5146) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5146}} end(E1521)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1519)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1517)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1500)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1498)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1496)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1490, E1491, E1492, E1493, E1494)); {'Idris.Core.Value.NType', E1522} -> (fun (V5147) -> fun (V5148) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1522)); {'Idris.Core.Value.NErased', E1523, E1524} -> (fun (V5149, V5150) -> fun (V5151) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1523, E1524)); _ -> fun (V5152) -> begin (V5154 = begin (V5153 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5153} end), case V5154 of {'Idris.Prelude.Types.Left', E1484} -> (fun (V5155) -> {'Idris.Prelude.Types.Left', V5155} end(E1484)); {'Idris.Prelude.Types.Right', E1485} -> (fun (V5156) -> begin (V5157 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5156, {'Idris.Core.Env.Nil'}, V3, V5152))), case V5157 of {'Idris.Prelude.Types.Left', E1486} -> (fun (V5158) -> {'Idris.Prelude.Types.Left', V5158} end(E1486)); {'Idris.Prelude.Types.Right', E1487} -> (fun (V5159) -> begin (V5164 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5160) -> fun (V5161) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5160, V5161)) end end, fun (V5162) -> fun (V5163) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5162, V5163)) end end}, V5159, V5152))), case V5164 of {'Idris.Prelude.Types.Left', E1488} -> (fun (V5165) -> {'Idris.Prelude.Types.Left', V5165} end(E1488)); {'Idris.Prelude.Types.Right', E1489} -> (fun (V5166) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5166))))}, V5152)) end(E1489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1487)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E1482, E1483)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E1296, E1297} -> (fun (V5167, V5168) -> case V5168 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V5169) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V5170) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V5171) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E1380, E1381, E1382, E1383} -> (fun (V5172, V5173, V5174, V5175) -> case V5174 of {'Idris.Core.TT.Pi', E1425, E1426, E1427, E1428} -> (fun (V5176, V5177, V5178, V5179) -> fun (V5180) -> begin (V5182 = begin (V5181 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5181} end), case V5182 of {'Idris.Prelude.Types.Left', E1429} -> (fun (V5183) -> {'Idris.Prelude.Types.Left', V5183} end(E1429)); {'Idris.Prelude.Types.Right', E1430} -> (fun (V5184) -> begin (V5185 = (('un--nfToCFType'(V0, V5172, 1, V5179))(V5180))), case V5185 of {'Idris.Prelude.Types.Left', E1431} -> (fun (V5186) -> {'Idris.Prelude.Types.Left', V5186} end(E1431)); {'Idris.Prelude.Types.Right', E1432} -> (fun (V5187) -> begin (V5188 = (((V5175(V5184))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5172, 1}))))(V5180))), case V5188 of {'Idris.Prelude.Types.Left', E1433} -> (fun (V5189) -> {'Idris.Prelude.Types.Left', V5189} end(E1433)); {'Idris.Prelude.Types.Right', E1434} -> (fun (V5190) -> begin (V5191 = (('un--nfToCFType'(V0, V5172, 1, V5190))(V5180))), case V5191 of {'Idris.Prelude.Types.Left', E1435} -> (fun (V5192) -> {'Idris.Prelude.Types.Left', V5192} end(E1435)); {'Idris.Prelude.Types.Right', E1436} -> (fun (V5193) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5187, V5193}} end(E1436)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1434)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1430)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1425, E1426, E1427, E1428)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1390, E1391, E1392, E1393, E1394} -> (fun (V5194, V5195, V5196, V5197, V5198) -> fun (V5199) -> begin (V5201 = begin (V5200 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5200} end), case V5201 of {'Idris.Prelude.Types.Left', E1395} -> (fun (V5202) -> {'Idris.Prelude.Types.Left', V5202} end(E1395)); {'Idris.Prelude.Types.Right', E1396} -> (fun (V5203) -> begin (V5208 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5204) -> fun (V5205) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5204, V5205)) end end, fun (V5206) -> fun (V5207) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5206, V5207)) end end}, V5195, V5199))), case V5208 of {'Idris.Prelude.Types.Left', E1397} -> (fun (V5209) -> {'Idris.Prelude.Types.Left', V5209} end(E1397)); {'Idris.Prelude.Types.Right', E1398} -> (fun (V5210) -> begin (V5212 = (('un--getNArgs'(V0, V5203, V5210, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5211) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5211)) end, V5198))))(V5199))), case V5212 of {'Idris.Prelude.Types.Left', E1399} -> (fun (V5213) -> {'Idris.Prelude.Types.Left', V5213} end(E1399)); {'Idris.Prelude.Types.Right', E1400} -> (fun (V5214) -> case V5214 of {'Idris.Compiler.CompileExpr.User', E1401, E1402} -> (fun (V5215, V5216) -> begin (V5218 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5217) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5203, V5217)) end, V5216, []))(V5199))), case V5218 of {'Idris.Prelude.Types.Left', E1403} -> (fun (V5219) -> {'Idris.Prelude.Types.Left', V5219} end(E1403)); {'Idris.Prelude.Types.Right', E1404} -> (fun (V5220) -> begin (V5222 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5221) -> ('un--nfToCFType'(V0, V5194, V2, V5221)) end, V5220, []))(V5199))), case V5222 of {'Idris.Prelude.Types.Left', E1405} -> (fun (V5223) -> {'Idris.Prelude.Types.Left', V5223} end(E1405)); {'Idris.Prelude.Types.Right', E1406} -> (fun (V5224) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5210, V5224}} end(E1406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1401, E1402)); {'Idris.Compiler.CompileExpr.Struct', E1407, E1408} -> (fun (V5225, V5226) -> begin (V5237 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5227) -> case V5227 of {'Idris.Builtin.MkPair', E1409, E1410} -> (fun (V5228, V5229) -> fun (V5230) -> begin (V5231 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5203, V5229))(V5230))), case V5231 of {'Idris.Prelude.Types.Left', E1411} -> (fun (V5232) -> {'Idris.Prelude.Types.Left', V5232} end(E1411)); {'Idris.Prelude.Types.Right', E1412} -> (fun (V5233) -> begin (V5234 = (('un--nfToCFType'(V0, V5194, 0, V5233))(V5230))), case V5234 of {'Idris.Prelude.Types.Left', E1413} -> (fun (V5235) -> {'Idris.Prelude.Types.Left', V5235} end(E1413)); {'Idris.Prelude.Types.Right', E1414} -> (fun (V5236) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5228, V5236}} end(E1414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1409, E1410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5226, []))(V5199))), case V5237 of {'Idris.Prelude.Types.Left', E1415} -> (fun (V5238) -> {'Idris.Prelude.Types.Left', V5238} end(E1415)); {'Idris.Prelude.Types.Right', E1416} -> (fun (V5239) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5225, V5239}} end(E1416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1407, E1408)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1417} -> (fun (V5240) -> begin (V5241 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5203, V5240))(V5199))), case V5241 of {'Idris.Prelude.Types.Left', E1418} -> (fun (V5242) -> {'Idris.Prelude.Types.Left', V5242} end(E1418)); {'Idris.Prelude.Types.Right', E1419} -> (fun (V5243) -> begin (V5244 = (('un--nfToCFType'(V0, V5194, V2, V5243))(V5199))), case V5244 of {'Idris.Prelude.Types.Left', E1420} -> (fun (V5245) -> {'Idris.Prelude.Types.Left', V5245} end(E1420)); {'Idris.Prelude.Types.Right', E1421} -> (fun (V5246) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5246}} end(E1421)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1419)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1390, E1391, E1392, E1393, E1394)); {'Idris.Core.Value.NType', E1422} -> (fun (V5247) -> fun (V5248) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1422)); {'Idris.Core.Value.NErased', E1423, E1424} -> (fun (V5249, V5250) -> fun (V5251) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1423, E1424)); _ -> fun (V5252) -> begin (V5254 = begin (V5253 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5253} end), case V5254 of {'Idris.Prelude.Types.Left', E1384} -> (fun (V5255) -> {'Idris.Prelude.Types.Left', V5255} end(E1384)); {'Idris.Prelude.Types.Right', E1385} -> (fun (V5256) -> begin (V5257 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5256, {'Idris.Core.Env.Nil'}, V3, V5252))), case V5257 of {'Idris.Prelude.Types.Left', E1386} -> (fun (V5258) -> {'Idris.Prelude.Types.Left', V5258} end(E1386)); {'Idris.Prelude.Types.Right', E1387} -> (fun (V5259) -> begin (V5264 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5260) -> fun (V5261) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5260, V5261)) end end, fun (V5262) -> fun (V5263) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5262, V5263)) end end}, V5259, V5252))), case V5264 of {'Idris.Prelude.Types.Left', E1388} -> (fun (V5265) -> {'Idris.Prelude.Types.Left', V5265} end(E1388)); {'Idris.Prelude.Types.Right', E1389} -> (fun (V5266) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5266))))}, V5252)) end(E1389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1380, E1381, E1382, E1383)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1345, E1346, E1347, E1348, E1349} -> (fun (V5267, V5268, V5269, V5270, V5271) -> fun (V5272) -> begin (V5274 = begin (V5273 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5273} end), case V5274 of {'Idris.Prelude.Types.Left', E1350} -> (fun (V5275) -> {'Idris.Prelude.Types.Left', V5275} end(E1350)); {'Idris.Prelude.Types.Right', E1351} -> (fun (V5276) -> begin (V5281 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5277) -> fun (V5278) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5277, V5278)) end end, fun (V5279) -> fun (V5280) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5279, V5280)) end end}, V5268, V5272))), case V5281 of {'Idris.Prelude.Types.Left', E1352} -> (fun (V5282) -> {'Idris.Prelude.Types.Left', V5282} end(E1352)); {'Idris.Prelude.Types.Right', E1353} -> (fun (V5283) -> begin (V5285 = (('un--getNArgs'(V0, V5276, V5283, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5284) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5284)) end, V5271))))(V5272))), case V5285 of {'Idris.Prelude.Types.Left', E1354} -> (fun (V5286) -> {'Idris.Prelude.Types.Left', V5286} end(E1354)); {'Idris.Prelude.Types.Right', E1355} -> (fun (V5287) -> case V5287 of {'Idris.Compiler.CompileExpr.User', E1356, E1357} -> (fun (V5288, V5289) -> begin (V5291 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5290) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5276, V5290)) end, V5289, []))(V5272))), case V5291 of {'Idris.Prelude.Types.Left', E1358} -> (fun (V5292) -> {'Idris.Prelude.Types.Left', V5292} end(E1358)); {'Idris.Prelude.Types.Right', E1359} -> (fun (V5293) -> begin (V5295 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5294) -> ('un--nfToCFType'(V0, V5267, V2, V5294)) end, V5293, []))(V5272))), case V5295 of {'Idris.Prelude.Types.Left', E1360} -> (fun (V5296) -> {'Idris.Prelude.Types.Left', V5296} end(E1360)); {'Idris.Prelude.Types.Right', E1361} -> (fun (V5297) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5283, V5297}} end(E1361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1356, E1357)); {'Idris.Compiler.CompileExpr.Struct', E1362, E1363} -> (fun (V5298, V5299) -> begin (V5310 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5300) -> case V5300 of {'Idris.Builtin.MkPair', E1364, E1365} -> (fun (V5301, V5302) -> fun (V5303) -> begin (V5304 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5276, V5302))(V5303))), case V5304 of {'Idris.Prelude.Types.Left', E1366} -> (fun (V5305) -> {'Idris.Prelude.Types.Left', V5305} end(E1366)); {'Idris.Prelude.Types.Right', E1367} -> (fun (V5306) -> begin (V5307 = (('un--nfToCFType'(V0, V5267, 0, V5306))(V5303))), case V5307 of {'Idris.Prelude.Types.Left', E1368} -> (fun (V5308) -> {'Idris.Prelude.Types.Left', V5308} end(E1368)); {'Idris.Prelude.Types.Right', E1369} -> (fun (V5309) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5301, V5309}} end(E1369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1364, E1365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5299, []))(V5272))), case V5310 of {'Idris.Prelude.Types.Left', E1370} -> (fun (V5311) -> {'Idris.Prelude.Types.Left', V5311} end(E1370)); {'Idris.Prelude.Types.Right', E1371} -> (fun (V5312) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5298, V5312}} end(E1371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1362, E1363)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1372} -> (fun (V5313) -> begin (V5314 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5276, V5313))(V5272))), case V5314 of {'Idris.Prelude.Types.Left', E1373} -> (fun (V5315) -> {'Idris.Prelude.Types.Left', V5315} end(E1373)); {'Idris.Prelude.Types.Right', E1374} -> (fun (V5316) -> begin (V5317 = (('un--nfToCFType'(V0, V5267, V2, V5316))(V5272))), case V5317 of {'Idris.Prelude.Types.Left', E1375} -> (fun (V5318) -> {'Idris.Prelude.Types.Left', V5318} end(E1375)); {'Idris.Prelude.Types.Right', E1376} -> (fun (V5319) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5319}} end(E1376)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1353)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1345, E1346, E1347, E1348, E1349)); {'Idris.Core.Value.NType', E1377} -> (fun (V5320) -> fun (V5321) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1377)); {'Idris.Core.Value.NErased', E1378, E1379} -> (fun (V5322, V5323) -> fun (V5324) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1378, E1379)); _ -> fun (V5325) -> begin (V5327 = begin (V5326 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5326} end), case V5327 of {'Idris.Prelude.Types.Left', E1339} -> (fun (V5328) -> {'Idris.Prelude.Types.Left', V5328} end(E1339)); {'Idris.Prelude.Types.Right', E1340} -> (fun (V5329) -> begin (V5330 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5329, {'Idris.Core.Env.Nil'}, V3, V5325))), case V5330 of {'Idris.Prelude.Types.Left', E1341} -> (fun (V5331) -> {'Idris.Prelude.Types.Left', V5331} end(E1341)); {'Idris.Prelude.Types.Right', E1342} -> (fun (V5332) -> begin (V5337 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5333) -> fun (V5334) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5333, V5334)) end end, fun (V5335) -> fun (V5336) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5335, V5336)) end end}, V5332, V5325))), case V5337 of {'Idris.Prelude.Types.Left', E1343} -> (fun (V5338) -> {'Idris.Prelude.Types.Left', V5338} end(E1343)); {'Idris.Prelude.Types.Right', E1344} -> (fun (V5339) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5339))))}, V5325)) end(E1344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E1478, E1479, E1480, E1481} -> (fun (V5340, V5341, V5342, V5343) -> fun (V5344) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V5340, <<"Function types not allowed in a foreign struct"/utf8>>}, V5344)) end end(E1478, E1479, E1480, E1481)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1443, E1444, E1445, E1446, E1447} -> (fun (V5345, V5346, V5347, V5348, V5349) -> fun (V5350) -> begin (V5352 = begin (V5351 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5351} end), case V5352 of {'Idris.Prelude.Types.Left', E1448} -> (fun (V5353) -> {'Idris.Prelude.Types.Left', V5353} end(E1448)); {'Idris.Prelude.Types.Right', E1449} -> (fun (V5354) -> begin (V5359 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5355) -> fun (V5356) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5355, V5356)) end end, fun (V5357) -> fun (V5358) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5357, V5358)) end end}, V5346, V5350))), case V5359 of {'Idris.Prelude.Types.Left', E1450} -> (fun (V5360) -> {'Idris.Prelude.Types.Left', V5360} end(E1450)); {'Idris.Prelude.Types.Right', E1451} -> (fun (V5361) -> begin (V5363 = (('un--getNArgs'(V0, V5354, V5361, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5362) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5362)) end, V5349))))(V5350))), case V5363 of {'Idris.Prelude.Types.Left', E1452} -> (fun (V5364) -> {'Idris.Prelude.Types.Left', V5364} end(E1452)); {'Idris.Prelude.Types.Right', E1453} -> (fun (V5365) -> case V5365 of {'Idris.Compiler.CompileExpr.User', E1454, E1455} -> (fun (V5366, V5367) -> begin (V5369 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5368) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5354, V5368)) end, V5367, []))(V5350))), case V5369 of {'Idris.Prelude.Types.Left', E1456} -> (fun (V5370) -> {'Idris.Prelude.Types.Left', V5370} end(E1456)); {'Idris.Prelude.Types.Right', E1457} -> (fun (V5371) -> begin (V5373 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5372) -> ('un--nfToCFType'(V0, V5345, V2, V5372)) end, V5371, []))(V5350))), case V5373 of {'Idris.Prelude.Types.Left', E1458} -> (fun (V5374) -> {'Idris.Prelude.Types.Left', V5374} end(E1458)); {'Idris.Prelude.Types.Right', E1459} -> (fun (V5375) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5361, V5375}} end(E1459)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1454, E1455)); {'Idris.Compiler.CompileExpr.Struct', E1460, E1461} -> (fun (V5376, V5377) -> begin (V5388 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5378) -> case V5378 of {'Idris.Builtin.MkPair', E1462, E1463} -> (fun (V5379, V5380) -> fun (V5381) -> begin (V5382 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5354, V5380))(V5381))), case V5382 of {'Idris.Prelude.Types.Left', E1464} -> (fun (V5383) -> {'Idris.Prelude.Types.Left', V5383} end(E1464)); {'Idris.Prelude.Types.Right', E1465} -> (fun (V5384) -> begin (V5385 = (('un--nfToCFType'(V0, V5345, 0, V5384))(V5381))), case V5385 of {'Idris.Prelude.Types.Left', E1466} -> (fun (V5386) -> {'Idris.Prelude.Types.Left', V5386} end(E1466)); {'Idris.Prelude.Types.Right', E1467} -> (fun (V5387) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5379, V5387}} end(E1467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1462, E1463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5377, []))(V5350))), case V5388 of {'Idris.Prelude.Types.Left', E1468} -> (fun (V5389) -> {'Idris.Prelude.Types.Left', V5389} end(E1468)); {'Idris.Prelude.Types.Right', E1469} -> (fun (V5390) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5376, V5390}} end(E1469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1460, E1461)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1470} -> (fun (V5391) -> begin (V5392 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5354, V5391))(V5350))), case V5392 of {'Idris.Prelude.Types.Left', E1471} -> (fun (V5393) -> {'Idris.Prelude.Types.Left', V5393} end(E1471)); {'Idris.Prelude.Types.Right', E1472} -> (fun (V5394) -> begin (V5395 = (('un--nfToCFType'(V0, V5345, V2, V5394))(V5350))), case V5395 of {'Idris.Prelude.Types.Left', E1473} -> (fun (V5396) -> {'Idris.Prelude.Types.Left', V5396} end(E1473)); {'Idris.Prelude.Types.Right', E1474} -> (fun (V5397) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5397}} end(E1474)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1453)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1451)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1449)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1443, E1444, E1445, E1446, E1447)); {'Idris.Core.Value.NType', E1475} -> (fun (V5398) -> fun (V5399) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1475)); {'Idris.Core.Value.NErased', E1476, E1477} -> (fun (V5400, V5401) -> fun (V5402) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1476, E1477)); _ -> fun (V5403) -> begin (V5405 = begin (V5404 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5404} end), case V5405 of {'Idris.Prelude.Types.Left', E1437} -> (fun (V5406) -> {'Idris.Prelude.Types.Left', V5406} end(E1437)); {'Idris.Prelude.Types.Right', E1438} -> (fun (V5407) -> begin (V5408 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5407, {'Idris.Core.Env.Nil'}, V3, V5403))), case V5408 of {'Idris.Prelude.Types.Left', E1439} -> (fun (V5409) -> {'Idris.Prelude.Types.Left', V5409} end(E1439)); {'Idris.Prelude.Types.Right', E1440} -> (fun (V5410) -> begin (V5415 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5411) -> fun (V5412) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5411, V5412)) end end, fun (V5413) -> fun (V5414) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5413, V5414)) end end}, V5410, V5403))), case V5415 of {'Idris.Prelude.Types.Left', E1441} -> (fun (V5416) -> {'Idris.Prelude.Types.Left', V5416} end(E1441)); {'Idris.Prelude.Types.Right', E1442} -> (fun (V5417) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5417))))}, V5403)) end(E1442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E1304, E1305, E1306, E1307, E1308} -> (fun (V5418, V5419, V5420, V5421, V5422) -> fun (V5423) -> begin (V5425 = begin (V5424 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5424} end), case V5425 of {'Idris.Prelude.Types.Left', E1309} -> (fun (V5426) -> {'Idris.Prelude.Types.Left', V5426} end(E1309)); {'Idris.Prelude.Types.Right', E1310} -> (fun (V5427) -> begin (V5432 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5428) -> fun (V5429) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5428, V5429)) end end, fun (V5430) -> fun (V5431) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5430, V5431)) end end}, V5419, V5423))), case V5432 of {'Idris.Prelude.Types.Left', E1311} -> (fun (V5433) -> {'Idris.Prelude.Types.Left', V5433} end(E1311)); {'Idris.Prelude.Types.Right', E1312} -> (fun (V5434) -> begin (V5436 = (('un--getNArgs'(V0, V5427, V5434, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5435) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5435)) end, V5422))))(V5423))), case V5436 of {'Idris.Prelude.Types.Left', E1313} -> (fun (V5437) -> {'Idris.Prelude.Types.Left', V5437} end(E1313)); {'Idris.Prelude.Types.Right', E1314} -> (fun (V5438) -> case V5438 of {'Idris.Compiler.CompileExpr.User', E1315, E1316} -> (fun (V5439, V5440) -> begin (V5442 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5441) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5427, V5441)) end, V5440, []))(V5423))), case V5442 of {'Idris.Prelude.Types.Left', E1317} -> (fun (V5443) -> {'Idris.Prelude.Types.Left', V5443} end(E1317)); {'Idris.Prelude.Types.Right', E1318} -> (fun (V5444) -> begin (V5446 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5445) -> ('un--nfToCFType'(V0, V5418, V2, V5445)) end, V5444, []))(V5423))), case V5446 of {'Idris.Prelude.Types.Left', E1319} -> (fun (V5447) -> {'Idris.Prelude.Types.Left', V5447} end(E1319)); {'Idris.Prelude.Types.Right', E1320} -> (fun (V5448) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5434, V5448}} end(E1320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1315, E1316)); {'Idris.Compiler.CompileExpr.Struct', E1321, E1322} -> (fun (V5449, V5450) -> begin (V5461 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5451) -> case V5451 of {'Idris.Builtin.MkPair', E1323, E1324} -> (fun (V5452, V5453) -> fun (V5454) -> begin (V5455 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5427, V5453))(V5454))), case V5455 of {'Idris.Prelude.Types.Left', E1325} -> (fun (V5456) -> {'Idris.Prelude.Types.Left', V5456} end(E1325)); {'Idris.Prelude.Types.Right', E1326} -> (fun (V5457) -> begin (V5458 = (('un--nfToCFType'(V0, V5418, 0, V5457))(V5454))), case V5458 of {'Idris.Prelude.Types.Left', E1327} -> (fun (V5459) -> {'Idris.Prelude.Types.Left', V5459} end(E1327)); {'Idris.Prelude.Types.Right', E1328} -> (fun (V5460) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5452, V5460}} end(E1328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1323, E1324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5450, []))(V5423))), case V5461 of {'Idris.Prelude.Types.Left', E1329} -> (fun (V5462) -> {'Idris.Prelude.Types.Left', V5462} end(E1329)); {'Idris.Prelude.Types.Right', E1330} -> (fun (V5463) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5449, V5463}} end(E1330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1321, E1322)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1331} -> (fun (V5464) -> begin (V5465 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5427, V5464))(V5423))), case V5465 of {'Idris.Prelude.Types.Left', E1332} -> (fun (V5466) -> {'Idris.Prelude.Types.Left', V5466} end(E1332)); {'Idris.Prelude.Types.Right', E1333} -> (fun (V5467) -> begin (V5468 = (('un--nfToCFType'(V0, V5418, V2, V5467))(V5423))), case V5468 of {'Idris.Prelude.Types.Left', E1334} -> (fun (V5469) -> {'Idris.Prelude.Types.Left', V5469} end(E1334)); {'Idris.Prelude.Types.Right', E1335} -> (fun (V5470) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5470}} end(E1335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1333)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1314)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1312)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1304, E1305, E1306, E1307, E1308)); {'Idris.Core.Value.NType', E1336} -> (fun (V5471) -> fun (V5472) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1336)); {'Idris.Core.Value.NErased', E1337, E1338} -> (fun (V5473, V5474) -> fun (V5475) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1337, E1338)); _ -> fun (V5476) -> begin (V5478 = begin (V5477 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5477} end), case V5478 of {'Idris.Prelude.Types.Left', E1298} -> (fun (V5479) -> {'Idris.Prelude.Types.Left', V5479} end(E1298)); {'Idris.Prelude.Types.Right', E1299} -> (fun (V5480) -> begin (V5481 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5480, {'Idris.Core.Env.Nil'}, V3, V5476))), case V5481 of {'Idris.Prelude.Types.Left', E1300} -> (fun (V5482) -> {'Idris.Prelude.Types.Left', V5482} end(E1300)); {'Idris.Prelude.Types.Right', E1301} -> (fun (V5483) -> begin (V5488 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5484) -> fun (V5485) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5484, V5485)) end end, fun (V5486) -> fun (V5487) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5486, V5487)) end end}, V5483, V5476))), case V5488 of {'Idris.Prelude.Types.Left', E1302} -> (fun (V5489) -> {'Idris.Prelude.Types.Left', V5489} end(E1302)); {'Idris.Prelude.Types.Right', E1303} -> (fun (V5490) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5490))))}, V5476)) end(E1303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E1296, E1297)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E1194, E1195, E1196, E1197} -> (fun (V5491, V5492, V5493, V5494) -> case V5493 of {'Idris.Core.TT.Pi', E1239, E1240, E1241, E1242} -> (fun (V5495, V5496, V5497, V5498) -> fun (V5499) -> begin (V5501 = begin (V5500 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5500} end), case V5501 of {'Idris.Prelude.Types.Left', E1243} -> (fun (V5502) -> {'Idris.Prelude.Types.Left', V5502} end(E1243)); {'Idris.Prelude.Types.Right', E1244} -> (fun (V5503) -> begin (V5504 = (('un--nfToCFType'(V0, V5491, 1, V5498))(V5499))), case V5504 of {'Idris.Prelude.Types.Left', E1245} -> (fun (V5505) -> {'Idris.Prelude.Types.Left', V5505} end(E1245)); {'Idris.Prelude.Types.Right', E1246} -> (fun (V5506) -> begin (V5507 = (((V5494(V5503))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5491, 1}))))(V5499))), case V5507 of {'Idris.Prelude.Types.Left', E1247} -> (fun (V5508) -> {'Idris.Prelude.Types.Left', V5508} end(E1247)); {'Idris.Prelude.Types.Right', E1248} -> (fun (V5509) -> begin (V5510 = (('un--nfToCFType'(V0, V5491, 1, V5509))(V5499))), case V5510 of {'Idris.Prelude.Types.Left', E1249} -> (fun (V5511) -> {'Idris.Prelude.Types.Left', V5511} end(E1249)); {'Idris.Prelude.Types.Right', E1250} -> (fun (V5512) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5506, V5512}} end(E1250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1239, E1240, E1241, E1242)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1204, E1205, E1206, E1207, E1208} -> (fun (V5513, V5514, V5515, V5516, V5517) -> fun (V5518) -> begin (V5520 = begin (V5519 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5519} end), case V5520 of {'Idris.Prelude.Types.Left', E1209} -> (fun (V5521) -> {'Idris.Prelude.Types.Left', V5521} end(E1209)); {'Idris.Prelude.Types.Right', E1210} -> (fun (V5522) -> begin (V5527 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5523) -> fun (V5524) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5523, V5524)) end end, fun (V5525) -> fun (V5526) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5525, V5526)) end end}, V5514, V5518))), case V5527 of {'Idris.Prelude.Types.Left', E1211} -> (fun (V5528) -> {'Idris.Prelude.Types.Left', V5528} end(E1211)); {'Idris.Prelude.Types.Right', E1212} -> (fun (V5529) -> begin (V5531 = (('un--getNArgs'(V0, V5522, V5529, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5530) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5530)) end, V5517))))(V5518))), case V5531 of {'Idris.Prelude.Types.Left', E1213} -> (fun (V5532) -> {'Idris.Prelude.Types.Left', V5532} end(E1213)); {'Idris.Prelude.Types.Right', E1214} -> (fun (V5533) -> case V5533 of {'Idris.Compiler.CompileExpr.User', E1215, E1216} -> (fun (V5534, V5535) -> begin (V5537 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5536) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5522, V5536)) end, V5535, []))(V5518))), case V5537 of {'Idris.Prelude.Types.Left', E1217} -> (fun (V5538) -> {'Idris.Prelude.Types.Left', V5538} end(E1217)); {'Idris.Prelude.Types.Right', E1218} -> (fun (V5539) -> begin (V5541 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5540) -> ('un--nfToCFType'(V0, V5513, V2, V5540)) end, V5539, []))(V5518))), case V5541 of {'Idris.Prelude.Types.Left', E1219} -> (fun (V5542) -> {'Idris.Prelude.Types.Left', V5542} end(E1219)); {'Idris.Prelude.Types.Right', E1220} -> (fun (V5543) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5529, V5543}} end(E1220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1215, E1216)); {'Idris.Compiler.CompileExpr.Struct', E1221, E1222} -> (fun (V5544, V5545) -> begin (V5556 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5546) -> case V5546 of {'Idris.Builtin.MkPair', E1223, E1224} -> (fun (V5547, V5548) -> fun (V5549) -> begin (V5550 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5522, V5548))(V5549))), case V5550 of {'Idris.Prelude.Types.Left', E1225} -> (fun (V5551) -> {'Idris.Prelude.Types.Left', V5551} end(E1225)); {'Idris.Prelude.Types.Right', E1226} -> (fun (V5552) -> begin (V5553 = (('un--nfToCFType'(V0, V5513, 0, V5552))(V5549))), case V5553 of {'Idris.Prelude.Types.Left', E1227} -> (fun (V5554) -> {'Idris.Prelude.Types.Left', V5554} end(E1227)); {'Idris.Prelude.Types.Right', E1228} -> (fun (V5555) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5547, V5555}} end(E1228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1223, E1224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5545, []))(V5518))), case V5556 of {'Idris.Prelude.Types.Left', E1229} -> (fun (V5557) -> {'Idris.Prelude.Types.Left', V5557} end(E1229)); {'Idris.Prelude.Types.Right', E1230} -> (fun (V5558) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5544, V5558}} end(E1230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1221, E1222)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1231} -> (fun (V5559) -> begin (V5560 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5522, V5559))(V5518))), case V5560 of {'Idris.Prelude.Types.Left', E1232} -> (fun (V5561) -> {'Idris.Prelude.Types.Left', V5561} end(E1232)); {'Idris.Prelude.Types.Right', E1233} -> (fun (V5562) -> begin (V5563 = (('un--nfToCFType'(V0, V5513, V2, V5562))(V5518))), case V5563 of {'Idris.Prelude.Types.Left', E1234} -> (fun (V5564) -> {'Idris.Prelude.Types.Left', V5564} end(E1234)); {'Idris.Prelude.Types.Right', E1235} -> (fun (V5565) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5565}} end(E1235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1204, E1205, E1206, E1207, E1208)); {'Idris.Core.Value.NType', E1236} -> (fun (V5566) -> fun (V5567) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1236)); {'Idris.Core.Value.NErased', E1237, E1238} -> (fun (V5568, V5569) -> fun (V5570) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1237, E1238)); _ -> fun (V5571) -> begin (V5573 = begin (V5572 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5572} end), case V5573 of {'Idris.Prelude.Types.Left', E1198} -> (fun (V5574) -> {'Idris.Prelude.Types.Left', V5574} end(E1198)); {'Idris.Prelude.Types.Right', E1199} -> (fun (V5575) -> begin (V5576 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5575, {'Idris.Core.Env.Nil'}, V3, V5571))), case V5576 of {'Idris.Prelude.Types.Left', E1200} -> (fun (V5577) -> {'Idris.Prelude.Types.Left', V5577} end(E1200)); {'Idris.Prelude.Types.Right', E1201} -> (fun (V5578) -> begin (V5583 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5579) -> fun (V5580) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5579, V5580)) end end, fun (V5581) -> fun (V5582) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5581, V5582)) end end}, V5578, V5571))), case V5583 of {'Idris.Prelude.Types.Left', E1202} -> (fun (V5584) -> {'Idris.Prelude.Types.Left', V5584} end(E1202)); {'Idris.Prelude.Types.Right', E1203} -> (fun (V5585) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5585))))}, V5571)) end(E1203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1194, E1195, E1196, E1197)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1159, E1160, E1161, E1162, E1163} -> (fun (V5586, V5587, V5588, V5589, V5590) -> fun (V5591) -> begin (V5593 = begin (V5592 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5592} end), case V5593 of {'Idris.Prelude.Types.Left', E1164} -> (fun (V5594) -> {'Idris.Prelude.Types.Left', V5594} end(E1164)); {'Idris.Prelude.Types.Right', E1165} -> (fun (V5595) -> begin (V5600 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5596) -> fun (V5597) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5596, V5597)) end end, fun (V5598) -> fun (V5599) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5598, V5599)) end end}, V5587, V5591))), case V5600 of {'Idris.Prelude.Types.Left', E1166} -> (fun (V5601) -> {'Idris.Prelude.Types.Left', V5601} end(E1166)); {'Idris.Prelude.Types.Right', E1167} -> (fun (V5602) -> begin (V5604 = (('un--getNArgs'(V0, V5595, V5602, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5603) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5603)) end, V5590))))(V5591))), case V5604 of {'Idris.Prelude.Types.Left', E1168} -> (fun (V5605) -> {'Idris.Prelude.Types.Left', V5605} end(E1168)); {'Idris.Prelude.Types.Right', E1169} -> (fun (V5606) -> case V5606 of {'Idris.Compiler.CompileExpr.User', E1170, E1171} -> (fun (V5607, V5608) -> begin (V5610 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5609) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5595, V5609)) end, V5608, []))(V5591))), case V5610 of {'Idris.Prelude.Types.Left', E1172} -> (fun (V5611) -> {'Idris.Prelude.Types.Left', V5611} end(E1172)); {'Idris.Prelude.Types.Right', E1173} -> (fun (V5612) -> begin (V5614 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5613) -> ('un--nfToCFType'(V0, V5586, V2, V5613)) end, V5612, []))(V5591))), case V5614 of {'Idris.Prelude.Types.Left', E1174} -> (fun (V5615) -> {'Idris.Prelude.Types.Left', V5615} end(E1174)); {'Idris.Prelude.Types.Right', E1175} -> (fun (V5616) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5602, V5616}} end(E1175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1170, E1171)); {'Idris.Compiler.CompileExpr.Struct', E1176, E1177} -> (fun (V5617, V5618) -> begin (V5629 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5619) -> case V5619 of {'Idris.Builtin.MkPair', E1178, E1179} -> (fun (V5620, V5621) -> fun (V5622) -> begin (V5623 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5595, V5621))(V5622))), case V5623 of {'Idris.Prelude.Types.Left', E1180} -> (fun (V5624) -> {'Idris.Prelude.Types.Left', V5624} end(E1180)); {'Idris.Prelude.Types.Right', E1181} -> (fun (V5625) -> begin (V5626 = (('un--nfToCFType'(V0, V5586, 0, V5625))(V5622))), case V5626 of {'Idris.Prelude.Types.Left', E1182} -> (fun (V5627) -> {'Idris.Prelude.Types.Left', V5627} end(E1182)); {'Idris.Prelude.Types.Right', E1183} -> (fun (V5628) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5620, V5628}} end(E1183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1178, E1179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5618, []))(V5591))), case V5629 of {'Idris.Prelude.Types.Left', E1184} -> (fun (V5630) -> {'Idris.Prelude.Types.Left', V5630} end(E1184)); {'Idris.Prelude.Types.Right', E1185} -> (fun (V5631) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5617, V5631}} end(E1185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1176, E1177)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1186} -> (fun (V5632) -> begin (V5633 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5595, V5632))(V5591))), case V5633 of {'Idris.Prelude.Types.Left', E1187} -> (fun (V5634) -> {'Idris.Prelude.Types.Left', V5634} end(E1187)); {'Idris.Prelude.Types.Right', E1188} -> (fun (V5635) -> begin (V5636 = (('un--nfToCFType'(V0, V5586, V2, V5635))(V5591))), case V5636 of {'Idris.Prelude.Types.Left', E1189} -> (fun (V5637) -> {'Idris.Prelude.Types.Left', V5637} end(E1189)); {'Idris.Prelude.Types.Right', E1190} -> (fun (V5638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5638}} end(E1190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1159, E1160, E1161, E1162, E1163)); {'Idris.Core.Value.NType', E1191} -> (fun (V5639) -> fun (V5640) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1191)); {'Idris.Core.Value.NErased', E1192, E1193} -> (fun (V5641, V5642) -> fun (V5643) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1192, E1193)); _ -> fun (V5644) -> begin (V5646 = begin (V5645 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5645} end), case V5646 of {'Idris.Prelude.Types.Left', E1153} -> (fun (V5647) -> {'Idris.Prelude.Types.Left', V5647} end(E1153)); {'Idris.Prelude.Types.Right', E1154} -> (fun (V5648) -> begin (V5649 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5648, {'Idris.Core.Env.Nil'}, V3, V5644))), case V5649 of {'Idris.Prelude.Types.Left', E1155} -> (fun (V5650) -> {'Idris.Prelude.Types.Left', V5650} end(E1155)); {'Idris.Prelude.Types.Right', E1156} -> (fun (V5651) -> begin (V5656 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5652) -> fun (V5653) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5652, V5653)) end end, fun (V5654) -> fun (V5655) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5654, V5655)) end end}, V5651, V5644))), case V5656 of {'Idris.Prelude.Types.Left', E1157} -> (fun (V5657) -> {'Idris.Prelude.Types.Left', V5657} end(E1157)); {'Idris.Prelude.Types.Right', E1158} -> (fun (V5658) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5658))))}, V5644)) end(E1158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E1292, E1293, E1294, E1295} -> (fun (V5659, V5660, V5661, V5662) -> fun (V5663) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V5659, <<"Function types not allowed in a foreign struct"/utf8>>}, V5663)) end end(E1292, E1293, E1294, E1295)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1257, E1258, E1259, E1260, E1261} -> (fun (V5664, V5665, V5666, V5667, V5668) -> fun (V5669) -> begin (V5671 = begin (V5670 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5670} end), case V5671 of {'Idris.Prelude.Types.Left', E1262} -> (fun (V5672) -> {'Idris.Prelude.Types.Left', V5672} end(E1262)); {'Idris.Prelude.Types.Right', E1263} -> (fun (V5673) -> begin (V5678 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5674) -> fun (V5675) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5674, V5675)) end end, fun (V5676) -> fun (V5677) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5676, V5677)) end end}, V5665, V5669))), case V5678 of {'Idris.Prelude.Types.Left', E1264} -> (fun (V5679) -> {'Idris.Prelude.Types.Left', V5679} end(E1264)); {'Idris.Prelude.Types.Right', E1265} -> (fun (V5680) -> begin (V5682 = (('un--getNArgs'(V0, V5673, V5680, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5681) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5681)) end, V5668))))(V5669))), case V5682 of {'Idris.Prelude.Types.Left', E1266} -> (fun (V5683) -> {'Idris.Prelude.Types.Left', V5683} end(E1266)); {'Idris.Prelude.Types.Right', E1267} -> (fun (V5684) -> case V5684 of {'Idris.Compiler.CompileExpr.User', E1268, E1269} -> (fun (V5685, V5686) -> begin (V5688 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5687) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5673, V5687)) end, V5686, []))(V5669))), case V5688 of {'Idris.Prelude.Types.Left', E1270} -> (fun (V5689) -> {'Idris.Prelude.Types.Left', V5689} end(E1270)); {'Idris.Prelude.Types.Right', E1271} -> (fun (V5690) -> begin (V5692 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5691) -> ('un--nfToCFType'(V0, V5664, V2, V5691)) end, V5690, []))(V5669))), case V5692 of {'Idris.Prelude.Types.Left', E1272} -> (fun (V5693) -> {'Idris.Prelude.Types.Left', V5693} end(E1272)); {'Idris.Prelude.Types.Right', E1273} -> (fun (V5694) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5680, V5694}} end(E1273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1268, E1269)); {'Idris.Compiler.CompileExpr.Struct', E1274, E1275} -> (fun (V5695, V5696) -> begin (V5707 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5697) -> case V5697 of {'Idris.Builtin.MkPair', E1276, E1277} -> (fun (V5698, V5699) -> fun (V5700) -> begin (V5701 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5673, V5699))(V5700))), case V5701 of {'Idris.Prelude.Types.Left', E1278} -> (fun (V5702) -> {'Idris.Prelude.Types.Left', V5702} end(E1278)); {'Idris.Prelude.Types.Right', E1279} -> (fun (V5703) -> begin (V5704 = (('un--nfToCFType'(V0, V5664, 0, V5703))(V5700))), case V5704 of {'Idris.Prelude.Types.Left', E1280} -> (fun (V5705) -> {'Idris.Prelude.Types.Left', V5705} end(E1280)); {'Idris.Prelude.Types.Right', E1281} -> (fun (V5706) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5698, V5706}} end(E1281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1276, E1277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5696, []))(V5669))), case V5707 of {'Idris.Prelude.Types.Left', E1282} -> (fun (V5708) -> {'Idris.Prelude.Types.Left', V5708} end(E1282)); {'Idris.Prelude.Types.Right', E1283} -> (fun (V5709) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5695, V5709}} end(E1283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1274, E1275)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1284} -> (fun (V5710) -> begin (V5711 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5673, V5710))(V5669))), case V5711 of {'Idris.Prelude.Types.Left', E1285} -> (fun (V5712) -> {'Idris.Prelude.Types.Left', V5712} end(E1285)); {'Idris.Prelude.Types.Right', E1286} -> (fun (V5713) -> begin (V5714 = (('un--nfToCFType'(V0, V5664, V2, V5713))(V5669))), case V5714 of {'Idris.Prelude.Types.Left', E1287} -> (fun (V5715) -> {'Idris.Prelude.Types.Left', V5715} end(E1287)); {'Idris.Prelude.Types.Right', E1288} -> (fun (V5716) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5716}} end(E1288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1257, E1258, E1259, E1260, E1261)); {'Idris.Core.Value.NType', E1289} -> (fun (V5717) -> fun (V5718) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1289)); {'Idris.Core.Value.NErased', E1290, E1291} -> (fun (V5719, V5720) -> fun (V5721) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1290, E1291)); _ -> fun (V5722) -> begin (V5724 = begin (V5723 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5723} end), case V5724 of {'Idris.Prelude.Types.Left', E1251} -> (fun (V5725) -> {'Idris.Prelude.Types.Left', V5725} end(E1251)); {'Idris.Prelude.Types.Right', E1252} -> (fun (V5726) -> begin (V5727 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5726, {'Idris.Core.Env.Nil'}, V3, V5722))), case V5727 of {'Idris.Prelude.Types.Left', E1253} -> (fun (V5728) -> {'Idris.Prelude.Types.Left', V5728} end(E1253)); {'Idris.Prelude.Types.Right', E1254} -> (fun (V5729) -> begin (V5734 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5730) -> fun (V5731) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5730, V5731)) end end, fun (V5732) -> fun (V5733) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5732, V5733)) end end}, V5729, V5722))), case V5734 of {'Idris.Prelude.Types.Left', E1255} -> (fun (V5735) -> {'Idris.Prelude.Types.Left', V5735} end(E1255)); {'Idris.Prelude.Types.Right', E1256} -> (fun (V5736) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5736))))}, V5722)) end(E1256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E1118, E1119, E1120, E1121, E1122} -> (fun (V5737, V5738, V5739, V5740, V5741) -> fun (V5742) -> begin (V5744 = begin (V5743 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5743} end), case V5744 of {'Idris.Prelude.Types.Left', E1123} -> (fun (V5745) -> {'Idris.Prelude.Types.Left', V5745} end(E1123)); {'Idris.Prelude.Types.Right', E1124} -> (fun (V5746) -> begin (V5751 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5747) -> fun (V5748) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5747, V5748)) end end, fun (V5749) -> fun (V5750) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5749, V5750)) end end}, V5738, V5742))), case V5751 of {'Idris.Prelude.Types.Left', E1125} -> (fun (V5752) -> {'Idris.Prelude.Types.Left', V5752} end(E1125)); {'Idris.Prelude.Types.Right', E1126} -> (fun (V5753) -> begin (V5755 = (('un--getNArgs'(V0, V5746, V5753, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5754) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5754)) end, V5741))))(V5742))), case V5755 of {'Idris.Prelude.Types.Left', E1127} -> (fun (V5756) -> {'Idris.Prelude.Types.Left', V5756} end(E1127)); {'Idris.Prelude.Types.Right', E1128} -> (fun (V5757) -> case V5757 of {'Idris.Compiler.CompileExpr.User', E1129, E1130} -> (fun (V5758, V5759) -> begin (V5761 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5760) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5746, V5760)) end, V5759, []))(V5742))), case V5761 of {'Idris.Prelude.Types.Left', E1131} -> (fun (V5762) -> {'Idris.Prelude.Types.Left', V5762} end(E1131)); {'Idris.Prelude.Types.Right', E1132} -> (fun (V5763) -> begin (V5765 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5764) -> ('un--nfToCFType'(V0, V5737, V2, V5764)) end, V5763, []))(V5742))), case V5765 of {'Idris.Prelude.Types.Left', E1133} -> (fun (V5766) -> {'Idris.Prelude.Types.Left', V5766} end(E1133)); {'Idris.Prelude.Types.Right', E1134} -> (fun (V5767) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5753, V5767}} end(E1134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1129, E1130)); {'Idris.Compiler.CompileExpr.Struct', E1135, E1136} -> (fun (V5768, V5769) -> begin (V5780 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5770) -> case V5770 of {'Idris.Builtin.MkPair', E1137, E1138} -> (fun (V5771, V5772) -> fun (V5773) -> begin (V5774 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5746, V5772))(V5773))), case V5774 of {'Idris.Prelude.Types.Left', E1139} -> (fun (V5775) -> {'Idris.Prelude.Types.Left', V5775} end(E1139)); {'Idris.Prelude.Types.Right', E1140} -> (fun (V5776) -> begin (V5777 = (('un--nfToCFType'(V0, V5737, 0, V5776))(V5773))), case V5777 of {'Idris.Prelude.Types.Left', E1141} -> (fun (V5778) -> {'Idris.Prelude.Types.Left', V5778} end(E1141)); {'Idris.Prelude.Types.Right', E1142} -> (fun (V5779) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5771, V5779}} end(E1142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1137, E1138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5769, []))(V5742))), case V5780 of {'Idris.Prelude.Types.Left', E1143} -> (fun (V5781) -> {'Idris.Prelude.Types.Left', V5781} end(E1143)); {'Idris.Prelude.Types.Right', E1144} -> (fun (V5782) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5768, V5782}} end(E1144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1135, E1136)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1145} -> (fun (V5783) -> begin (V5784 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5746, V5783))(V5742))), case V5784 of {'Idris.Prelude.Types.Left', E1146} -> (fun (V5785) -> {'Idris.Prelude.Types.Left', V5785} end(E1146)); {'Idris.Prelude.Types.Right', E1147} -> (fun (V5786) -> begin (V5787 = (('un--nfToCFType'(V0, V5737, V2, V5786))(V5742))), case V5787 of {'Idris.Prelude.Types.Left', E1148} -> (fun (V5788) -> {'Idris.Prelude.Types.Left', V5788} end(E1148)); {'Idris.Prelude.Types.Right', E1149} -> (fun (V5789) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5789}} end(E1149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1118, E1119, E1120, E1121, E1122)); {'Idris.Core.Value.NType', E1150} -> (fun (V5790) -> fun (V5791) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E1150)); {'Idris.Core.Value.NErased', E1151, E1152} -> (fun (V5792, V5793) -> fun (V5794) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E1151, E1152)); _ -> fun (V5795) -> begin (V5797 = begin (V5796 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5796} end), case V5797 of {'Idris.Prelude.Types.Left', E1112} -> (fun (V5798) -> {'Idris.Prelude.Types.Left', V5798} end(E1112)); {'Idris.Prelude.Types.Right', E1113} -> (fun (V5799) -> begin (V5800 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5799, {'Idris.Core.Env.Nil'}, V3, V5795))), case V5800 of {'Idris.Prelude.Types.Left', E1114} -> (fun (V5801) -> {'Idris.Prelude.Types.Left', V5801} end(E1114)); {'Idris.Prelude.Types.Right', E1115} -> (fun (V5802) -> begin (V5807 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5803) -> fun (V5804) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5803, V5804)) end end, fun (V5805) -> fun (V5806) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5805, V5806)) end end}, V5802, V5795))), case V5807 of {'Idris.Prelude.Types.Left', E1116} -> (fun (V5808) -> {'Idris.Prelude.Types.Left', V5808} end(E1116)); {'Idris.Prelude.Types.Right', E1117} -> (fun (V5809) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5809))))}, V5795)) end(E1117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; _ -> case V3 of {'Idris.Core.Value.NPrimVal', E184, E185} -> (fun (V5810, V5811) -> case V5811 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V5812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V5813) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V5814) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E268, E269, E270, E271} -> (fun (V5815, V5816, V5817, V5818) -> case V5817 of {'Idris.Core.TT.Pi', E313, E314, E315, E316} -> (fun (V5819, V5820, V5821, V5822) -> fun (V5823) -> begin (V5825 = begin (V5824 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5824} end), case V5825 of {'Idris.Prelude.Types.Left', E317} -> (fun (V5826) -> {'Idris.Prelude.Types.Left', V5826} end(E317)); {'Idris.Prelude.Types.Right', E318} -> (fun (V5827) -> begin (V5828 = (('un--nfToCFType'(V0, V5815, 1, V5822))(V5823))), case V5828 of {'Idris.Prelude.Types.Left', E319} -> (fun (V5829) -> {'Idris.Prelude.Types.Left', V5829} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V5830) -> begin (V5831 = (((V5818(V5827))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5815, 1}))))(V5823))), case V5831 of {'Idris.Prelude.Types.Left', E321} -> (fun (V5832) -> {'Idris.Prelude.Types.Left', V5832} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V5833) -> begin (V5834 = (('un--nfToCFType'(V0, V5815, 1, V5833))(V5823))), case V5834 of {'Idris.Prelude.Types.Left', E323} -> (fun (V5835) -> {'Idris.Prelude.Types.Left', V5835} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V5836) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5830, V5836}} end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E313, E314, E315, E316)); _ -> case V3 of {'Idris.Core.Value.NTCon', E278, E279, E280, E281, E282} -> (fun (V5837, V5838, V5839, V5840, V5841) -> fun (V5842) -> begin (V5844 = begin (V5843 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5843} end), case V5844 of {'Idris.Prelude.Types.Left', E283} -> (fun (V5845) -> {'Idris.Prelude.Types.Left', V5845} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V5846) -> begin (V5851 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5847) -> fun (V5848) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5847, V5848)) end end, fun (V5849) -> fun (V5850) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5849, V5850)) end end}, V5838, V5842))), case V5851 of {'Idris.Prelude.Types.Left', E285} -> (fun (V5852) -> {'Idris.Prelude.Types.Left', V5852} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V5853) -> begin (V5855 = (('un--getNArgs'(V0, V5846, V5853, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5854) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5854)) end, V5841))))(V5842))), case V5855 of {'Idris.Prelude.Types.Left', E287} -> (fun (V5856) -> {'Idris.Prelude.Types.Left', V5856} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V5857) -> case V5857 of {'Idris.Compiler.CompileExpr.User', E289, E290} -> (fun (V5858, V5859) -> begin (V5861 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5860) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5846, V5860)) end, V5859, []))(V5842))), case V5861 of {'Idris.Prelude.Types.Left', E291} -> (fun (V5862) -> {'Idris.Prelude.Types.Left', V5862} end(E291)); {'Idris.Prelude.Types.Right', E292} -> (fun (V5863) -> begin (V5865 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5864) -> ('un--nfToCFType'(V0, V5837, V2, V5864)) end, V5863, []))(V5842))), case V5865 of {'Idris.Prelude.Types.Left', E293} -> (fun (V5866) -> {'Idris.Prelude.Types.Left', V5866} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V5867) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5853, V5867}} end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E289, E290)); {'Idris.Compiler.CompileExpr.Struct', E295, E296} -> (fun (V5868, V5869) -> begin (V5880 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5870) -> case V5870 of {'Idris.Builtin.MkPair', E297, E298} -> (fun (V5871, V5872) -> fun (V5873) -> begin (V5874 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5846, V5872))(V5873))), case V5874 of {'Idris.Prelude.Types.Left', E299} -> (fun (V5875) -> {'Idris.Prelude.Types.Left', V5875} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V5876) -> begin (V5877 = (('un--nfToCFType'(V0, V5837, 0, V5876))(V5873))), case V5877 of {'Idris.Prelude.Types.Left', E301} -> (fun (V5878) -> {'Idris.Prelude.Types.Left', V5878} end(E301)); {'Idris.Prelude.Types.Right', E302} -> (fun (V5879) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5871, V5879}} end(E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E297, E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5869, []))(V5842))), case V5880 of {'Idris.Prelude.Types.Left', E303} -> (fun (V5881) -> {'Idris.Prelude.Types.Left', V5881} end(E303)); {'Idris.Prelude.Types.Right', E304} -> (fun (V5882) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5868, V5882}} end(E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E295, E296)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E305} -> (fun (V5883) -> begin (V5884 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5846, V5883))(V5842))), case V5884 of {'Idris.Prelude.Types.Left', E306} -> (fun (V5885) -> {'Idris.Prelude.Types.Left', V5885} end(E306)); {'Idris.Prelude.Types.Right', E307} -> (fun (V5886) -> begin (V5887 = (('un--nfToCFType'(V0, V5837, V2, V5886))(V5842))), case V5887 of {'Idris.Prelude.Types.Left', E308} -> (fun (V5888) -> {'Idris.Prelude.Types.Left', V5888} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V5889) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5889}} end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E278, E279, E280, E281, E282)); {'Idris.Core.Value.NType', E310} -> (fun (V5890) -> fun (V5891) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E310)); {'Idris.Core.Value.NErased', E311, E312} -> (fun (V5892, V5893) -> fun (V5894) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E311, E312)); _ -> fun (V5895) -> begin (V5897 = begin (V5896 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5896} end), case V5897 of {'Idris.Prelude.Types.Left', E272} -> (fun (V5898) -> {'Idris.Prelude.Types.Left', V5898} end(E272)); {'Idris.Prelude.Types.Right', E273} -> (fun (V5899) -> begin (V5900 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5899, {'Idris.Core.Env.Nil'}, V3, V5895))), case V5900 of {'Idris.Prelude.Types.Left', E274} -> (fun (V5901) -> {'Idris.Prelude.Types.Left', V5901} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V5902) -> begin (V5907 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5903) -> fun (V5904) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5903, V5904)) end end, fun (V5905) -> fun (V5906) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5905, V5906)) end end}, V5902, V5895))), case V5907 of {'Idris.Prelude.Types.Left', E276} -> (fun (V5908) -> {'Idris.Prelude.Types.Left', V5908} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V5909) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5909))))}, V5895)) end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E268, E269, E270, E271)); _ -> case V3 of {'Idris.Core.Value.NTCon', E233, E234, E235, E236, E237} -> (fun (V5910, V5911, V5912, V5913, V5914) -> fun (V5915) -> begin (V5917 = begin (V5916 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5916} end), case V5917 of {'Idris.Prelude.Types.Left', E238} -> (fun (V5918) -> {'Idris.Prelude.Types.Left', V5918} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V5919) -> begin (V5924 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5920) -> fun (V5921) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5920, V5921)) end end, fun (V5922) -> fun (V5923) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5922, V5923)) end end}, V5911, V5915))), case V5924 of {'Idris.Prelude.Types.Left', E240} -> (fun (V5925) -> {'Idris.Prelude.Types.Left', V5925} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V5926) -> begin (V5928 = (('un--getNArgs'(V0, V5919, V5926, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5927) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V5927)) end, V5914))))(V5915))), case V5928 of {'Idris.Prelude.Types.Left', E242} -> (fun (V5929) -> {'Idris.Prelude.Types.Left', V5929} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V5930) -> case V5930 of {'Idris.Compiler.CompileExpr.User', E244, E245} -> (fun (V5931, V5932) -> begin (V5934 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5933) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5919, V5933)) end, V5932, []))(V5915))), case V5934 of {'Idris.Prelude.Types.Left', E246} -> (fun (V5935) -> {'Idris.Prelude.Types.Left', V5935} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V5936) -> begin (V5938 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5937) -> ('un--nfToCFType'(V0, V5910, V2, V5937)) end, V5936, []))(V5915))), case V5938 of {'Idris.Prelude.Types.Left', E248} -> (fun (V5939) -> {'Idris.Prelude.Types.Left', V5939} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V5940) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5926, V5940}} end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244, E245)); {'Idris.Compiler.CompileExpr.Struct', E250, E251} -> (fun (V5941, V5942) -> begin (V5953 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V5943) -> case V5943 of {'Idris.Builtin.MkPair', E252, E253} -> (fun (V5944, V5945) -> fun (V5946) -> begin (V5947 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5919, V5945))(V5946))), case V5947 of {'Idris.Prelude.Types.Left', E254} -> (fun (V5948) -> {'Idris.Prelude.Types.Left', V5948} end(E254)); {'Idris.Prelude.Types.Right', E255} -> (fun (V5949) -> begin (V5950 = (('un--nfToCFType'(V0, V5910, 0, V5949))(V5946))), case V5950 of {'Idris.Prelude.Types.Left', E256} -> (fun (V5951) -> {'Idris.Prelude.Types.Left', V5951} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V5952) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5944, V5952}} end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E252, E253)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V5942, []))(V5915))), case V5953 of {'Idris.Prelude.Types.Left', E258} -> (fun (V5954) -> {'Idris.Prelude.Types.Left', V5954} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V5955) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5941, V5955}} end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E250, E251)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E260} -> (fun (V5956) -> begin (V5957 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5919, V5956))(V5915))), case V5957 of {'Idris.Prelude.Types.Left', E261} -> (fun (V5958) -> {'Idris.Prelude.Types.Left', V5958} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V5959) -> begin (V5960 = (('un--nfToCFType'(V0, V5910, V2, V5959))(V5915))), case V5960 of {'Idris.Prelude.Types.Left', E263} -> (fun (V5961) -> {'Idris.Prelude.Types.Left', V5961} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V5962) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5962}} end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E233, E234, E235, E236, E237)); {'Idris.Core.Value.NType', E265} -> (fun (V5963) -> fun (V5964) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E265)); {'Idris.Core.Value.NErased', E266, E267} -> (fun (V5965, V5966) -> fun (V5967) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E266, E267)); _ -> fun (V5968) -> begin (V5970 = begin (V5969 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5969} end), case V5970 of {'Idris.Prelude.Types.Left', E227} -> (fun (V5971) -> {'Idris.Prelude.Types.Left', V5971} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V5972) -> begin (V5973 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5972, {'Idris.Core.Env.Nil'}, V3, V5968))), case V5973 of {'Idris.Prelude.Types.Left', E229} -> (fun (V5974) -> {'Idris.Prelude.Types.Left', V5974} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V5975) -> begin (V5980 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5976) -> fun (V5977) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V5976, V5977)) end end, fun (V5978) -> fun (V5979) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V5978, V5979)) end end}, V5975, V5968))), case V5980 of {'Idris.Prelude.Types.Left', E231} -> (fun (V5981) -> {'Idris.Prelude.Types.Left', V5981} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V5982) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5982))))}, V5968)) end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E366, E367, E368, E369} -> (fun (V5983, V5984, V5985, V5986) -> fun (V5987) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V5983, <<"Function types not allowed in a foreign struct"/utf8>>}, V5987)) end end(E366, E367, E368, E369)); _ -> case V3 of {'Idris.Core.Value.NTCon', E331, E332, E333, E334, E335} -> (fun (V5988, V5989, V5990, V5991, V5992) -> fun (V5993) -> begin (V5995 = begin (V5994 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5994} end), case V5995 of {'Idris.Prelude.Types.Left', E336} -> (fun (V5996) -> {'Idris.Prelude.Types.Left', V5996} end(E336)); {'Idris.Prelude.Types.Right', E337} -> (fun (V5997) -> begin (V6002 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5998) -> fun (V5999) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5998, V5999)) end end, fun (V6000) -> fun (V6001) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6000, V6001)) end end}, V5989, V5993))), case V6002 of {'Idris.Prelude.Types.Left', E338} -> (fun (V6003) -> {'Idris.Prelude.Types.Left', V6003} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V6004) -> begin (V6006 = (('un--getNArgs'(V0, V5997, V6004, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V6005) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6005)) end, V5992))))(V5993))), case V6006 of {'Idris.Prelude.Types.Left', E340} -> (fun (V6007) -> {'Idris.Prelude.Types.Left', V6007} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V6008) -> case V6008 of {'Idris.Compiler.CompileExpr.User', E342, E343} -> (fun (V6009, V6010) -> begin (V6012 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6011) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5997, V6011)) end, V6010, []))(V5993))), case V6012 of {'Idris.Prelude.Types.Left', E344} -> (fun (V6013) -> {'Idris.Prelude.Types.Left', V6013} end(E344)); {'Idris.Prelude.Types.Right', E345} -> (fun (V6014) -> begin (V6016 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6015) -> ('un--nfToCFType'(V0, V5988, V2, V6015)) end, V6014, []))(V5993))), case V6016 of {'Idris.Prelude.Types.Left', E346} -> (fun (V6017) -> {'Idris.Prelude.Types.Left', V6017} end(E346)); {'Idris.Prelude.Types.Right', E347} -> (fun (V6018) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6004, V6018}} end(E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E342, E343)); {'Idris.Compiler.CompileExpr.Struct', E348, E349} -> (fun (V6019, V6020) -> begin (V6031 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6021) -> case V6021 of {'Idris.Builtin.MkPair', E350, E351} -> (fun (V6022, V6023) -> fun (V6024) -> begin (V6025 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5997, V6023))(V6024))), case V6025 of {'Idris.Prelude.Types.Left', E352} -> (fun (V6026) -> {'Idris.Prelude.Types.Left', V6026} end(E352)); {'Idris.Prelude.Types.Right', E353} -> (fun (V6027) -> begin (V6028 = (('un--nfToCFType'(V0, V5988, 0, V6027))(V6024))), case V6028 of {'Idris.Prelude.Types.Left', E354} -> (fun (V6029) -> {'Idris.Prelude.Types.Left', V6029} end(E354)); {'Idris.Prelude.Types.Right', E355} -> (fun (V6030) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6022, V6030}} end(E355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E353)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E350, E351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V6020, []))(V5993))), case V6031 of {'Idris.Prelude.Types.Left', E356} -> (fun (V6032) -> {'Idris.Prelude.Types.Left', V6032} end(E356)); {'Idris.Prelude.Types.Right', E357} -> (fun (V6033) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6019, V6033}} end(E357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E348, E349)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E358} -> (fun (V6034) -> begin (V6035 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5997, V6034))(V5993))), case V6035 of {'Idris.Prelude.Types.Left', E359} -> (fun (V6036) -> {'Idris.Prelude.Types.Left', V6036} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V6037) -> begin (V6038 = (('un--nfToCFType'(V0, V5988, V2, V6037))(V5993))), case V6038 of {'Idris.Prelude.Types.Left', E361} -> (fun (V6039) -> {'Idris.Prelude.Types.Left', V6039} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V6040) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6040}} end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E331, E332, E333, E334, E335)); {'Idris.Core.Value.NType', E363} -> (fun (V6041) -> fun (V6042) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E363)); {'Idris.Core.Value.NErased', E364, E365} -> (fun (V6043, V6044) -> fun (V6045) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E364, E365)); _ -> fun (V6046) -> begin (V6048 = begin (V6047 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6047} end), case V6048 of {'Idris.Prelude.Types.Left', E325} -> (fun (V6049) -> {'Idris.Prelude.Types.Left', V6049} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V6050) -> begin (V6051 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6050, {'Idris.Core.Env.Nil'}, V3, V6046))), case V6051 of {'Idris.Prelude.Types.Left', E327} -> (fun (V6052) -> {'Idris.Prelude.Types.Left', V6052} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V6053) -> begin (V6058 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6054) -> fun (V6055) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V6054, V6055)) end end, fun (V6056) -> fun (V6057) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V6056, V6057)) end end}, V6053, V6046))), case V6058 of {'Idris.Prelude.Types.Left', E329} -> (fun (V6059) -> {'Idris.Prelude.Types.Left', V6059} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V6060) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6060))))}, V6046)) end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E192, E193, E194, E195, E196} -> (fun (V6061, V6062, V6063, V6064, V6065) -> fun (V6066) -> begin (V6068 = begin (V6067 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6067} end), case V6068 of {'Idris.Prelude.Types.Left', E197} -> (fun (V6069) -> {'Idris.Prelude.Types.Left', V6069} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V6070) -> begin (V6075 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6071) -> fun (V6072) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6071, V6072)) end end, fun (V6073) -> fun (V6074) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6073, V6074)) end end}, V6062, V6066))), case V6075 of {'Idris.Prelude.Types.Left', E199} -> (fun (V6076) -> {'Idris.Prelude.Types.Left', V6076} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V6077) -> begin (V6079 = (('un--getNArgs'(V0, V6070, V6077, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V6078) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6078)) end, V6065))))(V6066))), case V6079 of {'Idris.Prelude.Types.Left', E201} -> (fun (V6080) -> {'Idris.Prelude.Types.Left', V6080} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V6081) -> case V6081 of {'Idris.Compiler.CompileExpr.User', E203, E204} -> (fun (V6082, V6083) -> begin (V6085 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6084) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6070, V6084)) end, V6083, []))(V6066))), case V6085 of {'Idris.Prelude.Types.Left', E205} -> (fun (V6086) -> {'Idris.Prelude.Types.Left', V6086} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V6087) -> begin (V6089 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6088) -> ('un--nfToCFType'(V0, V6061, V2, V6088)) end, V6087, []))(V6066))), case V6089 of {'Idris.Prelude.Types.Left', E207} -> (fun (V6090) -> {'Idris.Prelude.Types.Left', V6090} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V6091) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6077, V6091}} end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E203, E204)); {'Idris.Compiler.CompileExpr.Struct', E209, E210} -> (fun (V6092, V6093) -> begin (V6104 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6094) -> case V6094 of {'Idris.Builtin.MkPair', E211, E212} -> (fun (V6095, V6096) -> fun (V6097) -> begin (V6098 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6070, V6096))(V6097))), case V6098 of {'Idris.Prelude.Types.Left', E213} -> (fun (V6099) -> {'Idris.Prelude.Types.Left', V6099} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V6100) -> begin (V6101 = (('un--nfToCFType'(V0, V6061, 0, V6100))(V6097))), case V6101 of {'Idris.Prelude.Types.Left', E215} -> (fun (V6102) -> {'Idris.Prelude.Types.Left', V6102} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V6103) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6095, V6103}} end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E211, E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V6093, []))(V6066))), case V6104 of {'Idris.Prelude.Types.Left', E217} -> (fun (V6105) -> {'Idris.Prelude.Types.Left', V6105} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V6106) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6092, V6106}} end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E209, E210)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E219} -> (fun (V6107) -> begin (V6108 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6070, V6107))(V6066))), case V6108 of {'Idris.Prelude.Types.Left', E220} -> (fun (V6109) -> {'Idris.Prelude.Types.Left', V6109} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V6110) -> begin (V6111 = (('un--nfToCFType'(V0, V6061, V2, V6110))(V6066))), case V6111 of {'Idris.Prelude.Types.Left', E222} -> (fun (V6112) -> {'Idris.Prelude.Types.Left', V6112} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V6113) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6113}} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E192, E193, E194, E195, E196)); {'Idris.Core.Value.NType', E224} -> (fun (V6114) -> fun (V6115) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E224)); {'Idris.Core.Value.NErased', E225, E226} -> (fun (V6116, V6117) -> fun (V6118) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E225, E226)); _ -> fun (V6119) -> begin (V6121 = begin (V6120 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6120} end), case V6121 of {'Idris.Prelude.Types.Left', E186} -> (fun (V6122) -> {'Idris.Prelude.Types.Left', V6122} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V6123) -> begin (V6124 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6123, {'Idris.Core.Env.Nil'}, V3, V6119))), case V6124 of {'Idris.Prelude.Types.Left', E188} -> (fun (V6125) -> {'Idris.Prelude.Types.Left', V6125} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V6126) -> begin (V6131 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6127) -> fun (V6128) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V6127, V6128)) end end, fun (V6129) -> fun (V6130) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V6129, V6130)) end end}, V6126, V6119))), case V6131 of {'Idris.Prelude.Types.Left', E190} -> (fun (V6132) -> {'Idris.Prelude.Types.Left', V6132} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V6133) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6133))))}, V6119)) end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E184, E185)); _ -> case V2 of 1 -> case V3 of {'Idris.Core.Value.NBind', E82, E83, E84, E85} -> (fun (V6134, V6135, V6136, V6137) -> case V6136 of {'Idris.Core.TT.Pi', E127, E128, E129, E130} -> (fun (V6138, V6139, V6140, V6141) -> fun (V6142) -> begin (V6144 = begin (V6143 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6143} end), case V6144 of {'Idris.Prelude.Types.Left', E131} -> (fun (V6145) -> {'Idris.Prelude.Types.Left', V6145} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V6146) -> begin (V6147 = (('un--nfToCFType'(V0, V6134, 1, V6141))(V6142))), case V6147 of {'Idris.Prelude.Types.Left', E133} -> (fun (V6148) -> {'Idris.Prelude.Types.Left', V6148} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V6149) -> begin (V6150 = (((V6137(V6146))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V6134, 1}))))(V6142))), case V6150 of {'Idris.Prelude.Types.Left', E135} -> (fun (V6151) -> {'Idris.Prelude.Types.Left', V6151} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V6152) -> begin (V6153 = (('un--nfToCFType'(V0, V6134, 1, V6152))(V6142))), case V6153 of {'Idris.Prelude.Types.Left', E137} -> (fun (V6154) -> {'Idris.Prelude.Types.Left', V6154} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V6155) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V6149, V6155}} end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E127, E128, E129, E130)); _ -> case V3 of {'Idris.Core.Value.NTCon', E92, E93, E94, E95, E96} -> (fun (V6156, V6157, V6158, V6159, V6160) -> fun (V6161) -> begin (V6163 = begin (V6162 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6162} end), case V6163 of {'Idris.Prelude.Types.Left', E97} -> (fun (V6164) -> {'Idris.Prelude.Types.Left', V6164} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V6165) -> begin (V6170 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6166) -> fun (V6167) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6166, V6167)) end end, fun (V6168) -> fun (V6169) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6168, V6169)) end end}, V6157, V6161))), case V6170 of {'Idris.Prelude.Types.Left', E99} -> (fun (V6171) -> {'Idris.Prelude.Types.Left', V6171} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V6172) -> begin (V6174 = (('un--getNArgs'(V0, V6165, V6172, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V6173) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6173)) end, V6160))))(V6161))), case V6174 of {'Idris.Prelude.Types.Left', E101} -> (fun (V6175) -> {'Idris.Prelude.Types.Left', V6175} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V6176) -> case V6176 of {'Idris.Compiler.CompileExpr.User', E103, E104} -> (fun (V6177, V6178) -> begin (V6180 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6179) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6165, V6179)) end, V6178, []))(V6161))), case V6180 of {'Idris.Prelude.Types.Left', E105} -> (fun (V6181) -> {'Idris.Prelude.Types.Left', V6181} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V6182) -> begin (V6184 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6183) -> ('un--nfToCFType'(V0, V6156, V2, V6183)) end, V6182, []))(V6161))), case V6184 of {'Idris.Prelude.Types.Left', E107} -> (fun (V6185) -> {'Idris.Prelude.Types.Left', V6185} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V6186) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6172, V6186}} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103, E104)); {'Idris.Compiler.CompileExpr.Struct', E109, E110} -> (fun (V6187, V6188) -> begin (V6199 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6189) -> case V6189 of {'Idris.Builtin.MkPair', E111, E112} -> (fun (V6190, V6191) -> fun (V6192) -> begin (V6193 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6165, V6191))(V6192))), case V6193 of {'Idris.Prelude.Types.Left', E113} -> (fun (V6194) -> {'Idris.Prelude.Types.Left', V6194} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V6195) -> begin (V6196 = (('un--nfToCFType'(V0, V6156, 0, V6195))(V6192))), case V6196 of {'Idris.Prelude.Types.Left', E115} -> (fun (V6197) -> {'Idris.Prelude.Types.Left', V6197} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V6198) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6190, V6198}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E111, E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V6188, []))(V6161))), case V6199 of {'Idris.Prelude.Types.Left', E117} -> (fun (V6200) -> {'Idris.Prelude.Types.Left', V6200} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V6201) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6187, V6201}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109, E110)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E119} -> (fun (V6202) -> begin (V6203 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6165, V6202))(V6161))), case V6203 of {'Idris.Prelude.Types.Left', E120} -> (fun (V6204) -> {'Idris.Prelude.Types.Left', V6204} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V6205) -> begin (V6206 = (('un--nfToCFType'(V0, V6156, V2, V6205))(V6161))), case V6206 of {'Idris.Prelude.Types.Left', E122} -> (fun (V6207) -> {'Idris.Prelude.Types.Left', V6207} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V6208) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6208}} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E92, E93, E94, E95, E96)); {'Idris.Core.Value.NType', E124} -> (fun (V6209) -> fun (V6210) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E124)); {'Idris.Core.Value.NErased', E125, E126} -> (fun (V6211, V6212) -> fun (V6213) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E125, E126)); _ -> fun (V6214) -> begin (V6216 = begin (V6215 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6215} end), case V6216 of {'Idris.Prelude.Types.Left', E86} -> (fun (V6217) -> {'Idris.Prelude.Types.Left', V6217} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V6218) -> begin (V6219 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6218, {'Idris.Core.Env.Nil'}, V3, V6214))), case V6219 of {'Idris.Prelude.Types.Left', E88} -> (fun (V6220) -> {'Idris.Prelude.Types.Left', V6220} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V6221) -> begin (V6226 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6222) -> fun (V6223) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V6222, V6223)) end end, fun (V6224) -> fun (V6225) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V6224, V6225)) end end}, V6221, V6214))), case V6226 of {'Idris.Prelude.Types.Left', E90} -> (fun (V6227) -> {'Idris.Prelude.Types.Left', V6227} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V6228) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6228))))}, V6214)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E82, E83, E84, E85)); _ -> case V3 of {'Idris.Core.Value.NTCon', E47, E48, E49, E50, E51} -> (fun (V6229, V6230, V6231, V6232, V6233) -> fun (V6234) -> begin (V6236 = begin (V6235 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6235} end), case V6236 of {'Idris.Prelude.Types.Left', E52} -> (fun (V6237) -> {'Idris.Prelude.Types.Left', V6237} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V6238) -> begin (V6243 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6239) -> fun (V6240) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6239, V6240)) end end, fun (V6241) -> fun (V6242) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6241, V6242)) end end}, V6230, V6234))), case V6243 of {'Idris.Prelude.Types.Left', E54} -> (fun (V6244) -> {'Idris.Prelude.Types.Left', V6244} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V6245) -> begin (V6247 = (('un--getNArgs'(V0, V6238, V6245, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V6246) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6246)) end, V6233))))(V6234))), case V6247 of {'Idris.Prelude.Types.Left', E56} -> (fun (V6248) -> {'Idris.Prelude.Types.Left', V6248} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V6249) -> case V6249 of {'Idris.Compiler.CompileExpr.User', E58, E59} -> (fun (V6250, V6251) -> begin (V6253 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6252) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6238, V6252)) end, V6251, []))(V6234))), case V6253 of {'Idris.Prelude.Types.Left', E60} -> (fun (V6254) -> {'Idris.Prelude.Types.Left', V6254} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V6255) -> begin (V6257 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6256) -> ('un--nfToCFType'(V0, V6229, V2, V6256)) end, V6255, []))(V6234))), case V6257 of {'Idris.Prelude.Types.Left', E62} -> (fun (V6258) -> {'Idris.Prelude.Types.Left', V6258} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V6259) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6245, V6259}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58, E59)); {'Idris.Compiler.CompileExpr.Struct', E64, E65} -> (fun (V6260, V6261) -> begin (V6272 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6262) -> case V6262 of {'Idris.Builtin.MkPair', E66, E67} -> (fun (V6263, V6264) -> fun (V6265) -> begin (V6266 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6238, V6264))(V6265))), case V6266 of {'Idris.Prelude.Types.Left', E68} -> (fun (V6267) -> {'Idris.Prelude.Types.Left', V6267} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V6268) -> begin (V6269 = (('un--nfToCFType'(V0, V6229, 0, V6268))(V6265))), case V6269 of {'Idris.Prelude.Types.Left', E70} -> (fun (V6270) -> {'Idris.Prelude.Types.Left', V6270} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V6271) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6263, V6271}} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V6261, []))(V6234))), case V6272 of {'Idris.Prelude.Types.Left', E72} -> (fun (V6273) -> {'Idris.Prelude.Types.Left', V6273} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V6274) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6260, V6274}} end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64, E65)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E74} -> (fun (V6275) -> begin (V6276 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6238, V6275))(V6234))), case V6276 of {'Idris.Prelude.Types.Left', E75} -> (fun (V6277) -> {'Idris.Prelude.Types.Left', V6277} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V6278) -> begin (V6279 = (('un--nfToCFType'(V0, V6229, V2, V6278))(V6234))), case V6279 of {'Idris.Prelude.Types.Left', E77} -> (fun (V6280) -> {'Idris.Prelude.Types.Left', V6280} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V6281) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6281}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47, E48, E49, E50, E51)); {'Idris.Core.Value.NType', E79} -> (fun (V6282) -> fun (V6283) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E79)); {'Idris.Core.Value.NErased', E80, E81} -> (fun (V6284, V6285) -> fun (V6286) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E80, E81)); _ -> fun (V6287) -> begin (V6289 = begin (V6288 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6288} end), case V6289 of {'Idris.Prelude.Types.Left', E41} -> (fun (V6290) -> {'Idris.Prelude.Types.Left', V6290} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V6291) -> begin (V6292 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6291, {'Idris.Core.Env.Nil'}, V3, V6287))), case V6292 of {'Idris.Prelude.Types.Left', E43} -> (fun (V6293) -> {'Idris.Prelude.Types.Left', V6293} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V6294) -> begin (V6299 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6295) -> fun (V6296) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V6295, V6296)) end end, fun (V6297) -> fun (V6298) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V6297, V6298)) end end}, V6294, V6287))), case V6299 of {'Idris.Prelude.Types.Left', E45} -> (fun (V6300) -> {'Idris.Prelude.Types.Left', V6300} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V6301) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6301))))}, V6287)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 0 -> case V3 of {'Idris.Core.Value.NBind', E180, E181, E182, E183} -> (fun (V6302, V6303, V6304, V6305) -> fun (V6306) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V6302, <<"Function types not allowed in a foreign struct"/utf8>>}, V6306)) end end(E180, E181, E182, E183)); _ -> case V3 of {'Idris.Core.Value.NTCon', E145, E146, E147, E148, E149} -> (fun (V6307, V6308, V6309, V6310, V6311) -> fun (V6312) -> begin (V6314 = begin (V6313 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6313} end), case V6314 of {'Idris.Prelude.Types.Left', E150} -> (fun (V6315) -> {'Idris.Prelude.Types.Left', V6315} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V6316) -> begin (V6321 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6317) -> fun (V6318) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6317, V6318)) end end, fun (V6319) -> fun (V6320) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6319, V6320)) end end}, V6308, V6312))), case V6321 of {'Idris.Prelude.Types.Left', E152} -> (fun (V6322) -> {'Idris.Prelude.Types.Left', V6322} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V6323) -> begin (V6325 = (('un--getNArgs'(V0, V6316, V6323, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V6324) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6324)) end, V6311))))(V6312))), case V6325 of {'Idris.Prelude.Types.Left', E154} -> (fun (V6326) -> {'Idris.Prelude.Types.Left', V6326} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V6327) -> case V6327 of {'Idris.Compiler.CompileExpr.User', E156, E157} -> (fun (V6328, V6329) -> begin (V6331 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6330) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6316, V6330)) end, V6329, []))(V6312))), case V6331 of {'Idris.Prelude.Types.Left', E158} -> (fun (V6332) -> {'Idris.Prelude.Types.Left', V6332} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V6333) -> begin (V6335 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6334) -> ('un--nfToCFType'(V0, V6307, V2, V6334)) end, V6333, []))(V6312))), case V6335 of {'Idris.Prelude.Types.Left', E160} -> (fun (V6336) -> {'Idris.Prelude.Types.Left', V6336} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V6337) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6323, V6337}} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156, E157)); {'Idris.Compiler.CompileExpr.Struct', E162, E163} -> (fun (V6338, V6339) -> begin (V6350 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6340) -> case V6340 of {'Idris.Builtin.MkPair', E164, E165} -> (fun (V6341, V6342) -> fun (V6343) -> begin (V6344 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6316, V6342))(V6343))), case V6344 of {'Idris.Prelude.Types.Left', E166} -> (fun (V6345) -> {'Idris.Prelude.Types.Left', V6345} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V6346) -> begin (V6347 = (('un--nfToCFType'(V0, V6307, 0, V6346))(V6343))), case V6347 of {'Idris.Prelude.Types.Left', E168} -> (fun (V6348) -> {'Idris.Prelude.Types.Left', V6348} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V6349) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6341, V6349}} end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E164, E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V6339, []))(V6312))), case V6350 of {'Idris.Prelude.Types.Left', E170} -> (fun (V6351) -> {'Idris.Prelude.Types.Left', V6351} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V6352) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6338, V6352}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162, E163)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E172} -> (fun (V6353) -> begin (V6354 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6316, V6353))(V6312))), case V6354 of {'Idris.Prelude.Types.Left', E173} -> (fun (V6355) -> {'Idris.Prelude.Types.Left', V6355} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V6356) -> begin (V6357 = (('un--nfToCFType'(V0, V6307, V2, V6356))(V6312))), case V6357 of {'Idris.Prelude.Types.Left', E175} -> (fun (V6358) -> {'Idris.Prelude.Types.Left', V6358} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V6359) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6359}} end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E145, E146, E147, E148, E149)); {'Idris.Core.Value.NType', E177} -> (fun (V6360) -> fun (V6361) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E177)); {'Idris.Core.Value.NErased', E178, E179} -> (fun (V6362, V6363) -> fun (V6364) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E178, E179)); _ -> fun (V6365) -> begin (V6367 = begin (V6366 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6366} end), case V6367 of {'Idris.Prelude.Types.Left', E139} -> (fun (V6368) -> {'Idris.Prelude.Types.Left', V6368} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V6369) -> begin (V6370 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6369, {'Idris.Core.Env.Nil'}, V3, V6365))), case V6370 of {'Idris.Prelude.Types.Left', E141} -> (fun (V6371) -> {'Idris.Prelude.Types.Left', V6371} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V6372) -> begin (V6377 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6373) -> fun (V6374) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V6373, V6374)) end end, fun (V6375) -> fun (V6376) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V6375, V6376)) end end}, V6372, V6365))), case V6377 of {'Idris.Prelude.Types.Left', E143} -> (fun (V6378) -> {'Idris.Prelude.Types.Left', V6378} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V6379) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6379))))}, V6365)) end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> case V3 of {'Idris.Core.Value.NTCon', E6, E7, E8, E9, E10} -> (fun (V6380, V6381, V6382, V6383, V6384) -> fun (V6385) -> begin (V6387 = begin (V6386 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6386} end), case V6387 of {'Idris.Prelude.Types.Left', E11} -> (fun (V6388) -> {'Idris.Prelude.Types.Left', V6388} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V6389) -> begin (V6394 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6390) -> fun (V6391) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6390, V6391)) end end, fun (V6392) -> fun (V6393) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6392, V6393)) end end}, V6381, V6385))), case V6394 of {'Idris.Prelude.Types.Left', E13} -> (fun (V6395) -> {'Idris.Prelude.Types.Left', V6395} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V6396) -> begin (V6398 = (('un--getNArgs'(V0, V6389, V6396, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V6397) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V6397)) end, V6384))))(V6385))), case V6398 of {'Idris.Prelude.Types.Left', E15} -> (fun (V6399) -> {'Idris.Prelude.Types.Left', V6399} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V6400) -> case V6400 of {'Idris.Compiler.CompileExpr.User', E17, E18} -> (fun (V6401, V6402) -> begin (V6404 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6403) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6389, V6403)) end, V6402, []))(V6385))), case V6404 of {'Idris.Prelude.Types.Left', E19} -> (fun (V6405) -> {'Idris.Prelude.Types.Left', V6405} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V6406) -> begin (V6408 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6407) -> ('un--nfToCFType'(V0, V6380, V2, V6407)) end, V6406, []))(V6385))), case V6408 of {'Idris.Prelude.Types.Left', E21} -> (fun (V6409) -> {'Idris.Prelude.Types.Left', V6409} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V6410) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6396, V6410}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17, E18)); {'Idris.Compiler.CompileExpr.Struct', E23, E24} -> (fun (V6411, V6412) -> begin (V6423 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V6413) -> case V6413 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V6414, V6415) -> fun (V6416) -> begin (V6417 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6389, V6415))(V6416))), case V6417 of {'Idris.Prelude.Types.Left', E27} -> (fun (V6418) -> {'Idris.Prelude.Types.Left', V6418} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V6419) -> begin (V6420 = (('un--nfToCFType'(V0, V6380, 0, V6419))(V6416))), case V6420 of {'Idris.Prelude.Types.Left', E29} -> (fun (V6421) -> {'Idris.Prelude.Types.Left', V6421} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V6422) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6414, V6422}} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V6412, []))(V6385))), case V6423 of {'Idris.Prelude.Types.Left', E31} -> (fun (V6424) -> {'Idris.Prelude.Types.Left', V6424} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V6425) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6411, V6425}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23, E24)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E33} -> (fun (V6426) -> begin (V6427 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6389, V6426))(V6385))), case V6427 of {'Idris.Prelude.Types.Left', E34} -> (fun (V6428) -> {'Idris.Prelude.Types.Left', V6428} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V6429) -> begin (V6430 = (('un--nfToCFType'(V0, V6380, V2, V6429))(V6385))), case V6430 of {'Idris.Prelude.Types.Left', E36} -> (fun (V6431) -> {'Idris.Prelude.Types.Left', V6431} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V6432) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6432}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8, E9, E10)); {'Idris.Core.Value.NType', E38} -> (fun (V6433) -> fun (V6434) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end end(E38)); {'Idris.Core.Value.NErased', E39, E40} -> (fun (V6435, V6436) -> fun (V6437) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end end(E39, E40)); _ -> fun (V6438) -> begin (V6440 = begin (V6439 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6439} end), case V6440 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6441) -> {'Idris.Prelude.Types.Left', V6441} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6442) -> begin (V6443 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6442, {'Idris.Core.Env.Nil'}, V3, V6438))), case V6443 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6444) -> {'Idris.Prelude.Types.Left', V6444} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V6445) -> begin (V6450 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6446) -> fun (V6447) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V6446, V6447)) end end, fun (V6448) -> fun (V6449) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V6448, V6449)) end end}, V6445, V6438))), case V6450 of {'Idris.Prelude.Types.Left', E4} -> (fun (V6451) -> {'Idris.Prelude.Types.Left', V6451} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V6452) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6452))))}, V6438)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end.
'un--natMinus'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V6, V7) -> case V7 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V0, {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.UN', <<"prim__sub_Integer"/utf8>>}}, [V4 | [V6 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--natHackTree'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> ('case--natHackTree-2642'('erased', V5, V4, V3, V2, (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V17)) end end}, fun (V18) -> ('un--natBranch'('erased', V18)) end))(V4)))) end(E0, E1, E2, E3)); _ -> V1 end.
'un--natHack'(V0, V1) -> ('un--magic'('erased', [{'Idris.Compiler.CompileExpr.MagicCCon', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), <<"Z"/utf8>>, 0, fun (V2) -> fun (V3) -> fun (V4) -> case V4 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CPrimVal', V2, {'Idris.Core.TT.BI', 0}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end} | [{'Idris.Compiler.CompileExpr.MagicCCon', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), <<"S"/utf8>>, (1 + 0), fun (V5) -> fun (V6) -> fun (V7) -> case V7 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V8, V9) -> case V9 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V5, {'Idris.Core.CompileExpr.CRef', V5, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [{'Idris.Core.CompileExpr.CPrimVal', V5, {'Idris.Core.TT.BI', 1}} | [V8 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), <<"natToInteger"/utf8>>, (1 + 0), fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> case V13 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V14, V15) -> case V15 of {'Idris.Data.Vect.Nil'} -> (fun () -> V14 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), <<"integerToNat"/utf8>>, (1 + 0), fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> case V19 of {'Idris.Data.Vect.::', E4, E5} -> (fun (V20, V21) -> case V21 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V16, {'Idris.Core.CompileExpr.CRef', V17, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"prim__integerToNat"/utf8>>}}}, [V20 | []]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), <<"plus"/utf8>>, (1 + (1 + 0)), fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> case V25 of {'Idris.Data.Vect.::', E6, E7} -> (fun (V26, V27) -> case V27 of {'Idris.Data.Vect.::', E8, E9} -> (fun (V28, V29) -> case V29 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V22, {'Idris.Core.CompileExpr.CRef', V23, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [V26 | [V28 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), <<"mult"/utf8>>, (1 + (1 + 0)), fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> case V33 of {'Idris.Data.Vect.::', E10, E11} -> (fun (V34, V35) -> case V35 of {'Idris.Data.Vect.::', E12, E13} -> (fun (V36, V37) -> case V37 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V30, {'Idris.Core.CompileExpr.CRef', V31, {'Idris.Core.Name.UN', <<"prim__mul_Integer"/utf8>>}}, [V34 | [V36 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', ('Idris.Idris2.Core.Name.Namespace':'un--natNS'()), <<"minus"/utf8>>, (1 + (1 + 0)), fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('un--natMinus'(V38, V39, V40, V41)) end end end end} | []]]]]]]], V1)).
'un--natBranch'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> ('un--isNatCon'(V2)) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkForgetDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Just', E31} -> (fun (V37) -> begin (V38 = {'Idris.Prelude.Types.Just', V37}), (('case--case block in mkForgetDef-6180'(V1, V0, V6, V37, V38, case V37 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V57 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mkDropSubst'(V0, V1, V2, V3) -> case V3 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V4, V5) -> ('case--mkDropSubst-1947'(V4, V5, V2, V1, V0, ('un--mkDropSubst'(('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V0)), V1, V2, V5)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkArgList'(V0, V1) -> case V1 of 0 -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Compiler.CompileExpr.NoArgs'}}; _ -> begin (V2 = (V1 - 1)), ('case--mkArgList-4490'(V2, V0, ('un--mkArgList'(((V0 + 1) rem 9223372036854775808), V2)))) end end.
'un--magic'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Core.CompileExpr.CLam', V3, V4, ('un--magic'('erased', V1, V5))} end(E0, E1, E2)); _ -> ('nested--9835-2041--in--un--go'('erased', V2, V1, V1, V2)) end.
'un--isNatCon'(V0) -> case V0 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Core.Name.UN', E2} -> (fun (V3) -> ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"Z"/utf8>>)), fun () -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"S"/utf8>>)) end)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V1, ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()))) end)) end(E2)); _ -> 1 end end(E0, E1)); _ -> 1 end.
'un--isFiniteEnum'(V0) -> case V0 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Core.Name.UN', E2} -> (fun (V3) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"True"/utf8>>)), fun () -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"False"/utf8>>)) end)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V1, ('Idris.Idris2.Core.Name.Namespace':'un--basicsNS'()))) end)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"LT"/utf8>>)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"EQ"/utf8>>)), fun () -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V3, <<"GT"/utf8>>)) end)) end)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V1, ('Idris.Idris2.Core.Name.Namespace':'un--eqOrdNS'()))) end)) end)) end(E2)); _ -> 1 end end(E0, E1)); _ -> 1 end.
'un--getZBranch'(V0, V1) -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V2, V3) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'('erased', ('un--tryZBranch'('erased', V2)), ('un--getZBranch'('erased', V3)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getSBranch'(V0, V1, V2) -> case V2 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'('erased', ('un--trySBranch'('erased', V1, V3)), ('un--getSBranch'('erased', V1, V4)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getPArgs'(V0, V1, V2, V3) -> begin (V4 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1, V2))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = {'Idris.Core.Value.NDCon', V7, V8, V9, V10, V11}), (('case--case block in getPArgs-4563'(V2, V1, V0, V8, V9, V10, V11, V7, V12, ('Idris.Idris2.Data.List':'un--reverse'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V13) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V13)) end, V11))))))(V3)) end end(E2, E3, E4, E5, E6)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V6)), <<"Badly formed struct type"/utf8>>}, V3)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getNewType'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V7, V8) -> case V7 of {'Idris.Core.CaseTree.DefaultCase', E2} -> (fun (V9) -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E2)); {'Idris.Core.CaseTree.ConCase', E3, E4, E5, E6} -> (fun (V11, V12, V13, V14) -> fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> begin (V47 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V11, case V19 of {'Idris.Core.Context.MkDefs', E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46) -> V20 end(E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V15))), case V47 of {'Idris.Prelude.Types.Left', E36} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V49) -> case V49 of {'Idris.Prelude.Types.Just', E38} -> (fun (V50) -> case V50 of {'Idris.Core.Context.DCon', E39, E40, E41} -> (fun (V51, V52, V53) -> case V53 of {'Idris.Prelude.Types.Just', E42} -> (fun (V54) -> case V54 of {'Idris.Builtin.MkPair', E43, E44} -> (fun (V55, V56) -> begin (V57 = ('nested--11226-3757--in--un--mkSubst'(V13, V0, V14, V12, V11, V8, V4, V3, V2, V1, 'erased', 0, V3, V56, V13))), begin (V58 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V13, V0)), V1, V4, V14))(V15))), case V58 of {'Idris.Prelude.Types.Left', E45} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.CompileExpr':'un--substs'(V13, V0, V57, V60))}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43, E44)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E42)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E39, E40, E41)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E38)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5, E6)); _ -> ('un--getNewType'(V0, V1, V2, V3, V4, V8)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNArgs'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Core.Name.UN', E2} -> (fun (V6) -> case V6 of <<"IORes"/utf8>> -> case V3 of [E3 | E4] -> (fun (V7, V8) -> case V8 of [] -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NIORes', V7}} end; _ -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E3, E4)); _ -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Ptr"/utf8>> -> case V3 of [E5 | E6] -> (fun (V12, V13) -> case V13 of [] -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NPtr'}} end; _ -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E5, E6)); _ -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"AnyPtr"/utf8>> -> case V3 of [] -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NPtr'}} end; _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"GCPtr"/utf8>> -> case V3 of [E7 | E8] -> (fun (V19, V20) -> case V20 of [] -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}} end; _ -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E7, E8)); _ -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"GCAnyPtr"/utf8>> -> case V3 of [] -> fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}} end; _ -> fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Buffer"/utf8>> -> case V3 of [] -> fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NBuffer'}} end; _ -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Unit"/utf8>> -> case V3 of [] -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NUnit'}} end; _ -> fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Struct"/utf8>> -> case V3 of [E9 | E10] -> (fun (V30, V31) -> case V31 of [E11 | E12] -> (fun (V32, V33) -> case V33 of [] -> fun (V34) -> begin (V35 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1, V30))(V34))), case V35 of {'Idris.Prelude.Types.Left', E13} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V37) -> case V37 of {'Idris.Core.Value.NPrimVal', E15, E16} -> (fun (V38, V39) -> case V39 of {'Idris.Core.TT.Str', E17} -> (fun (V40) -> begin (V41 = ('un--getFieldArgs'(V0, V1, V32, V34))), case V41 of {'Idris.Prelude.Types.Left', E18} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V43) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Struct', V40, V43}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V37)), <<"Unknown name for struct"/utf8>>}, V34)) end end(E15, E16)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V37)), <<"Unknown name for struct"/utf8>>}, V34)) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V44) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E11, E12)); _ -> fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E9, E10)); _ -> fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; _ -> fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E2)); _ -> fun (V48) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E0, E1)); _ -> fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end.
'un--getFieldArgs'(V0, V1, V2, V3) -> begin (V4 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1, V2))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = {'Idris.Core.Value.NDCon', V7, V8, V9, V10, V11}), (('case--case block in getFieldArgs-4748'(V2, V1, V0, V8, V9, V10, V11, V7, V12, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V13) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V13)) end, V11))))(V3)) end end(E2, E3, E4, E5, E6)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V6)), <<"Badly formed struct type"/utf8>>}, V3)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getDef'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Core.CaseTree.DefaultCase', E2} -> (fun (V7) -> fun (V8) -> begin (V9 = (('un--toCExpTree'(V0, V1, V2, V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V11}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); {'Idris.Core.CaseTree.ConstCase', E5, E6} -> (fun (V12, V13) -> case V12 of {'Idris.Core.TT.WorldVal'} -> (fun () -> fun (V14) -> begin (V15 = (('un--toCExpTree'(V0, V1, V2, V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('un--getDef'(V0, V1, V2, V6)) end end(E5, E6)); _ -> ('un--getDef'(V0, V1, V2, V6)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getCFTypes'(V0, V1, V2) -> case V2 of {'Idris.Core.Value.NBind', E2, E3, E4, E5} -> (fun (V3, V4, V5, V6) -> case V5 of {'Idris.Core.TT.Pi', E8, E9, E10, E11} -> (fun (V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('un--nfToCFType'(V0, V3, 1, V10))(V11))), case V12 of {'Idris.Prelude.Types.Left', E12} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E14} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V18) -> begin (V19 = (((V6(V18))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3, 1}))))(V11))), case V19 of {'Idris.Prelude.Types.Left', E16} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V21) -> (('un--getCFTypes'(V0, [V14 | V1], V21))(V11)) end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8, E9, E10, E11)); _ -> fun (V22) -> begin (V23 = (('un--nfToCFType'(V0, ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V2)), 1, V2))(V22))), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Data.List':'un--reverse'('erased', V1)), V25}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3, E4, E5)); _ -> fun (V26) -> begin (V27 = (('un--nfToCFType'(V0, ('Idris.Idris2.Core.Value':'un--getLoc'('erased', V2)), 1, V2))(V26))), case V27 of {'Idris.Prelude.Types.Left', E0} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Data.List':'un--reverse'('erased', V1)), V29}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--expandToArity'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.CErased', E2} -> (fun (V4) -> {'Idris.Core.CompileExpr.CErased', V4} end(E2)); _ -> case V1 of 0 -> ('nested--9380-1648--in--un--applyAll'(V0, V3, V2, V2, V3)); _ -> begin (V5 = (V1 - 1)), case V3 of [E0 | E1] -> (fun (V6, V7) -> ('un--expandToArity'(V0, V5, ('nested--9380-1670--in--un--addArg'(V0, V5, V6, V7, V2, V2, V6)), V7)) end(E0, E1)); _ -> case V3 of [] -> ('un--etaExpand'(V0, 0, V1, V2, [])); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'un--etaExpand'(V0, V1, V2, V3, V4) -> case V2 of 0 -> ('nested--9281-1548--in--un--mkApp'(V0, V4, V3, V1, V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V5) -> ('nested--9281-1547--in--un--mkLocal'(V0, V4, V3, V1, ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V3)), V5)) end, ('Idris.Idris2.Data.List':'un--reverse'('erased', V4)))))); _ -> begin (V6 = (V2 - 1)), {'Idris.Core.CompileExpr.CLam', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V3)), {'Idris.Core.Name.MN', <<"eta"/utf8>>, V1}, ('un--etaExpand'([{'Idris.Core.Name.MN', <<"eta"/utf8>>, V1} | V0], ((V1 + 1) rem 9223372036854775808), V6, ('Idris.Idris2.Core.CompileExpr':'dn--un--weaken_Weaken_CExp'('erased', 'erased', V3)), [0 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V7) -> ('un--weakenVar'('erased', 'erased', V7)) end, V4))]))} end end.
'un--eraseConArgs'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--expandToArity'(V0, V1, V3, V4))), ('un--dropPos'('erased', V2, V5)) end.
'un--dropPos'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V3, V4, V5) -> {'Idris.Core.CompileExpr.CLam', V3, V4, ('un--dropPos'('erased', V1, V5))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6} -> (fun (V6, V7, V8, V9) -> {'Idris.Core.CompileExpr.CCon', V6, V7, V8, ('nested--9602-1836--in--un--drop'('erased', V9, V8, V7, V6, V1, 0, V9))} end(E3, E4, E5, E6)); _ -> V2 end.
'un--constCases'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Core.CaseTree.ConstCase', E2, E3} -> (fun (V7, V8) -> case V7 of {'Idris.Core.TT.WorldVal'} -> (fun () -> ('un--constCases'(V0, V1, V2, V6)) end()); _ -> fun (V9) -> begin (V10 = (('un--toCExpTree'(V0, V1, V2, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> begin (V13 = (('un--constCases'(V0, V1, V2, V6))(V9))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConstAlt', V7, V12} | V15]} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3)); _ -> ('un--constCases'(V0, V1, V2, V6)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--conCases'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Core.CaseTree.ConCase', E2, E3, E4, E5} -> (fun (V7, V8, V9, V10) -> fun (V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V43 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V7, case V15 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V16 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V11))), case V43 of {'Idris.Prelude.Types.Left', E35} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V45) -> case V45 of {'Idris.Prelude.Types.Just', E37} -> (fun (V46) -> begin (V47 = {'Idris.Prelude.Types.Just', V46}), (('case--case block in conCases-3428'(V9, V0, V10, V8, V7, V6, V2, V1, V15, V46, V47, case V46 of {'Idris.Core.Context.MkGlobalDef', E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58} -> (fun (V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> V65 end(E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V11)) end end(E37)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V69 = (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V7))(V11))), case V69 of {'Idris.Prelude.Types.Left', E59} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V71) -> begin (V72 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V9, V0)), V1, V2, V10))(V11))), case V72 of {'Idris.Prelude.Types.Left', E61} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V74) -> begin (V75 = (('un--conCases'(V0, V1, V2, V6))(V11))), case V75 of {'Idris.Prelude.Types.Left', E63} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V77) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V71, {'Idris.Prelude.Types.Nothing'}, V9, V74} | V77]} end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3, E4, E5)); _ -> ('un--conCases'(V0, V1, V2, V6)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileExp'(V0, V1, V2) -> begin (V3 = (('un--toCExp'([], V0, {'Idris.Core.Name.UN', <<"main"/utf8>>}, V1))(V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> {'Idris.Prelude.Types.Right', V5} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Just', E31} -> (fun (V37) -> begin (V87 = begin (V63 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V38, V39)) end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V40, V41)) end end}, case V37 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62) -> V59 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2))), case V63 of {'Idris.Prelude.Types.Left', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V65) -> (('un--toCDef'(V0, V1, case V37 of {'Idris.Core.Context.MkGlobalDef', E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75} -> (fun (V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86) -> V68 end(E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V65))(V2)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V87 of {'Idris.Prelude.Types.Left', E76} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V89) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V0, V1, V89, V2)) end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--boolHackTree'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> begin (V17 = ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'('erased', 'erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'('erased', 'erased', V8, V9)) end end end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', V11)) end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'('erased', 'erased', V14, V15)) end end end end}, fun (V16) -> ('nested--10574-2748--in--un--toBool'('erased', V5, V4, V3, V2, V16)) end, V4))), case V17 of {'Idris.Prelude.Types.Just', E4} -> (fun (V18) -> {'Idris.Core.CompileExpr.CConstCase', V2, V3, V18, V5} end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Core.CompileExpr.CConCase', V2, V3, V4, V5} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> V1 end.
'un--applyNewType'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--expandToArity'(V0, V1, V3, V4))), ('nested--9483-1730--in--un--keepArg'(V0, V4, V3, V2, V1, 'erased', V5)) end.
