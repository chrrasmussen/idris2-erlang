-module('Idris.Idris2.Compiler.CompileExpr').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in getFieldArgs-5526'/10,
  'case--case block in getPArgs-5337'/11,
  'case--case block in conCases-4175'/12,
  'case--toCExp-3944'/7,
  'nested--8278-3346--in--un--toEnum'/5,
  'nested--11701-6720--in--un--toArgExp'/7,
  'nested--11701-6581--in--un--toArgExp'/6,
  'nested--7834-2939--in--un--natToIntMagic'/2,
  'nested--9053-4508--in--un--mkSubst'/14,
  'nested--6886-2089--in--un--mkLocal'/6,
  'nested--6886-2090--in--un--mkApp'/6,
  'nested--7090-2272--in--un--keepArg'/6,
  'nested--7090-2271--in--un--keep'/7,
  'nested--7834-2940--in--un--intToNatMagic'/2,
  'nested--7497-2630--in--un--go'/4,
  'nested--11701-6721--in--un--getVars'/7,
  'nested--11701-6582--in--un--getVars'/6,
  'nested--7497-2629--in--un--fire'/4,
  'nested--9045-4125--in--un--dcon'/9,
  'nested--8356-3409--in--un--ciFlags'/3,
  'nested--7834-2938--in--un--builtinMagicNat'/2,
  'nested--6986-2190--in--un--applyAll'/5,
  'nested--6986-2212--in--un--addArg'/7,
  'un--weakenVar'/1,
  'un--tryZBranch'/2,
  'un--trySBranch'/3,
  'un--toCExpTree\x{27}'/4,
  'un--toCExpTree'/4,
  'un--toCExpTm'/5,
  'un--toCExp'/6,
  'un--toCDef'/5,
  'un--numArgs'/3,
  'un--nfToCFType'/4,
  'un--natMinus'/3,
  'un--natHack'/0,
  'un--natBranch'/3,
  'un--mkSub'/3,
  'un--mkForgetDef'/3,
  'un--mkDropSubst'/4,
  'un--mkArgList'/2,
  'un--magic'/2,
  'un--isNatCon'/3,
  'un--getZBranch'/2,
  'un--getSBranch'/3,
  'un--getPArgs'/4,
  'un--getNewType'/6,
  'un--getNArgs'/4,
  'un--getFieldArgs'/4,
  'un--getDef'/4,
  'un--getCFTypes'/4,
  'un--expandToArity'/4,
  'un--etaExpand'/5,
  'un--eraseConArgs'/5,
  'un--enumTree'/1,
  'un--dropPos'/2,
  'un--dropFrom'/3,
  'un--dconFlag'/3,
  'un--constCases'/4,
  'un--conCases'/4,
  'un--compileExp'/3,
  'un--compileDef'/3,
  'un--builtinNatTree\x{27}'/3,
  'un--builtinNatTree'/2,
  'un--builtinMagic'/2,
  'un--applyNewType'/5
]).
'case--case block in getFieldArgs-5526'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [E2 | E3] -> (fun (V12, V13) -> fun (V14) -> case V13 of [E4 | E5] -> (fun (V15, V16) -> case V16 of [] -> begin (V17 = ('un--getFieldArgs'(V2, V1, V15, V14))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> begin (V20 = ('un--getPArgs'(V2, V1, V12, V14))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V23, V24) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V23, V24} | V19]} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', []} end end(E4, E5)); _ -> {'Idris.Prelude.Types.Right', []} end end end(E2, E3)); _ -> fun (V25) -> {'Idris.Prelude.Types.Right', []} end end end(E0, E1)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', []} end end.
'case--case block in getPArgs-5337'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of [E0 | E1] -> (fun (V11, V12) -> case V12 of [E2 | E3] -> (fun (V13, V14) -> begin (V15 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V2, [], V1, V13))(V10))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> case V17 of {'Idris.Core.Value.NPrimVal', E6, E7} -> (fun (V18, V19) -> case V19 of {'Idris.Core.TT.Str', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, V11}} end(E8)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V17)), <<"Unknown field name"/utf8>>}, V10)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V17)), <<"Unknown field name"/utf8>>}, V10)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V7, <<"Badly formed struct type"/utf8>>}, V10)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V7, <<"Badly formed struct type"/utf8>>}, V10)) end.
'case--case block in conCases-4175'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Core.Context.DCon', E54, E55, E56} -> (fun (V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Just', E111} -> (fun (V15) -> ('un--conCases'(V1, V7, V6, V5)) end(E111)); _ -> fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Context':'un--getFullName'(V7, V4, V16))), case V17 of {'Idris.Prelude.Types.Left', E57} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V19) -> case ('un--mkDropSubst'(0, case V9 of {'Idris.Core.Context.MkGlobalDef', E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110} -> (fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V23 end(E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1, V0)) of {'Idris.Builtin.DPair.MkDPair', E59, E60} -> (fun (V41, V42) -> begin (V43 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'(V0, V1)), V7, V6, V2))(V16))), case V43 of {'Idris.Prelude.Types.Left', E61} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V45) -> begin (V46 = (('un--conCases'(V1, V7, V6, V5))(V16))), case V46 of {'Idris.Prelude.Types.Left', E63} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V48) -> case ('nested--9045-4125--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, case V9 of {'Idris.Core.Context.MkGlobalDef', E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89} -> (fun (V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> V66 end(E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> begin (V70 = ('un--dconFlag'(V7, V19, V16))), case V70 of {'Idris.Prelude.Types.Left', E65} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V72) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V19, V72, {'Idris.Prelude.Types.Just', V3}, V41, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V42, V45))} | V48]} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V73 = ('un--dconFlag'(V7, V19, V16))), case V73 of {'Idris.Prelude.Types.Left', E67} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V75) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V19, V75, {'Idris.Prelude.Types.Nothing'}, V41, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V42, V45))} | V48]} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59, E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E54, E55, E56)); _ -> fun (V76) -> begin (V77 = ('Idris.Idris2.Core.Context':'un--getFullName'(V7, V4, V76))), case V77 of {'Idris.Prelude.Types.Left', E0} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V79) -> case ('un--mkDropSubst'(0, case V9 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100) -> V83 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1, V0)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V101, V102) -> begin (V103 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'(V0, V1)), V7, V6, V2))(V76))), case V103 of {'Idris.Prelude.Types.Left', E4} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V105) -> begin (V106 = (('un--conCases'(V1, V7, V6, V5))(V76))), case V106 of {'Idris.Prelude.Types.Left', E6} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V108) -> case ('nested--9045-4125--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, case V9 of {'Idris.Core.Context.MkGlobalDef', E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129) -> V126 end(E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> begin (V130 = ('un--dconFlag'(V7, V79, V76))), case V130 of {'Idris.Prelude.Types.Left', E8} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V132) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V79, V132, {'Idris.Prelude.Types.Just', V3}, V101, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V102, V105))} | V108]} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V133 = ('un--dconFlag'(V7, V79, V76))), case V133 of {'Idris.Prelude.Types.Left', E10} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V135) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V79, V135, {'Idris.Prelude.Types.Nothing'}, V101, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V102, V105))} | V108]} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--toCExp-3944'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> begin (V12 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V9) -> fun (V10) -> ('un--toCExp'(V0, V4, fun (V11) -> (V3('erased')) end, V2, V9, V10)) end end, V8, [], V6))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> begin (V20 = (('un--toCExpTm'(V0, V4, fun (V19) -> (V3('erased')) end, V2, V7))(V6))), case V20 of {'Idris.Prelude.Types.Left', E6} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V22) -> begin (V23 = ('un--numArgs'(V18, V7, V6))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> case V25 of {'Idris.Compiler.CompileExpr.Arity', E10} -> (fun (V26) -> begin (V27 = ('un--expandToArity'(V0, V26, V22, V14))), {'Idris.Prelude.Types.Right', ((V3('erased'))(V27))} end end(E10)); {'Idris.Compiler.CompileExpr.NewTypeBy', E11, E12} -> (fun (V28, V29) -> begin (V30 = ('un--applyNewType'(V0, V28, V29, V22, V14))), {'Idris.Prelude.Types.Right', ((V3('erased'))(V30))} end end(E11, E12)); {'Idris.Compiler.CompileExpr.EraseArgs', E13, E14} -> (fun (V31, V32) -> begin (V33 = ('un--eraseConArgs'(V0, V31, V32, V22, V14))), {'Idris.Prelude.Types.Right', ((V3('erased'))(V33))} end end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8278-3346--in--un--toEnum'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> case V6 of 4 -> case V7 of {'Idris.Prelude.Types.Just', E5} -> (fun (V10) -> case V8 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V10}, V9})); _ -> {'Idris.Prelude.Types.Nothing'} end end(E5)); _ -> {'Idris.Prelude.Types.Nothing'} end; _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--11701-6720--in--un--toArgExp'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Core.CompileExpr.CLocal', V6, ('Idris.Idris2.Core.FC':'un--emptyFC'())}.
'nested--11701-6581--in--un--toArgExp'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, ('Idris.Idris2.Core.FC':'un--emptyFC'())}.
'nested--7834-2939--in--un--natToIntMagic'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> case V3 of {'Idris.Core.Context.MkNatToInt', E2, E3} -> (fun (V4, V5) -> {'Idris.Compiler.CompileExpr.MagicCRef', V2, V4, fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Data.Vect':'un--index'(V5, V9)) end end end end} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9053-4508--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of [] -> {'Idris.Core.CompileExpr.SubstCEnv.Nil'}; [E0 | E1] -> (fun (V14, V15) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V10, V12)) of 1 -> {'Idris.Core.CompileExpr.SubstCEnv.::', V11, ('nested--9053-4508--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V10)), V11, V12, V15))}; 0 -> {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CErased', V8}, ('nested--9053-4508--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V10)), V11, V12, V15))}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--6886-2089--in--un--mkLocal'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, V4}.
'nested--6886-2090--in--un--mkApp'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> V4; _ -> case V4 of {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> (fun (V6, V7, V8) -> {'Idris.Core.CompileExpr.CApp', V6, V7, ('Idris.Idris2.Prelude.Types.List':'un--++'(V8, V5))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V9, V10, V11, V12, V13) -> {'Idris.Core.CompileExpr.CCon', V9, V10, V11, V12, ('Idris.Idris2.Prelude.Types.List':'un--++'(V13, V5))} end(E3, E4, E5, E6, E7)); {'Idris.Core.CompileExpr.CExtPrim', E8, E9, E10} -> (fun (V14, V15, V16) -> {'Idris.Core.CompileExpr.CExtPrim', V14, V15, ('Idris.Idris2.Prelude.Types.List':'un--++'(V16, V5))} end(E8, E9, E10)); _ -> {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V4)), V4, V5} end end.
'nested--7090-2272--in--un--keepArg'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V6, V7, V8) -> {'Idris.Core.CompileExpr.CLam', V6, V7, ('nested--7090-2272--in--un--keepArg'(V0, V1, V2, V3, V4, V8))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V9, V10, V11, V12, V13) -> ('nested--7090-2271--in--un--keep'(V0, V1, V2, V3, V4, 0, V13)) end(E3, E4, E5, E6, E7)); _ -> {'Idris.Core.CompileExpr.CErased', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V2))} end.
'nested--7090-2271--in--un--keep'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of [] -> {'Idris.Core.CompileExpr.CErased', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V2))}; [E0 | E1] -> (fun (V7, V8) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5, V3)) of 1 -> V7; 0 -> ('nested--7090-2271--in--un--keep'(V0, V1, V2, V3, V4, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V5)), V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7834-2940--in--un--intToNatMagic'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> case V3 of {'Idris.Core.Context.MkIntToNat', E2, E3} -> (fun (V4, V5) -> {'Idris.Compiler.CompileExpr.MagicCRef', V2, V4, fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> {'Idris.Core.CompileExpr.CApp', V6, {'Idris.Core.CompileExpr.CRef', V7, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"prim__integerToNat"/utf8>>}}}, [('Idris.Idris2.Data.Vect':'un--index'(V5, V9)) | []]} end end end end} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7497-2630--in--un--go'(V0, V1, V2, V3) -> case V2 of [] -> V3; [E0 | E1] -> (fun (V4, V5) -> case ('nested--7497-2629--in--un--fire'(V0, V1, V4, V3)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--7497-2630--in--un--go'(V0, V1, V5, V3)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V6) -> V6 end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11701-6721--in--un--getVars'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Compiler.CompileExpr.NoArgs'} -> (fun () -> {'Idris.Data.Vect.Nil'} end()); {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> (fun (V7, V8) -> {'Idris.Data.Vect.::', 0, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V9) -> ('un--weakenVar'(V9)) end, ('nested--11701-6721--in--un--getVars'(V0, V1, V2, V3, V4, V5, V8))))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11701-6582--in--un--getVars'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Compiler.CompileExpr.NoArgs'} -> (fun () -> [] end()); {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> (fun (V6, V7) -> [0 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V8) -> ('un--weakenVar'(V8)) end, ('nested--11701-6582--in--un--getVars'(V0, V1, V2, V3, V4, V7))))] end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7497-2629--in--un--fire'(V0, V1, V2, V3) -> case V2 of {'Idris.Compiler.CompileExpr.MagicCCon', E0, E1, E2} -> (fun (V4, V5, V6) -> case V3 of {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V7, V8, V9, V10, V11) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V14, V15)) end end end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V17)) end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V20, V21)) end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V24, V25)) end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V27)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V30, V31)) end end end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V33)) end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V36, V37)) end end end end}, fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V40, V41)) end end end}, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4, V8)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(((V6(V7))('erased')), ('Idris.Idris2.Data.Vect':'un--toVect'(V5, V11)))) end)) end(E3, E4, E5, E6, E7)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2)); {'Idris.Compiler.CompileExpr.MagicCRef', E8, E9, E10} -> (fun (V42, V43, V44) -> case V3 of {'Idris.Core.CompileExpr.CApp', E11, E12, E13} -> (fun (V45, V46, V47) -> case V46 of {'Idris.Core.CompileExpr.CRef', E14, E15} -> (fun (V48, V49) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V52, V53)) end end end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V55)) end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V58, V59)) end end end end}, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V62, V63)) end end end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V65)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V68, V69)) end end end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V71)) end end, fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V74, V75)) end end end end}, fun (V76) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V78, V79)) end end end}, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V42, V49)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'((((V44(V45))(V48))('erased')), ('Idris.Idris2.Data.Vect':'un--toVect'(V43, V47)))) end)) end(E14, E15)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E11, E12, E13)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E8, E9, E10)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--9045-4125--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Context.DCon', E0, E1, E2} -> (fun (V9, V10, V11) -> 1 end(E0, E1, E2)); _ -> 0 end.
'nested--8356-3409--in--un--ciFlags'(V0, V1, V2) -> case V2 of [] -> 0; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Core.Context.ConType', E2} -> (fun (V5) -> V5 end(E2)); _ -> ('nested--8356-3409--in--un--ciFlags'(V0, V1, V4)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7834-2938--in--un--builtinMagicNat'(V0, V1) -> [{'Idris.Compiler.CompileExpr.MagicCCon', case V1 of {'Idris.Core.Context.MkNatBuiltin', E0, E1} -> (fun (V2, V3) -> V2 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 0, fun (V4) -> fun (V5) -> fun (V6) -> case V6 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CPrimVal', V4, {'Idris.Core.TT.BI', 0}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end} | [{'Idris.Compiler.CompileExpr.MagicCCon', case V1 of {'Idris.Core.Context.MkNatBuiltin', E2, E3} -> (fun (V7, V8) -> V8 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, (1 + 0), fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Idris.Data.Vect.::', E4, E5} -> (fun (V12, V13) -> case V13 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V9, {'Idris.Core.CompileExpr.CRef', V9, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [{'Idris.Core.CompileExpr.CPrimVal', V9, {'Idris.Core.TT.BI', 1}} | [V12 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end} | []]].
'nested--6986-2190--in--un--applyAll'(V0, V1, V2, V3, V4) -> case V4 of [] -> V3; [E0 | E1] -> (fun (V5, V6) -> ('nested--6986-2190--in--un--applyAll'(V0, V1, V2, {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V3)), V3, [V5 | []]}, V6)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--6986-2212--in--un--addArg'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> (fun (V7, V8, V9) -> {'Idris.Core.CompileExpr.CApp', V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--++'(V9, [V6 | []]))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V10, V11, V12, V13, V14) -> {'Idris.Core.CompileExpr.CCon', V10, V11, V12, V13, ('Idris.Idris2.Prelude.Types.List':'un--++'(V14, [V6 | []]))} end(E3, E4, E5, E6, E7)); {'Idris.Core.CompileExpr.CExtPrim', E8, E9, E10} -> (fun (V15, V16, V17) -> {'Idris.Core.CompileExpr.CExtPrim', V15, V16, ('Idris.Idris2.Prelude.Types.List':'un--++'(V17, [V6 | []]))} end(E8, E9, E10)); _ -> {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V5)), V5, [V6 | []]} end.
'un--weakenVar'(V0) -> (1 + V0).
'un--tryZBranch'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> case V5 of [] -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V9, V10)) end end end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V12)) end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V15, V16)) end end end end}, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V19, V20)) end end end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V22)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V25, V26)) end end end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V28)) end end, fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V31, V32)) end end end end}, fun (V33) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V35, V36)) end end end}, ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V2, V0)))))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V6)) end)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--trySBranch'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V3, V4, V5, V6, V7) -> case V6 of [E5 | E6] -> (fun (V8, V9) -> case V9 of [] -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V12, V13)) end end end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V15)) end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V18, V19)) end end end end}, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V22, V23)) end end end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V25)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V28, V29)) end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V34, V35)) end end end end}, fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V38, V39)) end end end}, ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V3, V0)))))), begin (V40 = ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V1))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.CompileExpr.CLet', V40, V8, 1, ('un--natMinus'(V40, V40, {'Idris.Data.Vect.::', V1, {'Idris.Data.Vect.::', {'Idris.Core.CompileExpr.CPrimVal', V40, {'Idris.Core.TT.BI', 1}}, {'Idris.Data.Vect.Nil'}}})), V7})) end end)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E5, E6)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--toCExpTree\x{27}'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> case V7 of [E4 | E5] -> (fun (V8, V9) -> case V8 of {'Idris.Core.CaseTree.ConCase', E6, E7, E8, E9} -> (fun (V10, V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Core.TT':'un--getLoc'(V6))), fun (V15) -> begin (V16 = (('un--getNewType'(V0, V1, V14, {'Idris.Core.CompileExpr.CLocal', V5, V14}, V2, V7))(V15))), case V16 of {'Idris.Prelude.Types.Left', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V18) -> begin (V19 = [{'Idris.Core.CaseTree.ConCase', V10, V11, V12, V13} | V9]), case V18 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V21 = begin (V20 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V20} end), case V21 of {'Idris.Prelude.Types.Left', E12} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V23) -> begin (V24 = (('un--conCases'(V0, V1, V2, V19))(V15))), case V24 of {'Idris.Prelude.Types.Left', E14} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V26) -> begin (V27 = (('un--getDef'(V0, V1, V2, V19))(V15))), case V27 of {'Idris.Prelude.Types.Left', E16} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V29) -> case ('Idris.Idris2.Data.List':'un--isNil'(V26)) of 1 -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.CompileExpr.CErased', V14} end, V29))}; 0 -> begin (V30 = ('un--builtinNatTree'(V1, V15))), case V30 of {'Idris.Prelude.Types.Left', E18} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V32) -> {'Idris.Prelude.Types.Right', ('un--enumTree'((V32({'Idris.Core.CompileExpr.CConCase', V14, {'Idris.Core.CompileExpr.CLocal', V5, V14}, V26, V29}))))} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E20} -> (fun (V33) -> {'Idris.Prelude.Types.Right', V33} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8, E9)); {'Idris.Core.CaseTree.DelayCase', E21, E22, E23} -> (fun (V34, V35, V36) -> fun (V37) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Unexpected DelayCase"/utf8>>}, V37)) end end(E21, E22, E23)); {'Idris.Core.CaseTree.ConstCase', E24, E25} -> (fun (V38, V39) -> begin (V40 = ('Idris.Idris2.Core.TT':'un--getLoc'(V6))), fun (V41) -> begin (V42 = (('un--constCases'(V0, V1, V2, V7))(V41))), case V42 of {'Idris.Prelude.Types.Left', E26} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V44) -> begin (V45 = (('un--getDef'(V0, V1, V2, V7))(V41))), case V45 of {'Idris.Prelude.Types.Left', E28} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V47) -> case ('Idris.Idris2.Data.List':'un--isNil'(V44)) of 1 -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.CompileExpr.CErased', V40} end, V47))}; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V40, {'Idris.Core.CompileExpr.CLocal', V5, V40}, V44, V47}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E24, E25)); {'Idris.Core.CaseTree.DefaultCase', E30} -> (fun (V48) -> ('un--toCExpTree'(V0, V1, V2, V48)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); [] -> fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.TT':'un--getLoc'(V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Missing case tree in "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); {'Idris.Core.CaseTree.STerm', E31, E32} -> (fun (V50, V51) -> fun (V52) -> begin (V53 = ('un--builtinMagic'(V1, V52))), case V53 of {'Idris.Prelude.Types.Left', E33} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V55) -> ('un--toCExp'(V0, V1, fun (V56) -> (V55('erased')) end, V2, V51, V52)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31, E32)); {'Idris.Core.CaseTree.Unmatched', E35} -> (fun (V57) -> fun (V58) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V57}} end end(E35)); {'Idris.Core.CaseTree.Impossible'} -> (fun () -> fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Impossible case encountered in "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toCExpTree'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> case V7 of [E4 | E5] -> (fun (V8, V9) -> case V8 of {'Idris.Core.CaseTree.DelayCase', E6, E7, E8} -> (fun (V10, V11, V12) -> begin (V13 = ('Idris.Idris2.Core.TT':'un--getLoc'(V6))), fun (V14) -> begin (V15 = (('un--toCExpTree'([V10 | [V11 | V0]], V1, V2, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V13, V11, 1, {'Idris.Core.CompileExpr.CForce', V13, 0, {'Idris.Core.CompileExpr.CLocal', V5, ('Idris.Idris2.Core.TT':'un--getLoc'(V6))}}, {'Idris.Core.CompileExpr.CLet', V13, V10, 1, {'Idris.Core.CompileExpr.CErased', V13}, V17}}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3)) end end(E4, E5)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3)) end end(E0, E1, E2, E3)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3)) end.
'un--toCExpTm'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V5, V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLocal', V7, V5}} end end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V9, V10, V11) -> fun (V12) -> case V10 of {'Idris.Core.TT.DataCon', E8, E9} -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V11, V12))), case V15 of {'Idris.Prelude.Types.Left', E10} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V17) -> begin (V18 = ('un--dconFlag'(V1, V17, V12))), case V18 of {'Idris.Prelude.Types.Left', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V20) -> case V20 of 4 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V9, {'Idris.Core.TT.I', V13}}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V9, V17, V20, {'Idris.Prelude.Types.Just', V13}, []}} end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); {'Idris.Core.TT.TyCon', E14, E15} -> (fun (V21, V22) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V9, V11, 1, {'Idris.Prelude.Types.Nothing'}, []}} end(E14, E15)); _ -> begin (V23 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V11, V12))), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V9, {'Idris.Core.CompileExpr.CRef', V9, V25}, []}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3, E4, E5)); {'Idris.Core.TT.Meta', E16, E17, E18, E19} -> (fun (V26, V27, V28, V29) -> fun (V30) -> begin (V34 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V31) -> fun (V32) -> ('un--toCExp'(V0, V1, fun (V33) -> (V2('erased')) end, V3, V31, V32)) end end, V29, [], V30))), case V34 of {'Idris.Prelude.Types.Left', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V26, {'Idris.Core.CompileExpr.CRef', V26, V27}, V36}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E16, E17, E18, E19)); {'Idris.Core.TT.Bind', E22, E23, E24, E25} -> (fun (V37, V38, V39, V40) -> fun (V41) -> case V39 of {'Idris.Core.TT.Lam', E26, E27, E28, E29} -> (fun (V42, V43, V44, V45) -> begin (V47 = ('un--toCExp'([V38 | V0], V1, fun (V46) -> (V2('erased')) end, V3, V40, V41))), case V47 of {'Idris.Prelude.Types.Left', E30} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V37, V38, V49}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26, E27, E28, E29)); {'Idris.Core.TT.Let', E32, E33, E34, E35} -> (fun (V50, V51, V52, V53) -> begin (V55 = ('un--toCExp'([V38 | V0], V1, fun (V54) -> (V2('erased')) end, V3, V40, V41))), case V55 of {'Idris.Prelude.Types.Left', E36} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V57) -> begin (V59 = ('un--toCExp'(V0, V1, fun (V58) -> (V2('erased')) end, V3, V52, V41))), case V59 of {'Idris.Prelude.Types.Left', E38} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V61) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.Semiring':'un--branchZero'({'Idris.Builtin.MkPair', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V62) -> fun (V63) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V62, V63)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V64) -> fun (V65) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V64, V65)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())}, {'Idris.Prelude.EqOrd.MkEq', fun (V66) -> fun (V67) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V68, V69)) end end}}, fun () -> ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'({'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}}, V57)) end, fun () -> {'Idris.Core.CompileExpr.CLet', V37, V38, 1, V61, V57} end, V51))} end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32, E33, E34, E35)); {'Idris.Core.TT.Pi', E40, E41, E42, E43} -> (fun (V70, V71, V72, V73) -> begin (V75 = ('un--toCExp'(V0, V1, fun (V74) -> (V2('erased')) end, V3, V73, V41))), case V75 of {'Idris.Prelude.Types.Left', E44} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V77) -> begin (V79 = ('un--toCExp'([V38 | V0], V1, fun (V78) -> (V2('erased')) end, V3, V40, V41))), case V79 of {'Idris.Prelude.Types.Left', E46} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V37, {'Idris.Core.Name.UN', <<"->"/utf8>>}, 1, {'Idris.Prelude.Types.Nothing'}, [V77 | [{'Idris.Core.CompileExpr.CLam', V37, V38, V81} | []]]}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40, E41, E42, E43)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V37}} end end end(E22, E23, E24, E25)); {'Idris.Core.TT.App', E48, E49, E50} -> (fun (V82, V83, V84) -> fun (V85) -> begin (V87 = ('un--toCExp'(V0, V1, fun (V86) -> (V2('erased')) end, V3, V83, V85))), case V87 of {'Idris.Prelude.Types.Left', E51} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V89) -> begin (V91 = ('un--toCExp'(V0, V1, fun (V90) -> (V2('erased')) end, V3, V84, V85))), case V91 of {'Idris.Prelude.Types.Left', E53} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V93) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V82, V89, [V93 | []]}} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49, E50)); {'Idris.Core.TT.As', E55, E56, E57, E58} -> (fun (V94, V95, V96, V97) -> ('un--toCExpTm'(V0, V1, fun (V98) -> (V2('erased')) end, V3, V97)) end(E55, E56, E57, E58)); {'Idris.Core.TT.TDelayed', E59, E60, E61} -> (fun (V99, V100, V101) -> fun (V102) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V99}} end end(E59, E60, E61)); {'Idris.Core.TT.TDelay', E62, E63, E64, E65} -> (fun (V103, V104, V105, V106) -> fun (V107) -> begin (V109 = ('un--toCExp'(V0, V1, fun (V108) -> (V2('erased')) end, V3, V106, V107))), case V109 of {'Idris.Prelude.Types.Left', E66} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V111) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CDelay', V103, V104, V111}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E62, E63, E64, E65)); {'Idris.Core.TT.TForce', E68, E69, E70} -> (fun (V112, V113, V114) -> fun (V115) -> begin (V117 = ('un--toCExp'(V0, V1, fun (V116) -> (V2('erased')) end, V3, V114, V115))), case V117 of {'Idris.Prelude.Types.Left', E71} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CForce', V112, V113, V119}} end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E68, E69, E70)); {'Idris.Core.TT.PrimVal', E73, E74} -> (fun (V120, V121) -> begin (V122 = ('Idris.Idris2.Core.TT':'un--constTag'(V121))), fun (V123) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V122, 0)) of 1 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V120, V121}}; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V120, {'Idris.Core.Name.UN', ('Idris.Idris2.Core.TT':'dn--un--show_Show_Constant'(V121))}, 1, {'Idris.Prelude.Types.Nothing'}, []}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E73, E74)); {'Idris.Core.TT.Erased', E75, E76} -> (fun (V124, V125) -> fun (V126) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V124}} end end(E75, E76)); {'Idris.Core.TT.TType', E77} -> (fun (V127) -> fun (V128) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V127, {'Idris.Core.Name.UN', <<"Type"/utf8>>}, 1, {'Idris.Prelude.Types.Nothing'}, []}} end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toCExp'(V0, V1, V2, V3, V4, V5) -> ('case--toCExp-3944'(V0, V4, V3, V2, V1, ('Idris.Idris2.Core.TT':'un--getFnArgs'(V4)), V5)).
'un--toCDef'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Context.None'} -> (fun () -> fun (V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V5))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered undefined name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))))}}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.Context.PMDef', E4, E5, E6, E7, E8} -> (fun (V9, V10, V11, V12, V13) -> fun (V14) -> case ('un--mkSub'(0, V10, V3)) of {'Idris.Builtin.DPair.MkDPair', E9, E10} -> (fun (V15, V16) -> begin (V17 = (('un--toCExpTree'(V10, V0, V1, V12))(V14))), case V17 of {'Idris.Prelude.Types.Left', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V19) -> case ('Idris.Idris2.Data.List':'un--isNil'(V3)) of 1 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V10, V19}}; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V15, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V16, V19))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6, E7, E8)); {'Idris.Core.Context.ExternDef', E13} -> (fun (V20) -> fun (V21) -> case ('un--mkArgList'(0, V20)) of {'Idris.Builtin.DPair.MkDPair', E14, E15} -> (fun (V22, V23) -> begin (V24 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V21))), case V24 of {'Idris.Prelude.Types.Left', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V22, {'Idris.Core.CompileExpr.CExtPrim', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V26, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V27) -> ('nested--11701-6581--in--un--toArgExp'(V3, V20, V2, V1, V0, V27)) end, ('nested--11701-6582--in--un--getVars'(V3, V20, V2, V1, V0, V23))))}}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); {'Idris.Core.Context.ForeignDef', E18, E19} -> (fun (V28, V29) -> fun (V30) -> begin (V32 = begin (V31 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E20} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V34) -> begin (V38 = begin (V35 = (('Idris.Idris2.Core.Normalise':'un--nf'(V0, [], V34, {'Idris.Core.Env.Nil'}, V2))(V30))), case V35 of {'Idris.Prelude.Types.Left', E22} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V37) -> ('un--getCFTypes'(V0, [], V37, V30)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V38 of {'Idris.Prelude.Types.Left', E24} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V41, V42) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkForeign', V29, V41, V42}} end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E18, E19)); {'Idris.Core.Context.Builtin', E28, E29} -> (fun (V43, V44) -> fun (V45) -> case ('un--mkArgList'(0, V43)) of {'Idris.Builtin.DPair.MkDPair', E30, E31} -> (fun (V46, V47) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V46, {'Idris.Core.CompileExpr.COp', V43, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V44, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V48) -> ('nested--11701-6720--in--un--toArgExp'(V3, V43, V44, V2, V1, V0, V48)) end, ('nested--11701-6721--in--un--getVars'(V3, V43, V44, V2, V1, V0, V47))))}}} end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29)); {'Idris.Core.Context.DCon', E32, E33, E34} -> (fun (V49, V50, V51) -> begin (V57 = ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V54, V55)) end end end end, fun (V56) -> ('Idris.Idris2.Builtin':'un--snd'(V56)) end, V51))), fun (V58) -> begin (V60 = begin (V59 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V59} end), case V60 of {'Idris.Prelude.Types.Left', E35} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V62) -> begin (V63 = ('un--numArgs'(V62, {'Idris.Core.TT.Ref', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.DataCon', V49, V50}, V1}, V58))), case V63 of {'Idris.Prelude.Types.Left', E37} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V65) -> begin (V71 = case V65 of {'Idris.Compiler.CompileExpr.NewTypeBy', E39, E40} -> (fun (V66, V67) -> V66 end(E39, E40)); {'Idris.Compiler.CompileExpr.EraseArgs', E41, E42} -> (fun (V68, V69) -> ('Idris.Idris2.Prelude.Types':'un--minus'(V68, ('Idris.Idris2.Prelude.Types.List':'un--length'(V69)))) end(E41, E42)); {'Idris.Compiler.CompileExpr.Arity', E43} -> (fun (V70) -> V70 end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Types.Just', V49}, V71, V57}} end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E32, E33, E34)); {'Idris.Core.Context.TCon', E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V72, V73, V74, V75, V76, V77, V78, V79) -> fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Types.Nothing'}, V73, {'Idris.Prelude.Types.Nothing'}}} end end(E44, E45, E46, E47, E48, E49, E50, E51)); {'Idris.Core.Context.Hole', E52, E53} -> (fun (V81, V82) -> fun (V83) -> begin (V84 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V83))), case V84 of {'Idris.Prelude.Types.Left', E54} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V86) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered unimplemented hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V86))))}}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53)); {'Idris.Core.Context.Guess', E56, E57, E58} -> (fun (V87, V88, V89) -> fun (V90) -> begin (V91 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V90))), case V91 of {'Idris.Prelude.Types.Left', E59} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V93) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered constrained hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V93))))}}} end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58)); {'Idris.Core.Context.BySearch', E61, E62, E63} -> (fun (V94, V95, V96) -> fun (V97) -> begin (V98 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V97))), case V98 of {'Idris.Prelude.Types.Left', E64} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V100) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered incomplete proof search "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V100))))}}} end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E61, E62, E63)); _ -> fun (V101) -> begin (V102 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V101))), case V102 of {'Idris.Prelude.Types.Left', E0} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V104) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered uncompilable name "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V105) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V105)) end, fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V106, V107)) end end}, {'Idris.Prelude.Show.MkShow', fun (V108) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_Def'(V108)) end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_Def'(V109, V110)) end end}}, {'Idris.Builtin.MkPair', V104, V4}))))}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--numArgs'(V0, V1, V2) -> case V1 of {'Idris.Core.TT.Ref', E0, E1, E2} -> (fun (V3, V4, V5) -> case V4 of {'Idris.Core.TT.TyCon', E113, E114} -> (fun (V6, V7) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V7}} end(E113, E114)); _ -> begin (V36 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V0 of {'Idris.Core.Context.MkDefs', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V8 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> case V38 of {'Idris.Prelude.Types.Just', E33} -> (fun (V39) -> case V39 of {'Idris.Core.Context.MkGlobalDef', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> case V57 of {'Idris.Core.Context.DCon', E55, E56, E57} -> (fun (V61, V62, V63) -> case V63 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.EraseArgs', V62, case V39 of {'Idris.Core.Context.MkGlobalDef', E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84) -> V67 end(E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}} end()); {'Idris.Prelude.Types.Just', E79} -> (fun (V85) -> case V85 of {'Idris.Builtin.MkPair', E80, E81} -> (fun (V86, V87) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NewTypeBy', V62, V87}} end(E80, E81)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end(E79)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end(E55, E56, E57)); {'Idris.Core.Context.PMDef', E82, E83, E84, E85, E86} -> (fun (V88, V89, V90, V91, V92) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.EraseArgs', ('Idris.Idris2.Prelude.Types.List':'un--length'(V89)), case V39 of {'Idris.Core.Context.MkGlobalDef', E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107} -> (fun (V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113) -> V96 end(E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}} end(E82, E83, E84, E85, E86)); {'Idris.Core.Context.ExternDef', E108} -> (fun (V114) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V114}} end(E108)); {'Idris.Core.Context.ForeignDef', E109, E110} -> (fun (V115, V116) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V115}} end(E109, E110)); {'Idris.Core.Context.Builtin', E111, E112} -> (fun (V117, V118) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V117}} end(E111, E112)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end.
'un--nfToCFType'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NPrimVal', E1854, E1855} -> (fun (V4, V5) -> case V5 of {'Idris.Core.TT.IntType'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt'}} end end()); {'Idris.Core.TT.Bits8Type'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned8'}} end end()); {'Idris.Core.TT.Bits16Type'} -> (fun () -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned16'}} end end()); {'Idris.Core.TT.Bits32Type'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned32'}} end end()); {'Idris.Core.TT.Bits64Type'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned64'}} end end()); {'Idris.Core.TT.Int8Type'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt8'}} end end()); {'Idris.Core.TT.Int16Type'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt16'}} end end()); {'Idris.Core.TT.Int32Type'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt32'}} end end()); {'Idris.Core.TT.Int64Type'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt64'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NPrimVal', E2596, E2597} -> (fun (V15, V16) -> case V16 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFString'}} end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2782, E2783} -> (fun (V18, V19) -> case V19 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2866, E2867, E2868, E2869} -> (fun (V23, V24, V25, V26) -> fun (V27) -> case V25 of {'Idris.Core.TT.Pi', E2911, E2912, E2913, E2914} -> (fun (V28, V29, V30, V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E2915} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E2915)); {'Idris.Prelude.Types.Right', E2916} -> (fun (V35) -> begin (V36 = (('un--nfToCFType'(V0, V23, 0, V31))(V27))), case V36 of {'Idris.Prelude.Types.Left', E2917} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2917)); {'Idris.Prelude.Types.Right', E2918} -> (fun (V38) -> begin (V39 = (((V26(V35))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V23, 0}))))(V27))), case V39 of {'Idris.Prelude.Types.Left', E2919} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E2919)); {'Idris.Prelude.Types.Right', E2920} -> (fun (V41) -> begin (V42 = (('un--nfToCFType'(V0, V23, 0, V41))(V27))), case V42 of {'Idris.Prelude.Types.Left', E2921} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E2921)); {'Idris.Prelude.Types.Right', E2922} -> (fun (V44) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V38, V44}} end(E2922)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2920)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2918)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2916)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2911, E2912, E2913, E2914)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2876, E2877, E2878, E2879, E2880} -> (fun (V45, V46, V47, V48, V49) -> begin (V51 = begin (V50 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V50} end), case V51 of {'Idris.Prelude.Types.Left', E2881} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E2881)); {'Idris.Prelude.Types.Right', E2882} -> (fun (V53) -> begin (V60 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V54, V55, V56)) end end end, fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V57, V58, V59)) end end end}, V46, V27))), case V60 of {'Idris.Prelude.Types.Left', E2883} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E2883)); {'Idris.Prelude.Types.Right', E2884} -> (fun (V62) -> begin (V64 = (('un--getNArgs'(V0, V53, V62, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V63) -> ('Idris.Idris2.Builtin':'un--snd'(V63)) end, V49))))(V27))), case V64 of {'Idris.Prelude.Types.Left', E2885} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E2885)); {'Idris.Prelude.Types.Right', E2886} -> (fun (V66) -> case V66 of {'Idris.Compiler.CompileExpr.User', E2887, E2888} -> (fun (V67, V68) -> begin (V70 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V69) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V53, V69)) end, V68, [], V27))), case V70 of {'Idris.Prelude.Types.Left', E2889} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E2889)); {'Idris.Prelude.Types.Right', E2890} -> (fun (V72) -> begin (V74 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V73) -> ('un--nfToCFType'(V0, V45, V2, V73)) end, V72, [], V27))), case V74 of {'Idris.Prelude.Types.Left', E2891} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E2891)); {'Idris.Prelude.Types.Right', E2892} -> (fun (V76) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V62, V76}} end(E2892)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2890)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2887, E2888)); {'Idris.Compiler.CompileExpr.Struct', E2893, E2894} -> (fun (V77, V78) -> begin (V89 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V79) -> fun (V80) -> case V79 of {'Idris.Builtin.MkPair', E2895, E2896} -> (fun (V81, V82) -> begin (V83 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V53, V82))(V80))), case V83 of {'Idris.Prelude.Types.Left', E2897} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E2897)); {'Idris.Prelude.Types.Right', E2898} -> (fun (V85) -> begin (V86 = (('un--nfToCFType'(V0, V45, 1, V85))(V80))), case V86 of {'Idris.Prelude.Types.Left', E2899} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E2899)); {'Idris.Prelude.Types.Right', E2900} -> (fun (V88) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V81, V88}} end(E2900)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2898)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2895, E2896)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V78, [], V27))), case V89 of {'Idris.Prelude.Types.Left', E2901} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E2901)); {'Idris.Prelude.Types.Right', E2902} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V77, V91}} end(E2902)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2893, E2894)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2903} -> (fun (V92) -> begin (V93 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V53, V92))(V27))), case V93 of {'Idris.Prelude.Types.Left', E2904} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E2904)); {'Idris.Prelude.Types.Right', E2905} -> (fun (V95) -> begin (V96 = (('un--nfToCFType'(V0, V45, V2, V95))(V27))), case V96 of {'Idris.Prelude.Types.Left', E2906} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E2906)); {'Idris.Prelude.Types.Right', E2907} -> (fun (V98) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V98}} end(E2907)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2876, E2877, E2878, E2879, E2880)); {'Idris.Core.Value.NType', E2908} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2908)); {'Idris.Core.Value.NErased', E2909, E2910} -> (fun (V100, V101) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2909, E2910)); _ -> begin (V103 = begin (V102 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V102} end), case V103 of {'Idris.Prelude.Types.Left', E2870} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E2870)); {'Idris.Prelude.Types.Right', E2871} -> (fun (V105) -> begin (V106 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V105, {'Idris.Core.Env.Nil'}, V3, V27))), case V106 of {'Idris.Prelude.Types.Left', E2872} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E2872)); {'Idris.Prelude.Types.Right', E2873} -> (fun (V108) -> begin (V115 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V109, V110, V111)) end end end, fun (V112) -> fun (V113) -> fun (V114) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V112, V113, V114)) end end end}, V108, V27))), case V115 of {'Idris.Prelude.Types.Left', E2874} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E2874)); {'Idris.Prelude.Types.Right', E2875} -> (fun (V117) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V117))))}, V27)) end(E2875)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2873)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2871)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2866, E2867, E2868, E2869)); _ -> fun (V118) -> case V3 of {'Idris.Core.Value.NTCon', E2831, E2832, E2833, E2834, E2835} -> (fun (V119, V120, V121, V122, V123) -> begin (V125 = begin (V124 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V124} end), case V125 of {'Idris.Prelude.Types.Left', E2836} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E2836)); {'Idris.Prelude.Types.Right', E2837} -> (fun (V127) -> begin (V134 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V128) -> fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V128, V129, V130)) end end end, fun (V131) -> fun (V132) -> fun (V133) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V131, V132, V133)) end end end}, V120, V118))), case V134 of {'Idris.Prelude.Types.Left', E2838} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E2838)); {'Idris.Prelude.Types.Right', E2839} -> (fun (V136) -> begin (V138 = (('un--getNArgs'(V0, V127, V136, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V137) -> ('Idris.Idris2.Builtin':'un--snd'(V137)) end, V123))))(V118))), case V138 of {'Idris.Prelude.Types.Left', E2840} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E2840)); {'Idris.Prelude.Types.Right', E2841} -> (fun (V140) -> case V140 of {'Idris.Compiler.CompileExpr.User', E2842, E2843} -> (fun (V141, V142) -> begin (V144 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V143) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V127, V143)) end, V142, [], V118))), case V144 of {'Idris.Prelude.Types.Left', E2844} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E2844)); {'Idris.Prelude.Types.Right', E2845} -> (fun (V146) -> begin (V148 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V147) -> ('un--nfToCFType'(V0, V119, V2, V147)) end, V146, [], V118))), case V148 of {'Idris.Prelude.Types.Left', E2846} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E2846)); {'Idris.Prelude.Types.Right', E2847} -> (fun (V150) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V136, V150}} end(E2847)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2845)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2842, E2843)); {'Idris.Compiler.CompileExpr.Struct', E2848, E2849} -> (fun (V151, V152) -> begin (V163 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V153) -> fun (V154) -> case V153 of {'Idris.Builtin.MkPair', E2850, E2851} -> (fun (V155, V156) -> begin (V157 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V127, V156))(V154))), case V157 of {'Idris.Prelude.Types.Left', E2852} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E2852)); {'Idris.Prelude.Types.Right', E2853} -> (fun (V159) -> begin (V160 = (('un--nfToCFType'(V0, V119, 1, V159))(V154))), case V160 of {'Idris.Prelude.Types.Left', E2854} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E2854)); {'Idris.Prelude.Types.Right', E2855} -> (fun (V162) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V155, V162}} end(E2855)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2853)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2850, E2851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V152, [], V118))), case V163 of {'Idris.Prelude.Types.Left', E2856} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E2856)); {'Idris.Prelude.Types.Right', E2857} -> (fun (V165) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V151, V165}} end(E2857)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2848, E2849)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2858} -> (fun (V166) -> begin (V167 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V127, V166))(V118))), case V167 of {'Idris.Prelude.Types.Left', E2859} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E2859)); {'Idris.Prelude.Types.Right', E2860} -> (fun (V169) -> begin (V170 = (('un--nfToCFType'(V0, V119, V2, V169))(V118))), case V170 of {'Idris.Prelude.Types.Left', E2861} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E2861)); {'Idris.Prelude.Types.Right', E2862} -> (fun (V172) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V172}} end(E2862)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2858)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2841)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2839)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2837)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2831, E2832, E2833, E2834, E2835)); {'Idris.Core.Value.NType', E2863} -> (fun (V173) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2863)); {'Idris.Core.Value.NErased', E2864, E2865} -> (fun (V174, V175) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2864, E2865)); _ -> begin (V177 = begin (V176 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V176} end), case V177 of {'Idris.Prelude.Types.Left', E2825} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E2825)); {'Idris.Prelude.Types.Right', E2826} -> (fun (V179) -> begin (V180 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V179, {'Idris.Core.Env.Nil'}, V3, V118))), case V180 of {'Idris.Prelude.Types.Left', E2827} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E2827)); {'Idris.Prelude.Types.Right', E2828} -> (fun (V182) -> begin (V189 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V183) -> fun (V184) -> fun (V185) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V183, V184, V185)) end end end, fun (V186) -> fun (V187) -> fun (V188) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V186, V187, V188)) end end end}, V182, V118))), case V189 of {'Idris.Prelude.Types.Left', E2829} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E2829)); {'Idris.Prelude.Types.Right', E2830} -> (fun (V191) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V191))))}, V118)) end(E2830)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2828)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2826)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V192) -> case V3 of {'Idris.Core.Value.NBind', E2964, E2965, E2966, E2967} -> (fun (V193, V194, V195, V196) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V193, <<"Function types not allowed in a foreign struct"/utf8>>}, V192)) end(E2964, E2965, E2966, E2967)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2929, E2930, E2931, E2932, E2933} -> (fun (V197, V198, V199, V200, V201) -> begin (V203 = begin (V202 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V202} end), case V203 of {'Idris.Prelude.Types.Left', E2934} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E2934)); {'Idris.Prelude.Types.Right', E2935} -> (fun (V205) -> begin (V212 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V206) -> fun (V207) -> fun (V208) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V206, V207, V208)) end end end, fun (V209) -> fun (V210) -> fun (V211) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V209, V210, V211)) end end end}, V198, V192))), case V212 of {'Idris.Prelude.Types.Left', E2936} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E2936)); {'Idris.Prelude.Types.Right', E2937} -> (fun (V214) -> begin (V216 = (('un--getNArgs'(V0, V205, V214, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V215) -> ('Idris.Idris2.Builtin':'un--snd'(V215)) end, V201))))(V192))), case V216 of {'Idris.Prelude.Types.Left', E2938} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E2938)); {'Idris.Prelude.Types.Right', E2939} -> (fun (V218) -> case V218 of {'Idris.Compiler.CompileExpr.User', E2940, E2941} -> (fun (V219, V220) -> begin (V222 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V221) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V205, V221)) end, V220, [], V192))), case V222 of {'Idris.Prelude.Types.Left', E2942} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E2942)); {'Idris.Prelude.Types.Right', E2943} -> (fun (V224) -> begin (V226 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V225) -> ('un--nfToCFType'(V0, V197, V2, V225)) end, V224, [], V192))), case V226 of {'Idris.Prelude.Types.Left', E2944} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E2944)); {'Idris.Prelude.Types.Right', E2945} -> (fun (V228) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V214, V228}} end(E2945)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2943)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2940, E2941)); {'Idris.Compiler.CompileExpr.Struct', E2946, E2947} -> (fun (V229, V230) -> begin (V241 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V231) -> fun (V232) -> case V231 of {'Idris.Builtin.MkPair', E2948, E2949} -> (fun (V233, V234) -> begin (V235 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V205, V234))(V232))), case V235 of {'Idris.Prelude.Types.Left', E2950} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E2950)); {'Idris.Prelude.Types.Right', E2951} -> (fun (V237) -> begin (V238 = (('un--nfToCFType'(V0, V197, 1, V237))(V232))), case V238 of {'Idris.Prelude.Types.Left', E2952} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E2952)); {'Idris.Prelude.Types.Right', E2953} -> (fun (V240) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V233, V240}} end(E2953)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2951)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2948, E2949)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V230, [], V192))), case V241 of {'Idris.Prelude.Types.Left', E2954} -> (fun (V242) -> {'Idris.Prelude.Types.Left', V242} end(E2954)); {'Idris.Prelude.Types.Right', E2955} -> (fun (V243) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V229, V243}} end(E2955)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2946, E2947)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2956} -> (fun (V244) -> begin (V245 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V205, V244))(V192))), case V245 of {'Idris.Prelude.Types.Left', E2957} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E2957)); {'Idris.Prelude.Types.Right', E2958} -> (fun (V247) -> begin (V248 = (('un--nfToCFType'(V0, V197, V2, V247))(V192))), case V248 of {'Idris.Prelude.Types.Left', E2959} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E2959)); {'Idris.Prelude.Types.Right', E2960} -> (fun (V250) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V250}} end(E2960)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2939)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2937)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2935)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2929, E2930, E2931, E2932, E2933)); {'Idris.Core.Value.NType', E2961} -> (fun (V251) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2961)); {'Idris.Core.Value.NErased', E2962, E2963} -> (fun (V252, V253) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2962, E2963)); _ -> begin (V255 = begin (V254 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V254} end), case V255 of {'Idris.Prelude.Types.Left', E2923} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E2923)); {'Idris.Prelude.Types.Right', E2924} -> (fun (V257) -> begin (V258 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V257, {'Idris.Core.Env.Nil'}, V3, V192))), case V258 of {'Idris.Prelude.Types.Left', E2925} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E2925)); {'Idris.Prelude.Types.Right', E2926} -> (fun (V260) -> begin (V267 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V261) -> fun (V262) -> fun (V263) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V261, V262, V263)) end end end, fun (V264) -> fun (V265) -> fun (V266) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V264, V265, V266)) end end end}, V260, V192))), case V267 of {'Idris.Prelude.Types.Left', E2927} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E2927)); {'Idris.Prelude.Types.Right', E2928} -> (fun (V269) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V269))))}, V192)) end(E2928)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2926)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2924)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V270) -> case V3 of {'Idris.Core.Value.NTCon', E2790, E2791, E2792, E2793, E2794} -> (fun (V271, V272, V273, V274, V275) -> begin (V277 = begin (V276 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V276} end), case V277 of {'Idris.Prelude.Types.Left', E2795} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E2795)); {'Idris.Prelude.Types.Right', E2796} -> (fun (V279) -> begin (V286 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V280) -> fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V280, V281, V282)) end end end, fun (V283) -> fun (V284) -> fun (V285) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V283, V284, V285)) end end end}, V272, V270))), case V286 of {'Idris.Prelude.Types.Left', E2797} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E2797)); {'Idris.Prelude.Types.Right', E2798} -> (fun (V288) -> begin (V290 = (('un--getNArgs'(V0, V279, V288, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V289) -> ('Idris.Idris2.Builtin':'un--snd'(V289)) end, V275))))(V270))), case V290 of {'Idris.Prelude.Types.Left', E2799} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E2799)); {'Idris.Prelude.Types.Right', E2800} -> (fun (V292) -> case V292 of {'Idris.Compiler.CompileExpr.User', E2801, E2802} -> (fun (V293, V294) -> begin (V296 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V295) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V279, V295)) end, V294, [], V270))), case V296 of {'Idris.Prelude.Types.Left', E2803} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E2803)); {'Idris.Prelude.Types.Right', E2804} -> (fun (V298) -> begin (V300 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V299) -> ('un--nfToCFType'(V0, V271, V2, V299)) end, V298, [], V270))), case V300 of {'Idris.Prelude.Types.Left', E2805} -> (fun (V301) -> {'Idris.Prelude.Types.Left', V301} end(E2805)); {'Idris.Prelude.Types.Right', E2806} -> (fun (V302) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V288, V302}} end(E2806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2801, E2802)); {'Idris.Compiler.CompileExpr.Struct', E2807, E2808} -> (fun (V303, V304) -> begin (V315 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V305) -> fun (V306) -> case V305 of {'Idris.Builtin.MkPair', E2809, E2810} -> (fun (V307, V308) -> begin (V309 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V279, V308))(V306))), case V309 of {'Idris.Prelude.Types.Left', E2811} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E2811)); {'Idris.Prelude.Types.Right', E2812} -> (fun (V311) -> begin (V312 = (('un--nfToCFType'(V0, V271, 1, V311))(V306))), case V312 of {'Idris.Prelude.Types.Left', E2813} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E2813)); {'Idris.Prelude.Types.Right', E2814} -> (fun (V314) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V307, V314}} end(E2814)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2812)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2809, E2810)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V304, [], V270))), case V315 of {'Idris.Prelude.Types.Left', E2815} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E2815)); {'Idris.Prelude.Types.Right', E2816} -> (fun (V317) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V303, V317}} end(E2816)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2807, E2808)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2817} -> (fun (V318) -> begin (V319 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V279, V318))(V270))), case V319 of {'Idris.Prelude.Types.Left', E2818} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E2818)); {'Idris.Prelude.Types.Right', E2819} -> (fun (V321) -> begin (V322 = (('un--nfToCFType'(V0, V271, V2, V321))(V270))), case V322 of {'Idris.Prelude.Types.Left', E2820} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E2820)); {'Idris.Prelude.Types.Right', E2821} -> (fun (V324) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V324}} end(E2821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2819)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2817)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2800)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2798)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2796)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2790, E2791, E2792, E2793, E2794)); {'Idris.Core.Value.NType', E2822} -> (fun (V325) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2822)); {'Idris.Core.Value.NErased', E2823, E2824} -> (fun (V326, V327) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2823, E2824)); _ -> begin (V329 = begin (V328 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V328} end), case V329 of {'Idris.Prelude.Types.Left', E2784} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E2784)); {'Idris.Prelude.Types.Right', E2785} -> (fun (V331) -> begin (V332 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V331, {'Idris.Core.Env.Nil'}, V3, V270))), case V332 of {'Idris.Prelude.Types.Left', E2786} -> (fun (V333) -> {'Idris.Prelude.Types.Left', V333} end(E2786)); {'Idris.Prelude.Types.Right', E2787} -> (fun (V334) -> begin (V341 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V335) -> fun (V336) -> fun (V337) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V335, V336, V337)) end end end, fun (V338) -> fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V338, V339, V340)) end end end}, V334, V270))), case V341 of {'Idris.Prelude.Types.Left', E2788} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E2788)); {'Idris.Prelude.Types.Right', E2789} -> (fun (V343) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V343))))}, V270)) end(E2789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2787)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2785)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2782, E2783)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2680, E2681, E2682, E2683} -> (fun (V344, V345, V346, V347) -> fun (V348) -> case V346 of {'Idris.Core.TT.Pi', E2725, E2726, E2727, E2728} -> (fun (V349, V350, V351, V352) -> begin (V354 = begin (V353 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V353} end), case V354 of {'Idris.Prelude.Types.Left', E2729} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E2729)); {'Idris.Prelude.Types.Right', E2730} -> (fun (V356) -> begin (V357 = (('un--nfToCFType'(V0, V344, 0, V352))(V348))), case V357 of {'Idris.Prelude.Types.Left', E2731} -> (fun (V358) -> {'Idris.Prelude.Types.Left', V358} end(E2731)); {'Idris.Prelude.Types.Right', E2732} -> (fun (V359) -> begin (V360 = (((V347(V356))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V344, 0}))))(V348))), case V360 of {'Idris.Prelude.Types.Left', E2733} -> (fun (V361) -> {'Idris.Prelude.Types.Left', V361} end(E2733)); {'Idris.Prelude.Types.Right', E2734} -> (fun (V362) -> begin (V363 = (('un--nfToCFType'(V0, V344, 0, V362))(V348))), case V363 of {'Idris.Prelude.Types.Left', E2735} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E2735)); {'Idris.Prelude.Types.Right', E2736} -> (fun (V365) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V359, V365}} end(E2736)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2730)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2725, E2726, E2727, E2728)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2690, E2691, E2692, E2693, E2694} -> (fun (V366, V367, V368, V369, V370) -> begin (V372 = begin (V371 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V371} end), case V372 of {'Idris.Prelude.Types.Left', E2695} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E2695)); {'Idris.Prelude.Types.Right', E2696} -> (fun (V374) -> begin (V381 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V375) -> fun (V376) -> fun (V377) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V375, V376, V377)) end end end, fun (V378) -> fun (V379) -> fun (V380) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V378, V379, V380)) end end end}, V367, V348))), case V381 of {'Idris.Prelude.Types.Left', E2697} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E2697)); {'Idris.Prelude.Types.Right', E2698} -> (fun (V383) -> begin (V385 = (('un--getNArgs'(V0, V374, V383, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V384) -> ('Idris.Idris2.Builtin':'un--snd'(V384)) end, V370))))(V348))), case V385 of {'Idris.Prelude.Types.Left', E2699} -> (fun (V386) -> {'Idris.Prelude.Types.Left', V386} end(E2699)); {'Idris.Prelude.Types.Right', E2700} -> (fun (V387) -> case V387 of {'Idris.Compiler.CompileExpr.User', E2701, E2702} -> (fun (V388, V389) -> begin (V391 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V390) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V374, V390)) end, V389, [], V348))), case V391 of {'Idris.Prelude.Types.Left', E2703} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E2703)); {'Idris.Prelude.Types.Right', E2704} -> (fun (V393) -> begin (V395 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V394) -> ('un--nfToCFType'(V0, V366, V2, V394)) end, V393, [], V348))), case V395 of {'Idris.Prelude.Types.Left', E2705} -> (fun (V396) -> {'Idris.Prelude.Types.Left', V396} end(E2705)); {'Idris.Prelude.Types.Right', E2706} -> (fun (V397) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V383, V397}} end(E2706)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2704)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2701, E2702)); {'Idris.Compiler.CompileExpr.Struct', E2707, E2708} -> (fun (V398, V399) -> begin (V410 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V400) -> fun (V401) -> case V400 of {'Idris.Builtin.MkPair', E2709, E2710} -> (fun (V402, V403) -> begin (V404 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V374, V403))(V401))), case V404 of {'Idris.Prelude.Types.Left', E2711} -> (fun (V405) -> {'Idris.Prelude.Types.Left', V405} end(E2711)); {'Idris.Prelude.Types.Right', E2712} -> (fun (V406) -> begin (V407 = (('un--nfToCFType'(V0, V366, 1, V406))(V401))), case V407 of {'Idris.Prelude.Types.Left', E2713} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E2713)); {'Idris.Prelude.Types.Right', E2714} -> (fun (V409) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V402, V409}} end(E2714)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2712)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2709, E2710)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V399, [], V348))), case V410 of {'Idris.Prelude.Types.Left', E2715} -> (fun (V411) -> {'Idris.Prelude.Types.Left', V411} end(E2715)); {'Idris.Prelude.Types.Right', E2716} -> (fun (V412) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V398, V412}} end(E2716)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2707, E2708)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2717} -> (fun (V413) -> begin (V414 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V374, V413))(V348))), case V414 of {'Idris.Prelude.Types.Left', E2718} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E2718)); {'Idris.Prelude.Types.Right', E2719} -> (fun (V416) -> begin (V417 = (('un--nfToCFType'(V0, V366, V2, V416))(V348))), case V417 of {'Idris.Prelude.Types.Left', E2720} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E2720)); {'Idris.Prelude.Types.Right', E2721} -> (fun (V419) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V419}} end(E2721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2719)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2690, E2691, E2692, E2693, E2694)); {'Idris.Core.Value.NType', E2722} -> (fun (V420) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2722)); {'Idris.Core.Value.NErased', E2723, E2724} -> (fun (V421, V422) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2723, E2724)); _ -> begin (V424 = begin (V423 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V423} end), case V424 of {'Idris.Prelude.Types.Left', E2684} -> (fun (V425) -> {'Idris.Prelude.Types.Left', V425} end(E2684)); {'Idris.Prelude.Types.Right', E2685} -> (fun (V426) -> begin (V427 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V426, {'Idris.Core.Env.Nil'}, V3, V348))), case V427 of {'Idris.Prelude.Types.Left', E2686} -> (fun (V428) -> {'Idris.Prelude.Types.Left', V428} end(E2686)); {'Idris.Prelude.Types.Right', E2687} -> (fun (V429) -> begin (V436 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V430) -> fun (V431) -> fun (V432) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V430, V431, V432)) end end end, fun (V433) -> fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V433, V434, V435)) end end end}, V429, V348))), case V436 of {'Idris.Prelude.Types.Left', E2688} -> (fun (V437) -> {'Idris.Prelude.Types.Left', V437} end(E2688)); {'Idris.Prelude.Types.Right', E2689} -> (fun (V438) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V438))))}, V348)) end(E2689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2680, E2681, E2682, E2683)); _ -> fun (V439) -> case V3 of {'Idris.Core.Value.NTCon', E2645, E2646, E2647, E2648, E2649} -> (fun (V440, V441, V442, V443, V444) -> begin (V446 = begin (V445 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V445} end), case V446 of {'Idris.Prelude.Types.Left', E2650} -> (fun (V447) -> {'Idris.Prelude.Types.Left', V447} end(E2650)); {'Idris.Prelude.Types.Right', E2651} -> (fun (V448) -> begin (V455 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V449) -> fun (V450) -> fun (V451) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V449, V450, V451)) end end end, fun (V452) -> fun (V453) -> fun (V454) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V452, V453, V454)) end end end}, V441, V439))), case V455 of {'Idris.Prelude.Types.Left', E2652} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E2652)); {'Idris.Prelude.Types.Right', E2653} -> (fun (V457) -> begin (V459 = (('un--getNArgs'(V0, V448, V457, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V458) -> ('Idris.Idris2.Builtin':'un--snd'(V458)) end, V444))))(V439))), case V459 of {'Idris.Prelude.Types.Left', E2654} -> (fun (V460) -> {'Idris.Prelude.Types.Left', V460} end(E2654)); {'Idris.Prelude.Types.Right', E2655} -> (fun (V461) -> case V461 of {'Idris.Compiler.CompileExpr.User', E2656, E2657} -> (fun (V462, V463) -> begin (V465 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V464) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V448, V464)) end, V463, [], V439))), case V465 of {'Idris.Prelude.Types.Left', E2658} -> (fun (V466) -> {'Idris.Prelude.Types.Left', V466} end(E2658)); {'Idris.Prelude.Types.Right', E2659} -> (fun (V467) -> begin (V469 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V468) -> ('un--nfToCFType'(V0, V440, V2, V468)) end, V467, [], V439))), case V469 of {'Idris.Prelude.Types.Left', E2660} -> (fun (V470) -> {'Idris.Prelude.Types.Left', V470} end(E2660)); {'Idris.Prelude.Types.Right', E2661} -> (fun (V471) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V457, V471}} end(E2661)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2659)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2656, E2657)); {'Idris.Compiler.CompileExpr.Struct', E2662, E2663} -> (fun (V472, V473) -> begin (V484 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V474) -> fun (V475) -> case V474 of {'Idris.Builtin.MkPair', E2664, E2665} -> (fun (V476, V477) -> begin (V478 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V448, V477))(V475))), case V478 of {'Idris.Prelude.Types.Left', E2666} -> (fun (V479) -> {'Idris.Prelude.Types.Left', V479} end(E2666)); {'Idris.Prelude.Types.Right', E2667} -> (fun (V480) -> begin (V481 = (('un--nfToCFType'(V0, V440, 1, V480))(V475))), case V481 of {'Idris.Prelude.Types.Left', E2668} -> (fun (V482) -> {'Idris.Prelude.Types.Left', V482} end(E2668)); {'Idris.Prelude.Types.Right', E2669} -> (fun (V483) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V476, V483}} end(E2669)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2667)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2664, E2665)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V473, [], V439))), case V484 of {'Idris.Prelude.Types.Left', E2670} -> (fun (V485) -> {'Idris.Prelude.Types.Left', V485} end(E2670)); {'Idris.Prelude.Types.Right', E2671} -> (fun (V486) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V472, V486}} end(E2671)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2662, E2663)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2672} -> (fun (V487) -> begin (V488 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V448, V487))(V439))), case V488 of {'Idris.Prelude.Types.Left', E2673} -> (fun (V489) -> {'Idris.Prelude.Types.Left', V489} end(E2673)); {'Idris.Prelude.Types.Right', E2674} -> (fun (V490) -> begin (V491 = (('un--nfToCFType'(V0, V440, V2, V490))(V439))), case V491 of {'Idris.Prelude.Types.Left', E2675} -> (fun (V492) -> {'Idris.Prelude.Types.Left', V492} end(E2675)); {'Idris.Prelude.Types.Right', E2676} -> (fun (V493) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V493}} end(E2676)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2655)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2645, E2646, E2647, E2648, E2649)); {'Idris.Core.Value.NType', E2677} -> (fun (V494) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2677)); {'Idris.Core.Value.NErased', E2678, E2679} -> (fun (V495, V496) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2678, E2679)); _ -> begin (V498 = begin (V497 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V497} end), case V498 of {'Idris.Prelude.Types.Left', E2639} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E2639)); {'Idris.Prelude.Types.Right', E2640} -> (fun (V500) -> begin (V501 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V500, {'Idris.Core.Env.Nil'}, V3, V439))), case V501 of {'Idris.Prelude.Types.Left', E2641} -> (fun (V502) -> {'Idris.Prelude.Types.Left', V502} end(E2641)); {'Idris.Prelude.Types.Right', E2642} -> (fun (V503) -> begin (V510 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V504) -> fun (V505) -> fun (V506) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V504, V505, V506)) end end end, fun (V507) -> fun (V508) -> fun (V509) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V507, V508, V509)) end end end}, V503, V439))), case V510 of {'Idris.Prelude.Types.Left', E2643} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E2643)); {'Idris.Prelude.Types.Right', E2644} -> (fun (V512) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V512))))}, V439)) end(E2644)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V513) -> case V3 of {'Idris.Core.Value.NBind', E2778, E2779, E2780, E2781} -> (fun (V514, V515, V516, V517) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V514, <<"Function types not allowed in a foreign struct"/utf8>>}, V513)) end(E2778, E2779, E2780, E2781)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2743, E2744, E2745, E2746, E2747} -> (fun (V518, V519, V520, V521, V522) -> begin (V524 = begin (V523 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V523} end), case V524 of {'Idris.Prelude.Types.Left', E2748} -> (fun (V525) -> {'Idris.Prelude.Types.Left', V525} end(E2748)); {'Idris.Prelude.Types.Right', E2749} -> (fun (V526) -> begin (V533 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V527) -> fun (V528) -> fun (V529) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V527, V528, V529)) end end end, fun (V530) -> fun (V531) -> fun (V532) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V530, V531, V532)) end end end}, V519, V513))), case V533 of {'Idris.Prelude.Types.Left', E2750} -> (fun (V534) -> {'Idris.Prelude.Types.Left', V534} end(E2750)); {'Idris.Prelude.Types.Right', E2751} -> (fun (V535) -> begin (V537 = (('un--getNArgs'(V0, V526, V535, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V536) -> ('Idris.Idris2.Builtin':'un--snd'(V536)) end, V522))))(V513))), case V537 of {'Idris.Prelude.Types.Left', E2752} -> (fun (V538) -> {'Idris.Prelude.Types.Left', V538} end(E2752)); {'Idris.Prelude.Types.Right', E2753} -> (fun (V539) -> case V539 of {'Idris.Compiler.CompileExpr.User', E2754, E2755} -> (fun (V540, V541) -> begin (V543 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V542) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V526, V542)) end, V541, [], V513))), case V543 of {'Idris.Prelude.Types.Left', E2756} -> (fun (V544) -> {'Idris.Prelude.Types.Left', V544} end(E2756)); {'Idris.Prelude.Types.Right', E2757} -> (fun (V545) -> begin (V547 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V546) -> ('un--nfToCFType'(V0, V518, V2, V546)) end, V545, [], V513))), case V547 of {'Idris.Prelude.Types.Left', E2758} -> (fun (V548) -> {'Idris.Prelude.Types.Left', V548} end(E2758)); {'Idris.Prelude.Types.Right', E2759} -> (fun (V549) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V535, V549}} end(E2759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2754, E2755)); {'Idris.Compiler.CompileExpr.Struct', E2760, E2761} -> (fun (V550, V551) -> begin (V562 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V552) -> fun (V553) -> case V552 of {'Idris.Builtin.MkPair', E2762, E2763} -> (fun (V554, V555) -> begin (V556 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V526, V555))(V553))), case V556 of {'Idris.Prelude.Types.Left', E2764} -> (fun (V557) -> {'Idris.Prelude.Types.Left', V557} end(E2764)); {'Idris.Prelude.Types.Right', E2765} -> (fun (V558) -> begin (V559 = (('un--nfToCFType'(V0, V518, 1, V558))(V553))), case V559 of {'Idris.Prelude.Types.Left', E2766} -> (fun (V560) -> {'Idris.Prelude.Types.Left', V560} end(E2766)); {'Idris.Prelude.Types.Right', E2767} -> (fun (V561) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V554, V561}} end(E2767)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2765)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2762, E2763)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V551, [], V513))), case V562 of {'Idris.Prelude.Types.Left', E2768} -> (fun (V563) -> {'Idris.Prelude.Types.Left', V563} end(E2768)); {'Idris.Prelude.Types.Right', E2769} -> (fun (V564) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V550, V564}} end(E2769)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2760, E2761)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2770} -> (fun (V565) -> begin (V566 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V526, V565))(V513))), case V566 of {'Idris.Prelude.Types.Left', E2771} -> (fun (V567) -> {'Idris.Prelude.Types.Left', V567} end(E2771)); {'Idris.Prelude.Types.Right', E2772} -> (fun (V568) -> begin (V569 = (('un--nfToCFType'(V0, V518, V2, V568))(V513))), case V569 of {'Idris.Prelude.Types.Left', E2773} -> (fun (V570) -> {'Idris.Prelude.Types.Left', V570} end(E2773)); {'Idris.Prelude.Types.Right', E2774} -> (fun (V571) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V571}} end(E2774)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2753)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2751)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2749)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2743, E2744, E2745, E2746, E2747)); {'Idris.Core.Value.NType', E2775} -> (fun (V572) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2775)); {'Idris.Core.Value.NErased', E2776, E2777} -> (fun (V573, V574) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2776, E2777)); _ -> begin (V576 = begin (V575 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V575} end), case V576 of {'Idris.Prelude.Types.Left', E2737} -> (fun (V577) -> {'Idris.Prelude.Types.Left', V577} end(E2737)); {'Idris.Prelude.Types.Right', E2738} -> (fun (V578) -> begin (V579 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V578, {'Idris.Core.Env.Nil'}, V3, V513))), case V579 of {'Idris.Prelude.Types.Left', E2739} -> (fun (V580) -> {'Idris.Prelude.Types.Left', V580} end(E2739)); {'Idris.Prelude.Types.Right', E2740} -> (fun (V581) -> begin (V588 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V582) -> fun (V583) -> fun (V584) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V582, V583, V584)) end end end, fun (V585) -> fun (V586) -> fun (V587) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V585, V586, V587)) end end end}, V581, V513))), case V588 of {'Idris.Prelude.Types.Left', E2741} -> (fun (V589) -> {'Idris.Prelude.Types.Left', V589} end(E2741)); {'Idris.Prelude.Types.Right', E2742} -> (fun (V590) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V590))))}, V513)) end(E2742)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2740)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V591) -> case V3 of {'Idris.Core.Value.NTCon', E2604, E2605, E2606, E2607, E2608} -> (fun (V592, V593, V594, V595, V596) -> begin (V598 = begin (V597 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V597} end), case V598 of {'Idris.Prelude.Types.Left', E2609} -> (fun (V599) -> {'Idris.Prelude.Types.Left', V599} end(E2609)); {'Idris.Prelude.Types.Right', E2610} -> (fun (V600) -> begin (V607 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V601) -> fun (V602) -> fun (V603) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V601, V602, V603)) end end end, fun (V604) -> fun (V605) -> fun (V606) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V604, V605, V606)) end end end}, V593, V591))), case V607 of {'Idris.Prelude.Types.Left', E2611} -> (fun (V608) -> {'Idris.Prelude.Types.Left', V608} end(E2611)); {'Idris.Prelude.Types.Right', E2612} -> (fun (V609) -> begin (V611 = (('un--getNArgs'(V0, V600, V609, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V610) -> ('Idris.Idris2.Builtin':'un--snd'(V610)) end, V596))))(V591))), case V611 of {'Idris.Prelude.Types.Left', E2613} -> (fun (V612) -> {'Idris.Prelude.Types.Left', V612} end(E2613)); {'Idris.Prelude.Types.Right', E2614} -> (fun (V613) -> case V613 of {'Idris.Compiler.CompileExpr.User', E2615, E2616} -> (fun (V614, V615) -> begin (V617 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V616) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V600, V616)) end, V615, [], V591))), case V617 of {'Idris.Prelude.Types.Left', E2617} -> (fun (V618) -> {'Idris.Prelude.Types.Left', V618} end(E2617)); {'Idris.Prelude.Types.Right', E2618} -> (fun (V619) -> begin (V621 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V620) -> ('un--nfToCFType'(V0, V592, V2, V620)) end, V619, [], V591))), case V621 of {'Idris.Prelude.Types.Left', E2619} -> (fun (V622) -> {'Idris.Prelude.Types.Left', V622} end(E2619)); {'Idris.Prelude.Types.Right', E2620} -> (fun (V623) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V609, V623}} end(E2620)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2618)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2615, E2616)); {'Idris.Compiler.CompileExpr.Struct', E2621, E2622} -> (fun (V624, V625) -> begin (V636 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V626) -> fun (V627) -> case V626 of {'Idris.Builtin.MkPair', E2623, E2624} -> (fun (V628, V629) -> begin (V630 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V600, V629))(V627))), case V630 of {'Idris.Prelude.Types.Left', E2625} -> (fun (V631) -> {'Idris.Prelude.Types.Left', V631} end(E2625)); {'Idris.Prelude.Types.Right', E2626} -> (fun (V632) -> begin (V633 = (('un--nfToCFType'(V0, V592, 1, V632))(V627))), case V633 of {'Idris.Prelude.Types.Left', E2627} -> (fun (V634) -> {'Idris.Prelude.Types.Left', V634} end(E2627)); {'Idris.Prelude.Types.Right', E2628} -> (fun (V635) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V628, V635}} end(E2628)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2623, E2624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V625, [], V591))), case V636 of {'Idris.Prelude.Types.Left', E2629} -> (fun (V637) -> {'Idris.Prelude.Types.Left', V637} end(E2629)); {'Idris.Prelude.Types.Right', E2630} -> (fun (V638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V624, V638}} end(E2630)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2621, E2622)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2631} -> (fun (V639) -> begin (V640 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V600, V639))(V591))), case V640 of {'Idris.Prelude.Types.Left', E2632} -> (fun (V641) -> {'Idris.Prelude.Types.Left', V641} end(E2632)); {'Idris.Prelude.Types.Right', E2633} -> (fun (V642) -> begin (V643 = (('un--nfToCFType'(V0, V592, V2, V642))(V591))), case V643 of {'Idris.Prelude.Types.Left', E2634} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E2634)); {'Idris.Prelude.Types.Right', E2635} -> (fun (V645) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V645}} end(E2635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2633)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2631)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2614)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2612)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2610)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2604, E2605, E2606, E2607, E2608)); {'Idris.Core.Value.NType', E2636} -> (fun (V646) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2636)); {'Idris.Core.Value.NErased', E2637, E2638} -> (fun (V647, V648) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2637, E2638)); _ -> begin (V650 = begin (V649 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V649} end), case V650 of {'Idris.Prelude.Types.Left', E2598} -> (fun (V651) -> {'Idris.Prelude.Types.Left', V651} end(E2598)); {'Idris.Prelude.Types.Right', E2599} -> (fun (V652) -> begin (V653 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V652, {'Idris.Core.Env.Nil'}, V3, V591))), case V653 of {'Idris.Prelude.Types.Left', E2600} -> (fun (V654) -> {'Idris.Prelude.Types.Left', V654} end(E2600)); {'Idris.Prelude.Types.Right', E2601} -> (fun (V655) -> begin (V662 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V656) -> fun (V657) -> fun (V658) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V656, V657, V658)) end end end, fun (V659) -> fun (V660) -> fun (V661) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V659, V660, V661)) end end end}, V655, V591))), case V662 of {'Idris.Prelude.Types.Left', E2602} -> (fun (V663) -> {'Idris.Prelude.Types.Left', V663} end(E2602)); {'Idris.Prelude.Types.Right', E2603} -> (fun (V664) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V664))))}, V591)) end(E2603)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2601)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E2596, E2597)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2410, E2411} -> (fun (V665, V666) -> case V666 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V667) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V668) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V669) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2494, E2495, E2496, E2497} -> (fun (V670, V671, V672, V673) -> fun (V674) -> case V672 of {'Idris.Core.TT.Pi', E2539, E2540, E2541, E2542} -> (fun (V675, V676, V677, V678) -> begin (V680 = begin (V679 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V679} end), case V680 of {'Idris.Prelude.Types.Left', E2543} -> (fun (V681) -> {'Idris.Prelude.Types.Left', V681} end(E2543)); {'Idris.Prelude.Types.Right', E2544} -> (fun (V682) -> begin (V683 = (('un--nfToCFType'(V0, V670, 0, V678))(V674))), case V683 of {'Idris.Prelude.Types.Left', E2545} -> (fun (V684) -> {'Idris.Prelude.Types.Left', V684} end(E2545)); {'Idris.Prelude.Types.Right', E2546} -> (fun (V685) -> begin (V686 = (((V673(V682))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V670, 0}))))(V674))), case V686 of {'Idris.Prelude.Types.Left', E2547} -> (fun (V687) -> {'Idris.Prelude.Types.Left', V687} end(E2547)); {'Idris.Prelude.Types.Right', E2548} -> (fun (V688) -> begin (V689 = (('un--nfToCFType'(V0, V670, 0, V688))(V674))), case V689 of {'Idris.Prelude.Types.Left', E2549} -> (fun (V690) -> {'Idris.Prelude.Types.Left', V690} end(E2549)); {'Idris.Prelude.Types.Right', E2550} -> (fun (V691) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V685, V691}} end(E2550)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2548)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2539, E2540, E2541, E2542)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2504, E2505, E2506, E2507, E2508} -> (fun (V692, V693, V694, V695, V696) -> begin (V698 = begin (V697 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V697} end), case V698 of {'Idris.Prelude.Types.Left', E2509} -> (fun (V699) -> {'Idris.Prelude.Types.Left', V699} end(E2509)); {'Idris.Prelude.Types.Right', E2510} -> (fun (V700) -> begin (V707 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V701) -> fun (V702) -> fun (V703) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V701, V702, V703)) end end end, fun (V704) -> fun (V705) -> fun (V706) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V704, V705, V706)) end end end}, V693, V674))), case V707 of {'Idris.Prelude.Types.Left', E2511} -> (fun (V708) -> {'Idris.Prelude.Types.Left', V708} end(E2511)); {'Idris.Prelude.Types.Right', E2512} -> (fun (V709) -> begin (V711 = (('un--getNArgs'(V0, V700, V709, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V710) -> ('Idris.Idris2.Builtin':'un--snd'(V710)) end, V696))))(V674))), case V711 of {'Idris.Prelude.Types.Left', E2513} -> (fun (V712) -> {'Idris.Prelude.Types.Left', V712} end(E2513)); {'Idris.Prelude.Types.Right', E2514} -> (fun (V713) -> case V713 of {'Idris.Compiler.CompileExpr.User', E2515, E2516} -> (fun (V714, V715) -> begin (V717 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V716) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V700, V716)) end, V715, [], V674))), case V717 of {'Idris.Prelude.Types.Left', E2517} -> (fun (V718) -> {'Idris.Prelude.Types.Left', V718} end(E2517)); {'Idris.Prelude.Types.Right', E2518} -> (fun (V719) -> begin (V721 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V720) -> ('un--nfToCFType'(V0, V692, V2, V720)) end, V719, [], V674))), case V721 of {'Idris.Prelude.Types.Left', E2519} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E2519)); {'Idris.Prelude.Types.Right', E2520} -> (fun (V723) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V709, V723}} end(E2520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2518)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2515, E2516)); {'Idris.Compiler.CompileExpr.Struct', E2521, E2522} -> (fun (V724, V725) -> begin (V736 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V726) -> fun (V727) -> case V726 of {'Idris.Builtin.MkPair', E2523, E2524} -> (fun (V728, V729) -> begin (V730 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V700, V729))(V727))), case V730 of {'Idris.Prelude.Types.Left', E2525} -> (fun (V731) -> {'Idris.Prelude.Types.Left', V731} end(E2525)); {'Idris.Prelude.Types.Right', E2526} -> (fun (V732) -> begin (V733 = (('un--nfToCFType'(V0, V692, 1, V732))(V727))), case V733 of {'Idris.Prelude.Types.Left', E2527} -> (fun (V734) -> {'Idris.Prelude.Types.Left', V734} end(E2527)); {'Idris.Prelude.Types.Right', E2528} -> (fun (V735) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V728, V735}} end(E2528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2523, E2524)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V725, [], V674))), case V736 of {'Idris.Prelude.Types.Left', E2529} -> (fun (V737) -> {'Idris.Prelude.Types.Left', V737} end(E2529)); {'Idris.Prelude.Types.Right', E2530} -> (fun (V738) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V724, V738}} end(E2530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2521, E2522)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2531} -> (fun (V739) -> begin (V740 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V700, V739))(V674))), case V740 of {'Idris.Prelude.Types.Left', E2532} -> (fun (V741) -> {'Idris.Prelude.Types.Left', V741} end(E2532)); {'Idris.Prelude.Types.Right', E2533} -> (fun (V742) -> begin (V743 = (('un--nfToCFType'(V0, V692, V2, V742))(V674))), case V743 of {'Idris.Prelude.Types.Left', E2534} -> (fun (V744) -> {'Idris.Prelude.Types.Left', V744} end(E2534)); {'Idris.Prelude.Types.Right', E2535} -> (fun (V745) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V745}} end(E2535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2533)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2504, E2505, E2506, E2507, E2508)); {'Idris.Core.Value.NType', E2536} -> (fun (V746) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2536)); {'Idris.Core.Value.NErased', E2537, E2538} -> (fun (V747, V748) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2537, E2538)); _ -> begin (V750 = begin (V749 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V749} end), case V750 of {'Idris.Prelude.Types.Left', E2498} -> (fun (V751) -> {'Idris.Prelude.Types.Left', V751} end(E2498)); {'Idris.Prelude.Types.Right', E2499} -> (fun (V752) -> begin (V753 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V752, {'Idris.Core.Env.Nil'}, V3, V674))), case V753 of {'Idris.Prelude.Types.Left', E2500} -> (fun (V754) -> {'Idris.Prelude.Types.Left', V754} end(E2500)); {'Idris.Prelude.Types.Right', E2501} -> (fun (V755) -> begin (V762 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V756) -> fun (V757) -> fun (V758) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V756, V757, V758)) end end end, fun (V759) -> fun (V760) -> fun (V761) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V759, V760, V761)) end end end}, V755, V674))), case V762 of {'Idris.Prelude.Types.Left', E2502} -> (fun (V763) -> {'Idris.Prelude.Types.Left', V763} end(E2502)); {'Idris.Prelude.Types.Right', E2503} -> (fun (V764) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V764))))}, V674)) end(E2503)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2494, E2495, E2496, E2497)); _ -> fun (V765) -> case V3 of {'Idris.Core.Value.NTCon', E2459, E2460, E2461, E2462, E2463} -> (fun (V766, V767, V768, V769, V770) -> begin (V772 = begin (V771 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V771} end), case V772 of {'Idris.Prelude.Types.Left', E2464} -> (fun (V773) -> {'Idris.Prelude.Types.Left', V773} end(E2464)); {'Idris.Prelude.Types.Right', E2465} -> (fun (V774) -> begin (V781 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V775) -> fun (V776) -> fun (V777) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V775, V776, V777)) end end end, fun (V778) -> fun (V779) -> fun (V780) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V778, V779, V780)) end end end}, V767, V765))), case V781 of {'Idris.Prelude.Types.Left', E2466} -> (fun (V782) -> {'Idris.Prelude.Types.Left', V782} end(E2466)); {'Idris.Prelude.Types.Right', E2467} -> (fun (V783) -> begin (V785 = (('un--getNArgs'(V0, V774, V783, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V784) -> ('Idris.Idris2.Builtin':'un--snd'(V784)) end, V770))))(V765))), case V785 of {'Idris.Prelude.Types.Left', E2468} -> (fun (V786) -> {'Idris.Prelude.Types.Left', V786} end(E2468)); {'Idris.Prelude.Types.Right', E2469} -> (fun (V787) -> case V787 of {'Idris.Compiler.CompileExpr.User', E2470, E2471} -> (fun (V788, V789) -> begin (V791 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V790) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V774, V790)) end, V789, [], V765))), case V791 of {'Idris.Prelude.Types.Left', E2472} -> (fun (V792) -> {'Idris.Prelude.Types.Left', V792} end(E2472)); {'Idris.Prelude.Types.Right', E2473} -> (fun (V793) -> begin (V795 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V794) -> ('un--nfToCFType'(V0, V766, V2, V794)) end, V793, [], V765))), case V795 of {'Idris.Prelude.Types.Left', E2474} -> (fun (V796) -> {'Idris.Prelude.Types.Left', V796} end(E2474)); {'Idris.Prelude.Types.Right', E2475} -> (fun (V797) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V783, V797}} end(E2475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2473)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2470, E2471)); {'Idris.Compiler.CompileExpr.Struct', E2476, E2477} -> (fun (V798, V799) -> begin (V810 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V800) -> fun (V801) -> case V800 of {'Idris.Builtin.MkPair', E2478, E2479} -> (fun (V802, V803) -> begin (V804 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V774, V803))(V801))), case V804 of {'Idris.Prelude.Types.Left', E2480} -> (fun (V805) -> {'Idris.Prelude.Types.Left', V805} end(E2480)); {'Idris.Prelude.Types.Right', E2481} -> (fun (V806) -> begin (V807 = (('un--nfToCFType'(V0, V766, 1, V806))(V801))), case V807 of {'Idris.Prelude.Types.Left', E2482} -> (fun (V808) -> {'Idris.Prelude.Types.Left', V808} end(E2482)); {'Idris.Prelude.Types.Right', E2483} -> (fun (V809) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V802, V809}} end(E2483)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2481)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2478, E2479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V799, [], V765))), case V810 of {'Idris.Prelude.Types.Left', E2484} -> (fun (V811) -> {'Idris.Prelude.Types.Left', V811} end(E2484)); {'Idris.Prelude.Types.Right', E2485} -> (fun (V812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V798, V812}} end(E2485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2476, E2477)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2486} -> (fun (V813) -> begin (V814 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V774, V813))(V765))), case V814 of {'Idris.Prelude.Types.Left', E2487} -> (fun (V815) -> {'Idris.Prelude.Types.Left', V815} end(E2487)); {'Idris.Prelude.Types.Right', E2488} -> (fun (V816) -> begin (V817 = (('un--nfToCFType'(V0, V766, V2, V816))(V765))), case V817 of {'Idris.Prelude.Types.Left', E2489} -> (fun (V818) -> {'Idris.Prelude.Types.Left', V818} end(E2489)); {'Idris.Prelude.Types.Right', E2490} -> (fun (V819) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V819}} end(E2490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2459, E2460, E2461, E2462, E2463)); {'Idris.Core.Value.NType', E2491} -> (fun (V820) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2491)); {'Idris.Core.Value.NErased', E2492, E2493} -> (fun (V821, V822) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2492, E2493)); _ -> begin (V824 = begin (V823 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V823} end), case V824 of {'Idris.Prelude.Types.Left', E2453} -> (fun (V825) -> {'Idris.Prelude.Types.Left', V825} end(E2453)); {'Idris.Prelude.Types.Right', E2454} -> (fun (V826) -> begin (V827 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V826, {'Idris.Core.Env.Nil'}, V3, V765))), case V827 of {'Idris.Prelude.Types.Left', E2455} -> (fun (V828) -> {'Idris.Prelude.Types.Left', V828} end(E2455)); {'Idris.Prelude.Types.Right', E2456} -> (fun (V829) -> begin (V836 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V830) -> fun (V831) -> fun (V832) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V830, V831, V832)) end end end, fun (V833) -> fun (V834) -> fun (V835) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V833, V834, V835)) end end end}, V829, V765))), case V836 of {'Idris.Prelude.Types.Left', E2457} -> (fun (V837) -> {'Idris.Prelude.Types.Left', V837} end(E2457)); {'Idris.Prelude.Types.Right', E2458} -> (fun (V838) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V838))))}, V765)) end(E2458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V839) -> case V3 of {'Idris.Core.Value.NBind', E2592, E2593, E2594, E2595} -> (fun (V840, V841, V842, V843) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V840, <<"Function types not allowed in a foreign struct"/utf8>>}, V839)) end(E2592, E2593, E2594, E2595)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2557, E2558, E2559, E2560, E2561} -> (fun (V844, V845, V846, V847, V848) -> begin (V850 = begin (V849 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V849} end), case V850 of {'Idris.Prelude.Types.Left', E2562} -> (fun (V851) -> {'Idris.Prelude.Types.Left', V851} end(E2562)); {'Idris.Prelude.Types.Right', E2563} -> (fun (V852) -> begin (V859 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V853) -> fun (V854) -> fun (V855) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V853, V854, V855)) end end end, fun (V856) -> fun (V857) -> fun (V858) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V856, V857, V858)) end end end}, V845, V839))), case V859 of {'Idris.Prelude.Types.Left', E2564} -> (fun (V860) -> {'Idris.Prelude.Types.Left', V860} end(E2564)); {'Idris.Prelude.Types.Right', E2565} -> (fun (V861) -> begin (V863 = (('un--getNArgs'(V0, V852, V861, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V862) -> ('Idris.Idris2.Builtin':'un--snd'(V862)) end, V848))))(V839))), case V863 of {'Idris.Prelude.Types.Left', E2566} -> (fun (V864) -> {'Idris.Prelude.Types.Left', V864} end(E2566)); {'Idris.Prelude.Types.Right', E2567} -> (fun (V865) -> case V865 of {'Idris.Compiler.CompileExpr.User', E2568, E2569} -> (fun (V866, V867) -> begin (V869 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V868) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V852, V868)) end, V867, [], V839))), case V869 of {'Idris.Prelude.Types.Left', E2570} -> (fun (V870) -> {'Idris.Prelude.Types.Left', V870} end(E2570)); {'Idris.Prelude.Types.Right', E2571} -> (fun (V871) -> begin (V873 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V872) -> ('un--nfToCFType'(V0, V844, V2, V872)) end, V871, [], V839))), case V873 of {'Idris.Prelude.Types.Left', E2572} -> (fun (V874) -> {'Idris.Prelude.Types.Left', V874} end(E2572)); {'Idris.Prelude.Types.Right', E2573} -> (fun (V875) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V861, V875}} end(E2573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2568, E2569)); {'Idris.Compiler.CompileExpr.Struct', E2574, E2575} -> (fun (V876, V877) -> begin (V888 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V878) -> fun (V879) -> case V878 of {'Idris.Builtin.MkPair', E2576, E2577} -> (fun (V880, V881) -> begin (V882 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V852, V881))(V879))), case V882 of {'Idris.Prelude.Types.Left', E2578} -> (fun (V883) -> {'Idris.Prelude.Types.Left', V883} end(E2578)); {'Idris.Prelude.Types.Right', E2579} -> (fun (V884) -> begin (V885 = (('un--nfToCFType'(V0, V844, 1, V884))(V879))), case V885 of {'Idris.Prelude.Types.Left', E2580} -> (fun (V886) -> {'Idris.Prelude.Types.Left', V886} end(E2580)); {'Idris.Prelude.Types.Right', E2581} -> (fun (V887) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V880, V887}} end(E2581)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2579)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2576, E2577)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V877, [], V839))), case V888 of {'Idris.Prelude.Types.Left', E2582} -> (fun (V889) -> {'Idris.Prelude.Types.Left', V889} end(E2582)); {'Idris.Prelude.Types.Right', E2583} -> (fun (V890) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V876, V890}} end(E2583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2574, E2575)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2584} -> (fun (V891) -> begin (V892 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V852, V891))(V839))), case V892 of {'Idris.Prelude.Types.Left', E2585} -> (fun (V893) -> {'Idris.Prelude.Types.Left', V893} end(E2585)); {'Idris.Prelude.Types.Right', E2586} -> (fun (V894) -> begin (V895 = (('un--nfToCFType'(V0, V844, V2, V894))(V839))), case V895 of {'Idris.Prelude.Types.Left', E2587} -> (fun (V896) -> {'Idris.Prelude.Types.Left', V896} end(E2587)); {'Idris.Prelude.Types.Right', E2588} -> (fun (V897) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V897}} end(E2588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2565)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2563)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2557, E2558, E2559, E2560, E2561)); {'Idris.Core.Value.NType', E2589} -> (fun (V898) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2589)); {'Idris.Core.Value.NErased', E2590, E2591} -> (fun (V899, V900) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2590, E2591)); _ -> begin (V902 = begin (V901 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V901} end), case V902 of {'Idris.Prelude.Types.Left', E2551} -> (fun (V903) -> {'Idris.Prelude.Types.Left', V903} end(E2551)); {'Idris.Prelude.Types.Right', E2552} -> (fun (V904) -> begin (V905 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V904, {'Idris.Core.Env.Nil'}, V3, V839))), case V905 of {'Idris.Prelude.Types.Left', E2553} -> (fun (V906) -> {'Idris.Prelude.Types.Left', V906} end(E2553)); {'Idris.Prelude.Types.Right', E2554} -> (fun (V907) -> begin (V914 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V908) -> fun (V909) -> fun (V910) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V908, V909, V910)) end end end, fun (V911) -> fun (V912) -> fun (V913) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V911, V912, V913)) end end end}, V907, V839))), case V914 of {'Idris.Prelude.Types.Left', E2555} -> (fun (V915) -> {'Idris.Prelude.Types.Left', V915} end(E2555)); {'Idris.Prelude.Types.Right', E2556} -> (fun (V916) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V916))))}, V839)) end(E2556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V917) -> case V3 of {'Idris.Core.Value.NTCon', E2418, E2419, E2420, E2421, E2422} -> (fun (V918, V919, V920, V921, V922) -> begin (V924 = begin (V923 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V923} end), case V924 of {'Idris.Prelude.Types.Left', E2423} -> (fun (V925) -> {'Idris.Prelude.Types.Left', V925} end(E2423)); {'Idris.Prelude.Types.Right', E2424} -> (fun (V926) -> begin (V933 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V927) -> fun (V928) -> fun (V929) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V927, V928, V929)) end end end, fun (V930) -> fun (V931) -> fun (V932) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V930, V931, V932)) end end end}, V919, V917))), case V933 of {'Idris.Prelude.Types.Left', E2425} -> (fun (V934) -> {'Idris.Prelude.Types.Left', V934} end(E2425)); {'Idris.Prelude.Types.Right', E2426} -> (fun (V935) -> begin (V937 = (('un--getNArgs'(V0, V926, V935, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V936) -> ('Idris.Idris2.Builtin':'un--snd'(V936)) end, V922))))(V917))), case V937 of {'Idris.Prelude.Types.Left', E2427} -> (fun (V938) -> {'Idris.Prelude.Types.Left', V938} end(E2427)); {'Idris.Prelude.Types.Right', E2428} -> (fun (V939) -> case V939 of {'Idris.Compiler.CompileExpr.User', E2429, E2430} -> (fun (V940, V941) -> begin (V943 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V942) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V926, V942)) end, V941, [], V917))), case V943 of {'Idris.Prelude.Types.Left', E2431} -> (fun (V944) -> {'Idris.Prelude.Types.Left', V944} end(E2431)); {'Idris.Prelude.Types.Right', E2432} -> (fun (V945) -> begin (V947 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V946) -> ('un--nfToCFType'(V0, V918, V2, V946)) end, V945, [], V917))), case V947 of {'Idris.Prelude.Types.Left', E2433} -> (fun (V948) -> {'Idris.Prelude.Types.Left', V948} end(E2433)); {'Idris.Prelude.Types.Right', E2434} -> (fun (V949) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V935, V949}} end(E2434)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2429, E2430)); {'Idris.Compiler.CompileExpr.Struct', E2435, E2436} -> (fun (V950, V951) -> begin (V962 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V952) -> fun (V953) -> case V952 of {'Idris.Builtin.MkPair', E2437, E2438} -> (fun (V954, V955) -> begin (V956 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V926, V955))(V953))), case V956 of {'Idris.Prelude.Types.Left', E2439} -> (fun (V957) -> {'Idris.Prelude.Types.Left', V957} end(E2439)); {'Idris.Prelude.Types.Right', E2440} -> (fun (V958) -> begin (V959 = (('un--nfToCFType'(V0, V918, 1, V958))(V953))), case V959 of {'Idris.Prelude.Types.Left', E2441} -> (fun (V960) -> {'Idris.Prelude.Types.Left', V960} end(E2441)); {'Idris.Prelude.Types.Right', E2442} -> (fun (V961) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V954, V961}} end(E2442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2437, E2438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V951, [], V917))), case V962 of {'Idris.Prelude.Types.Left', E2443} -> (fun (V963) -> {'Idris.Prelude.Types.Left', V963} end(E2443)); {'Idris.Prelude.Types.Right', E2444} -> (fun (V964) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V950, V964}} end(E2444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2435, E2436)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2445} -> (fun (V965) -> begin (V966 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V926, V965))(V917))), case V966 of {'Idris.Prelude.Types.Left', E2446} -> (fun (V967) -> {'Idris.Prelude.Types.Left', V967} end(E2446)); {'Idris.Prelude.Types.Right', E2447} -> (fun (V968) -> begin (V969 = (('un--nfToCFType'(V0, V918, V2, V968))(V917))), case V969 of {'Idris.Prelude.Types.Left', E2448} -> (fun (V970) -> {'Idris.Prelude.Types.Left', V970} end(E2448)); {'Idris.Prelude.Types.Right', E2449} -> (fun (V971) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V971}} end(E2449)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2447)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2445)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2428)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2418, E2419, E2420, E2421, E2422)); {'Idris.Core.Value.NType', E2450} -> (fun (V972) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2450)); {'Idris.Core.Value.NErased', E2451, E2452} -> (fun (V973, V974) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2451, E2452)); _ -> begin (V976 = begin (V975 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V975} end), case V976 of {'Idris.Prelude.Types.Left', E2412} -> (fun (V977) -> {'Idris.Prelude.Types.Left', V977} end(E2412)); {'Idris.Prelude.Types.Right', E2413} -> (fun (V978) -> begin (V979 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V978, {'Idris.Core.Env.Nil'}, V3, V917))), case V979 of {'Idris.Prelude.Types.Left', E2414} -> (fun (V980) -> {'Idris.Prelude.Types.Left', V980} end(E2414)); {'Idris.Prelude.Types.Right', E2415} -> (fun (V981) -> begin (V988 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V982) -> fun (V983) -> fun (V984) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V982, V983, V984)) end end end, fun (V985) -> fun (V986) -> fun (V987) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V985, V986, V987)) end end end}, V981, V917))), case V988 of {'Idris.Prelude.Types.Left', E2416} -> (fun (V989) -> {'Idris.Prelude.Types.Left', V989} end(E2416)); {'Idris.Prelude.Types.Right', E2417} -> (fun (V990) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V990))))}, V917)) end(E2417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2415)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2410, E2411)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2308, E2309, E2310, E2311} -> (fun (V991, V992, V993, V994) -> fun (V995) -> case V993 of {'Idris.Core.TT.Pi', E2353, E2354, E2355, E2356} -> (fun (V996, V997, V998, V999) -> begin (V1001 = begin (V1000 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1000} end), case V1001 of {'Idris.Prelude.Types.Left', E2357} -> (fun (V1002) -> {'Idris.Prelude.Types.Left', V1002} end(E2357)); {'Idris.Prelude.Types.Right', E2358} -> (fun (V1003) -> begin (V1004 = (('un--nfToCFType'(V0, V991, 0, V999))(V995))), case V1004 of {'Idris.Prelude.Types.Left', E2359} -> (fun (V1005) -> {'Idris.Prelude.Types.Left', V1005} end(E2359)); {'Idris.Prelude.Types.Right', E2360} -> (fun (V1006) -> begin (V1007 = (((V994(V1003))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V991, 0}))))(V995))), case V1007 of {'Idris.Prelude.Types.Left', E2361} -> (fun (V1008) -> {'Idris.Prelude.Types.Left', V1008} end(E2361)); {'Idris.Prelude.Types.Right', E2362} -> (fun (V1009) -> begin (V1010 = (('un--nfToCFType'(V0, V991, 0, V1009))(V995))), case V1010 of {'Idris.Prelude.Types.Left', E2363} -> (fun (V1011) -> {'Idris.Prelude.Types.Left', V1011} end(E2363)); {'Idris.Prelude.Types.Right', E2364} -> (fun (V1012) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1006, V1012}} end(E2364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2353, E2354, E2355, E2356)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2318, E2319, E2320, E2321, E2322} -> (fun (V1013, V1014, V1015, V1016, V1017) -> begin (V1019 = begin (V1018 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1018} end), case V1019 of {'Idris.Prelude.Types.Left', E2323} -> (fun (V1020) -> {'Idris.Prelude.Types.Left', V1020} end(E2323)); {'Idris.Prelude.Types.Right', E2324} -> (fun (V1021) -> begin (V1028 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1022) -> fun (V1023) -> fun (V1024) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1022, V1023, V1024)) end end end, fun (V1025) -> fun (V1026) -> fun (V1027) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1025, V1026, V1027)) end end end}, V1014, V995))), case V1028 of {'Idris.Prelude.Types.Left', E2325} -> (fun (V1029) -> {'Idris.Prelude.Types.Left', V1029} end(E2325)); {'Idris.Prelude.Types.Right', E2326} -> (fun (V1030) -> begin (V1032 = (('un--getNArgs'(V0, V1021, V1030, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1031) -> ('Idris.Idris2.Builtin':'un--snd'(V1031)) end, V1017))))(V995))), case V1032 of {'Idris.Prelude.Types.Left', E2327} -> (fun (V1033) -> {'Idris.Prelude.Types.Left', V1033} end(E2327)); {'Idris.Prelude.Types.Right', E2328} -> (fun (V1034) -> case V1034 of {'Idris.Compiler.CompileExpr.User', E2329, E2330} -> (fun (V1035, V1036) -> begin (V1038 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1037) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1021, V1037)) end, V1036, [], V995))), case V1038 of {'Idris.Prelude.Types.Left', E2331} -> (fun (V1039) -> {'Idris.Prelude.Types.Left', V1039} end(E2331)); {'Idris.Prelude.Types.Right', E2332} -> (fun (V1040) -> begin (V1042 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1041) -> ('un--nfToCFType'(V0, V1013, V2, V1041)) end, V1040, [], V995))), case V1042 of {'Idris.Prelude.Types.Left', E2333} -> (fun (V1043) -> {'Idris.Prelude.Types.Left', V1043} end(E2333)); {'Idris.Prelude.Types.Right', E2334} -> (fun (V1044) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1030, V1044}} end(E2334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2329, E2330)); {'Idris.Compiler.CompileExpr.Struct', E2335, E2336} -> (fun (V1045, V1046) -> begin (V1057 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1047) -> fun (V1048) -> case V1047 of {'Idris.Builtin.MkPair', E2337, E2338} -> (fun (V1049, V1050) -> begin (V1051 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1021, V1050))(V1048))), case V1051 of {'Idris.Prelude.Types.Left', E2339} -> (fun (V1052) -> {'Idris.Prelude.Types.Left', V1052} end(E2339)); {'Idris.Prelude.Types.Right', E2340} -> (fun (V1053) -> begin (V1054 = (('un--nfToCFType'(V0, V1013, 1, V1053))(V1048))), case V1054 of {'Idris.Prelude.Types.Left', E2341} -> (fun (V1055) -> {'Idris.Prelude.Types.Left', V1055} end(E2341)); {'Idris.Prelude.Types.Right', E2342} -> (fun (V1056) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1049, V1056}} end(E2342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2337, E2338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1046, [], V995))), case V1057 of {'Idris.Prelude.Types.Left', E2343} -> (fun (V1058) -> {'Idris.Prelude.Types.Left', V1058} end(E2343)); {'Idris.Prelude.Types.Right', E2344} -> (fun (V1059) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1045, V1059}} end(E2344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2335, E2336)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2345} -> (fun (V1060) -> begin (V1061 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1021, V1060))(V995))), case V1061 of {'Idris.Prelude.Types.Left', E2346} -> (fun (V1062) -> {'Idris.Prelude.Types.Left', V1062} end(E2346)); {'Idris.Prelude.Types.Right', E2347} -> (fun (V1063) -> begin (V1064 = (('un--nfToCFType'(V0, V1013, V2, V1063))(V995))), case V1064 of {'Idris.Prelude.Types.Left', E2348} -> (fun (V1065) -> {'Idris.Prelude.Types.Left', V1065} end(E2348)); {'Idris.Prelude.Types.Right', E2349} -> (fun (V1066) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1066}} end(E2349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2318, E2319, E2320, E2321, E2322)); {'Idris.Core.Value.NType', E2350} -> (fun (V1067) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2350)); {'Idris.Core.Value.NErased', E2351, E2352} -> (fun (V1068, V1069) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2351, E2352)); _ -> begin (V1071 = begin (V1070 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1070} end), case V1071 of {'Idris.Prelude.Types.Left', E2312} -> (fun (V1072) -> {'Idris.Prelude.Types.Left', V1072} end(E2312)); {'Idris.Prelude.Types.Right', E2313} -> (fun (V1073) -> begin (V1074 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1073, {'Idris.Core.Env.Nil'}, V3, V995))), case V1074 of {'Idris.Prelude.Types.Left', E2314} -> (fun (V1075) -> {'Idris.Prelude.Types.Left', V1075} end(E2314)); {'Idris.Prelude.Types.Right', E2315} -> (fun (V1076) -> begin (V1083 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1077) -> fun (V1078) -> fun (V1079) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1077, V1078, V1079)) end end end, fun (V1080) -> fun (V1081) -> fun (V1082) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1080, V1081, V1082)) end end end}, V1076, V995))), case V1083 of {'Idris.Prelude.Types.Left', E2316} -> (fun (V1084) -> {'Idris.Prelude.Types.Left', V1084} end(E2316)); {'Idris.Prelude.Types.Right', E2317} -> (fun (V1085) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1085))))}, V995)) end(E2317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2308, E2309, E2310, E2311)); _ -> fun (V1086) -> case V3 of {'Idris.Core.Value.NTCon', E2273, E2274, E2275, E2276, E2277} -> (fun (V1087, V1088, V1089, V1090, V1091) -> begin (V1093 = begin (V1092 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1092} end), case V1093 of {'Idris.Prelude.Types.Left', E2278} -> (fun (V1094) -> {'Idris.Prelude.Types.Left', V1094} end(E2278)); {'Idris.Prelude.Types.Right', E2279} -> (fun (V1095) -> begin (V1102 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1096) -> fun (V1097) -> fun (V1098) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1096, V1097, V1098)) end end end, fun (V1099) -> fun (V1100) -> fun (V1101) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1099, V1100, V1101)) end end end}, V1088, V1086))), case V1102 of {'Idris.Prelude.Types.Left', E2280} -> (fun (V1103) -> {'Idris.Prelude.Types.Left', V1103} end(E2280)); {'Idris.Prelude.Types.Right', E2281} -> (fun (V1104) -> begin (V1106 = (('un--getNArgs'(V0, V1095, V1104, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1105) -> ('Idris.Idris2.Builtin':'un--snd'(V1105)) end, V1091))))(V1086))), case V1106 of {'Idris.Prelude.Types.Left', E2282} -> (fun (V1107) -> {'Idris.Prelude.Types.Left', V1107} end(E2282)); {'Idris.Prelude.Types.Right', E2283} -> (fun (V1108) -> case V1108 of {'Idris.Compiler.CompileExpr.User', E2284, E2285} -> (fun (V1109, V1110) -> begin (V1112 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1111) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1095, V1111)) end, V1110, [], V1086))), case V1112 of {'Idris.Prelude.Types.Left', E2286} -> (fun (V1113) -> {'Idris.Prelude.Types.Left', V1113} end(E2286)); {'Idris.Prelude.Types.Right', E2287} -> (fun (V1114) -> begin (V1116 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1115) -> ('un--nfToCFType'(V0, V1087, V2, V1115)) end, V1114, [], V1086))), case V1116 of {'Idris.Prelude.Types.Left', E2288} -> (fun (V1117) -> {'Idris.Prelude.Types.Left', V1117} end(E2288)); {'Idris.Prelude.Types.Right', E2289} -> (fun (V1118) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1104, V1118}} end(E2289)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2284, E2285)); {'Idris.Compiler.CompileExpr.Struct', E2290, E2291} -> (fun (V1119, V1120) -> begin (V1131 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1121) -> fun (V1122) -> case V1121 of {'Idris.Builtin.MkPair', E2292, E2293} -> (fun (V1123, V1124) -> begin (V1125 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1095, V1124))(V1122))), case V1125 of {'Idris.Prelude.Types.Left', E2294} -> (fun (V1126) -> {'Idris.Prelude.Types.Left', V1126} end(E2294)); {'Idris.Prelude.Types.Right', E2295} -> (fun (V1127) -> begin (V1128 = (('un--nfToCFType'(V0, V1087, 1, V1127))(V1122))), case V1128 of {'Idris.Prelude.Types.Left', E2296} -> (fun (V1129) -> {'Idris.Prelude.Types.Left', V1129} end(E2296)); {'Idris.Prelude.Types.Right', E2297} -> (fun (V1130) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1123, V1130}} end(E2297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2292, E2293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1120, [], V1086))), case V1131 of {'Idris.Prelude.Types.Left', E2298} -> (fun (V1132) -> {'Idris.Prelude.Types.Left', V1132} end(E2298)); {'Idris.Prelude.Types.Right', E2299} -> (fun (V1133) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1119, V1133}} end(E2299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2290, E2291)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2300} -> (fun (V1134) -> begin (V1135 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1095, V1134))(V1086))), case V1135 of {'Idris.Prelude.Types.Left', E2301} -> (fun (V1136) -> {'Idris.Prelude.Types.Left', V1136} end(E2301)); {'Idris.Prelude.Types.Right', E2302} -> (fun (V1137) -> begin (V1138 = (('un--nfToCFType'(V0, V1087, V2, V1137))(V1086))), case V1138 of {'Idris.Prelude.Types.Left', E2303} -> (fun (V1139) -> {'Idris.Prelude.Types.Left', V1139} end(E2303)); {'Idris.Prelude.Types.Right', E2304} -> (fun (V1140) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1140}} end(E2304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2273, E2274, E2275, E2276, E2277)); {'Idris.Core.Value.NType', E2305} -> (fun (V1141) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2305)); {'Idris.Core.Value.NErased', E2306, E2307} -> (fun (V1142, V1143) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2306, E2307)); _ -> begin (V1145 = begin (V1144 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1144} end), case V1145 of {'Idris.Prelude.Types.Left', E2267} -> (fun (V1146) -> {'Idris.Prelude.Types.Left', V1146} end(E2267)); {'Idris.Prelude.Types.Right', E2268} -> (fun (V1147) -> begin (V1148 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1147, {'Idris.Core.Env.Nil'}, V3, V1086))), case V1148 of {'Idris.Prelude.Types.Left', E2269} -> (fun (V1149) -> {'Idris.Prelude.Types.Left', V1149} end(E2269)); {'Idris.Prelude.Types.Right', E2270} -> (fun (V1150) -> begin (V1157 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1151) -> fun (V1152) -> fun (V1153) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1151, V1152, V1153)) end end end, fun (V1154) -> fun (V1155) -> fun (V1156) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1154, V1155, V1156)) end end end}, V1150, V1086))), case V1157 of {'Idris.Prelude.Types.Left', E2271} -> (fun (V1158) -> {'Idris.Prelude.Types.Left', V1158} end(E2271)); {'Idris.Prelude.Types.Right', E2272} -> (fun (V1159) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1159))))}, V1086)) end(E2272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V1160) -> case V3 of {'Idris.Core.Value.NBind', E2406, E2407, E2408, E2409} -> (fun (V1161, V1162, V1163, V1164) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1161, <<"Function types not allowed in a foreign struct"/utf8>>}, V1160)) end(E2406, E2407, E2408, E2409)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2371, E2372, E2373, E2374, E2375} -> (fun (V1165, V1166, V1167, V1168, V1169) -> begin (V1171 = begin (V1170 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1170} end), case V1171 of {'Idris.Prelude.Types.Left', E2376} -> (fun (V1172) -> {'Idris.Prelude.Types.Left', V1172} end(E2376)); {'Idris.Prelude.Types.Right', E2377} -> (fun (V1173) -> begin (V1180 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1174) -> fun (V1175) -> fun (V1176) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1174, V1175, V1176)) end end end, fun (V1177) -> fun (V1178) -> fun (V1179) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1177, V1178, V1179)) end end end}, V1166, V1160))), case V1180 of {'Idris.Prelude.Types.Left', E2378} -> (fun (V1181) -> {'Idris.Prelude.Types.Left', V1181} end(E2378)); {'Idris.Prelude.Types.Right', E2379} -> (fun (V1182) -> begin (V1184 = (('un--getNArgs'(V0, V1173, V1182, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1183) -> ('Idris.Idris2.Builtin':'un--snd'(V1183)) end, V1169))))(V1160))), case V1184 of {'Idris.Prelude.Types.Left', E2380} -> (fun (V1185) -> {'Idris.Prelude.Types.Left', V1185} end(E2380)); {'Idris.Prelude.Types.Right', E2381} -> (fun (V1186) -> case V1186 of {'Idris.Compiler.CompileExpr.User', E2382, E2383} -> (fun (V1187, V1188) -> begin (V1190 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1189) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1173, V1189)) end, V1188, [], V1160))), case V1190 of {'Idris.Prelude.Types.Left', E2384} -> (fun (V1191) -> {'Idris.Prelude.Types.Left', V1191} end(E2384)); {'Idris.Prelude.Types.Right', E2385} -> (fun (V1192) -> begin (V1194 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1193) -> ('un--nfToCFType'(V0, V1165, V2, V1193)) end, V1192, [], V1160))), case V1194 of {'Idris.Prelude.Types.Left', E2386} -> (fun (V1195) -> {'Idris.Prelude.Types.Left', V1195} end(E2386)); {'Idris.Prelude.Types.Right', E2387} -> (fun (V1196) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1182, V1196}} end(E2387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2382, E2383)); {'Idris.Compiler.CompileExpr.Struct', E2388, E2389} -> (fun (V1197, V1198) -> begin (V1209 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1199) -> fun (V1200) -> case V1199 of {'Idris.Builtin.MkPair', E2390, E2391} -> (fun (V1201, V1202) -> begin (V1203 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1173, V1202))(V1200))), case V1203 of {'Idris.Prelude.Types.Left', E2392} -> (fun (V1204) -> {'Idris.Prelude.Types.Left', V1204} end(E2392)); {'Idris.Prelude.Types.Right', E2393} -> (fun (V1205) -> begin (V1206 = (('un--nfToCFType'(V0, V1165, 1, V1205))(V1200))), case V1206 of {'Idris.Prelude.Types.Left', E2394} -> (fun (V1207) -> {'Idris.Prelude.Types.Left', V1207} end(E2394)); {'Idris.Prelude.Types.Right', E2395} -> (fun (V1208) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1201, V1208}} end(E2395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2393)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2390, E2391)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1198, [], V1160))), case V1209 of {'Idris.Prelude.Types.Left', E2396} -> (fun (V1210) -> {'Idris.Prelude.Types.Left', V1210} end(E2396)); {'Idris.Prelude.Types.Right', E2397} -> (fun (V1211) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1197, V1211}} end(E2397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2388, E2389)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2398} -> (fun (V1212) -> begin (V1213 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1173, V1212))(V1160))), case V1213 of {'Idris.Prelude.Types.Left', E2399} -> (fun (V1214) -> {'Idris.Prelude.Types.Left', V1214} end(E2399)); {'Idris.Prelude.Types.Right', E2400} -> (fun (V1215) -> begin (V1216 = (('un--nfToCFType'(V0, V1165, V2, V1215))(V1160))), case V1216 of {'Idris.Prelude.Types.Left', E2401} -> (fun (V1217) -> {'Idris.Prelude.Types.Left', V1217} end(E2401)); {'Idris.Prelude.Types.Right', E2402} -> (fun (V1218) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1218}} end(E2402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2371, E2372, E2373, E2374, E2375)); {'Idris.Core.Value.NType', E2403} -> (fun (V1219) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2403)); {'Idris.Core.Value.NErased', E2404, E2405} -> (fun (V1220, V1221) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2404, E2405)); _ -> begin (V1223 = begin (V1222 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1222} end), case V1223 of {'Idris.Prelude.Types.Left', E2365} -> (fun (V1224) -> {'Idris.Prelude.Types.Left', V1224} end(E2365)); {'Idris.Prelude.Types.Right', E2366} -> (fun (V1225) -> begin (V1226 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1225, {'Idris.Core.Env.Nil'}, V3, V1160))), case V1226 of {'Idris.Prelude.Types.Left', E2367} -> (fun (V1227) -> {'Idris.Prelude.Types.Left', V1227} end(E2367)); {'Idris.Prelude.Types.Right', E2368} -> (fun (V1228) -> begin (V1235 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1229) -> fun (V1230) -> fun (V1231) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1229, V1230, V1231)) end end end, fun (V1232) -> fun (V1233) -> fun (V1234) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1232, V1233, V1234)) end end end}, V1228, V1160))), case V1235 of {'Idris.Prelude.Types.Left', E2369} -> (fun (V1236) -> {'Idris.Prelude.Types.Left', V1236} end(E2369)); {'Idris.Prelude.Types.Right', E2370} -> (fun (V1237) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1237))))}, V1160)) end(E2370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V1238) -> case V3 of {'Idris.Core.Value.NTCon', E2232, E2233, E2234, E2235, E2236} -> (fun (V1239, V1240, V1241, V1242, V1243) -> begin (V1245 = begin (V1244 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1244} end), case V1245 of {'Idris.Prelude.Types.Left', E2237} -> (fun (V1246) -> {'Idris.Prelude.Types.Left', V1246} end(E2237)); {'Idris.Prelude.Types.Right', E2238} -> (fun (V1247) -> begin (V1254 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1248) -> fun (V1249) -> fun (V1250) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1248, V1249, V1250)) end end end, fun (V1251) -> fun (V1252) -> fun (V1253) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1251, V1252, V1253)) end end end}, V1240, V1238))), case V1254 of {'Idris.Prelude.Types.Left', E2239} -> (fun (V1255) -> {'Idris.Prelude.Types.Left', V1255} end(E2239)); {'Idris.Prelude.Types.Right', E2240} -> (fun (V1256) -> begin (V1258 = (('un--getNArgs'(V0, V1247, V1256, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1257) -> ('Idris.Idris2.Builtin':'un--snd'(V1257)) end, V1243))))(V1238))), case V1258 of {'Idris.Prelude.Types.Left', E2241} -> (fun (V1259) -> {'Idris.Prelude.Types.Left', V1259} end(E2241)); {'Idris.Prelude.Types.Right', E2242} -> (fun (V1260) -> case V1260 of {'Idris.Compiler.CompileExpr.User', E2243, E2244} -> (fun (V1261, V1262) -> begin (V1264 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1263) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1247, V1263)) end, V1262, [], V1238))), case V1264 of {'Idris.Prelude.Types.Left', E2245} -> (fun (V1265) -> {'Idris.Prelude.Types.Left', V1265} end(E2245)); {'Idris.Prelude.Types.Right', E2246} -> (fun (V1266) -> begin (V1268 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1267) -> ('un--nfToCFType'(V0, V1239, V2, V1267)) end, V1266, [], V1238))), case V1268 of {'Idris.Prelude.Types.Left', E2247} -> (fun (V1269) -> {'Idris.Prelude.Types.Left', V1269} end(E2247)); {'Idris.Prelude.Types.Right', E2248} -> (fun (V1270) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1256, V1270}} end(E2248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2243, E2244)); {'Idris.Compiler.CompileExpr.Struct', E2249, E2250} -> (fun (V1271, V1272) -> begin (V1283 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1273) -> fun (V1274) -> case V1273 of {'Idris.Builtin.MkPair', E2251, E2252} -> (fun (V1275, V1276) -> begin (V1277 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1247, V1276))(V1274))), case V1277 of {'Idris.Prelude.Types.Left', E2253} -> (fun (V1278) -> {'Idris.Prelude.Types.Left', V1278} end(E2253)); {'Idris.Prelude.Types.Right', E2254} -> (fun (V1279) -> begin (V1280 = (('un--nfToCFType'(V0, V1239, 1, V1279))(V1274))), case V1280 of {'Idris.Prelude.Types.Left', E2255} -> (fun (V1281) -> {'Idris.Prelude.Types.Left', V1281} end(E2255)); {'Idris.Prelude.Types.Right', E2256} -> (fun (V1282) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1275, V1282}} end(E2256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2251, E2252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1272, [], V1238))), case V1283 of {'Idris.Prelude.Types.Left', E2257} -> (fun (V1284) -> {'Idris.Prelude.Types.Left', V1284} end(E2257)); {'Idris.Prelude.Types.Right', E2258} -> (fun (V1285) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1271, V1285}} end(E2258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2249, E2250)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2259} -> (fun (V1286) -> begin (V1287 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1247, V1286))(V1238))), case V1287 of {'Idris.Prelude.Types.Left', E2260} -> (fun (V1288) -> {'Idris.Prelude.Types.Left', V1288} end(E2260)); {'Idris.Prelude.Types.Right', E2261} -> (fun (V1289) -> begin (V1290 = (('un--nfToCFType'(V0, V1239, V2, V1289))(V1238))), case V1290 of {'Idris.Prelude.Types.Left', E2262} -> (fun (V1291) -> {'Idris.Prelude.Types.Left', V1291} end(E2262)); {'Idris.Prelude.Types.Right', E2263} -> (fun (V1292) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1292}} end(E2263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2261)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2232, E2233, E2234, E2235, E2236)); {'Idris.Core.Value.NType', E2264} -> (fun (V1293) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2264)); {'Idris.Core.Value.NErased', E2265, E2266} -> (fun (V1294, V1295) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2265, E2266)); _ -> begin (V1297 = begin (V1296 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1296} end), case V1297 of {'Idris.Prelude.Types.Left', E2226} -> (fun (V1298) -> {'Idris.Prelude.Types.Left', V1298} end(E2226)); {'Idris.Prelude.Types.Right', E2227} -> (fun (V1299) -> begin (V1300 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1299, {'Idris.Core.Env.Nil'}, V3, V1238))), case V1300 of {'Idris.Prelude.Types.Left', E2228} -> (fun (V1301) -> {'Idris.Prelude.Types.Left', V1301} end(E2228)); {'Idris.Prelude.Types.Right', E2229} -> (fun (V1302) -> begin (V1309 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1303) -> fun (V1304) -> fun (V1305) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1303, V1304, V1305)) end end end, fun (V1306) -> fun (V1307) -> fun (V1308) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1306, V1307, V1308)) end end end}, V1302, V1238))), case V1309 of {'Idris.Prelude.Types.Left', E2230} -> (fun (V1310) -> {'Idris.Prelude.Types.Left', V1310} end(E2230)); {'Idris.Prelude.Types.Right', E2231} -> (fun (V1311) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1311))))}, V1238)) end(E2231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; 1 -> case V3 of {'Idris.Core.Value.NPrimVal', E3338, E3339} -> (fun (V1312, V1313) -> case V1313 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V1314) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V1314)) end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E3524, E3525} -> (fun (V1315, V1316) -> case V1316 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V1317) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V1318) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V1319) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3608, E3609, E3610, E3611} -> (fun (V1320, V1321, V1322, V1323) -> fun (V1324) -> case V1322 of {'Idris.Core.TT.Pi', E3653, E3654, E3655, E3656} -> (fun (V1325, V1326, V1327, V1328) -> begin (V1330 = begin (V1329 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1329} end), case V1330 of {'Idris.Prelude.Types.Left', E3657} -> (fun (V1331) -> {'Idris.Prelude.Types.Left', V1331} end(E3657)); {'Idris.Prelude.Types.Right', E3658} -> (fun (V1332) -> begin (V1333 = (('un--nfToCFType'(V0, V1320, 0, V1328))(V1324))), case V1333 of {'Idris.Prelude.Types.Left', E3659} -> (fun (V1334) -> {'Idris.Prelude.Types.Left', V1334} end(E3659)); {'Idris.Prelude.Types.Right', E3660} -> (fun (V1335) -> begin (V1336 = (((V1323(V1332))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1320, 0}))))(V1324))), case V1336 of {'Idris.Prelude.Types.Left', E3661} -> (fun (V1337) -> {'Idris.Prelude.Types.Left', V1337} end(E3661)); {'Idris.Prelude.Types.Right', E3662} -> (fun (V1338) -> begin (V1339 = (('un--nfToCFType'(V0, V1320, 0, V1338))(V1324))), case V1339 of {'Idris.Prelude.Types.Left', E3663} -> (fun (V1340) -> {'Idris.Prelude.Types.Left', V1340} end(E3663)); {'Idris.Prelude.Types.Right', E3664} -> (fun (V1341) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1335, V1341}} end(E3664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3662)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3660)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3653, E3654, E3655, E3656)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3618, E3619, E3620, E3621, E3622} -> (fun (V1342, V1343, V1344, V1345, V1346) -> begin (V1348 = begin (V1347 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1347} end), case V1348 of {'Idris.Prelude.Types.Left', E3623} -> (fun (V1349) -> {'Idris.Prelude.Types.Left', V1349} end(E3623)); {'Idris.Prelude.Types.Right', E3624} -> (fun (V1350) -> begin (V1357 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1351) -> fun (V1352) -> fun (V1353) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1351, V1352, V1353)) end end end, fun (V1354) -> fun (V1355) -> fun (V1356) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1354, V1355, V1356)) end end end}, V1343, V1324))), case V1357 of {'Idris.Prelude.Types.Left', E3625} -> (fun (V1358) -> {'Idris.Prelude.Types.Left', V1358} end(E3625)); {'Idris.Prelude.Types.Right', E3626} -> (fun (V1359) -> begin (V1361 = (('un--getNArgs'(V0, V1350, V1359, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1360) -> ('Idris.Idris2.Builtin':'un--snd'(V1360)) end, V1346))))(V1324))), case V1361 of {'Idris.Prelude.Types.Left', E3627} -> (fun (V1362) -> {'Idris.Prelude.Types.Left', V1362} end(E3627)); {'Idris.Prelude.Types.Right', E3628} -> (fun (V1363) -> case V1363 of {'Idris.Compiler.CompileExpr.User', E3629, E3630} -> (fun (V1364, V1365) -> begin (V1367 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1366) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1350, V1366)) end, V1365, [], V1324))), case V1367 of {'Idris.Prelude.Types.Left', E3631} -> (fun (V1368) -> {'Idris.Prelude.Types.Left', V1368} end(E3631)); {'Idris.Prelude.Types.Right', E3632} -> (fun (V1369) -> begin (V1371 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1370) -> ('un--nfToCFType'(V0, V1342, V2, V1370)) end, V1369, [], V1324))), case V1371 of {'Idris.Prelude.Types.Left', E3633} -> (fun (V1372) -> {'Idris.Prelude.Types.Left', V1372} end(E3633)); {'Idris.Prelude.Types.Right', E3634} -> (fun (V1373) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1359, V1373}} end(E3634)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3629, E3630)); {'Idris.Compiler.CompileExpr.Struct', E3635, E3636} -> (fun (V1374, V1375) -> begin (V1386 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1376) -> fun (V1377) -> case V1376 of {'Idris.Builtin.MkPair', E3637, E3638} -> (fun (V1378, V1379) -> begin (V1380 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1350, V1379))(V1377))), case V1380 of {'Idris.Prelude.Types.Left', E3639} -> (fun (V1381) -> {'Idris.Prelude.Types.Left', V1381} end(E3639)); {'Idris.Prelude.Types.Right', E3640} -> (fun (V1382) -> begin (V1383 = (('un--nfToCFType'(V0, V1342, 1, V1382))(V1377))), case V1383 of {'Idris.Prelude.Types.Left', E3641} -> (fun (V1384) -> {'Idris.Prelude.Types.Left', V1384} end(E3641)); {'Idris.Prelude.Types.Right', E3642} -> (fun (V1385) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1378, V1385}} end(E3642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3637, E3638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1375, [], V1324))), case V1386 of {'Idris.Prelude.Types.Left', E3643} -> (fun (V1387) -> {'Idris.Prelude.Types.Left', V1387} end(E3643)); {'Idris.Prelude.Types.Right', E3644} -> (fun (V1388) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1374, V1388}} end(E3644)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3635, E3636)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3645} -> (fun (V1389) -> begin (V1390 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1350, V1389))(V1324))), case V1390 of {'Idris.Prelude.Types.Left', E3646} -> (fun (V1391) -> {'Idris.Prelude.Types.Left', V1391} end(E3646)); {'Idris.Prelude.Types.Right', E3647} -> (fun (V1392) -> begin (V1393 = (('un--nfToCFType'(V0, V1342, V2, V1392))(V1324))), case V1393 of {'Idris.Prelude.Types.Left', E3648} -> (fun (V1394) -> {'Idris.Prelude.Types.Left', V1394} end(E3648)); {'Idris.Prelude.Types.Right', E3649} -> (fun (V1395) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1395}} end(E3649)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3647)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3628)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3618, E3619, E3620, E3621, E3622)); {'Idris.Core.Value.NType', E3650} -> (fun (V1396) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3650)); {'Idris.Core.Value.NErased', E3651, E3652} -> (fun (V1397, V1398) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3651, E3652)); _ -> begin (V1400 = begin (V1399 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1399} end), case V1400 of {'Idris.Prelude.Types.Left', E3612} -> (fun (V1401) -> {'Idris.Prelude.Types.Left', V1401} end(E3612)); {'Idris.Prelude.Types.Right', E3613} -> (fun (V1402) -> begin (V1403 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1402, {'Idris.Core.Env.Nil'}, V3, V1324))), case V1403 of {'Idris.Prelude.Types.Left', E3614} -> (fun (V1404) -> {'Idris.Prelude.Types.Left', V1404} end(E3614)); {'Idris.Prelude.Types.Right', E3615} -> (fun (V1405) -> begin (V1412 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1406) -> fun (V1407) -> fun (V1408) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1406, V1407, V1408)) end end end, fun (V1409) -> fun (V1410) -> fun (V1411) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1409, V1410, V1411)) end end end}, V1405, V1324))), case V1412 of {'Idris.Prelude.Types.Left', E3616} -> (fun (V1413) -> {'Idris.Prelude.Types.Left', V1413} end(E3616)); {'Idris.Prelude.Types.Right', E3617} -> (fun (V1414) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1414))))}, V1324)) end(E3617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3615)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3613)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3608, E3609, E3610, E3611)); _ -> fun (V1415) -> case V3 of {'Idris.Core.Value.NTCon', E3573, E3574, E3575, E3576, E3577} -> (fun (V1416, V1417, V1418, V1419, V1420) -> begin (V1422 = begin (V1421 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1421} end), case V1422 of {'Idris.Prelude.Types.Left', E3578} -> (fun (V1423) -> {'Idris.Prelude.Types.Left', V1423} end(E3578)); {'Idris.Prelude.Types.Right', E3579} -> (fun (V1424) -> begin (V1431 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1425) -> fun (V1426) -> fun (V1427) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1425, V1426, V1427)) end end end, fun (V1428) -> fun (V1429) -> fun (V1430) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1428, V1429, V1430)) end end end}, V1417, V1415))), case V1431 of {'Idris.Prelude.Types.Left', E3580} -> (fun (V1432) -> {'Idris.Prelude.Types.Left', V1432} end(E3580)); {'Idris.Prelude.Types.Right', E3581} -> (fun (V1433) -> begin (V1435 = (('un--getNArgs'(V0, V1424, V1433, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1434) -> ('Idris.Idris2.Builtin':'un--snd'(V1434)) end, V1420))))(V1415))), case V1435 of {'Idris.Prelude.Types.Left', E3582} -> (fun (V1436) -> {'Idris.Prelude.Types.Left', V1436} end(E3582)); {'Idris.Prelude.Types.Right', E3583} -> (fun (V1437) -> case V1437 of {'Idris.Compiler.CompileExpr.User', E3584, E3585} -> (fun (V1438, V1439) -> begin (V1441 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1440) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1424, V1440)) end, V1439, [], V1415))), case V1441 of {'Idris.Prelude.Types.Left', E3586} -> (fun (V1442) -> {'Idris.Prelude.Types.Left', V1442} end(E3586)); {'Idris.Prelude.Types.Right', E3587} -> (fun (V1443) -> begin (V1445 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1444) -> ('un--nfToCFType'(V0, V1416, V2, V1444)) end, V1443, [], V1415))), case V1445 of {'Idris.Prelude.Types.Left', E3588} -> (fun (V1446) -> {'Idris.Prelude.Types.Left', V1446} end(E3588)); {'Idris.Prelude.Types.Right', E3589} -> (fun (V1447) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1433, V1447}} end(E3589)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3587)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3584, E3585)); {'Idris.Compiler.CompileExpr.Struct', E3590, E3591} -> (fun (V1448, V1449) -> begin (V1460 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1450) -> fun (V1451) -> case V1450 of {'Idris.Builtin.MkPair', E3592, E3593} -> (fun (V1452, V1453) -> begin (V1454 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1424, V1453))(V1451))), case V1454 of {'Idris.Prelude.Types.Left', E3594} -> (fun (V1455) -> {'Idris.Prelude.Types.Left', V1455} end(E3594)); {'Idris.Prelude.Types.Right', E3595} -> (fun (V1456) -> begin (V1457 = (('un--nfToCFType'(V0, V1416, 1, V1456))(V1451))), case V1457 of {'Idris.Prelude.Types.Left', E3596} -> (fun (V1458) -> {'Idris.Prelude.Types.Left', V1458} end(E3596)); {'Idris.Prelude.Types.Right', E3597} -> (fun (V1459) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1452, V1459}} end(E3597)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3595)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3592, E3593)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1449, [], V1415))), case V1460 of {'Idris.Prelude.Types.Left', E3598} -> (fun (V1461) -> {'Idris.Prelude.Types.Left', V1461} end(E3598)); {'Idris.Prelude.Types.Right', E3599} -> (fun (V1462) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1448, V1462}} end(E3599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3590, E3591)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3600} -> (fun (V1463) -> begin (V1464 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1424, V1463))(V1415))), case V1464 of {'Idris.Prelude.Types.Left', E3601} -> (fun (V1465) -> {'Idris.Prelude.Types.Left', V1465} end(E3601)); {'Idris.Prelude.Types.Right', E3602} -> (fun (V1466) -> begin (V1467 = (('un--nfToCFType'(V0, V1416, V2, V1466))(V1415))), case V1467 of {'Idris.Prelude.Types.Left', E3603} -> (fun (V1468) -> {'Idris.Prelude.Types.Left', V1468} end(E3603)); {'Idris.Prelude.Types.Right', E3604} -> (fun (V1469) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1469}} end(E3604)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3581)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3579)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3573, E3574, E3575, E3576, E3577)); {'Idris.Core.Value.NType', E3605} -> (fun (V1470) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3605)); {'Idris.Core.Value.NErased', E3606, E3607} -> (fun (V1471, V1472) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3606, E3607)); _ -> begin (V1474 = begin (V1473 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1473} end), case V1474 of {'Idris.Prelude.Types.Left', E3567} -> (fun (V1475) -> {'Idris.Prelude.Types.Left', V1475} end(E3567)); {'Idris.Prelude.Types.Right', E3568} -> (fun (V1476) -> begin (V1477 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1476, {'Idris.Core.Env.Nil'}, V3, V1415))), case V1477 of {'Idris.Prelude.Types.Left', E3569} -> (fun (V1478) -> {'Idris.Prelude.Types.Left', V1478} end(E3569)); {'Idris.Prelude.Types.Right', E3570} -> (fun (V1479) -> begin (V1486 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1480) -> fun (V1481) -> fun (V1482) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1480, V1481, V1482)) end end end, fun (V1483) -> fun (V1484) -> fun (V1485) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1483, V1484, V1485)) end end end}, V1479, V1415))), case V1486 of {'Idris.Prelude.Types.Left', E3571} -> (fun (V1487) -> {'Idris.Prelude.Types.Left', V1487} end(E3571)); {'Idris.Prelude.Types.Right', E3572} -> (fun (V1488) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1488))))}, V1415)) end(E3572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3568)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V1489) -> case V3 of {'Idris.Core.Value.NBind', E3706, E3707, E3708, E3709} -> (fun (V1490, V1491, V1492, V1493) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1490, <<"Function types not allowed in a foreign struct"/utf8>>}, V1489)) end(E3706, E3707, E3708, E3709)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3671, E3672, E3673, E3674, E3675} -> (fun (V1494, V1495, V1496, V1497, V1498) -> begin (V1500 = begin (V1499 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1499} end), case V1500 of {'Idris.Prelude.Types.Left', E3676} -> (fun (V1501) -> {'Idris.Prelude.Types.Left', V1501} end(E3676)); {'Idris.Prelude.Types.Right', E3677} -> (fun (V1502) -> begin (V1509 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1503) -> fun (V1504) -> fun (V1505) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1503, V1504, V1505)) end end end, fun (V1506) -> fun (V1507) -> fun (V1508) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1506, V1507, V1508)) end end end}, V1495, V1489))), case V1509 of {'Idris.Prelude.Types.Left', E3678} -> (fun (V1510) -> {'Idris.Prelude.Types.Left', V1510} end(E3678)); {'Idris.Prelude.Types.Right', E3679} -> (fun (V1511) -> begin (V1513 = (('un--getNArgs'(V0, V1502, V1511, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1512) -> ('Idris.Idris2.Builtin':'un--snd'(V1512)) end, V1498))))(V1489))), case V1513 of {'Idris.Prelude.Types.Left', E3680} -> (fun (V1514) -> {'Idris.Prelude.Types.Left', V1514} end(E3680)); {'Idris.Prelude.Types.Right', E3681} -> (fun (V1515) -> case V1515 of {'Idris.Compiler.CompileExpr.User', E3682, E3683} -> (fun (V1516, V1517) -> begin (V1519 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1518) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1502, V1518)) end, V1517, [], V1489))), case V1519 of {'Idris.Prelude.Types.Left', E3684} -> (fun (V1520) -> {'Idris.Prelude.Types.Left', V1520} end(E3684)); {'Idris.Prelude.Types.Right', E3685} -> (fun (V1521) -> begin (V1523 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1522) -> ('un--nfToCFType'(V0, V1494, V2, V1522)) end, V1521, [], V1489))), case V1523 of {'Idris.Prelude.Types.Left', E3686} -> (fun (V1524) -> {'Idris.Prelude.Types.Left', V1524} end(E3686)); {'Idris.Prelude.Types.Right', E3687} -> (fun (V1525) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1511, V1525}} end(E3687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3682, E3683)); {'Idris.Compiler.CompileExpr.Struct', E3688, E3689} -> (fun (V1526, V1527) -> begin (V1538 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1528) -> fun (V1529) -> case V1528 of {'Idris.Builtin.MkPair', E3690, E3691} -> (fun (V1530, V1531) -> begin (V1532 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1502, V1531))(V1529))), case V1532 of {'Idris.Prelude.Types.Left', E3692} -> (fun (V1533) -> {'Idris.Prelude.Types.Left', V1533} end(E3692)); {'Idris.Prelude.Types.Right', E3693} -> (fun (V1534) -> begin (V1535 = (('un--nfToCFType'(V0, V1494, 1, V1534))(V1529))), case V1535 of {'Idris.Prelude.Types.Left', E3694} -> (fun (V1536) -> {'Idris.Prelude.Types.Left', V1536} end(E3694)); {'Idris.Prelude.Types.Right', E3695} -> (fun (V1537) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1530, V1537}} end(E3695)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3690, E3691)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1527, [], V1489))), case V1538 of {'Idris.Prelude.Types.Left', E3696} -> (fun (V1539) -> {'Idris.Prelude.Types.Left', V1539} end(E3696)); {'Idris.Prelude.Types.Right', E3697} -> (fun (V1540) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1526, V1540}} end(E3697)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3688, E3689)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3698} -> (fun (V1541) -> begin (V1542 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1502, V1541))(V1489))), case V1542 of {'Idris.Prelude.Types.Left', E3699} -> (fun (V1543) -> {'Idris.Prelude.Types.Left', V1543} end(E3699)); {'Idris.Prelude.Types.Right', E3700} -> (fun (V1544) -> begin (V1545 = (('un--nfToCFType'(V0, V1494, V2, V1544))(V1489))), case V1545 of {'Idris.Prelude.Types.Left', E3701} -> (fun (V1546) -> {'Idris.Prelude.Types.Left', V1546} end(E3701)); {'Idris.Prelude.Types.Right', E3702} -> (fun (V1547) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1547}} end(E3702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3681)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3671, E3672, E3673, E3674, E3675)); {'Idris.Core.Value.NType', E3703} -> (fun (V1548) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3703)); {'Idris.Core.Value.NErased', E3704, E3705} -> (fun (V1549, V1550) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3704, E3705)); _ -> begin (V1552 = begin (V1551 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1551} end), case V1552 of {'Idris.Prelude.Types.Left', E3665} -> (fun (V1553) -> {'Idris.Prelude.Types.Left', V1553} end(E3665)); {'Idris.Prelude.Types.Right', E3666} -> (fun (V1554) -> begin (V1555 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1554, {'Idris.Core.Env.Nil'}, V3, V1489))), case V1555 of {'Idris.Prelude.Types.Left', E3667} -> (fun (V1556) -> {'Idris.Prelude.Types.Left', V1556} end(E3667)); {'Idris.Prelude.Types.Right', E3668} -> (fun (V1557) -> begin (V1564 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1558) -> fun (V1559) -> fun (V1560) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1558, V1559, V1560)) end end end, fun (V1561) -> fun (V1562) -> fun (V1563) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1561, V1562, V1563)) end end end}, V1557, V1489))), case V1564 of {'Idris.Prelude.Types.Left', E3669} -> (fun (V1565) -> {'Idris.Prelude.Types.Left', V1565} end(E3669)); {'Idris.Prelude.Types.Right', E3670} -> (fun (V1566) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1566))))}, V1489)) end(E3670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3666)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V1567) -> case V3 of {'Idris.Core.Value.NTCon', E3532, E3533, E3534, E3535, E3536} -> (fun (V1568, V1569, V1570, V1571, V1572) -> begin (V1574 = begin (V1573 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1573} end), case V1574 of {'Idris.Prelude.Types.Left', E3537} -> (fun (V1575) -> {'Idris.Prelude.Types.Left', V1575} end(E3537)); {'Idris.Prelude.Types.Right', E3538} -> (fun (V1576) -> begin (V1583 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1577) -> fun (V1578) -> fun (V1579) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1577, V1578, V1579)) end end end, fun (V1580) -> fun (V1581) -> fun (V1582) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1580, V1581, V1582)) end end end}, V1569, V1567))), case V1583 of {'Idris.Prelude.Types.Left', E3539} -> (fun (V1584) -> {'Idris.Prelude.Types.Left', V1584} end(E3539)); {'Idris.Prelude.Types.Right', E3540} -> (fun (V1585) -> begin (V1587 = (('un--getNArgs'(V0, V1576, V1585, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1586) -> ('Idris.Idris2.Builtin':'un--snd'(V1586)) end, V1572))))(V1567))), case V1587 of {'Idris.Prelude.Types.Left', E3541} -> (fun (V1588) -> {'Idris.Prelude.Types.Left', V1588} end(E3541)); {'Idris.Prelude.Types.Right', E3542} -> (fun (V1589) -> case V1589 of {'Idris.Compiler.CompileExpr.User', E3543, E3544} -> (fun (V1590, V1591) -> begin (V1593 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1592) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1576, V1592)) end, V1591, [], V1567))), case V1593 of {'Idris.Prelude.Types.Left', E3545} -> (fun (V1594) -> {'Idris.Prelude.Types.Left', V1594} end(E3545)); {'Idris.Prelude.Types.Right', E3546} -> (fun (V1595) -> begin (V1597 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1596) -> ('un--nfToCFType'(V0, V1568, V2, V1596)) end, V1595, [], V1567))), case V1597 of {'Idris.Prelude.Types.Left', E3547} -> (fun (V1598) -> {'Idris.Prelude.Types.Left', V1598} end(E3547)); {'Idris.Prelude.Types.Right', E3548} -> (fun (V1599) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1585, V1599}} end(E3548)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3543, E3544)); {'Idris.Compiler.CompileExpr.Struct', E3549, E3550} -> (fun (V1600, V1601) -> begin (V1612 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1602) -> fun (V1603) -> case V1602 of {'Idris.Builtin.MkPair', E3551, E3552} -> (fun (V1604, V1605) -> begin (V1606 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1576, V1605))(V1603))), case V1606 of {'Idris.Prelude.Types.Left', E3553} -> (fun (V1607) -> {'Idris.Prelude.Types.Left', V1607} end(E3553)); {'Idris.Prelude.Types.Right', E3554} -> (fun (V1608) -> begin (V1609 = (('un--nfToCFType'(V0, V1568, 1, V1608))(V1603))), case V1609 of {'Idris.Prelude.Types.Left', E3555} -> (fun (V1610) -> {'Idris.Prelude.Types.Left', V1610} end(E3555)); {'Idris.Prelude.Types.Right', E3556} -> (fun (V1611) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1604, V1611}} end(E3556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3551, E3552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1601, [], V1567))), case V1612 of {'Idris.Prelude.Types.Left', E3557} -> (fun (V1613) -> {'Idris.Prelude.Types.Left', V1613} end(E3557)); {'Idris.Prelude.Types.Right', E3558} -> (fun (V1614) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1600, V1614}} end(E3558)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3549, E3550)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3559} -> (fun (V1615) -> begin (V1616 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1576, V1615))(V1567))), case V1616 of {'Idris.Prelude.Types.Left', E3560} -> (fun (V1617) -> {'Idris.Prelude.Types.Left', V1617} end(E3560)); {'Idris.Prelude.Types.Right', E3561} -> (fun (V1618) -> begin (V1619 = (('un--nfToCFType'(V0, V1568, V2, V1618))(V1567))), case V1619 of {'Idris.Prelude.Types.Left', E3562} -> (fun (V1620) -> {'Idris.Prelude.Types.Left', V1620} end(E3562)); {'Idris.Prelude.Types.Right', E3563} -> (fun (V1621) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1621}} end(E3563)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3561)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3559)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3540)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3538)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3532, E3533, E3534, E3535, E3536)); {'Idris.Core.Value.NType', E3564} -> (fun (V1622) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3564)); {'Idris.Core.Value.NErased', E3565, E3566} -> (fun (V1623, V1624) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3565, E3566)); _ -> begin (V1626 = begin (V1625 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1625} end), case V1626 of {'Idris.Prelude.Types.Left', E3526} -> (fun (V1627) -> {'Idris.Prelude.Types.Left', V1627} end(E3526)); {'Idris.Prelude.Types.Right', E3527} -> (fun (V1628) -> begin (V1629 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1628, {'Idris.Core.Env.Nil'}, V3, V1567))), case V1629 of {'Idris.Prelude.Types.Left', E3528} -> (fun (V1630) -> {'Idris.Prelude.Types.Left', V1630} end(E3528)); {'Idris.Prelude.Types.Right', E3529} -> (fun (V1631) -> begin (V1638 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1632) -> fun (V1633) -> fun (V1634) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1632, V1633, V1634)) end end end, fun (V1635) -> fun (V1636) -> fun (V1637) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1635, V1636, V1637)) end end end}, V1631, V1567))), case V1638 of {'Idris.Prelude.Types.Left', E3530} -> (fun (V1639) -> {'Idris.Prelude.Types.Left', V1639} end(E3530)); {'Idris.Prelude.Types.Right', E3531} -> (fun (V1640) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1640))))}, V1567)) end(E3531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3527)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E3524, E3525)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3422, E3423, E3424, E3425} -> (fun (V1641, V1642, V1643, V1644) -> fun (V1645) -> case V1643 of {'Idris.Core.TT.Pi', E3467, E3468, E3469, E3470} -> (fun (V1646, V1647, V1648, V1649) -> begin (V1651 = begin (V1650 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1650} end), case V1651 of {'Idris.Prelude.Types.Left', E3471} -> (fun (V1652) -> {'Idris.Prelude.Types.Left', V1652} end(E3471)); {'Idris.Prelude.Types.Right', E3472} -> (fun (V1653) -> begin (V1654 = (('un--nfToCFType'(V0, V1641, 0, V1649))(V1645))), case V1654 of {'Idris.Prelude.Types.Left', E3473} -> (fun (V1655) -> {'Idris.Prelude.Types.Left', V1655} end(E3473)); {'Idris.Prelude.Types.Right', E3474} -> (fun (V1656) -> begin (V1657 = (((V1644(V1653))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1641, 0}))))(V1645))), case V1657 of {'Idris.Prelude.Types.Left', E3475} -> (fun (V1658) -> {'Idris.Prelude.Types.Left', V1658} end(E3475)); {'Idris.Prelude.Types.Right', E3476} -> (fun (V1659) -> begin (V1660 = (('un--nfToCFType'(V0, V1641, 0, V1659))(V1645))), case V1660 of {'Idris.Prelude.Types.Left', E3477} -> (fun (V1661) -> {'Idris.Prelude.Types.Left', V1661} end(E3477)); {'Idris.Prelude.Types.Right', E3478} -> (fun (V1662) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1656, V1662}} end(E3478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3474)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3467, E3468, E3469, E3470)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3432, E3433, E3434, E3435, E3436} -> (fun (V1663, V1664, V1665, V1666, V1667) -> begin (V1669 = begin (V1668 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1668} end), case V1669 of {'Idris.Prelude.Types.Left', E3437} -> (fun (V1670) -> {'Idris.Prelude.Types.Left', V1670} end(E3437)); {'Idris.Prelude.Types.Right', E3438} -> (fun (V1671) -> begin (V1678 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1672) -> fun (V1673) -> fun (V1674) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1672, V1673, V1674)) end end end, fun (V1675) -> fun (V1676) -> fun (V1677) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1675, V1676, V1677)) end end end}, V1664, V1645))), case V1678 of {'Idris.Prelude.Types.Left', E3439} -> (fun (V1679) -> {'Idris.Prelude.Types.Left', V1679} end(E3439)); {'Idris.Prelude.Types.Right', E3440} -> (fun (V1680) -> begin (V1682 = (('un--getNArgs'(V0, V1671, V1680, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1681) -> ('Idris.Idris2.Builtin':'un--snd'(V1681)) end, V1667))))(V1645))), case V1682 of {'Idris.Prelude.Types.Left', E3441} -> (fun (V1683) -> {'Idris.Prelude.Types.Left', V1683} end(E3441)); {'Idris.Prelude.Types.Right', E3442} -> (fun (V1684) -> case V1684 of {'Idris.Compiler.CompileExpr.User', E3443, E3444} -> (fun (V1685, V1686) -> begin (V1688 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1687) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1671, V1687)) end, V1686, [], V1645))), case V1688 of {'Idris.Prelude.Types.Left', E3445} -> (fun (V1689) -> {'Idris.Prelude.Types.Left', V1689} end(E3445)); {'Idris.Prelude.Types.Right', E3446} -> (fun (V1690) -> begin (V1692 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1691) -> ('un--nfToCFType'(V0, V1663, V2, V1691)) end, V1690, [], V1645))), case V1692 of {'Idris.Prelude.Types.Left', E3447} -> (fun (V1693) -> {'Idris.Prelude.Types.Left', V1693} end(E3447)); {'Idris.Prelude.Types.Right', E3448} -> (fun (V1694) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1680, V1694}} end(E3448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3443, E3444)); {'Idris.Compiler.CompileExpr.Struct', E3449, E3450} -> (fun (V1695, V1696) -> begin (V1707 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1697) -> fun (V1698) -> case V1697 of {'Idris.Builtin.MkPair', E3451, E3452} -> (fun (V1699, V1700) -> begin (V1701 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1671, V1700))(V1698))), case V1701 of {'Idris.Prelude.Types.Left', E3453} -> (fun (V1702) -> {'Idris.Prelude.Types.Left', V1702} end(E3453)); {'Idris.Prelude.Types.Right', E3454} -> (fun (V1703) -> begin (V1704 = (('un--nfToCFType'(V0, V1663, 1, V1703))(V1698))), case V1704 of {'Idris.Prelude.Types.Left', E3455} -> (fun (V1705) -> {'Idris.Prelude.Types.Left', V1705} end(E3455)); {'Idris.Prelude.Types.Right', E3456} -> (fun (V1706) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1699, V1706}} end(E3456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3451, E3452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1696, [], V1645))), case V1707 of {'Idris.Prelude.Types.Left', E3457} -> (fun (V1708) -> {'Idris.Prelude.Types.Left', V1708} end(E3457)); {'Idris.Prelude.Types.Right', E3458} -> (fun (V1709) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1695, V1709}} end(E3458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3449, E3450)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3459} -> (fun (V1710) -> begin (V1711 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1671, V1710))(V1645))), case V1711 of {'Idris.Prelude.Types.Left', E3460} -> (fun (V1712) -> {'Idris.Prelude.Types.Left', V1712} end(E3460)); {'Idris.Prelude.Types.Right', E3461} -> (fun (V1713) -> begin (V1714 = (('un--nfToCFType'(V0, V1663, V2, V1713))(V1645))), case V1714 of {'Idris.Prelude.Types.Left', E3462} -> (fun (V1715) -> {'Idris.Prelude.Types.Left', V1715} end(E3462)); {'Idris.Prelude.Types.Right', E3463} -> (fun (V1716) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1716}} end(E3463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3461)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3459)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3432, E3433, E3434, E3435, E3436)); {'Idris.Core.Value.NType', E3464} -> (fun (V1717) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3464)); {'Idris.Core.Value.NErased', E3465, E3466} -> (fun (V1718, V1719) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3465, E3466)); _ -> begin (V1721 = begin (V1720 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1720} end), case V1721 of {'Idris.Prelude.Types.Left', E3426} -> (fun (V1722) -> {'Idris.Prelude.Types.Left', V1722} end(E3426)); {'Idris.Prelude.Types.Right', E3427} -> (fun (V1723) -> begin (V1724 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1723, {'Idris.Core.Env.Nil'}, V3, V1645))), case V1724 of {'Idris.Prelude.Types.Left', E3428} -> (fun (V1725) -> {'Idris.Prelude.Types.Left', V1725} end(E3428)); {'Idris.Prelude.Types.Right', E3429} -> (fun (V1726) -> begin (V1733 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1727) -> fun (V1728) -> fun (V1729) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1727, V1728, V1729)) end end end, fun (V1730) -> fun (V1731) -> fun (V1732) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1730, V1731, V1732)) end end end}, V1726, V1645))), case V1733 of {'Idris.Prelude.Types.Left', E3430} -> (fun (V1734) -> {'Idris.Prelude.Types.Left', V1734} end(E3430)); {'Idris.Prelude.Types.Right', E3431} -> (fun (V1735) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1735))))}, V1645)) end(E3431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3422, E3423, E3424, E3425)); _ -> fun (V1736) -> case V3 of {'Idris.Core.Value.NTCon', E3387, E3388, E3389, E3390, E3391} -> (fun (V1737, V1738, V1739, V1740, V1741) -> begin (V1743 = begin (V1742 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1742} end), case V1743 of {'Idris.Prelude.Types.Left', E3392} -> (fun (V1744) -> {'Idris.Prelude.Types.Left', V1744} end(E3392)); {'Idris.Prelude.Types.Right', E3393} -> (fun (V1745) -> begin (V1752 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1746) -> fun (V1747) -> fun (V1748) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1746, V1747, V1748)) end end end, fun (V1749) -> fun (V1750) -> fun (V1751) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1749, V1750, V1751)) end end end}, V1738, V1736))), case V1752 of {'Idris.Prelude.Types.Left', E3394} -> (fun (V1753) -> {'Idris.Prelude.Types.Left', V1753} end(E3394)); {'Idris.Prelude.Types.Right', E3395} -> (fun (V1754) -> begin (V1756 = (('un--getNArgs'(V0, V1745, V1754, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1755) -> ('Idris.Idris2.Builtin':'un--snd'(V1755)) end, V1741))))(V1736))), case V1756 of {'Idris.Prelude.Types.Left', E3396} -> (fun (V1757) -> {'Idris.Prelude.Types.Left', V1757} end(E3396)); {'Idris.Prelude.Types.Right', E3397} -> (fun (V1758) -> case V1758 of {'Idris.Compiler.CompileExpr.User', E3398, E3399} -> (fun (V1759, V1760) -> begin (V1762 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1761) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1745, V1761)) end, V1760, [], V1736))), case V1762 of {'Idris.Prelude.Types.Left', E3400} -> (fun (V1763) -> {'Idris.Prelude.Types.Left', V1763} end(E3400)); {'Idris.Prelude.Types.Right', E3401} -> (fun (V1764) -> begin (V1766 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1765) -> ('un--nfToCFType'(V0, V1737, V2, V1765)) end, V1764, [], V1736))), case V1766 of {'Idris.Prelude.Types.Left', E3402} -> (fun (V1767) -> {'Idris.Prelude.Types.Left', V1767} end(E3402)); {'Idris.Prelude.Types.Right', E3403} -> (fun (V1768) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1754, V1768}} end(E3403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3398, E3399)); {'Idris.Compiler.CompileExpr.Struct', E3404, E3405} -> (fun (V1769, V1770) -> begin (V1781 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1771) -> fun (V1772) -> case V1771 of {'Idris.Builtin.MkPair', E3406, E3407} -> (fun (V1773, V1774) -> begin (V1775 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1745, V1774))(V1772))), case V1775 of {'Idris.Prelude.Types.Left', E3408} -> (fun (V1776) -> {'Idris.Prelude.Types.Left', V1776} end(E3408)); {'Idris.Prelude.Types.Right', E3409} -> (fun (V1777) -> begin (V1778 = (('un--nfToCFType'(V0, V1737, 1, V1777))(V1772))), case V1778 of {'Idris.Prelude.Types.Left', E3410} -> (fun (V1779) -> {'Idris.Prelude.Types.Left', V1779} end(E3410)); {'Idris.Prelude.Types.Right', E3411} -> (fun (V1780) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1773, V1780}} end(E3411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3406, E3407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1770, [], V1736))), case V1781 of {'Idris.Prelude.Types.Left', E3412} -> (fun (V1782) -> {'Idris.Prelude.Types.Left', V1782} end(E3412)); {'Idris.Prelude.Types.Right', E3413} -> (fun (V1783) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1769, V1783}} end(E3413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3404, E3405)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3414} -> (fun (V1784) -> begin (V1785 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1745, V1784))(V1736))), case V1785 of {'Idris.Prelude.Types.Left', E3415} -> (fun (V1786) -> {'Idris.Prelude.Types.Left', V1786} end(E3415)); {'Idris.Prelude.Types.Right', E3416} -> (fun (V1787) -> begin (V1788 = (('un--nfToCFType'(V0, V1737, V2, V1787))(V1736))), case V1788 of {'Idris.Prelude.Types.Left', E3417} -> (fun (V1789) -> {'Idris.Prelude.Types.Left', V1789} end(E3417)); {'Idris.Prelude.Types.Right', E3418} -> (fun (V1790) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1790}} end(E3418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3393)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3387, E3388, E3389, E3390, E3391)); {'Idris.Core.Value.NType', E3419} -> (fun (V1791) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3419)); {'Idris.Core.Value.NErased', E3420, E3421} -> (fun (V1792, V1793) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3420, E3421)); _ -> begin (V1795 = begin (V1794 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1794} end), case V1795 of {'Idris.Prelude.Types.Left', E3381} -> (fun (V1796) -> {'Idris.Prelude.Types.Left', V1796} end(E3381)); {'Idris.Prelude.Types.Right', E3382} -> (fun (V1797) -> begin (V1798 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1797, {'Idris.Core.Env.Nil'}, V3, V1736))), case V1798 of {'Idris.Prelude.Types.Left', E3383} -> (fun (V1799) -> {'Idris.Prelude.Types.Left', V1799} end(E3383)); {'Idris.Prelude.Types.Right', E3384} -> (fun (V1800) -> begin (V1807 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1801) -> fun (V1802) -> fun (V1803) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1801, V1802, V1803)) end end end, fun (V1804) -> fun (V1805) -> fun (V1806) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1804, V1805, V1806)) end end end}, V1800, V1736))), case V1807 of {'Idris.Prelude.Types.Left', E3385} -> (fun (V1808) -> {'Idris.Prelude.Types.Left', V1808} end(E3385)); {'Idris.Prelude.Types.Right', E3386} -> (fun (V1809) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1809))))}, V1736)) end(E3386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V1810) -> case V3 of {'Idris.Core.Value.NBind', E3520, E3521, E3522, E3523} -> (fun (V1811, V1812, V1813, V1814) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1811, <<"Function types not allowed in a foreign struct"/utf8>>}, V1810)) end(E3520, E3521, E3522, E3523)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3485, E3486, E3487, E3488, E3489} -> (fun (V1815, V1816, V1817, V1818, V1819) -> begin (V1821 = begin (V1820 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1820} end), case V1821 of {'Idris.Prelude.Types.Left', E3490} -> (fun (V1822) -> {'Idris.Prelude.Types.Left', V1822} end(E3490)); {'Idris.Prelude.Types.Right', E3491} -> (fun (V1823) -> begin (V1830 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1824) -> fun (V1825) -> fun (V1826) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1824, V1825, V1826)) end end end, fun (V1827) -> fun (V1828) -> fun (V1829) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1827, V1828, V1829)) end end end}, V1816, V1810))), case V1830 of {'Idris.Prelude.Types.Left', E3492} -> (fun (V1831) -> {'Idris.Prelude.Types.Left', V1831} end(E3492)); {'Idris.Prelude.Types.Right', E3493} -> (fun (V1832) -> begin (V1834 = (('un--getNArgs'(V0, V1823, V1832, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1833) -> ('Idris.Idris2.Builtin':'un--snd'(V1833)) end, V1819))))(V1810))), case V1834 of {'Idris.Prelude.Types.Left', E3494} -> (fun (V1835) -> {'Idris.Prelude.Types.Left', V1835} end(E3494)); {'Idris.Prelude.Types.Right', E3495} -> (fun (V1836) -> case V1836 of {'Idris.Compiler.CompileExpr.User', E3496, E3497} -> (fun (V1837, V1838) -> begin (V1840 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1839) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1823, V1839)) end, V1838, [], V1810))), case V1840 of {'Idris.Prelude.Types.Left', E3498} -> (fun (V1841) -> {'Idris.Prelude.Types.Left', V1841} end(E3498)); {'Idris.Prelude.Types.Right', E3499} -> (fun (V1842) -> begin (V1844 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1843) -> ('un--nfToCFType'(V0, V1815, V2, V1843)) end, V1842, [], V1810))), case V1844 of {'Idris.Prelude.Types.Left', E3500} -> (fun (V1845) -> {'Idris.Prelude.Types.Left', V1845} end(E3500)); {'Idris.Prelude.Types.Right', E3501} -> (fun (V1846) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1832, V1846}} end(E3501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3496, E3497)); {'Idris.Compiler.CompileExpr.Struct', E3502, E3503} -> (fun (V1847, V1848) -> begin (V1859 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1849) -> fun (V1850) -> case V1849 of {'Idris.Builtin.MkPair', E3504, E3505} -> (fun (V1851, V1852) -> begin (V1853 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1823, V1852))(V1850))), case V1853 of {'Idris.Prelude.Types.Left', E3506} -> (fun (V1854) -> {'Idris.Prelude.Types.Left', V1854} end(E3506)); {'Idris.Prelude.Types.Right', E3507} -> (fun (V1855) -> begin (V1856 = (('un--nfToCFType'(V0, V1815, 1, V1855))(V1850))), case V1856 of {'Idris.Prelude.Types.Left', E3508} -> (fun (V1857) -> {'Idris.Prelude.Types.Left', V1857} end(E3508)); {'Idris.Prelude.Types.Right', E3509} -> (fun (V1858) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1851, V1858}} end(E3509)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3507)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3504, E3505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1848, [], V1810))), case V1859 of {'Idris.Prelude.Types.Left', E3510} -> (fun (V1860) -> {'Idris.Prelude.Types.Left', V1860} end(E3510)); {'Idris.Prelude.Types.Right', E3511} -> (fun (V1861) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1847, V1861}} end(E3511)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3502, E3503)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3512} -> (fun (V1862) -> begin (V1863 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1823, V1862))(V1810))), case V1863 of {'Idris.Prelude.Types.Left', E3513} -> (fun (V1864) -> {'Idris.Prelude.Types.Left', V1864} end(E3513)); {'Idris.Prelude.Types.Right', E3514} -> (fun (V1865) -> begin (V1866 = (('un--nfToCFType'(V0, V1815, V2, V1865))(V1810))), case V1866 of {'Idris.Prelude.Types.Left', E3515} -> (fun (V1867) -> {'Idris.Prelude.Types.Left', V1867} end(E3515)); {'Idris.Prelude.Types.Right', E3516} -> (fun (V1868) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1868}} end(E3516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3495)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3491)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3485, E3486, E3487, E3488, E3489)); {'Idris.Core.Value.NType', E3517} -> (fun (V1869) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3517)); {'Idris.Core.Value.NErased', E3518, E3519} -> (fun (V1870, V1871) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3518, E3519)); _ -> begin (V1873 = begin (V1872 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1872} end), case V1873 of {'Idris.Prelude.Types.Left', E3479} -> (fun (V1874) -> {'Idris.Prelude.Types.Left', V1874} end(E3479)); {'Idris.Prelude.Types.Right', E3480} -> (fun (V1875) -> begin (V1876 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1875, {'Idris.Core.Env.Nil'}, V3, V1810))), case V1876 of {'Idris.Prelude.Types.Left', E3481} -> (fun (V1877) -> {'Idris.Prelude.Types.Left', V1877} end(E3481)); {'Idris.Prelude.Types.Right', E3482} -> (fun (V1878) -> begin (V1885 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1879) -> fun (V1880) -> fun (V1881) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1879, V1880, V1881)) end end end, fun (V1882) -> fun (V1883) -> fun (V1884) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1882, V1883, V1884)) end end end}, V1878, V1810))), case V1885 of {'Idris.Prelude.Types.Left', E3483} -> (fun (V1886) -> {'Idris.Prelude.Types.Left', V1886} end(E3483)); {'Idris.Prelude.Types.Right', E3484} -> (fun (V1887) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1887))))}, V1810)) end(E3484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V1888) -> case V3 of {'Idris.Core.Value.NTCon', E3346, E3347, E3348, E3349, E3350} -> (fun (V1889, V1890, V1891, V1892, V1893) -> begin (V1895 = begin (V1894 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1894} end), case V1895 of {'Idris.Prelude.Types.Left', E3351} -> (fun (V1896) -> {'Idris.Prelude.Types.Left', V1896} end(E3351)); {'Idris.Prelude.Types.Right', E3352} -> (fun (V1897) -> begin (V1904 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1898) -> fun (V1899) -> fun (V1900) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1898, V1899, V1900)) end end end, fun (V1901) -> fun (V1902) -> fun (V1903) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1901, V1902, V1903)) end end end}, V1890, V1888))), case V1904 of {'Idris.Prelude.Types.Left', E3353} -> (fun (V1905) -> {'Idris.Prelude.Types.Left', V1905} end(E3353)); {'Idris.Prelude.Types.Right', E3354} -> (fun (V1906) -> begin (V1908 = (('un--getNArgs'(V0, V1897, V1906, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1907) -> ('Idris.Idris2.Builtin':'un--snd'(V1907)) end, V1893))))(V1888))), case V1908 of {'Idris.Prelude.Types.Left', E3355} -> (fun (V1909) -> {'Idris.Prelude.Types.Left', V1909} end(E3355)); {'Idris.Prelude.Types.Right', E3356} -> (fun (V1910) -> case V1910 of {'Idris.Compiler.CompileExpr.User', E3357, E3358} -> (fun (V1911, V1912) -> begin (V1914 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1913) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1897, V1913)) end, V1912, [], V1888))), case V1914 of {'Idris.Prelude.Types.Left', E3359} -> (fun (V1915) -> {'Idris.Prelude.Types.Left', V1915} end(E3359)); {'Idris.Prelude.Types.Right', E3360} -> (fun (V1916) -> begin (V1918 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1917) -> ('un--nfToCFType'(V0, V1889, V2, V1917)) end, V1916, [], V1888))), case V1918 of {'Idris.Prelude.Types.Left', E3361} -> (fun (V1919) -> {'Idris.Prelude.Types.Left', V1919} end(E3361)); {'Idris.Prelude.Types.Right', E3362} -> (fun (V1920) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1906, V1920}} end(E3362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3357, E3358)); {'Idris.Compiler.CompileExpr.Struct', E3363, E3364} -> (fun (V1921, V1922) -> begin (V1933 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1923) -> fun (V1924) -> case V1923 of {'Idris.Builtin.MkPair', E3365, E3366} -> (fun (V1925, V1926) -> begin (V1927 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1897, V1926))(V1924))), case V1927 of {'Idris.Prelude.Types.Left', E3367} -> (fun (V1928) -> {'Idris.Prelude.Types.Left', V1928} end(E3367)); {'Idris.Prelude.Types.Right', E3368} -> (fun (V1929) -> begin (V1930 = (('un--nfToCFType'(V0, V1889, 1, V1929))(V1924))), case V1930 of {'Idris.Prelude.Types.Left', E3369} -> (fun (V1931) -> {'Idris.Prelude.Types.Left', V1931} end(E3369)); {'Idris.Prelude.Types.Right', E3370} -> (fun (V1932) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1925, V1932}} end(E3370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3365, E3366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1922, [], V1888))), case V1933 of {'Idris.Prelude.Types.Left', E3371} -> (fun (V1934) -> {'Idris.Prelude.Types.Left', V1934} end(E3371)); {'Idris.Prelude.Types.Right', E3372} -> (fun (V1935) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1921, V1935}} end(E3372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3363, E3364)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3373} -> (fun (V1936) -> begin (V1937 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1897, V1936))(V1888))), case V1937 of {'Idris.Prelude.Types.Left', E3374} -> (fun (V1938) -> {'Idris.Prelude.Types.Left', V1938} end(E3374)); {'Idris.Prelude.Types.Right', E3375} -> (fun (V1939) -> begin (V1940 = (('un--nfToCFType'(V0, V1889, V2, V1939))(V1888))), case V1940 of {'Idris.Prelude.Types.Left', E3376} -> (fun (V1941) -> {'Idris.Prelude.Types.Left', V1941} end(E3376)); {'Idris.Prelude.Types.Right', E3377} -> (fun (V1942) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1942}} end(E3377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3346, E3347, E3348, E3349, E3350)); {'Idris.Core.Value.NType', E3378} -> (fun (V1943) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3378)); {'Idris.Core.Value.NErased', E3379, E3380} -> (fun (V1944, V1945) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3379, E3380)); _ -> begin (V1947 = begin (V1946 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1946} end), case V1947 of {'Idris.Prelude.Types.Left', E3340} -> (fun (V1948) -> {'Idris.Prelude.Types.Left', V1948} end(E3340)); {'Idris.Prelude.Types.Right', E3341} -> (fun (V1949) -> begin (V1950 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V1949, {'Idris.Core.Env.Nil'}, V3, V1888))), case V1950 of {'Idris.Prelude.Types.Left', E3342} -> (fun (V1951) -> {'Idris.Prelude.Types.Left', V1951} end(E3342)); {'Idris.Prelude.Types.Right', E3343} -> (fun (V1952) -> begin (V1959 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1953) -> fun (V1954) -> fun (V1955) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1953, V1954, V1955)) end end end, fun (V1956) -> fun (V1957) -> fun (V1958) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1956, V1957, V1958)) end end end}, V1952, V1888))), case V1959 of {'Idris.Prelude.Types.Left', E3344} -> (fun (V1960) -> {'Idris.Prelude.Types.Left', V1960} end(E3344)); {'Idris.Prelude.Types.Right', E3345} -> (fun (V1961) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1961))))}, V1888)) end(E3345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E3338, E3339)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E3152, E3153} -> (fun (V1962, V1963) -> case V1963 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V1964) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V1965) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V1966) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3236, E3237, E3238, E3239} -> (fun (V1967, V1968, V1969, V1970) -> fun (V1971) -> case V1969 of {'Idris.Core.TT.Pi', E3281, E3282, E3283, E3284} -> (fun (V1972, V1973, V1974, V1975) -> begin (V1977 = begin (V1976 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1976} end), case V1977 of {'Idris.Prelude.Types.Left', E3285} -> (fun (V1978) -> {'Idris.Prelude.Types.Left', V1978} end(E3285)); {'Idris.Prelude.Types.Right', E3286} -> (fun (V1979) -> begin (V1980 = (('un--nfToCFType'(V0, V1967, 0, V1975))(V1971))), case V1980 of {'Idris.Prelude.Types.Left', E3287} -> (fun (V1981) -> {'Idris.Prelude.Types.Left', V1981} end(E3287)); {'Idris.Prelude.Types.Right', E3288} -> (fun (V1982) -> begin (V1983 = (((V1970(V1979))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1967, 0}))))(V1971))), case V1983 of {'Idris.Prelude.Types.Left', E3289} -> (fun (V1984) -> {'Idris.Prelude.Types.Left', V1984} end(E3289)); {'Idris.Prelude.Types.Right', E3290} -> (fun (V1985) -> begin (V1986 = (('un--nfToCFType'(V0, V1967, 0, V1985))(V1971))), case V1986 of {'Idris.Prelude.Types.Left', E3291} -> (fun (V1987) -> {'Idris.Prelude.Types.Left', V1987} end(E3291)); {'Idris.Prelude.Types.Right', E3292} -> (fun (V1988) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1982, V1988}} end(E3292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3281, E3282, E3283, E3284)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3246, E3247, E3248, E3249, E3250} -> (fun (V1989, V1990, V1991, V1992, V1993) -> begin (V1995 = begin (V1994 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1994} end), case V1995 of {'Idris.Prelude.Types.Left', E3251} -> (fun (V1996) -> {'Idris.Prelude.Types.Left', V1996} end(E3251)); {'Idris.Prelude.Types.Right', E3252} -> (fun (V1997) -> begin (V2004 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1998) -> fun (V1999) -> fun (V2000) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1998, V1999, V2000)) end end end, fun (V2001) -> fun (V2002) -> fun (V2003) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2001, V2002, V2003)) end end end}, V1990, V1971))), case V2004 of {'Idris.Prelude.Types.Left', E3253} -> (fun (V2005) -> {'Idris.Prelude.Types.Left', V2005} end(E3253)); {'Idris.Prelude.Types.Right', E3254} -> (fun (V2006) -> begin (V2008 = (('un--getNArgs'(V0, V1997, V2006, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2007) -> ('Idris.Idris2.Builtin':'un--snd'(V2007)) end, V1993))))(V1971))), case V2008 of {'Idris.Prelude.Types.Left', E3255} -> (fun (V2009) -> {'Idris.Prelude.Types.Left', V2009} end(E3255)); {'Idris.Prelude.Types.Right', E3256} -> (fun (V2010) -> case V2010 of {'Idris.Compiler.CompileExpr.User', E3257, E3258} -> (fun (V2011, V2012) -> begin (V2014 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2013) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1997, V2013)) end, V2012, [], V1971))), case V2014 of {'Idris.Prelude.Types.Left', E3259} -> (fun (V2015) -> {'Idris.Prelude.Types.Left', V2015} end(E3259)); {'Idris.Prelude.Types.Right', E3260} -> (fun (V2016) -> begin (V2018 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2017) -> ('un--nfToCFType'(V0, V1989, V2, V2017)) end, V2016, [], V1971))), case V2018 of {'Idris.Prelude.Types.Left', E3261} -> (fun (V2019) -> {'Idris.Prelude.Types.Left', V2019} end(E3261)); {'Idris.Prelude.Types.Right', E3262} -> (fun (V2020) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2006, V2020}} end(E3262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3257, E3258)); {'Idris.Compiler.CompileExpr.Struct', E3263, E3264} -> (fun (V2021, V2022) -> begin (V2033 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2023) -> fun (V2024) -> case V2023 of {'Idris.Builtin.MkPair', E3265, E3266} -> (fun (V2025, V2026) -> begin (V2027 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1997, V2026))(V2024))), case V2027 of {'Idris.Prelude.Types.Left', E3267} -> (fun (V2028) -> {'Idris.Prelude.Types.Left', V2028} end(E3267)); {'Idris.Prelude.Types.Right', E3268} -> (fun (V2029) -> begin (V2030 = (('un--nfToCFType'(V0, V1989, 1, V2029))(V2024))), case V2030 of {'Idris.Prelude.Types.Left', E3269} -> (fun (V2031) -> {'Idris.Prelude.Types.Left', V2031} end(E3269)); {'Idris.Prelude.Types.Right', E3270} -> (fun (V2032) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2025, V2032}} end(E3270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3265, E3266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2022, [], V1971))), case V2033 of {'Idris.Prelude.Types.Left', E3271} -> (fun (V2034) -> {'Idris.Prelude.Types.Left', V2034} end(E3271)); {'Idris.Prelude.Types.Right', E3272} -> (fun (V2035) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2021, V2035}} end(E3272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3263, E3264)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3273} -> (fun (V2036) -> begin (V2037 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1997, V2036))(V1971))), case V2037 of {'Idris.Prelude.Types.Left', E3274} -> (fun (V2038) -> {'Idris.Prelude.Types.Left', V2038} end(E3274)); {'Idris.Prelude.Types.Right', E3275} -> (fun (V2039) -> begin (V2040 = (('un--nfToCFType'(V0, V1989, V2, V2039))(V1971))), case V2040 of {'Idris.Prelude.Types.Left', E3276} -> (fun (V2041) -> {'Idris.Prelude.Types.Left', V2041} end(E3276)); {'Idris.Prelude.Types.Right', E3277} -> (fun (V2042) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2042}} end(E3277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3246, E3247, E3248, E3249, E3250)); {'Idris.Core.Value.NType', E3278} -> (fun (V2043) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3278)); {'Idris.Core.Value.NErased', E3279, E3280} -> (fun (V2044, V2045) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3279, E3280)); _ -> begin (V2047 = begin (V2046 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2046} end), case V2047 of {'Idris.Prelude.Types.Left', E3240} -> (fun (V2048) -> {'Idris.Prelude.Types.Left', V2048} end(E3240)); {'Idris.Prelude.Types.Right', E3241} -> (fun (V2049) -> begin (V2050 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2049, {'Idris.Core.Env.Nil'}, V3, V1971))), case V2050 of {'Idris.Prelude.Types.Left', E3242} -> (fun (V2051) -> {'Idris.Prelude.Types.Left', V2051} end(E3242)); {'Idris.Prelude.Types.Right', E3243} -> (fun (V2052) -> begin (V2059 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2053) -> fun (V2054) -> fun (V2055) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2053, V2054, V2055)) end end end, fun (V2056) -> fun (V2057) -> fun (V2058) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2056, V2057, V2058)) end end end}, V2052, V1971))), case V2059 of {'Idris.Prelude.Types.Left', E3244} -> (fun (V2060) -> {'Idris.Prelude.Types.Left', V2060} end(E3244)); {'Idris.Prelude.Types.Right', E3245} -> (fun (V2061) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2061))))}, V1971)) end(E3245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3236, E3237, E3238, E3239)); _ -> fun (V2062) -> case V3 of {'Idris.Core.Value.NTCon', E3201, E3202, E3203, E3204, E3205} -> (fun (V2063, V2064, V2065, V2066, V2067) -> begin (V2069 = begin (V2068 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2068} end), case V2069 of {'Idris.Prelude.Types.Left', E3206} -> (fun (V2070) -> {'Idris.Prelude.Types.Left', V2070} end(E3206)); {'Idris.Prelude.Types.Right', E3207} -> (fun (V2071) -> begin (V2078 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2072) -> fun (V2073) -> fun (V2074) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2072, V2073, V2074)) end end end, fun (V2075) -> fun (V2076) -> fun (V2077) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2075, V2076, V2077)) end end end}, V2064, V2062))), case V2078 of {'Idris.Prelude.Types.Left', E3208} -> (fun (V2079) -> {'Idris.Prelude.Types.Left', V2079} end(E3208)); {'Idris.Prelude.Types.Right', E3209} -> (fun (V2080) -> begin (V2082 = (('un--getNArgs'(V0, V2071, V2080, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2081) -> ('Idris.Idris2.Builtin':'un--snd'(V2081)) end, V2067))))(V2062))), case V2082 of {'Idris.Prelude.Types.Left', E3210} -> (fun (V2083) -> {'Idris.Prelude.Types.Left', V2083} end(E3210)); {'Idris.Prelude.Types.Right', E3211} -> (fun (V2084) -> case V2084 of {'Idris.Compiler.CompileExpr.User', E3212, E3213} -> (fun (V2085, V2086) -> begin (V2088 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2087) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2071, V2087)) end, V2086, [], V2062))), case V2088 of {'Idris.Prelude.Types.Left', E3214} -> (fun (V2089) -> {'Idris.Prelude.Types.Left', V2089} end(E3214)); {'Idris.Prelude.Types.Right', E3215} -> (fun (V2090) -> begin (V2092 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2091) -> ('un--nfToCFType'(V0, V2063, V2, V2091)) end, V2090, [], V2062))), case V2092 of {'Idris.Prelude.Types.Left', E3216} -> (fun (V2093) -> {'Idris.Prelude.Types.Left', V2093} end(E3216)); {'Idris.Prelude.Types.Right', E3217} -> (fun (V2094) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2080, V2094}} end(E3217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3212, E3213)); {'Idris.Compiler.CompileExpr.Struct', E3218, E3219} -> (fun (V2095, V2096) -> begin (V2107 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2097) -> fun (V2098) -> case V2097 of {'Idris.Builtin.MkPair', E3220, E3221} -> (fun (V2099, V2100) -> begin (V2101 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2071, V2100))(V2098))), case V2101 of {'Idris.Prelude.Types.Left', E3222} -> (fun (V2102) -> {'Idris.Prelude.Types.Left', V2102} end(E3222)); {'Idris.Prelude.Types.Right', E3223} -> (fun (V2103) -> begin (V2104 = (('un--nfToCFType'(V0, V2063, 1, V2103))(V2098))), case V2104 of {'Idris.Prelude.Types.Left', E3224} -> (fun (V2105) -> {'Idris.Prelude.Types.Left', V2105} end(E3224)); {'Idris.Prelude.Types.Right', E3225} -> (fun (V2106) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2099, V2106}} end(E3225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3220, E3221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2096, [], V2062))), case V2107 of {'Idris.Prelude.Types.Left', E3226} -> (fun (V2108) -> {'Idris.Prelude.Types.Left', V2108} end(E3226)); {'Idris.Prelude.Types.Right', E3227} -> (fun (V2109) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2095, V2109}} end(E3227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3218, E3219)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3228} -> (fun (V2110) -> begin (V2111 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2071, V2110))(V2062))), case V2111 of {'Idris.Prelude.Types.Left', E3229} -> (fun (V2112) -> {'Idris.Prelude.Types.Left', V2112} end(E3229)); {'Idris.Prelude.Types.Right', E3230} -> (fun (V2113) -> begin (V2114 = (('un--nfToCFType'(V0, V2063, V2, V2113))(V2062))), case V2114 of {'Idris.Prelude.Types.Left', E3231} -> (fun (V2115) -> {'Idris.Prelude.Types.Left', V2115} end(E3231)); {'Idris.Prelude.Types.Right', E3232} -> (fun (V2116) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2116}} end(E3232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3201, E3202, E3203, E3204, E3205)); {'Idris.Core.Value.NType', E3233} -> (fun (V2117) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3233)); {'Idris.Core.Value.NErased', E3234, E3235} -> (fun (V2118, V2119) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3234, E3235)); _ -> begin (V2121 = begin (V2120 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2120} end), case V2121 of {'Idris.Prelude.Types.Left', E3195} -> (fun (V2122) -> {'Idris.Prelude.Types.Left', V2122} end(E3195)); {'Idris.Prelude.Types.Right', E3196} -> (fun (V2123) -> begin (V2124 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2123, {'Idris.Core.Env.Nil'}, V3, V2062))), case V2124 of {'Idris.Prelude.Types.Left', E3197} -> (fun (V2125) -> {'Idris.Prelude.Types.Left', V2125} end(E3197)); {'Idris.Prelude.Types.Right', E3198} -> (fun (V2126) -> begin (V2133 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2127) -> fun (V2128) -> fun (V2129) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2127, V2128, V2129)) end end end, fun (V2130) -> fun (V2131) -> fun (V2132) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2130, V2131, V2132)) end end end}, V2126, V2062))), case V2133 of {'Idris.Prelude.Types.Left', E3199} -> (fun (V2134) -> {'Idris.Prelude.Types.Left', V2134} end(E3199)); {'Idris.Prelude.Types.Right', E3200} -> (fun (V2135) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2135))))}, V2062)) end(E3200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V2136) -> case V3 of {'Idris.Core.Value.NBind', E3334, E3335, E3336, E3337} -> (fun (V2137, V2138, V2139, V2140) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V2137, <<"Function types not allowed in a foreign struct"/utf8>>}, V2136)) end(E3334, E3335, E3336, E3337)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3299, E3300, E3301, E3302, E3303} -> (fun (V2141, V2142, V2143, V2144, V2145) -> begin (V2147 = begin (V2146 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2146} end), case V2147 of {'Idris.Prelude.Types.Left', E3304} -> (fun (V2148) -> {'Idris.Prelude.Types.Left', V2148} end(E3304)); {'Idris.Prelude.Types.Right', E3305} -> (fun (V2149) -> begin (V2156 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2150) -> fun (V2151) -> fun (V2152) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2150, V2151, V2152)) end end end, fun (V2153) -> fun (V2154) -> fun (V2155) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2153, V2154, V2155)) end end end}, V2142, V2136))), case V2156 of {'Idris.Prelude.Types.Left', E3306} -> (fun (V2157) -> {'Idris.Prelude.Types.Left', V2157} end(E3306)); {'Idris.Prelude.Types.Right', E3307} -> (fun (V2158) -> begin (V2160 = (('un--getNArgs'(V0, V2149, V2158, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2159) -> ('Idris.Idris2.Builtin':'un--snd'(V2159)) end, V2145))))(V2136))), case V2160 of {'Idris.Prelude.Types.Left', E3308} -> (fun (V2161) -> {'Idris.Prelude.Types.Left', V2161} end(E3308)); {'Idris.Prelude.Types.Right', E3309} -> (fun (V2162) -> case V2162 of {'Idris.Compiler.CompileExpr.User', E3310, E3311} -> (fun (V2163, V2164) -> begin (V2166 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2165) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2149, V2165)) end, V2164, [], V2136))), case V2166 of {'Idris.Prelude.Types.Left', E3312} -> (fun (V2167) -> {'Idris.Prelude.Types.Left', V2167} end(E3312)); {'Idris.Prelude.Types.Right', E3313} -> (fun (V2168) -> begin (V2170 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2169) -> ('un--nfToCFType'(V0, V2141, V2, V2169)) end, V2168, [], V2136))), case V2170 of {'Idris.Prelude.Types.Left', E3314} -> (fun (V2171) -> {'Idris.Prelude.Types.Left', V2171} end(E3314)); {'Idris.Prelude.Types.Right', E3315} -> (fun (V2172) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2158, V2172}} end(E3315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3310, E3311)); {'Idris.Compiler.CompileExpr.Struct', E3316, E3317} -> (fun (V2173, V2174) -> begin (V2185 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2175) -> fun (V2176) -> case V2175 of {'Idris.Builtin.MkPair', E3318, E3319} -> (fun (V2177, V2178) -> begin (V2179 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2149, V2178))(V2176))), case V2179 of {'Idris.Prelude.Types.Left', E3320} -> (fun (V2180) -> {'Idris.Prelude.Types.Left', V2180} end(E3320)); {'Idris.Prelude.Types.Right', E3321} -> (fun (V2181) -> begin (V2182 = (('un--nfToCFType'(V0, V2141, 1, V2181))(V2176))), case V2182 of {'Idris.Prelude.Types.Left', E3322} -> (fun (V2183) -> {'Idris.Prelude.Types.Left', V2183} end(E3322)); {'Idris.Prelude.Types.Right', E3323} -> (fun (V2184) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2177, V2184}} end(E3323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3318, E3319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2174, [], V2136))), case V2185 of {'Idris.Prelude.Types.Left', E3324} -> (fun (V2186) -> {'Idris.Prelude.Types.Left', V2186} end(E3324)); {'Idris.Prelude.Types.Right', E3325} -> (fun (V2187) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2173, V2187}} end(E3325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3316, E3317)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3326} -> (fun (V2188) -> begin (V2189 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2149, V2188))(V2136))), case V2189 of {'Idris.Prelude.Types.Left', E3327} -> (fun (V2190) -> {'Idris.Prelude.Types.Left', V2190} end(E3327)); {'Idris.Prelude.Types.Right', E3328} -> (fun (V2191) -> begin (V2192 = (('un--nfToCFType'(V0, V2141, V2, V2191))(V2136))), case V2192 of {'Idris.Prelude.Types.Left', E3329} -> (fun (V2193) -> {'Idris.Prelude.Types.Left', V2193} end(E3329)); {'Idris.Prelude.Types.Right', E3330} -> (fun (V2194) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2194}} end(E3330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3299, E3300, E3301, E3302, E3303)); {'Idris.Core.Value.NType', E3331} -> (fun (V2195) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3331)); {'Idris.Core.Value.NErased', E3332, E3333} -> (fun (V2196, V2197) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3332, E3333)); _ -> begin (V2199 = begin (V2198 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2198} end), case V2199 of {'Idris.Prelude.Types.Left', E3293} -> (fun (V2200) -> {'Idris.Prelude.Types.Left', V2200} end(E3293)); {'Idris.Prelude.Types.Right', E3294} -> (fun (V2201) -> begin (V2202 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2201, {'Idris.Core.Env.Nil'}, V3, V2136))), case V2202 of {'Idris.Prelude.Types.Left', E3295} -> (fun (V2203) -> {'Idris.Prelude.Types.Left', V2203} end(E3295)); {'Idris.Prelude.Types.Right', E3296} -> (fun (V2204) -> begin (V2211 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2205) -> fun (V2206) -> fun (V2207) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2205, V2206, V2207)) end end end, fun (V2208) -> fun (V2209) -> fun (V2210) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2208, V2209, V2210)) end end end}, V2204, V2136))), case V2211 of {'Idris.Prelude.Types.Left', E3297} -> (fun (V2212) -> {'Idris.Prelude.Types.Left', V2212} end(E3297)); {'Idris.Prelude.Types.Right', E3298} -> (fun (V2213) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2213))))}, V2136)) end(E3298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V2214) -> case V3 of {'Idris.Core.Value.NTCon', E3160, E3161, E3162, E3163, E3164} -> (fun (V2215, V2216, V2217, V2218, V2219) -> begin (V2221 = begin (V2220 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2220} end), case V2221 of {'Idris.Prelude.Types.Left', E3165} -> (fun (V2222) -> {'Idris.Prelude.Types.Left', V2222} end(E3165)); {'Idris.Prelude.Types.Right', E3166} -> (fun (V2223) -> begin (V2230 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2224) -> fun (V2225) -> fun (V2226) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2224, V2225, V2226)) end end end, fun (V2227) -> fun (V2228) -> fun (V2229) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2227, V2228, V2229)) end end end}, V2216, V2214))), case V2230 of {'Idris.Prelude.Types.Left', E3167} -> (fun (V2231) -> {'Idris.Prelude.Types.Left', V2231} end(E3167)); {'Idris.Prelude.Types.Right', E3168} -> (fun (V2232) -> begin (V2234 = (('un--getNArgs'(V0, V2223, V2232, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2233) -> ('Idris.Idris2.Builtin':'un--snd'(V2233)) end, V2219))))(V2214))), case V2234 of {'Idris.Prelude.Types.Left', E3169} -> (fun (V2235) -> {'Idris.Prelude.Types.Left', V2235} end(E3169)); {'Idris.Prelude.Types.Right', E3170} -> (fun (V2236) -> case V2236 of {'Idris.Compiler.CompileExpr.User', E3171, E3172} -> (fun (V2237, V2238) -> begin (V2240 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2239) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2223, V2239)) end, V2238, [], V2214))), case V2240 of {'Idris.Prelude.Types.Left', E3173} -> (fun (V2241) -> {'Idris.Prelude.Types.Left', V2241} end(E3173)); {'Idris.Prelude.Types.Right', E3174} -> (fun (V2242) -> begin (V2244 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2243) -> ('un--nfToCFType'(V0, V2215, V2, V2243)) end, V2242, [], V2214))), case V2244 of {'Idris.Prelude.Types.Left', E3175} -> (fun (V2245) -> {'Idris.Prelude.Types.Left', V2245} end(E3175)); {'Idris.Prelude.Types.Right', E3176} -> (fun (V2246) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2232, V2246}} end(E3176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3171, E3172)); {'Idris.Compiler.CompileExpr.Struct', E3177, E3178} -> (fun (V2247, V2248) -> begin (V2259 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2249) -> fun (V2250) -> case V2249 of {'Idris.Builtin.MkPair', E3179, E3180} -> (fun (V2251, V2252) -> begin (V2253 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2223, V2252))(V2250))), case V2253 of {'Idris.Prelude.Types.Left', E3181} -> (fun (V2254) -> {'Idris.Prelude.Types.Left', V2254} end(E3181)); {'Idris.Prelude.Types.Right', E3182} -> (fun (V2255) -> begin (V2256 = (('un--nfToCFType'(V0, V2215, 1, V2255))(V2250))), case V2256 of {'Idris.Prelude.Types.Left', E3183} -> (fun (V2257) -> {'Idris.Prelude.Types.Left', V2257} end(E3183)); {'Idris.Prelude.Types.Right', E3184} -> (fun (V2258) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2251, V2258}} end(E3184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3179, E3180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2248, [], V2214))), case V2259 of {'Idris.Prelude.Types.Left', E3185} -> (fun (V2260) -> {'Idris.Prelude.Types.Left', V2260} end(E3185)); {'Idris.Prelude.Types.Right', E3186} -> (fun (V2261) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2247, V2261}} end(E3186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3177, E3178)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3187} -> (fun (V2262) -> begin (V2263 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2223, V2262))(V2214))), case V2263 of {'Idris.Prelude.Types.Left', E3188} -> (fun (V2264) -> {'Idris.Prelude.Types.Left', V2264} end(E3188)); {'Idris.Prelude.Types.Right', E3189} -> (fun (V2265) -> begin (V2266 = (('un--nfToCFType'(V0, V2215, V2, V2265))(V2214))), case V2266 of {'Idris.Prelude.Types.Left', E3190} -> (fun (V2267) -> {'Idris.Prelude.Types.Left', V2267} end(E3190)); {'Idris.Prelude.Types.Right', E3191} -> (fun (V2268) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2268}} end(E3191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3160, E3161, E3162, E3163, E3164)); {'Idris.Core.Value.NType', E3192} -> (fun (V2269) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3192)); {'Idris.Core.Value.NErased', E3193, E3194} -> (fun (V2270, V2271) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3193, E3194)); _ -> begin (V2273 = begin (V2272 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2272} end), case V2273 of {'Idris.Prelude.Types.Left', E3154} -> (fun (V2274) -> {'Idris.Prelude.Types.Left', V2274} end(E3154)); {'Idris.Prelude.Types.Right', E3155} -> (fun (V2275) -> begin (V2276 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2275, {'Idris.Core.Env.Nil'}, V3, V2214))), case V2276 of {'Idris.Prelude.Types.Left', E3156} -> (fun (V2277) -> {'Idris.Prelude.Types.Left', V2277} end(E3156)); {'Idris.Prelude.Types.Right', E3157} -> (fun (V2278) -> begin (V2285 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2279) -> fun (V2280) -> fun (V2281) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2279, V2280, V2281)) end end end, fun (V2282) -> fun (V2283) -> fun (V2284) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2282, V2283, V2284)) end end end}, V2278, V2214))), case V2285 of {'Idris.Prelude.Types.Left', E3158} -> (fun (V2286) -> {'Idris.Prelude.Types.Left', V2286} end(E3158)); {'Idris.Prelude.Types.Right', E3159} -> (fun (V2287) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2287))))}, V2214)) end(E3159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E3152, E3153)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3050, E3051, E3052, E3053} -> (fun (V2288, V2289, V2290, V2291) -> fun (V2292) -> case V2290 of {'Idris.Core.TT.Pi', E3095, E3096, E3097, E3098} -> (fun (V2293, V2294, V2295, V2296) -> begin (V2298 = begin (V2297 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2297} end), case V2298 of {'Idris.Prelude.Types.Left', E3099} -> (fun (V2299) -> {'Idris.Prelude.Types.Left', V2299} end(E3099)); {'Idris.Prelude.Types.Right', E3100} -> (fun (V2300) -> begin (V2301 = (('un--nfToCFType'(V0, V2288, 0, V2296))(V2292))), case V2301 of {'Idris.Prelude.Types.Left', E3101} -> (fun (V2302) -> {'Idris.Prelude.Types.Left', V2302} end(E3101)); {'Idris.Prelude.Types.Right', E3102} -> (fun (V2303) -> begin (V2304 = (((V2291(V2300))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2288, 0}))))(V2292))), case V2304 of {'Idris.Prelude.Types.Left', E3103} -> (fun (V2305) -> {'Idris.Prelude.Types.Left', V2305} end(E3103)); {'Idris.Prelude.Types.Right', E3104} -> (fun (V2306) -> begin (V2307 = (('un--nfToCFType'(V0, V2288, 0, V2306))(V2292))), case V2307 of {'Idris.Prelude.Types.Left', E3105} -> (fun (V2308) -> {'Idris.Prelude.Types.Left', V2308} end(E3105)); {'Idris.Prelude.Types.Right', E3106} -> (fun (V2309) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2303, V2309}} end(E3106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3095, E3096, E3097, E3098)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3060, E3061, E3062, E3063, E3064} -> (fun (V2310, V2311, V2312, V2313, V2314) -> begin (V2316 = begin (V2315 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2315} end), case V2316 of {'Idris.Prelude.Types.Left', E3065} -> (fun (V2317) -> {'Idris.Prelude.Types.Left', V2317} end(E3065)); {'Idris.Prelude.Types.Right', E3066} -> (fun (V2318) -> begin (V2325 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2319) -> fun (V2320) -> fun (V2321) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2319, V2320, V2321)) end end end, fun (V2322) -> fun (V2323) -> fun (V2324) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2322, V2323, V2324)) end end end}, V2311, V2292))), case V2325 of {'Idris.Prelude.Types.Left', E3067} -> (fun (V2326) -> {'Idris.Prelude.Types.Left', V2326} end(E3067)); {'Idris.Prelude.Types.Right', E3068} -> (fun (V2327) -> begin (V2329 = (('un--getNArgs'(V0, V2318, V2327, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2328) -> ('Idris.Idris2.Builtin':'un--snd'(V2328)) end, V2314))))(V2292))), case V2329 of {'Idris.Prelude.Types.Left', E3069} -> (fun (V2330) -> {'Idris.Prelude.Types.Left', V2330} end(E3069)); {'Idris.Prelude.Types.Right', E3070} -> (fun (V2331) -> case V2331 of {'Idris.Compiler.CompileExpr.User', E3071, E3072} -> (fun (V2332, V2333) -> begin (V2335 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2334) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2318, V2334)) end, V2333, [], V2292))), case V2335 of {'Idris.Prelude.Types.Left', E3073} -> (fun (V2336) -> {'Idris.Prelude.Types.Left', V2336} end(E3073)); {'Idris.Prelude.Types.Right', E3074} -> (fun (V2337) -> begin (V2339 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2338) -> ('un--nfToCFType'(V0, V2310, V2, V2338)) end, V2337, [], V2292))), case V2339 of {'Idris.Prelude.Types.Left', E3075} -> (fun (V2340) -> {'Idris.Prelude.Types.Left', V2340} end(E3075)); {'Idris.Prelude.Types.Right', E3076} -> (fun (V2341) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2327, V2341}} end(E3076)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3071, E3072)); {'Idris.Compiler.CompileExpr.Struct', E3077, E3078} -> (fun (V2342, V2343) -> begin (V2354 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2344) -> fun (V2345) -> case V2344 of {'Idris.Builtin.MkPair', E3079, E3080} -> (fun (V2346, V2347) -> begin (V2348 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2318, V2347))(V2345))), case V2348 of {'Idris.Prelude.Types.Left', E3081} -> (fun (V2349) -> {'Idris.Prelude.Types.Left', V2349} end(E3081)); {'Idris.Prelude.Types.Right', E3082} -> (fun (V2350) -> begin (V2351 = (('un--nfToCFType'(V0, V2310, 1, V2350))(V2345))), case V2351 of {'Idris.Prelude.Types.Left', E3083} -> (fun (V2352) -> {'Idris.Prelude.Types.Left', V2352} end(E3083)); {'Idris.Prelude.Types.Right', E3084} -> (fun (V2353) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2346, V2353}} end(E3084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3082)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3079, E3080)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2343, [], V2292))), case V2354 of {'Idris.Prelude.Types.Left', E3085} -> (fun (V2355) -> {'Idris.Prelude.Types.Left', V2355} end(E3085)); {'Idris.Prelude.Types.Right', E3086} -> (fun (V2356) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2342, V2356}} end(E3086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3077, E3078)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3087} -> (fun (V2357) -> begin (V2358 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2318, V2357))(V2292))), case V2358 of {'Idris.Prelude.Types.Left', E3088} -> (fun (V2359) -> {'Idris.Prelude.Types.Left', V2359} end(E3088)); {'Idris.Prelude.Types.Right', E3089} -> (fun (V2360) -> begin (V2361 = (('un--nfToCFType'(V0, V2310, V2, V2360))(V2292))), case V2361 of {'Idris.Prelude.Types.Left', E3090} -> (fun (V2362) -> {'Idris.Prelude.Types.Left', V2362} end(E3090)); {'Idris.Prelude.Types.Right', E3091} -> (fun (V2363) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2363}} end(E3091)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3089)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3087)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3066)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3060, E3061, E3062, E3063, E3064)); {'Idris.Core.Value.NType', E3092} -> (fun (V2364) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3092)); {'Idris.Core.Value.NErased', E3093, E3094} -> (fun (V2365, V2366) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3093, E3094)); _ -> begin (V2368 = begin (V2367 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2367} end), case V2368 of {'Idris.Prelude.Types.Left', E3054} -> (fun (V2369) -> {'Idris.Prelude.Types.Left', V2369} end(E3054)); {'Idris.Prelude.Types.Right', E3055} -> (fun (V2370) -> begin (V2371 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2370, {'Idris.Core.Env.Nil'}, V3, V2292))), case V2371 of {'Idris.Prelude.Types.Left', E3056} -> (fun (V2372) -> {'Idris.Prelude.Types.Left', V2372} end(E3056)); {'Idris.Prelude.Types.Right', E3057} -> (fun (V2373) -> begin (V2380 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2374) -> fun (V2375) -> fun (V2376) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2374, V2375, V2376)) end end end, fun (V2377) -> fun (V2378) -> fun (V2379) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2377, V2378, V2379)) end end end}, V2373, V2292))), case V2380 of {'Idris.Prelude.Types.Left', E3058} -> (fun (V2381) -> {'Idris.Prelude.Types.Left', V2381} end(E3058)); {'Idris.Prelude.Types.Right', E3059} -> (fun (V2382) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2382))))}, V2292)) end(E3059)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3055)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3050, E3051, E3052, E3053)); _ -> fun (V2383) -> case V3 of {'Idris.Core.Value.NTCon', E3015, E3016, E3017, E3018, E3019} -> (fun (V2384, V2385, V2386, V2387, V2388) -> begin (V2390 = begin (V2389 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2389} end), case V2390 of {'Idris.Prelude.Types.Left', E3020} -> (fun (V2391) -> {'Idris.Prelude.Types.Left', V2391} end(E3020)); {'Idris.Prelude.Types.Right', E3021} -> (fun (V2392) -> begin (V2399 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2393) -> fun (V2394) -> fun (V2395) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2393, V2394, V2395)) end end end, fun (V2396) -> fun (V2397) -> fun (V2398) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2396, V2397, V2398)) end end end}, V2385, V2383))), case V2399 of {'Idris.Prelude.Types.Left', E3022} -> (fun (V2400) -> {'Idris.Prelude.Types.Left', V2400} end(E3022)); {'Idris.Prelude.Types.Right', E3023} -> (fun (V2401) -> begin (V2403 = (('un--getNArgs'(V0, V2392, V2401, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2402) -> ('Idris.Idris2.Builtin':'un--snd'(V2402)) end, V2388))))(V2383))), case V2403 of {'Idris.Prelude.Types.Left', E3024} -> (fun (V2404) -> {'Idris.Prelude.Types.Left', V2404} end(E3024)); {'Idris.Prelude.Types.Right', E3025} -> (fun (V2405) -> case V2405 of {'Idris.Compiler.CompileExpr.User', E3026, E3027} -> (fun (V2406, V2407) -> begin (V2409 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2408) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2392, V2408)) end, V2407, [], V2383))), case V2409 of {'Idris.Prelude.Types.Left', E3028} -> (fun (V2410) -> {'Idris.Prelude.Types.Left', V2410} end(E3028)); {'Idris.Prelude.Types.Right', E3029} -> (fun (V2411) -> begin (V2413 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2412) -> ('un--nfToCFType'(V0, V2384, V2, V2412)) end, V2411, [], V2383))), case V2413 of {'Idris.Prelude.Types.Left', E3030} -> (fun (V2414) -> {'Idris.Prelude.Types.Left', V2414} end(E3030)); {'Idris.Prelude.Types.Right', E3031} -> (fun (V2415) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2401, V2415}} end(E3031)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3029)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3026, E3027)); {'Idris.Compiler.CompileExpr.Struct', E3032, E3033} -> (fun (V2416, V2417) -> begin (V2428 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2418) -> fun (V2419) -> case V2418 of {'Idris.Builtin.MkPair', E3034, E3035} -> (fun (V2420, V2421) -> begin (V2422 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2392, V2421))(V2419))), case V2422 of {'Idris.Prelude.Types.Left', E3036} -> (fun (V2423) -> {'Idris.Prelude.Types.Left', V2423} end(E3036)); {'Idris.Prelude.Types.Right', E3037} -> (fun (V2424) -> begin (V2425 = (('un--nfToCFType'(V0, V2384, 1, V2424))(V2419))), case V2425 of {'Idris.Prelude.Types.Left', E3038} -> (fun (V2426) -> {'Idris.Prelude.Types.Left', V2426} end(E3038)); {'Idris.Prelude.Types.Right', E3039} -> (fun (V2427) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2420, V2427}} end(E3039)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3034, E3035)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2417, [], V2383))), case V2428 of {'Idris.Prelude.Types.Left', E3040} -> (fun (V2429) -> {'Idris.Prelude.Types.Left', V2429} end(E3040)); {'Idris.Prelude.Types.Right', E3041} -> (fun (V2430) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2416, V2430}} end(E3041)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3032, E3033)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3042} -> (fun (V2431) -> begin (V2432 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2392, V2431))(V2383))), case V2432 of {'Idris.Prelude.Types.Left', E3043} -> (fun (V2433) -> {'Idris.Prelude.Types.Left', V2433} end(E3043)); {'Idris.Prelude.Types.Right', E3044} -> (fun (V2434) -> begin (V2435 = (('un--nfToCFType'(V0, V2384, V2, V2434))(V2383))), case V2435 of {'Idris.Prelude.Types.Left', E3045} -> (fun (V2436) -> {'Idris.Prelude.Types.Left', V2436} end(E3045)); {'Idris.Prelude.Types.Right', E3046} -> (fun (V2437) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2437}} end(E3046)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3044)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3042)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3025)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3021)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3015, E3016, E3017, E3018, E3019)); {'Idris.Core.Value.NType', E3047} -> (fun (V2438) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3047)); {'Idris.Core.Value.NErased', E3048, E3049} -> (fun (V2439, V2440) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3048, E3049)); _ -> begin (V2442 = begin (V2441 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2441} end), case V2442 of {'Idris.Prelude.Types.Left', E3009} -> (fun (V2443) -> {'Idris.Prelude.Types.Left', V2443} end(E3009)); {'Idris.Prelude.Types.Right', E3010} -> (fun (V2444) -> begin (V2445 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2444, {'Idris.Core.Env.Nil'}, V3, V2383))), case V2445 of {'Idris.Prelude.Types.Left', E3011} -> (fun (V2446) -> {'Idris.Prelude.Types.Left', V2446} end(E3011)); {'Idris.Prelude.Types.Right', E3012} -> (fun (V2447) -> begin (V2454 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2448) -> fun (V2449) -> fun (V2450) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2448, V2449, V2450)) end end end, fun (V2451) -> fun (V2452) -> fun (V2453) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2451, V2452, V2453)) end end end}, V2447, V2383))), case V2454 of {'Idris.Prelude.Types.Left', E3013} -> (fun (V2455) -> {'Idris.Prelude.Types.Left', V2455} end(E3013)); {'Idris.Prelude.Types.Right', E3014} -> (fun (V2456) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2456))))}, V2383)) end(E3014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3010)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V2457) -> case V3 of {'Idris.Core.Value.NBind', E3148, E3149, E3150, E3151} -> (fun (V2458, V2459, V2460, V2461) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V2458, <<"Function types not allowed in a foreign struct"/utf8>>}, V2457)) end(E3148, E3149, E3150, E3151)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3113, E3114, E3115, E3116, E3117} -> (fun (V2462, V2463, V2464, V2465, V2466) -> begin (V2468 = begin (V2467 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2467} end), case V2468 of {'Idris.Prelude.Types.Left', E3118} -> (fun (V2469) -> {'Idris.Prelude.Types.Left', V2469} end(E3118)); {'Idris.Prelude.Types.Right', E3119} -> (fun (V2470) -> begin (V2477 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2471) -> fun (V2472) -> fun (V2473) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2471, V2472, V2473)) end end end, fun (V2474) -> fun (V2475) -> fun (V2476) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2474, V2475, V2476)) end end end}, V2463, V2457))), case V2477 of {'Idris.Prelude.Types.Left', E3120} -> (fun (V2478) -> {'Idris.Prelude.Types.Left', V2478} end(E3120)); {'Idris.Prelude.Types.Right', E3121} -> (fun (V2479) -> begin (V2481 = (('un--getNArgs'(V0, V2470, V2479, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2480) -> ('Idris.Idris2.Builtin':'un--snd'(V2480)) end, V2466))))(V2457))), case V2481 of {'Idris.Prelude.Types.Left', E3122} -> (fun (V2482) -> {'Idris.Prelude.Types.Left', V2482} end(E3122)); {'Idris.Prelude.Types.Right', E3123} -> (fun (V2483) -> case V2483 of {'Idris.Compiler.CompileExpr.User', E3124, E3125} -> (fun (V2484, V2485) -> begin (V2487 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2486) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2470, V2486)) end, V2485, [], V2457))), case V2487 of {'Idris.Prelude.Types.Left', E3126} -> (fun (V2488) -> {'Idris.Prelude.Types.Left', V2488} end(E3126)); {'Idris.Prelude.Types.Right', E3127} -> (fun (V2489) -> begin (V2491 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2490) -> ('un--nfToCFType'(V0, V2462, V2, V2490)) end, V2489, [], V2457))), case V2491 of {'Idris.Prelude.Types.Left', E3128} -> (fun (V2492) -> {'Idris.Prelude.Types.Left', V2492} end(E3128)); {'Idris.Prelude.Types.Right', E3129} -> (fun (V2493) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2479, V2493}} end(E3129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3124, E3125)); {'Idris.Compiler.CompileExpr.Struct', E3130, E3131} -> (fun (V2494, V2495) -> begin (V2506 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2496) -> fun (V2497) -> case V2496 of {'Idris.Builtin.MkPair', E3132, E3133} -> (fun (V2498, V2499) -> begin (V2500 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2470, V2499))(V2497))), case V2500 of {'Idris.Prelude.Types.Left', E3134} -> (fun (V2501) -> {'Idris.Prelude.Types.Left', V2501} end(E3134)); {'Idris.Prelude.Types.Right', E3135} -> (fun (V2502) -> begin (V2503 = (('un--nfToCFType'(V0, V2462, 1, V2502))(V2497))), case V2503 of {'Idris.Prelude.Types.Left', E3136} -> (fun (V2504) -> {'Idris.Prelude.Types.Left', V2504} end(E3136)); {'Idris.Prelude.Types.Right', E3137} -> (fun (V2505) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2498, V2505}} end(E3137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3132, E3133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2495, [], V2457))), case V2506 of {'Idris.Prelude.Types.Left', E3138} -> (fun (V2507) -> {'Idris.Prelude.Types.Left', V2507} end(E3138)); {'Idris.Prelude.Types.Right', E3139} -> (fun (V2508) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2494, V2508}} end(E3139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3130, E3131)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3140} -> (fun (V2509) -> begin (V2510 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2470, V2509))(V2457))), case V2510 of {'Idris.Prelude.Types.Left', E3141} -> (fun (V2511) -> {'Idris.Prelude.Types.Left', V2511} end(E3141)); {'Idris.Prelude.Types.Right', E3142} -> (fun (V2512) -> begin (V2513 = (('un--nfToCFType'(V0, V2462, V2, V2512))(V2457))), case V2513 of {'Idris.Prelude.Types.Left', E3143} -> (fun (V2514) -> {'Idris.Prelude.Types.Left', V2514} end(E3143)); {'Idris.Prelude.Types.Right', E3144} -> (fun (V2515) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2515}} end(E3144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3113, E3114, E3115, E3116, E3117)); {'Idris.Core.Value.NType', E3145} -> (fun (V2516) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3145)); {'Idris.Core.Value.NErased', E3146, E3147} -> (fun (V2517, V2518) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3146, E3147)); _ -> begin (V2520 = begin (V2519 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2519} end), case V2520 of {'Idris.Prelude.Types.Left', E3107} -> (fun (V2521) -> {'Idris.Prelude.Types.Left', V2521} end(E3107)); {'Idris.Prelude.Types.Right', E3108} -> (fun (V2522) -> begin (V2523 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2522, {'Idris.Core.Env.Nil'}, V3, V2457))), case V2523 of {'Idris.Prelude.Types.Left', E3109} -> (fun (V2524) -> {'Idris.Prelude.Types.Left', V2524} end(E3109)); {'Idris.Prelude.Types.Right', E3110} -> (fun (V2525) -> begin (V2532 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2526) -> fun (V2527) -> fun (V2528) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2526, V2527, V2528)) end end end, fun (V2529) -> fun (V2530) -> fun (V2531) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2529, V2530, V2531)) end end end}, V2525, V2457))), case V2532 of {'Idris.Prelude.Types.Left', E3111} -> (fun (V2533) -> {'Idris.Prelude.Types.Left', V2533} end(E3111)); {'Idris.Prelude.Types.Right', E3112} -> (fun (V2534) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2534))))}, V2457)) end(E3112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V2535) -> case V3 of {'Idris.Core.Value.NTCon', E2974, E2975, E2976, E2977, E2978} -> (fun (V2536, V2537, V2538, V2539, V2540) -> begin (V2542 = begin (V2541 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2541} end), case V2542 of {'Idris.Prelude.Types.Left', E2979} -> (fun (V2543) -> {'Idris.Prelude.Types.Left', V2543} end(E2979)); {'Idris.Prelude.Types.Right', E2980} -> (fun (V2544) -> begin (V2551 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2545) -> fun (V2546) -> fun (V2547) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2545, V2546, V2547)) end end end, fun (V2548) -> fun (V2549) -> fun (V2550) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2548, V2549, V2550)) end end end}, V2537, V2535))), case V2551 of {'Idris.Prelude.Types.Left', E2981} -> (fun (V2552) -> {'Idris.Prelude.Types.Left', V2552} end(E2981)); {'Idris.Prelude.Types.Right', E2982} -> (fun (V2553) -> begin (V2555 = (('un--getNArgs'(V0, V2544, V2553, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2554) -> ('Idris.Idris2.Builtin':'un--snd'(V2554)) end, V2540))))(V2535))), case V2555 of {'Idris.Prelude.Types.Left', E2983} -> (fun (V2556) -> {'Idris.Prelude.Types.Left', V2556} end(E2983)); {'Idris.Prelude.Types.Right', E2984} -> (fun (V2557) -> case V2557 of {'Idris.Compiler.CompileExpr.User', E2985, E2986} -> (fun (V2558, V2559) -> begin (V2561 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2560) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2544, V2560)) end, V2559, [], V2535))), case V2561 of {'Idris.Prelude.Types.Left', E2987} -> (fun (V2562) -> {'Idris.Prelude.Types.Left', V2562} end(E2987)); {'Idris.Prelude.Types.Right', E2988} -> (fun (V2563) -> begin (V2565 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2564) -> ('un--nfToCFType'(V0, V2536, V2, V2564)) end, V2563, [], V2535))), case V2565 of {'Idris.Prelude.Types.Left', E2989} -> (fun (V2566) -> {'Idris.Prelude.Types.Left', V2566} end(E2989)); {'Idris.Prelude.Types.Right', E2990} -> (fun (V2567) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2553, V2567}} end(E2990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2985, E2986)); {'Idris.Compiler.CompileExpr.Struct', E2991, E2992} -> (fun (V2568, V2569) -> begin (V2580 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2570) -> fun (V2571) -> case V2570 of {'Idris.Builtin.MkPair', E2993, E2994} -> (fun (V2572, V2573) -> begin (V2574 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2544, V2573))(V2571))), case V2574 of {'Idris.Prelude.Types.Left', E2995} -> (fun (V2575) -> {'Idris.Prelude.Types.Left', V2575} end(E2995)); {'Idris.Prelude.Types.Right', E2996} -> (fun (V2576) -> begin (V2577 = (('un--nfToCFType'(V0, V2536, 1, V2576))(V2571))), case V2577 of {'Idris.Prelude.Types.Left', E2997} -> (fun (V2578) -> {'Idris.Prelude.Types.Left', V2578} end(E2997)); {'Idris.Prelude.Types.Right', E2998} -> (fun (V2579) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2572, V2579}} end(E2998)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2996)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2993, E2994)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2569, [], V2535))), case V2580 of {'Idris.Prelude.Types.Left', E2999} -> (fun (V2581) -> {'Idris.Prelude.Types.Left', V2581} end(E2999)); {'Idris.Prelude.Types.Right', E3000} -> (fun (V2582) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2568, V2582}} end(E3000)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2991, E2992)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3001} -> (fun (V2583) -> begin (V2584 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2544, V2583))(V2535))), case V2584 of {'Idris.Prelude.Types.Left', E3002} -> (fun (V2585) -> {'Idris.Prelude.Types.Left', V2585} end(E3002)); {'Idris.Prelude.Types.Right', E3003} -> (fun (V2586) -> begin (V2587 = (('un--nfToCFType'(V0, V2536, V2, V2586))(V2535))), case V2587 of {'Idris.Prelude.Types.Left', E3004} -> (fun (V2588) -> {'Idris.Prelude.Types.Left', V2588} end(E3004)); {'Idris.Prelude.Types.Right', E3005} -> (fun (V2589) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2589}} end(E3005)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3003)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2984)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2982)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2980)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2974, E2975, E2976, E2977, E2978)); {'Idris.Core.Value.NType', E3006} -> (fun (V2590) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E3006)); {'Idris.Core.Value.NErased', E3007, E3008} -> (fun (V2591, V2592) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E3007, E3008)); _ -> begin (V2594 = begin (V2593 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2593} end), case V2594 of {'Idris.Prelude.Types.Left', E2968} -> (fun (V2595) -> {'Idris.Prelude.Types.Left', V2595} end(E2968)); {'Idris.Prelude.Types.Right', E2969} -> (fun (V2596) -> begin (V2597 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2596, {'Idris.Core.Env.Nil'}, V3, V2535))), case V2597 of {'Idris.Prelude.Types.Left', E2970} -> (fun (V2598) -> {'Idris.Prelude.Types.Left', V2598} end(E2970)); {'Idris.Prelude.Types.Right', E2971} -> (fun (V2599) -> begin (V2606 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2600) -> fun (V2601) -> fun (V2602) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2600, V2601, V2602)) end end end, fun (V2603) -> fun (V2604) -> fun (V2605) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2603, V2604, V2605)) end end end}, V2599, V2535))), case V2606 of {'Idris.Prelude.Types.Left', E2972} -> (fun (V2607) -> {'Idris.Prelude.Types.Left', V2607} end(E2972)); {'Idris.Prelude.Types.Right', E2973} -> (fun (V2608) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2608))))}, V2535)) end(E2973)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2971)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2969)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2040, E2041} -> (fun (V2609, V2610) -> case V2610 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V2611) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V2612) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V2613) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2124, E2125, E2126, E2127} -> (fun (V2614, V2615, V2616, V2617) -> fun (V2618) -> case V2616 of {'Idris.Core.TT.Pi', E2169, E2170, E2171, E2172} -> (fun (V2619, V2620, V2621, V2622) -> begin (V2624 = begin (V2623 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2623} end), case V2624 of {'Idris.Prelude.Types.Left', E2173} -> (fun (V2625) -> {'Idris.Prelude.Types.Left', V2625} end(E2173)); {'Idris.Prelude.Types.Right', E2174} -> (fun (V2626) -> begin (V2627 = (('un--nfToCFType'(V0, V2614, 0, V2622))(V2618))), case V2627 of {'Idris.Prelude.Types.Left', E2175} -> (fun (V2628) -> {'Idris.Prelude.Types.Left', V2628} end(E2175)); {'Idris.Prelude.Types.Right', E2176} -> (fun (V2629) -> begin (V2630 = (((V2617(V2626))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2614, 0}))))(V2618))), case V2630 of {'Idris.Prelude.Types.Left', E2177} -> (fun (V2631) -> {'Idris.Prelude.Types.Left', V2631} end(E2177)); {'Idris.Prelude.Types.Right', E2178} -> (fun (V2632) -> begin (V2633 = (('un--nfToCFType'(V0, V2614, 0, V2632))(V2618))), case V2633 of {'Idris.Prelude.Types.Left', E2179} -> (fun (V2634) -> {'Idris.Prelude.Types.Left', V2634} end(E2179)); {'Idris.Prelude.Types.Right', E2180} -> (fun (V2635) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2629, V2635}} end(E2180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2169, E2170, E2171, E2172)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2134, E2135, E2136, E2137, E2138} -> (fun (V2636, V2637, V2638, V2639, V2640) -> begin (V2642 = begin (V2641 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2641} end), case V2642 of {'Idris.Prelude.Types.Left', E2139} -> (fun (V2643) -> {'Idris.Prelude.Types.Left', V2643} end(E2139)); {'Idris.Prelude.Types.Right', E2140} -> (fun (V2644) -> begin (V2651 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2645) -> fun (V2646) -> fun (V2647) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2645, V2646, V2647)) end end end, fun (V2648) -> fun (V2649) -> fun (V2650) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2648, V2649, V2650)) end end end}, V2637, V2618))), case V2651 of {'Idris.Prelude.Types.Left', E2141} -> (fun (V2652) -> {'Idris.Prelude.Types.Left', V2652} end(E2141)); {'Idris.Prelude.Types.Right', E2142} -> (fun (V2653) -> begin (V2655 = (('un--getNArgs'(V0, V2644, V2653, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2654) -> ('Idris.Idris2.Builtin':'un--snd'(V2654)) end, V2640))))(V2618))), case V2655 of {'Idris.Prelude.Types.Left', E2143} -> (fun (V2656) -> {'Idris.Prelude.Types.Left', V2656} end(E2143)); {'Idris.Prelude.Types.Right', E2144} -> (fun (V2657) -> case V2657 of {'Idris.Compiler.CompileExpr.User', E2145, E2146} -> (fun (V2658, V2659) -> begin (V2661 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2660) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2644, V2660)) end, V2659, [], V2618))), case V2661 of {'Idris.Prelude.Types.Left', E2147} -> (fun (V2662) -> {'Idris.Prelude.Types.Left', V2662} end(E2147)); {'Idris.Prelude.Types.Right', E2148} -> (fun (V2663) -> begin (V2665 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2664) -> ('un--nfToCFType'(V0, V2636, V2, V2664)) end, V2663, [], V2618))), case V2665 of {'Idris.Prelude.Types.Left', E2149} -> (fun (V2666) -> {'Idris.Prelude.Types.Left', V2666} end(E2149)); {'Idris.Prelude.Types.Right', E2150} -> (fun (V2667) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2653, V2667}} end(E2150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2145, E2146)); {'Idris.Compiler.CompileExpr.Struct', E2151, E2152} -> (fun (V2668, V2669) -> begin (V2680 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2670) -> fun (V2671) -> case V2670 of {'Idris.Builtin.MkPair', E2153, E2154} -> (fun (V2672, V2673) -> begin (V2674 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2644, V2673))(V2671))), case V2674 of {'Idris.Prelude.Types.Left', E2155} -> (fun (V2675) -> {'Idris.Prelude.Types.Left', V2675} end(E2155)); {'Idris.Prelude.Types.Right', E2156} -> (fun (V2676) -> begin (V2677 = (('un--nfToCFType'(V0, V2636, 1, V2676))(V2671))), case V2677 of {'Idris.Prelude.Types.Left', E2157} -> (fun (V2678) -> {'Idris.Prelude.Types.Left', V2678} end(E2157)); {'Idris.Prelude.Types.Right', E2158} -> (fun (V2679) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2672, V2679}} end(E2158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2153, E2154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2669, [], V2618))), case V2680 of {'Idris.Prelude.Types.Left', E2159} -> (fun (V2681) -> {'Idris.Prelude.Types.Left', V2681} end(E2159)); {'Idris.Prelude.Types.Right', E2160} -> (fun (V2682) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2668, V2682}} end(E2160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2151, E2152)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2161} -> (fun (V2683) -> begin (V2684 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2644, V2683))(V2618))), case V2684 of {'Idris.Prelude.Types.Left', E2162} -> (fun (V2685) -> {'Idris.Prelude.Types.Left', V2685} end(E2162)); {'Idris.Prelude.Types.Right', E2163} -> (fun (V2686) -> begin (V2687 = (('un--nfToCFType'(V0, V2636, V2, V2686))(V2618))), case V2687 of {'Idris.Prelude.Types.Left', E2164} -> (fun (V2688) -> {'Idris.Prelude.Types.Left', V2688} end(E2164)); {'Idris.Prelude.Types.Right', E2165} -> (fun (V2689) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2689}} end(E2165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2134, E2135, E2136, E2137, E2138)); {'Idris.Core.Value.NType', E2166} -> (fun (V2690) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2166)); {'Idris.Core.Value.NErased', E2167, E2168} -> (fun (V2691, V2692) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2167, E2168)); _ -> begin (V2694 = begin (V2693 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2693} end), case V2694 of {'Idris.Prelude.Types.Left', E2128} -> (fun (V2695) -> {'Idris.Prelude.Types.Left', V2695} end(E2128)); {'Idris.Prelude.Types.Right', E2129} -> (fun (V2696) -> begin (V2697 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2696, {'Idris.Core.Env.Nil'}, V3, V2618))), case V2697 of {'Idris.Prelude.Types.Left', E2130} -> (fun (V2698) -> {'Idris.Prelude.Types.Left', V2698} end(E2130)); {'Idris.Prelude.Types.Right', E2131} -> (fun (V2699) -> begin (V2706 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2700) -> fun (V2701) -> fun (V2702) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2700, V2701, V2702)) end end end, fun (V2703) -> fun (V2704) -> fun (V2705) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2703, V2704, V2705)) end end end}, V2699, V2618))), case V2706 of {'Idris.Prelude.Types.Left', E2132} -> (fun (V2707) -> {'Idris.Prelude.Types.Left', V2707} end(E2132)); {'Idris.Prelude.Types.Right', E2133} -> (fun (V2708) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2708))))}, V2618)) end(E2133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2124, E2125, E2126, E2127)); _ -> fun (V2709) -> case V3 of {'Idris.Core.Value.NTCon', E2089, E2090, E2091, E2092, E2093} -> (fun (V2710, V2711, V2712, V2713, V2714) -> begin (V2716 = begin (V2715 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2715} end), case V2716 of {'Idris.Prelude.Types.Left', E2094} -> (fun (V2717) -> {'Idris.Prelude.Types.Left', V2717} end(E2094)); {'Idris.Prelude.Types.Right', E2095} -> (fun (V2718) -> begin (V2725 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2719) -> fun (V2720) -> fun (V2721) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2719, V2720, V2721)) end end end, fun (V2722) -> fun (V2723) -> fun (V2724) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2722, V2723, V2724)) end end end}, V2711, V2709))), case V2725 of {'Idris.Prelude.Types.Left', E2096} -> (fun (V2726) -> {'Idris.Prelude.Types.Left', V2726} end(E2096)); {'Idris.Prelude.Types.Right', E2097} -> (fun (V2727) -> begin (V2729 = (('un--getNArgs'(V0, V2718, V2727, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2728) -> ('Idris.Idris2.Builtin':'un--snd'(V2728)) end, V2714))))(V2709))), case V2729 of {'Idris.Prelude.Types.Left', E2098} -> (fun (V2730) -> {'Idris.Prelude.Types.Left', V2730} end(E2098)); {'Idris.Prelude.Types.Right', E2099} -> (fun (V2731) -> case V2731 of {'Idris.Compiler.CompileExpr.User', E2100, E2101} -> (fun (V2732, V2733) -> begin (V2735 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2734) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2718, V2734)) end, V2733, [], V2709))), case V2735 of {'Idris.Prelude.Types.Left', E2102} -> (fun (V2736) -> {'Idris.Prelude.Types.Left', V2736} end(E2102)); {'Idris.Prelude.Types.Right', E2103} -> (fun (V2737) -> begin (V2739 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2738) -> ('un--nfToCFType'(V0, V2710, V2, V2738)) end, V2737, [], V2709))), case V2739 of {'Idris.Prelude.Types.Left', E2104} -> (fun (V2740) -> {'Idris.Prelude.Types.Left', V2740} end(E2104)); {'Idris.Prelude.Types.Right', E2105} -> (fun (V2741) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2727, V2741}} end(E2105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2100, E2101)); {'Idris.Compiler.CompileExpr.Struct', E2106, E2107} -> (fun (V2742, V2743) -> begin (V2754 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2744) -> fun (V2745) -> case V2744 of {'Idris.Builtin.MkPair', E2108, E2109} -> (fun (V2746, V2747) -> begin (V2748 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2718, V2747))(V2745))), case V2748 of {'Idris.Prelude.Types.Left', E2110} -> (fun (V2749) -> {'Idris.Prelude.Types.Left', V2749} end(E2110)); {'Idris.Prelude.Types.Right', E2111} -> (fun (V2750) -> begin (V2751 = (('un--nfToCFType'(V0, V2710, 1, V2750))(V2745))), case V2751 of {'Idris.Prelude.Types.Left', E2112} -> (fun (V2752) -> {'Idris.Prelude.Types.Left', V2752} end(E2112)); {'Idris.Prelude.Types.Right', E2113} -> (fun (V2753) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2746, V2753}} end(E2113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2108, E2109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2743, [], V2709))), case V2754 of {'Idris.Prelude.Types.Left', E2114} -> (fun (V2755) -> {'Idris.Prelude.Types.Left', V2755} end(E2114)); {'Idris.Prelude.Types.Right', E2115} -> (fun (V2756) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2742, V2756}} end(E2115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2106, E2107)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2116} -> (fun (V2757) -> begin (V2758 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2718, V2757))(V2709))), case V2758 of {'Idris.Prelude.Types.Left', E2117} -> (fun (V2759) -> {'Idris.Prelude.Types.Left', V2759} end(E2117)); {'Idris.Prelude.Types.Right', E2118} -> (fun (V2760) -> begin (V2761 = (('un--nfToCFType'(V0, V2710, V2, V2760))(V2709))), case V2761 of {'Idris.Prelude.Types.Left', E2119} -> (fun (V2762) -> {'Idris.Prelude.Types.Left', V2762} end(E2119)); {'Idris.Prelude.Types.Right', E2120} -> (fun (V2763) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2763}} end(E2120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2099)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2095)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2089, E2090, E2091, E2092, E2093)); {'Idris.Core.Value.NType', E2121} -> (fun (V2764) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2121)); {'Idris.Core.Value.NErased', E2122, E2123} -> (fun (V2765, V2766) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2122, E2123)); _ -> begin (V2768 = begin (V2767 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2767} end), case V2768 of {'Idris.Prelude.Types.Left', E2083} -> (fun (V2769) -> {'Idris.Prelude.Types.Left', V2769} end(E2083)); {'Idris.Prelude.Types.Right', E2084} -> (fun (V2770) -> begin (V2771 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2770, {'Idris.Core.Env.Nil'}, V3, V2709))), case V2771 of {'Idris.Prelude.Types.Left', E2085} -> (fun (V2772) -> {'Idris.Prelude.Types.Left', V2772} end(E2085)); {'Idris.Prelude.Types.Right', E2086} -> (fun (V2773) -> begin (V2780 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2774) -> fun (V2775) -> fun (V2776) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2774, V2775, V2776)) end end end, fun (V2777) -> fun (V2778) -> fun (V2779) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2777, V2778, V2779)) end end end}, V2773, V2709))), case V2780 of {'Idris.Prelude.Types.Left', E2087} -> (fun (V2781) -> {'Idris.Prelude.Types.Left', V2781} end(E2087)); {'Idris.Prelude.Types.Right', E2088} -> (fun (V2782) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2782))))}, V2709)) end(E2088)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V2783) -> case V3 of {'Idris.Core.Value.NBind', E2222, E2223, E2224, E2225} -> (fun (V2784, V2785, V2786, V2787) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V2784, <<"Function types not allowed in a foreign struct"/utf8>>}, V2783)) end(E2222, E2223, E2224, E2225)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2187, E2188, E2189, E2190, E2191} -> (fun (V2788, V2789, V2790, V2791, V2792) -> begin (V2794 = begin (V2793 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2793} end), case V2794 of {'Idris.Prelude.Types.Left', E2192} -> (fun (V2795) -> {'Idris.Prelude.Types.Left', V2795} end(E2192)); {'Idris.Prelude.Types.Right', E2193} -> (fun (V2796) -> begin (V2803 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2797) -> fun (V2798) -> fun (V2799) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2797, V2798, V2799)) end end end, fun (V2800) -> fun (V2801) -> fun (V2802) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2800, V2801, V2802)) end end end}, V2789, V2783))), case V2803 of {'Idris.Prelude.Types.Left', E2194} -> (fun (V2804) -> {'Idris.Prelude.Types.Left', V2804} end(E2194)); {'Idris.Prelude.Types.Right', E2195} -> (fun (V2805) -> begin (V2807 = (('un--getNArgs'(V0, V2796, V2805, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2806) -> ('Idris.Idris2.Builtin':'un--snd'(V2806)) end, V2792))))(V2783))), case V2807 of {'Idris.Prelude.Types.Left', E2196} -> (fun (V2808) -> {'Idris.Prelude.Types.Left', V2808} end(E2196)); {'Idris.Prelude.Types.Right', E2197} -> (fun (V2809) -> case V2809 of {'Idris.Compiler.CompileExpr.User', E2198, E2199} -> (fun (V2810, V2811) -> begin (V2813 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2812) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2796, V2812)) end, V2811, [], V2783))), case V2813 of {'Idris.Prelude.Types.Left', E2200} -> (fun (V2814) -> {'Idris.Prelude.Types.Left', V2814} end(E2200)); {'Idris.Prelude.Types.Right', E2201} -> (fun (V2815) -> begin (V2817 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2816) -> ('un--nfToCFType'(V0, V2788, V2, V2816)) end, V2815, [], V2783))), case V2817 of {'Idris.Prelude.Types.Left', E2202} -> (fun (V2818) -> {'Idris.Prelude.Types.Left', V2818} end(E2202)); {'Idris.Prelude.Types.Right', E2203} -> (fun (V2819) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2805, V2819}} end(E2203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2198, E2199)); {'Idris.Compiler.CompileExpr.Struct', E2204, E2205} -> (fun (V2820, V2821) -> begin (V2832 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2822) -> fun (V2823) -> case V2822 of {'Idris.Builtin.MkPair', E2206, E2207} -> (fun (V2824, V2825) -> begin (V2826 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2796, V2825))(V2823))), case V2826 of {'Idris.Prelude.Types.Left', E2208} -> (fun (V2827) -> {'Idris.Prelude.Types.Left', V2827} end(E2208)); {'Idris.Prelude.Types.Right', E2209} -> (fun (V2828) -> begin (V2829 = (('un--nfToCFType'(V0, V2788, 1, V2828))(V2823))), case V2829 of {'Idris.Prelude.Types.Left', E2210} -> (fun (V2830) -> {'Idris.Prelude.Types.Left', V2830} end(E2210)); {'Idris.Prelude.Types.Right', E2211} -> (fun (V2831) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2824, V2831}} end(E2211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2206, E2207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2821, [], V2783))), case V2832 of {'Idris.Prelude.Types.Left', E2212} -> (fun (V2833) -> {'Idris.Prelude.Types.Left', V2833} end(E2212)); {'Idris.Prelude.Types.Right', E2213} -> (fun (V2834) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2820, V2834}} end(E2213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2204, E2205)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2214} -> (fun (V2835) -> begin (V2836 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2796, V2835))(V2783))), case V2836 of {'Idris.Prelude.Types.Left', E2215} -> (fun (V2837) -> {'Idris.Prelude.Types.Left', V2837} end(E2215)); {'Idris.Prelude.Types.Right', E2216} -> (fun (V2838) -> begin (V2839 = (('un--nfToCFType'(V0, V2788, V2, V2838))(V2783))), case V2839 of {'Idris.Prelude.Types.Left', E2217} -> (fun (V2840) -> {'Idris.Prelude.Types.Left', V2840} end(E2217)); {'Idris.Prelude.Types.Right', E2218} -> (fun (V2841) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2841}} end(E2218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2187, E2188, E2189, E2190, E2191)); {'Idris.Core.Value.NType', E2219} -> (fun (V2842) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2219)); {'Idris.Core.Value.NErased', E2220, E2221} -> (fun (V2843, V2844) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2220, E2221)); _ -> begin (V2846 = begin (V2845 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2845} end), case V2846 of {'Idris.Prelude.Types.Left', E2181} -> (fun (V2847) -> {'Idris.Prelude.Types.Left', V2847} end(E2181)); {'Idris.Prelude.Types.Right', E2182} -> (fun (V2848) -> begin (V2849 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2848, {'Idris.Core.Env.Nil'}, V3, V2783))), case V2849 of {'Idris.Prelude.Types.Left', E2183} -> (fun (V2850) -> {'Idris.Prelude.Types.Left', V2850} end(E2183)); {'Idris.Prelude.Types.Right', E2184} -> (fun (V2851) -> begin (V2858 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2852) -> fun (V2853) -> fun (V2854) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2852, V2853, V2854)) end end end, fun (V2855) -> fun (V2856) -> fun (V2857) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2855, V2856, V2857)) end end end}, V2851, V2783))), case V2858 of {'Idris.Prelude.Types.Left', E2185} -> (fun (V2859) -> {'Idris.Prelude.Types.Left', V2859} end(E2185)); {'Idris.Prelude.Types.Right', E2186} -> (fun (V2860) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2860))))}, V2783)) end(E2186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V2861) -> case V3 of {'Idris.Core.Value.NTCon', E2048, E2049, E2050, E2051, E2052} -> (fun (V2862, V2863, V2864, V2865, V2866) -> begin (V2868 = begin (V2867 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2867} end), case V2868 of {'Idris.Prelude.Types.Left', E2053} -> (fun (V2869) -> {'Idris.Prelude.Types.Left', V2869} end(E2053)); {'Idris.Prelude.Types.Right', E2054} -> (fun (V2870) -> begin (V2877 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2871) -> fun (V2872) -> fun (V2873) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2871, V2872, V2873)) end end end, fun (V2874) -> fun (V2875) -> fun (V2876) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2874, V2875, V2876)) end end end}, V2863, V2861))), case V2877 of {'Idris.Prelude.Types.Left', E2055} -> (fun (V2878) -> {'Idris.Prelude.Types.Left', V2878} end(E2055)); {'Idris.Prelude.Types.Right', E2056} -> (fun (V2879) -> begin (V2881 = (('un--getNArgs'(V0, V2870, V2879, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2880) -> ('Idris.Idris2.Builtin':'un--snd'(V2880)) end, V2866))))(V2861))), case V2881 of {'Idris.Prelude.Types.Left', E2057} -> (fun (V2882) -> {'Idris.Prelude.Types.Left', V2882} end(E2057)); {'Idris.Prelude.Types.Right', E2058} -> (fun (V2883) -> case V2883 of {'Idris.Compiler.CompileExpr.User', E2059, E2060} -> (fun (V2884, V2885) -> begin (V2887 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2886) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2870, V2886)) end, V2885, [], V2861))), case V2887 of {'Idris.Prelude.Types.Left', E2061} -> (fun (V2888) -> {'Idris.Prelude.Types.Left', V2888} end(E2061)); {'Idris.Prelude.Types.Right', E2062} -> (fun (V2889) -> begin (V2891 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2890) -> ('un--nfToCFType'(V0, V2862, V2, V2890)) end, V2889, [], V2861))), case V2891 of {'Idris.Prelude.Types.Left', E2063} -> (fun (V2892) -> {'Idris.Prelude.Types.Left', V2892} end(E2063)); {'Idris.Prelude.Types.Right', E2064} -> (fun (V2893) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2879, V2893}} end(E2064)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2062)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2059, E2060)); {'Idris.Compiler.CompileExpr.Struct', E2065, E2066} -> (fun (V2894, V2895) -> begin (V2906 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2896) -> fun (V2897) -> case V2896 of {'Idris.Builtin.MkPair', E2067, E2068} -> (fun (V2898, V2899) -> begin (V2900 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2870, V2899))(V2897))), case V2900 of {'Idris.Prelude.Types.Left', E2069} -> (fun (V2901) -> {'Idris.Prelude.Types.Left', V2901} end(E2069)); {'Idris.Prelude.Types.Right', E2070} -> (fun (V2902) -> begin (V2903 = (('un--nfToCFType'(V0, V2862, 1, V2902))(V2897))), case V2903 of {'Idris.Prelude.Types.Left', E2071} -> (fun (V2904) -> {'Idris.Prelude.Types.Left', V2904} end(E2071)); {'Idris.Prelude.Types.Right', E2072} -> (fun (V2905) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2898, V2905}} end(E2072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2067, E2068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2895, [], V2861))), case V2906 of {'Idris.Prelude.Types.Left', E2073} -> (fun (V2907) -> {'Idris.Prelude.Types.Left', V2907} end(E2073)); {'Idris.Prelude.Types.Right', E2074} -> (fun (V2908) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2894, V2908}} end(E2074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2065, E2066)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2075} -> (fun (V2909) -> begin (V2910 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2870, V2909))(V2861))), case V2910 of {'Idris.Prelude.Types.Left', E2076} -> (fun (V2911) -> {'Idris.Prelude.Types.Left', V2911} end(E2076)); {'Idris.Prelude.Types.Right', E2077} -> (fun (V2912) -> begin (V2913 = (('un--nfToCFType'(V0, V2862, V2, V2912))(V2861))), case V2913 of {'Idris.Prelude.Types.Left', E2078} -> (fun (V2914) -> {'Idris.Prelude.Types.Left', V2914} end(E2078)); {'Idris.Prelude.Types.Right', E2079} -> (fun (V2915) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2915}} end(E2079)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2077)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2075)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2058)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2056)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2054)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2048, E2049, E2050, E2051, E2052)); {'Idris.Core.Value.NType', E2080} -> (fun (V2916) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2080)); {'Idris.Core.Value.NErased', E2081, E2082} -> (fun (V2917, V2918) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2081, E2082)); _ -> begin (V2920 = begin (V2919 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2919} end), case V2920 of {'Idris.Prelude.Types.Left', E2042} -> (fun (V2921) -> {'Idris.Prelude.Types.Left', V2921} end(E2042)); {'Idris.Prelude.Types.Right', E2043} -> (fun (V2922) -> begin (V2923 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V2922, {'Idris.Core.Env.Nil'}, V3, V2861))), case V2923 of {'Idris.Prelude.Types.Left', E2044} -> (fun (V2924) -> {'Idris.Prelude.Types.Left', V2924} end(E2044)); {'Idris.Prelude.Types.Right', E2045} -> (fun (V2925) -> begin (V2932 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2926) -> fun (V2927) -> fun (V2928) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2926, V2927, V2928)) end end end, fun (V2929) -> fun (V2930) -> fun (V2931) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2929, V2930, V2931)) end end end}, V2925, V2861))), case V2932 of {'Idris.Prelude.Types.Left', E2046} -> (fun (V2933) -> {'Idris.Prelude.Types.Left', V2933} end(E2046)); {'Idris.Prelude.Types.Right', E2047} -> (fun (V2934) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2934))))}, V2861)) end(E2047)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2045)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2043)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2040, E2041)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1938, E1939, E1940, E1941} -> (fun (V2935, V2936, V2937, V2938) -> fun (V2939) -> case V2937 of {'Idris.Core.TT.Pi', E1983, E1984, E1985, E1986} -> (fun (V2940, V2941, V2942, V2943) -> begin (V2945 = begin (V2944 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2944} end), case V2945 of {'Idris.Prelude.Types.Left', E1987} -> (fun (V2946) -> {'Idris.Prelude.Types.Left', V2946} end(E1987)); {'Idris.Prelude.Types.Right', E1988} -> (fun (V2947) -> begin (V2948 = (('un--nfToCFType'(V0, V2935, 0, V2943))(V2939))), case V2948 of {'Idris.Prelude.Types.Left', E1989} -> (fun (V2949) -> {'Idris.Prelude.Types.Left', V2949} end(E1989)); {'Idris.Prelude.Types.Right', E1990} -> (fun (V2950) -> begin (V2951 = (((V2938(V2947))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2935, 0}))))(V2939))), case V2951 of {'Idris.Prelude.Types.Left', E1991} -> (fun (V2952) -> {'Idris.Prelude.Types.Left', V2952} end(E1991)); {'Idris.Prelude.Types.Right', E1992} -> (fun (V2953) -> begin (V2954 = (('un--nfToCFType'(V0, V2935, 0, V2953))(V2939))), case V2954 of {'Idris.Prelude.Types.Left', E1993} -> (fun (V2955) -> {'Idris.Prelude.Types.Left', V2955} end(E1993)); {'Idris.Prelude.Types.Right', E1994} -> (fun (V2956) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2950, V2956}} end(E1994)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1992)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1983, E1984, E1985, E1986)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1948, E1949, E1950, E1951, E1952} -> (fun (V2957, V2958, V2959, V2960, V2961) -> begin (V2963 = begin (V2962 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2962} end), case V2963 of {'Idris.Prelude.Types.Left', E1953} -> (fun (V2964) -> {'Idris.Prelude.Types.Left', V2964} end(E1953)); {'Idris.Prelude.Types.Right', E1954} -> (fun (V2965) -> begin (V2972 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2966) -> fun (V2967) -> fun (V2968) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2966, V2967, V2968)) end end end, fun (V2969) -> fun (V2970) -> fun (V2971) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2969, V2970, V2971)) end end end}, V2958, V2939))), case V2972 of {'Idris.Prelude.Types.Left', E1955} -> (fun (V2973) -> {'Idris.Prelude.Types.Left', V2973} end(E1955)); {'Idris.Prelude.Types.Right', E1956} -> (fun (V2974) -> begin (V2976 = (('un--getNArgs'(V0, V2965, V2974, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2975) -> ('Idris.Idris2.Builtin':'un--snd'(V2975)) end, V2961))))(V2939))), case V2976 of {'Idris.Prelude.Types.Left', E1957} -> (fun (V2977) -> {'Idris.Prelude.Types.Left', V2977} end(E1957)); {'Idris.Prelude.Types.Right', E1958} -> (fun (V2978) -> case V2978 of {'Idris.Compiler.CompileExpr.User', E1959, E1960} -> (fun (V2979, V2980) -> begin (V2982 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2981) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2965, V2981)) end, V2980, [], V2939))), case V2982 of {'Idris.Prelude.Types.Left', E1961} -> (fun (V2983) -> {'Idris.Prelude.Types.Left', V2983} end(E1961)); {'Idris.Prelude.Types.Right', E1962} -> (fun (V2984) -> begin (V2986 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2985) -> ('un--nfToCFType'(V0, V2957, V2, V2985)) end, V2984, [], V2939))), case V2986 of {'Idris.Prelude.Types.Left', E1963} -> (fun (V2987) -> {'Idris.Prelude.Types.Left', V2987} end(E1963)); {'Idris.Prelude.Types.Right', E1964} -> (fun (V2988) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2974, V2988}} end(E1964)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1962)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1959, E1960)); {'Idris.Compiler.CompileExpr.Struct', E1965, E1966} -> (fun (V2989, V2990) -> begin (V3001 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2991) -> fun (V2992) -> case V2991 of {'Idris.Builtin.MkPair', E1967, E1968} -> (fun (V2993, V2994) -> begin (V2995 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2965, V2994))(V2992))), case V2995 of {'Idris.Prelude.Types.Left', E1969} -> (fun (V2996) -> {'Idris.Prelude.Types.Left', V2996} end(E1969)); {'Idris.Prelude.Types.Right', E1970} -> (fun (V2997) -> begin (V2998 = (('un--nfToCFType'(V0, V2957, 1, V2997))(V2992))), case V2998 of {'Idris.Prelude.Types.Left', E1971} -> (fun (V2999) -> {'Idris.Prelude.Types.Left', V2999} end(E1971)); {'Idris.Prelude.Types.Right', E1972} -> (fun (V3000) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2993, V3000}} end(E1972)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1970)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1967, E1968)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2990, [], V2939))), case V3001 of {'Idris.Prelude.Types.Left', E1973} -> (fun (V3002) -> {'Idris.Prelude.Types.Left', V3002} end(E1973)); {'Idris.Prelude.Types.Right', E1974} -> (fun (V3003) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2989, V3003}} end(E1974)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1965, E1966)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1975} -> (fun (V3004) -> begin (V3005 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V2965, V3004))(V2939))), case V3005 of {'Idris.Prelude.Types.Left', E1976} -> (fun (V3006) -> {'Idris.Prelude.Types.Left', V3006} end(E1976)); {'Idris.Prelude.Types.Right', E1977} -> (fun (V3007) -> begin (V3008 = (('un--nfToCFType'(V0, V2957, V2, V3007))(V2939))), case V3008 of {'Idris.Prelude.Types.Left', E1978} -> (fun (V3009) -> {'Idris.Prelude.Types.Left', V3009} end(E1978)); {'Idris.Prelude.Types.Right', E1979} -> (fun (V3010) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3010}} end(E1979)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1977)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1975)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1948, E1949, E1950, E1951, E1952)); {'Idris.Core.Value.NType', E1980} -> (fun (V3011) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1980)); {'Idris.Core.Value.NErased', E1981, E1982} -> (fun (V3012, V3013) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1981, E1982)); _ -> begin (V3015 = begin (V3014 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3014} end), case V3015 of {'Idris.Prelude.Types.Left', E1942} -> (fun (V3016) -> {'Idris.Prelude.Types.Left', V3016} end(E1942)); {'Idris.Prelude.Types.Right', E1943} -> (fun (V3017) -> begin (V3018 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3017, {'Idris.Core.Env.Nil'}, V3, V2939))), case V3018 of {'Idris.Prelude.Types.Left', E1944} -> (fun (V3019) -> {'Idris.Prelude.Types.Left', V3019} end(E1944)); {'Idris.Prelude.Types.Right', E1945} -> (fun (V3020) -> begin (V3027 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3021) -> fun (V3022) -> fun (V3023) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3021, V3022, V3023)) end end end, fun (V3024) -> fun (V3025) -> fun (V3026) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3024, V3025, V3026)) end end end}, V3020, V2939))), case V3027 of {'Idris.Prelude.Types.Left', E1946} -> (fun (V3028) -> {'Idris.Prelude.Types.Left', V3028} end(E1946)); {'Idris.Prelude.Types.Right', E1947} -> (fun (V3029) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3029))))}, V2939)) end(E1947)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1945)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1943)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1938, E1939, E1940, E1941)); _ -> fun (V3030) -> case V3 of {'Idris.Core.Value.NTCon', E1903, E1904, E1905, E1906, E1907} -> (fun (V3031, V3032, V3033, V3034, V3035) -> begin (V3037 = begin (V3036 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3036} end), case V3037 of {'Idris.Prelude.Types.Left', E1908} -> (fun (V3038) -> {'Idris.Prelude.Types.Left', V3038} end(E1908)); {'Idris.Prelude.Types.Right', E1909} -> (fun (V3039) -> begin (V3046 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3040) -> fun (V3041) -> fun (V3042) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3040, V3041, V3042)) end end end, fun (V3043) -> fun (V3044) -> fun (V3045) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3043, V3044, V3045)) end end end}, V3032, V3030))), case V3046 of {'Idris.Prelude.Types.Left', E1910} -> (fun (V3047) -> {'Idris.Prelude.Types.Left', V3047} end(E1910)); {'Idris.Prelude.Types.Right', E1911} -> (fun (V3048) -> begin (V3050 = (('un--getNArgs'(V0, V3039, V3048, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3049) -> ('Idris.Idris2.Builtin':'un--snd'(V3049)) end, V3035))))(V3030))), case V3050 of {'Idris.Prelude.Types.Left', E1912} -> (fun (V3051) -> {'Idris.Prelude.Types.Left', V3051} end(E1912)); {'Idris.Prelude.Types.Right', E1913} -> (fun (V3052) -> case V3052 of {'Idris.Compiler.CompileExpr.User', E1914, E1915} -> (fun (V3053, V3054) -> begin (V3056 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3055) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3039, V3055)) end, V3054, [], V3030))), case V3056 of {'Idris.Prelude.Types.Left', E1916} -> (fun (V3057) -> {'Idris.Prelude.Types.Left', V3057} end(E1916)); {'Idris.Prelude.Types.Right', E1917} -> (fun (V3058) -> begin (V3060 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3059) -> ('un--nfToCFType'(V0, V3031, V2, V3059)) end, V3058, [], V3030))), case V3060 of {'Idris.Prelude.Types.Left', E1918} -> (fun (V3061) -> {'Idris.Prelude.Types.Left', V3061} end(E1918)); {'Idris.Prelude.Types.Right', E1919} -> (fun (V3062) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3048, V3062}} end(E1919)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1917)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1914, E1915)); {'Idris.Compiler.CompileExpr.Struct', E1920, E1921} -> (fun (V3063, V3064) -> begin (V3075 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3065) -> fun (V3066) -> case V3065 of {'Idris.Builtin.MkPair', E1922, E1923} -> (fun (V3067, V3068) -> begin (V3069 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3039, V3068))(V3066))), case V3069 of {'Idris.Prelude.Types.Left', E1924} -> (fun (V3070) -> {'Idris.Prelude.Types.Left', V3070} end(E1924)); {'Idris.Prelude.Types.Right', E1925} -> (fun (V3071) -> begin (V3072 = (('un--nfToCFType'(V0, V3031, 1, V3071))(V3066))), case V3072 of {'Idris.Prelude.Types.Left', E1926} -> (fun (V3073) -> {'Idris.Prelude.Types.Left', V3073} end(E1926)); {'Idris.Prelude.Types.Right', E1927} -> (fun (V3074) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3067, V3074}} end(E1927)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1925)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1922, E1923)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3064, [], V3030))), case V3075 of {'Idris.Prelude.Types.Left', E1928} -> (fun (V3076) -> {'Idris.Prelude.Types.Left', V3076} end(E1928)); {'Idris.Prelude.Types.Right', E1929} -> (fun (V3077) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3063, V3077}} end(E1929)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1920, E1921)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1930} -> (fun (V3078) -> begin (V3079 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3039, V3078))(V3030))), case V3079 of {'Idris.Prelude.Types.Left', E1931} -> (fun (V3080) -> {'Idris.Prelude.Types.Left', V3080} end(E1931)); {'Idris.Prelude.Types.Right', E1932} -> (fun (V3081) -> begin (V3082 = (('un--nfToCFType'(V0, V3031, V2, V3081))(V3030))), case V3082 of {'Idris.Prelude.Types.Left', E1933} -> (fun (V3083) -> {'Idris.Prelude.Types.Left', V3083} end(E1933)); {'Idris.Prelude.Types.Right', E1934} -> (fun (V3084) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3084}} end(E1934)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1932)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1930)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1913)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1911)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1909)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1903, E1904, E1905, E1906, E1907)); {'Idris.Core.Value.NType', E1935} -> (fun (V3085) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1935)); {'Idris.Core.Value.NErased', E1936, E1937} -> (fun (V3086, V3087) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1936, E1937)); _ -> begin (V3089 = begin (V3088 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3088} end), case V3089 of {'Idris.Prelude.Types.Left', E1897} -> (fun (V3090) -> {'Idris.Prelude.Types.Left', V3090} end(E1897)); {'Idris.Prelude.Types.Right', E1898} -> (fun (V3091) -> begin (V3092 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3091, {'Idris.Core.Env.Nil'}, V3, V3030))), case V3092 of {'Idris.Prelude.Types.Left', E1899} -> (fun (V3093) -> {'Idris.Prelude.Types.Left', V3093} end(E1899)); {'Idris.Prelude.Types.Right', E1900} -> (fun (V3094) -> begin (V3101 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3095) -> fun (V3096) -> fun (V3097) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3095, V3096, V3097)) end end end, fun (V3098) -> fun (V3099) -> fun (V3100) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3098, V3099, V3100)) end end end}, V3094, V3030))), case V3101 of {'Idris.Prelude.Types.Left', E1901} -> (fun (V3102) -> {'Idris.Prelude.Types.Left', V3102} end(E1901)); {'Idris.Prelude.Types.Right', E1902} -> (fun (V3103) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3103))))}, V3030)) end(E1902)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1900)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1898)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V3104) -> case V3 of {'Idris.Core.Value.NBind', E2036, E2037, E2038, E2039} -> (fun (V3105, V3106, V3107, V3108) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V3105, <<"Function types not allowed in a foreign struct"/utf8>>}, V3104)) end(E2036, E2037, E2038, E2039)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2001, E2002, E2003, E2004, E2005} -> (fun (V3109, V3110, V3111, V3112, V3113) -> begin (V3115 = begin (V3114 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3114} end), case V3115 of {'Idris.Prelude.Types.Left', E2006} -> (fun (V3116) -> {'Idris.Prelude.Types.Left', V3116} end(E2006)); {'Idris.Prelude.Types.Right', E2007} -> (fun (V3117) -> begin (V3124 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3118) -> fun (V3119) -> fun (V3120) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3118, V3119, V3120)) end end end, fun (V3121) -> fun (V3122) -> fun (V3123) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3121, V3122, V3123)) end end end}, V3110, V3104))), case V3124 of {'Idris.Prelude.Types.Left', E2008} -> (fun (V3125) -> {'Idris.Prelude.Types.Left', V3125} end(E2008)); {'Idris.Prelude.Types.Right', E2009} -> (fun (V3126) -> begin (V3128 = (('un--getNArgs'(V0, V3117, V3126, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3127) -> ('Idris.Idris2.Builtin':'un--snd'(V3127)) end, V3113))))(V3104))), case V3128 of {'Idris.Prelude.Types.Left', E2010} -> (fun (V3129) -> {'Idris.Prelude.Types.Left', V3129} end(E2010)); {'Idris.Prelude.Types.Right', E2011} -> (fun (V3130) -> case V3130 of {'Idris.Compiler.CompileExpr.User', E2012, E2013} -> (fun (V3131, V3132) -> begin (V3134 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3133) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3117, V3133)) end, V3132, [], V3104))), case V3134 of {'Idris.Prelude.Types.Left', E2014} -> (fun (V3135) -> {'Idris.Prelude.Types.Left', V3135} end(E2014)); {'Idris.Prelude.Types.Right', E2015} -> (fun (V3136) -> begin (V3138 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3137) -> ('un--nfToCFType'(V0, V3109, V2, V3137)) end, V3136, [], V3104))), case V3138 of {'Idris.Prelude.Types.Left', E2016} -> (fun (V3139) -> {'Idris.Prelude.Types.Left', V3139} end(E2016)); {'Idris.Prelude.Types.Right', E2017} -> (fun (V3140) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3126, V3140}} end(E2017)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2015)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2012, E2013)); {'Idris.Compiler.CompileExpr.Struct', E2018, E2019} -> (fun (V3141, V3142) -> begin (V3153 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3143) -> fun (V3144) -> case V3143 of {'Idris.Builtin.MkPair', E2020, E2021} -> (fun (V3145, V3146) -> begin (V3147 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3117, V3146))(V3144))), case V3147 of {'Idris.Prelude.Types.Left', E2022} -> (fun (V3148) -> {'Idris.Prelude.Types.Left', V3148} end(E2022)); {'Idris.Prelude.Types.Right', E2023} -> (fun (V3149) -> begin (V3150 = (('un--nfToCFType'(V0, V3109, 1, V3149))(V3144))), case V3150 of {'Idris.Prelude.Types.Left', E2024} -> (fun (V3151) -> {'Idris.Prelude.Types.Left', V3151} end(E2024)); {'Idris.Prelude.Types.Right', E2025} -> (fun (V3152) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3145, V3152}} end(E2025)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2020, E2021)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3142, [], V3104))), case V3153 of {'Idris.Prelude.Types.Left', E2026} -> (fun (V3154) -> {'Idris.Prelude.Types.Left', V3154} end(E2026)); {'Idris.Prelude.Types.Right', E2027} -> (fun (V3155) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3141, V3155}} end(E2027)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2018, E2019)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2028} -> (fun (V3156) -> begin (V3157 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3117, V3156))(V3104))), case V3157 of {'Idris.Prelude.Types.Left', E2029} -> (fun (V3158) -> {'Idris.Prelude.Types.Left', V3158} end(E2029)); {'Idris.Prelude.Types.Right', E2030} -> (fun (V3159) -> begin (V3160 = (('un--nfToCFType'(V0, V3109, V2, V3159))(V3104))), case V3160 of {'Idris.Prelude.Types.Left', E2031} -> (fun (V3161) -> {'Idris.Prelude.Types.Left', V3161} end(E2031)); {'Idris.Prelude.Types.Right', E2032} -> (fun (V3162) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3162}} end(E2032)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2030)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2028)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2011)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2009)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2007)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2001, E2002, E2003, E2004, E2005)); {'Idris.Core.Value.NType', E2033} -> (fun (V3163) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E2033)); {'Idris.Core.Value.NErased', E2034, E2035} -> (fun (V3164, V3165) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E2034, E2035)); _ -> begin (V3167 = begin (V3166 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3166} end), case V3167 of {'Idris.Prelude.Types.Left', E1995} -> (fun (V3168) -> {'Idris.Prelude.Types.Left', V3168} end(E1995)); {'Idris.Prelude.Types.Right', E1996} -> (fun (V3169) -> begin (V3170 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3169, {'Idris.Core.Env.Nil'}, V3, V3104))), case V3170 of {'Idris.Prelude.Types.Left', E1997} -> (fun (V3171) -> {'Idris.Prelude.Types.Left', V3171} end(E1997)); {'Idris.Prelude.Types.Right', E1998} -> (fun (V3172) -> begin (V3179 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3173) -> fun (V3174) -> fun (V3175) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3173, V3174, V3175)) end end end, fun (V3176) -> fun (V3177) -> fun (V3178) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3176, V3177, V3178)) end end end}, V3172, V3104))), case V3179 of {'Idris.Prelude.Types.Left', E1999} -> (fun (V3180) -> {'Idris.Prelude.Types.Left', V3180} end(E1999)); {'Idris.Prelude.Types.Right', E2000} -> (fun (V3181) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3181))))}, V3104)) end(E2000)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1998)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1996)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V3182) -> case V3 of {'Idris.Core.Value.NTCon', E1862, E1863, E1864, E1865, E1866} -> (fun (V3183, V3184, V3185, V3186, V3187) -> begin (V3189 = begin (V3188 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3188} end), case V3189 of {'Idris.Prelude.Types.Left', E1867} -> (fun (V3190) -> {'Idris.Prelude.Types.Left', V3190} end(E1867)); {'Idris.Prelude.Types.Right', E1868} -> (fun (V3191) -> begin (V3198 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3192) -> fun (V3193) -> fun (V3194) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3192, V3193, V3194)) end end end, fun (V3195) -> fun (V3196) -> fun (V3197) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3195, V3196, V3197)) end end end}, V3184, V3182))), case V3198 of {'Idris.Prelude.Types.Left', E1869} -> (fun (V3199) -> {'Idris.Prelude.Types.Left', V3199} end(E1869)); {'Idris.Prelude.Types.Right', E1870} -> (fun (V3200) -> begin (V3202 = (('un--getNArgs'(V0, V3191, V3200, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3201) -> ('Idris.Idris2.Builtin':'un--snd'(V3201)) end, V3187))))(V3182))), case V3202 of {'Idris.Prelude.Types.Left', E1871} -> (fun (V3203) -> {'Idris.Prelude.Types.Left', V3203} end(E1871)); {'Idris.Prelude.Types.Right', E1872} -> (fun (V3204) -> case V3204 of {'Idris.Compiler.CompileExpr.User', E1873, E1874} -> (fun (V3205, V3206) -> begin (V3208 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3207) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3191, V3207)) end, V3206, [], V3182))), case V3208 of {'Idris.Prelude.Types.Left', E1875} -> (fun (V3209) -> {'Idris.Prelude.Types.Left', V3209} end(E1875)); {'Idris.Prelude.Types.Right', E1876} -> (fun (V3210) -> begin (V3212 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3211) -> ('un--nfToCFType'(V0, V3183, V2, V3211)) end, V3210, [], V3182))), case V3212 of {'Idris.Prelude.Types.Left', E1877} -> (fun (V3213) -> {'Idris.Prelude.Types.Left', V3213} end(E1877)); {'Idris.Prelude.Types.Right', E1878} -> (fun (V3214) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3200, V3214}} end(E1878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1873, E1874)); {'Idris.Compiler.CompileExpr.Struct', E1879, E1880} -> (fun (V3215, V3216) -> begin (V3227 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3217) -> fun (V3218) -> case V3217 of {'Idris.Builtin.MkPair', E1881, E1882} -> (fun (V3219, V3220) -> begin (V3221 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3191, V3220))(V3218))), case V3221 of {'Idris.Prelude.Types.Left', E1883} -> (fun (V3222) -> {'Idris.Prelude.Types.Left', V3222} end(E1883)); {'Idris.Prelude.Types.Right', E1884} -> (fun (V3223) -> begin (V3224 = (('un--nfToCFType'(V0, V3183, 1, V3223))(V3218))), case V3224 of {'Idris.Prelude.Types.Left', E1885} -> (fun (V3225) -> {'Idris.Prelude.Types.Left', V3225} end(E1885)); {'Idris.Prelude.Types.Right', E1886} -> (fun (V3226) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3219, V3226}} end(E1886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1881, E1882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3216, [], V3182))), case V3227 of {'Idris.Prelude.Types.Left', E1887} -> (fun (V3228) -> {'Idris.Prelude.Types.Left', V3228} end(E1887)); {'Idris.Prelude.Types.Right', E1888} -> (fun (V3229) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3215, V3229}} end(E1888)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1879, E1880)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1889} -> (fun (V3230) -> begin (V3231 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3191, V3230))(V3182))), case V3231 of {'Idris.Prelude.Types.Left', E1890} -> (fun (V3232) -> {'Idris.Prelude.Types.Left', V3232} end(E1890)); {'Idris.Prelude.Types.Right', E1891} -> (fun (V3233) -> begin (V3234 = (('un--nfToCFType'(V0, V3183, V2, V3233))(V3182))), case V3234 of {'Idris.Prelude.Types.Left', E1892} -> (fun (V3235) -> {'Idris.Prelude.Types.Left', V3235} end(E1892)); {'Idris.Prelude.Types.Right', E1893} -> (fun (V3236) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3236}} end(E1893)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1891)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1889)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1872)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1870)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1868)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1862, E1863, E1864, E1865, E1866)); {'Idris.Core.Value.NType', E1894} -> (fun (V3237) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1894)); {'Idris.Core.Value.NErased', E1895, E1896} -> (fun (V3238, V3239) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1895, E1896)); _ -> begin (V3241 = begin (V3240 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3240} end), case V3241 of {'Idris.Prelude.Types.Left', E1856} -> (fun (V3242) -> {'Idris.Prelude.Types.Left', V3242} end(E1856)); {'Idris.Prelude.Types.Right', E1857} -> (fun (V3243) -> begin (V3244 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3243, {'Idris.Core.Env.Nil'}, V3, V3182))), case V3244 of {'Idris.Prelude.Types.Left', E1858} -> (fun (V3245) -> {'Idris.Prelude.Types.Left', V3245} end(E1858)); {'Idris.Prelude.Types.Right', E1859} -> (fun (V3246) -> begin (V3253 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3247) -> fun (V3248) -> fun (V3249) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3247, V3248, V3249)) end end end, fun (V3250) -> fun (V3251) -> fun (V3252) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3250, V3251, V3252)) end end end}, V3246, V3182))), case V3253 of {'Idris.Prelude.Types.Left', E1860} -> (fun (V3254) -> {'Idris.Prelude.Types.Left', V3254} end(E1860)); {'Idris.Prelude.Types.Right', E1861} -> (fun (V3255) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3255))))}, V3182)) end(E1861)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1859)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1857)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end end(E1854, E1855)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NPrimVal', E740, E741} -> (fun (V3256, V3257) -> case V3257 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V3258) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFString'}} end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E926, E927} -> (fun (V3259, V3260) -> case V3260 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V3261) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V3262) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V3263) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1010, E1011, E1012, E1013} -> (fun (V3264, V3265, V3266, V3267) -> fun (V3268) -> case V3266 of {'Idris.Core.TT.Pi', E1055, E1056, E1057, E1058} -> (fun (V3269, V3270, V3271, V3272) -> begin (V3274 = begin (V3273 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3273} end), case V3274 of {'Idris.Prelude.Types.Left', E1059} -> (fun (V3275) -> {'Idris.Prelude.Types.Left', V3275} end(E1059)); {'Idris.Prelude.Types.Right', E1060} -> (fun (V3276) -> begin (V3277 = (('un--nfToCFType'(V0, V3264, 0, V3272))(V3268))), case V3277 of {'Idris.Prelude.Types.Left', E1061} -> (fun (V3278) -> {'Idris.Prelude.Types.Left', V3278} end(E1061)); {'Idris.Prelude.Types.Right', E1062} -> (fun (V3279) -> begin (V3280 = (((V3267(V3276))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3264, 0}))))(V3268))), case V3280 of {'Idris.Prelude.Types.Left', E1063} -> (fun (V3281) -> {'Idris.Prelude.Types.Left', V3281} end(E1063)); {'Idris.Prelude.Types.Right', E1064} -> (fun (V3282) -> begin (V3283 = (('un--nfToCFType'(V0, V3264, 0, V3282))(V3268))), case V3283 of {'Idris.Prelude.Types.Left', E1065} -> (fun (V3284) -> {'Idris.Prelude.Types.Left', V3284} end(E1065)); {'Idris.Prelude.Types.Right', E1066} -> (fun (V3285) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3279, V3285}} end(E1066)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1064)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1062)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1060)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1055, E1056, E1057, E1058)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1020, E1021, E1022, E1023, E1024} -> (fun (V3286, V3287, V3288, V3289, V3290) -> begin (V3292 = begin (V3291 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3291} end), case V3292 of {'Idris.Prelude.Types.Left', E1025} -> (fun (V3293) -> {'Idris.Prelude.Types.Left', V3293} end(E1025)); {'Idris.Prelude.Types.Right', E1026} -> (fun (V3294) -> begin (V3301 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3295) -> fun (V3296) -> fun (V3297) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3295, V3296, V3297)) end end end, fun (V3298) -> fun (V3299) -> fun (V3300) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3298, V3299, V3300)) end end end}, V3287, V3268))), case V3301 of {'Idris.Prelude.Types.Left', E1027} -> (fun (V3302) -> {'Idris.Prelude.Types.Left', V3302} end(E1027)); {'Idris.Prelude.Types.Right', E1028} -> (fun (V3303) -> begin (V3305 = (('un--getNArgs'(V0, V3294, V3303, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3304) -> ('Idris.Idris2.Builtin':'un--snd'(V3304)) end, V3290))))(V3268))), case V3305 of {'Idris.Prelude.Types.Left', E1029} -> (fun (V3306) -> {'Idris.Prelude.Types.Left', V3306} end(E1029)); {'Idris.Prelude.Types.Right', E1030} -> (fun (V3307) -> case V3307 of {'Idris.Compiler.CompileExpr.User', E1031, E1032} -> (fun (V3308, V3309) -> begin (V3311 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3310) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3294, V3310)) end, V3309, [], V3268))), case V3311 of {'Idris.Prelude.Types.Left', E1033} -> (fun (V3312) -> {'Idris.Prelude.Types.Left', V3312} end(E1033)); {'Idris.Prelude.Types.Right', E1034} -> (fun (V3313) -> begin (V3315 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3314) -> ('un--nfToCFType'(V0, V3286, V2, V3314)) end, V3313, [], V3268))), case V3315 of {'Idris.Prelude.Types.Left', E1035} -> (fun (V3316) -> {'Idris.Prelude.Types.Left', V3316} end(E1035)); {'Idris.Prelude.Types.Right', E1036} -> (fun (V3317) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3303, V3317}} end(E1036)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1034)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1031, E1032)); {'Idris.Compiler.CompileExpr.Struct', E1037, E1038} -> (fun (V3318, V3319) -> begin (V3330 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3320) -> fun (V3321) -> case V3320 of {'Idris.Builtin.MkPair', E1039, E1040} -> (fun (V3322, V3323) -> begin (V3324 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3294, V3323))(V3321))), case V3324 of {'Idris.Prelude.Types.Left', E1041} -> (fun (V3325) -> {'Idris.Prelude.Types.Left', V3325} end(E1041)); {'Idris.Prelude.Types.Right', E1042} -> (fun (V3326) -> begin (V3327 = (('un--nfToCFType'(V0, V3286, 1, V3326))(V3321))), case V3327 of {'Idris.Prelude.Types.Left', E1043} -> (fun (V3328) -> {'Idris.Prelude.Types.Left', V3328} end(E1043)); {'Idris.Prelude.Types.Right', E1044} -> (fun (V3329) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3322, V3329}} end(E1044)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1042)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1039, E1040)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3319, [], V3268))), case V3330 of {'Idris.Prelude.Types.Left', E1045} -> (fun (V3331) -> {'Idris.Prelude.Types.Left', V3331} end(E1045)); {'Idris.Prelude.Types.Right', E1046} -> (fun (V3332) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3318, V3332}} end(E1046)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1037, E1038)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1047} -> (fun (V3333) -> begin (V3334 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3294, V3333))(V3268))), case V3334 of {'Idris.Prelude.Types.Left', E1048} -> (fun (V3335) -> {'Idris.Prelude.Types.Left', V3335} end(E1048)); {'Idris.Prelude.Types.Right', E1049} -> (fun (V3336) -> begin (V3337 = (('un--nfToCFType'(V0, V3286, V2, V3336))(V3268))), case V3337 of {'Idris.Prelude.Types.Left', E1050} -> (fun (V3338) -> {'Idris.Prelude.Types.Left', V3338} end(E1050)); {'Idris.Prelude.Types.Right', E1051} -> (fun (V3339) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3339}} end(E1051)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1049)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1047)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1030)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1028)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1026)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1020, E1021, E1022, E1023, E1024)); {'Idris.Core.Value.NType', E1052} -> (fun (V3340) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1052)); {'Idris.Core.Value.NErased', E1053, E1054} -> (fun (V3341, V3342) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1053, E1054)); _ -> begin (V3344 = begin (V3343 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3343} end), case V3344 of {'Idris.Prelude.Types.Left', E1014} -> (fun (V3345) -> {'Idris.Prelude.Types.Left', V3345} end(E1014)); {'Idris.Prelude.Types.Right', E1015} -> (fun (V3346) -> begin (V3347 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3346, {'Idris.Core.Env.Nil'}, V3, V3268))), case V3347 of {'Idris.Prelude.Types.Left', E1016} -> (fun (V3348) -> {'Idris.Prelude.Types.Left', V3348} end(E1016)); {'Idris.Prelude.Types.Right', E1017} -> (fun (V3349) -> begin (V3356 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3350) -> fun (V3351) -> fun (V3352) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3350, V3351, V3352)) end end end, fun (V3353) -> fun (V3354) -> fun (V3355) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3353, V3354, V3355)) end end end}, V3349, V3268))), case V3356 of {'Idris.Prelude.Types.Left', E1018} -> (fun (V3357) -> {'Idris.Prelude.Types.Left', V3357} end(E1018)); {'Idris.Prelude.Types.Right', E1019} -> (fun (V3358) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3358))))}, V3268)) end(E1019)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1017)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1015)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1010, E1011, E1012, E1013)); _ -> fun (V3359) -> case V3 of {'Idris.Core.Value.NTCon', E975, E976, E977, E978, E979} -> (fun (V3360, V3361, V3362, V3363, V3364) -> begin (V3366 = begin (V3365 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3365} end), case V3366 of {'Idris.Prelude.Types.Left', E980} -> (fun (V3367) -> {'Idris.Prelude.Types.Left', V3367} end(E980)); {'Idris.Prelude.Types.Right', E981} -> (fun (V3368) -> begin (V3375 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3369) -> fun (V3370) -> fun (V3371) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3369, V3370, V3371)) end end end, fun (V3372) -> fun (V3373) -> fun (V3374) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3372, V3373, V3374)) end end end}, V3361, V3359))), case V3375 of {'Idris.Prelude.Types.Left', E982} -> (fun (V3376) -> {'Idris.Prelude.Types.Left', V3376} end(E982)); {'Idris.Prelude.Types.Right', E983} -> (fun (V3377) -> begin (V3379 = (('un--getNArgs'(V0, V3368, V3377, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3378) -> ('Idris.Idris2.Builtin':'un--snd'(V3378)) end, V3364))))(V3359))), case V3379 of {'Idris.Prelude.Types.Left', E984} -> (fun (V3380) -> {'Idris.Prelude.Types.Left', V3380} end(E984)); {'Idris.Prelude.Types.Right', E985} -> (fun (V3381) -> case V3381 of {'Idris.Compiler.CompileExpr.User', E986, E987} -> (fun (V3382, V3383) -> begin (V3385 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3384) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3368, V3384)) end, V3383, [], V3359))), case V3385 of {'Idris.Prelude.Types.Left', E988} -> (fun (V3386) -> {'Idris.Prelude.Types.Left', V3386} end(E988)); {'Idris.Prelude.Types.Right', E989} -> (fun (V3387) -> begin (V3389 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3388) -> ('un--nfToCFType'(V0, V3360, V2, V3388)) end, V3387, [], V3359))), case V3389 of {'Idris.Prelude.Types.Left', E990} -> (fun (V3390) -> {'Idris.Prelude.Types.Left', V3390} end(E990)); {'Idris.Prelude.Types.Right', E991} -> (fun (V3391) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3377, V3391}} end(E991)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E989)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E986, E987)); {'Idris.Compiler.CompileExpr.Struct', E992, E993} -> (fun (V3392, V3393) -> begin (V3404 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3394) -> fun (V3395) -> case V3394 of {'Idris.Builtin.MkPair', E994, E995} -> (fun (V3396, V3397) -> begin (V3398 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3368, V3397))(V3395))), case V3398 of {'Idris.Prelude.Types.Left', E996} -> (fun (V3399) -> {'Idris.Prelude.Types.Left', V3399} end(E996)); {'Idris.Prelude.Types.Right', E997} -> (fun (V3400) -> begin (V3401 = (('un--nfToCFType'(V0, V3360, 1, V3400))(V3395))), case V3401 of {'Idris.Prelude.Types.Left', E998} -> (fun (V3402) -> {'Idris.Prelude.Types.Left', V3402} end(E998)); {'Idris.Prelude.Types.Right', E999} -> (fun (V3403) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3396, V3403}} end(E999)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E997)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E994, E995)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3393, [], V3359))), case V3404 of {'Idris.Prelude.Types.Left', E1000} -> (fun (V3405) -> {'Idris.Prelude.Types.Left', V3405} end(E1000)); {'Idris.Prelude.Types.Right', E1001} -> (fun (V3406) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3392, V3406}} end(E1001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E992, E993)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1002} -> (fun (V3407) -> begin (V3408 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3368, V3407))(V3359))), case V3408 of {'Idris.Prelude.Types.Left', E1003} -> (fun (V3409) -> {'Idris.Prelude.Types.Left', V3409} end(E1003)); {'Idris.Prelude.Types.Right', E1004} -> (fun (V3410) -> begin (V3411 = (('un--nfToCFType'(V0, V3360, V2, V3410))(V3359))), case V3411 of {'Idris.Prelude.Types.Left', E1005} -> (fun (V3412) -> {'Idris.Prelude.Types.Left', V3412} end(E1005)); {'Idris.Prelude.Types.Right', E1006} -> (fun (V3413) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3413}} end(E1006)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1004)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1002)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E985)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E983)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E981)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E975, E976, E977, E978, E979)); {'Idris.Core.Value.NType', E1007} -> (fun (V3414) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1007)); {'Idris.Core.Value.NErased', E1008, E1009} -> (fun (V3415, V3416) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1008, E1009)); _ -> begin (V3418 = begin (V3417 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3417} end), case V3418 of {'Idris.Prelude.Types.Left', E969} -> (fun (V3419) -> {'Idris.Prelude.Types.Left', V3419} end(E969)); {'Idris.Prelude.Types.Right', E970} -> (fun (V3420) -> begin (V3421 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3420, {'Idris.Core.Env.Nil'}, V3, V3359))), case V3421 of {'Idris.Prelude.Types.Left', E971} -> (fun (V3422) -> {'Idris.Prelude.Types.Left', V3422} end(E971)); {'Idris.Prelude.Types.Right', E972} -> (fun (V3423) -> begin (V3430 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3424) -> fun (V3425) -> fun (V3426) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3424, V3425, V3426)) end end end, fun (V3427) -> fun (V3428) -> fun (V3429) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3427, V3428, V3429)) end end end}, V3423, V3359))), case V3430 of {'Idris.Prelude.Types.Left', E973} -> (fun (V3431) -> {'Idris.Prelude.Types.Left', V3431} end(E973)); {'Idris.Prelude.Types.Right', E974} -> (fun (V3432) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3432))))}, V3359)) end(E974)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E972)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E970)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V3433) -> case V3 of {'Idris.Core.Value.NBind', E1108, E1109, E1110, E1111} -> (fun (V3434, V3435, V3436, V3437) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V3434, <<"Function types not allowed in a foreign struct"/utf8>>}, V3433)) end(E1108, E1109, E1110, E1111)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1073, E1074, E1075, E1076, E1077} -> (fun (V3438, V3439, V3440, V3441, V3442) -> begin (V3444 = begin (V3443 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3443} end), case V3444 of {'Idris.Prelude.Types.Left', E1078} -> (fun (V3445) -> {'Idris.Prelude.Types.Left', V3445} end(E1078)); {'Idris.Prelude.Types.Right', E1079} -> (fun (V3446) -> begin (V3453 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3447) -> fun (V3448) -> fun (V3449) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3447, V3448, V3449)) end end end, fun (V3450) -> fun (V3451) -> fun (V3452) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3450, V3451, V3452)) end end end}, V3439, V3433))), case V3453 of {'Idris.Prelude.Types.Left', E1080} -> (fun (V3454) -> {'Idris.Prelude.Types.Left', V3454} end(E1080)); {'Idris.Prelude.Types.Right', E1081} -> (fun (V3455) -> begin (V3457 = (('un--getNArgs'(V0, V3446, V3455, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3456) -> ('Idris.Idris2.Builtin':'un--snd'(V3456)) end, V3442))))(V3433))), case V3457 of {'Idris.Prelude.Types.Left', E1082} -> (fun (V3458) -> {'Idris.Prelude.Types.Left', V3458} end(E1082)); {'Idris.Prelude.Types.Right', E1083} -> (fun (V3459) -> case V3459 of {'Idris.Compiler.CompileExpr.User', E1084, E1085} -> (fun (V3460, V3461) -> begin (V3463 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3462) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3446, V3462)) end, V3461, [], V3433))), case V3463 of {'Idris.Prelude.Types.Left', E1086} -> (fun (V3464) -> {'Idris.Prelude.Types.Left', V3464} end(E1086)); {'Idris.Prelude.Types.Right', E1087} -> (fun (V3465) -> begin (V3467 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3466) -> ('un--nfToCFType'(V0, V3438, V2, V3466)) end, V3465, [], V3433))), case V3467 of {'Idris.Prelude.Types.Left', E1088} -> (fun (V3468) -> {'Idris.Prelude.Types.Left', V3468} end(E1088)); {'Idris.Prelude.Types.Right', E1089} -> (fun (V3469) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3455, V3469}} end(E1089)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1087)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1084, E1085)); {'Idris.Compiler.CompileExpr.Struct', E1090, E1091} -> (fun (V3470, V3471) -> begin (V3482 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3472) -> fun (V3473) -> case V3472 of {'Idris.Builtin.MkPair', E1092, E1093} -> (fun (V3474, V3475) -> begin (V3476 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3446, V3475))(V3473))), case V3476 of {'Idris.Prelude.Types.Left', E1094} -> (fun (V3477) -> {'Idris.Prelude.Types.Left', V3477} end(E1094)); {'Idris.Prelude.Types.Right', E1095} -> (fun (V3478) -> begin (V3479 = (('un--nfToCFType'(V0, V3438, 1, V3478))(V3473))), case V3479 of {'Idris.Prelude.Types.Left', E1096} -> (fun (V3480) -> {'Idris.Prelude.Types.Left', V3480} end(E1096)); {'Idris.Prelude.Types.Right', E1097} -> (fun (V3481) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3474, V3481}} end(E1097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1095)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1092, E1093)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3471, [], V3433))), case V3482 of {'Idris.Prelude.Types.Left', E1098} -> (fun (V3483) -> {'Idris.Prelude.Types.Left', V3483} end(E1098)); {'Idris.Prelude.Types.Right', E1099} -> (fun (V3484) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3470, V3484}} end(E1099)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1090, E1091)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1100} -> (fun (V3485) -> begin (V3486 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3446, V3485))(V3433))), case V3486 of {'Idris.Prelude.Types.Left', E1101} -> (fun (V3487) -> {'Idris.Prelude.Types.Left', V3487} end(E1101)); {'Idris.Prelude.Types.Right', E1102} -> (fun (V3488) -> begin (V3489 = (('un--nfToCFType'(V0, V3438, V2, V3488))(V3433))), case V3489 of {'Idris.Prelude.Types.Left', E1103} -> (fun (V3490) -> {'Idris.Prelude.Types.Left', V3490} end(E1103)); {'Idris.Prelude.Types.Right', E1104} -> (fun (V3491) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3491}} end(E1104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1083)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1081)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1079)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1073, E1074, E1075, E1076, E1077)); {'Idris.Core.Value.NType', E1105} -> (fun (V3492) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1105)); {'Idris.Core.Value.NErased', E1106, E1107} -> (fun (V3493, V3494) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1106, E1107)); _ -> begin (V3496 = begin (V3495 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3495} end), case V3496 of {'Idris.Prelude.Types.Left', E1067} -> (fun (V3497) -> {'Idris.Prelude.Types.Left', V3497} end(E1067)); {'Idris.Prelude.Types.Right', E1068} -> (fun (V3498) -> begin (V3499 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3498, {'Idris.Core.Env.Nil'}, V3, V3433))), case V3499 of {'Idris.Prelude.Types.Left', E1069} -> (fun (V3500) -> {'Idris.Prelude.Types.Left', V3500} end(E1069)); {'Idris.Prelude.Types.Right', E1070} -> (fun (V3501) -> begin (V3508 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3502) -> fun (V3503) -> fun (V3504) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3502, V3503, V3504)) end end end, fun (V3505) -> fun (V3506) -> fun (V3507) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3505, V3506, V3507)) end end end}, V3501, V3433))), case V3508 of {'Idris.Prelude.Types.Left', E1071} -> (fun (V3509) -> {'Idris.Prelude.Types.Left', V3509} end(E1071)); {'Idris.Prelude.Types.Right', E1072} -> (fun (V3510) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3510))))}, V3433)) end(E1072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V3511) -> case V3 of {'Idris.Core.Value.NTCon', E934, E935, E936, E937, E938} -> (fun (V3512, V3513, V3514, V3515, V3516) -> begin (V3518 = begin (V3517 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3517} end), case V3518 of {'Idris.Prelude.Types.Left', E939} -> (fun (V3519) -> {'Idris.Prelude.Types.Left', V3519} end(E939)); {'Idris.Prelude.Types.Right', E940} -> (fun (V3520) -> begin (V3527 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3521) -> fun (V3522) -> fun (V3523) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3521, V3522, V3523)) end end end, fun (V3524) -> fun (V3525) -> fun (V3526) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3524, V3525, V3526)) end end end}, V3513, V3511))), case V3527 of {'Idris.Prelude.Types.Left', E941} -> (fun (V3528) -> {'Idris.Prelude.Types.Left', V3528} end(E941)); {'Idris.Prelude.Types.Right', E942} -> (fun (V3529) -> begin (V3531 = (('un--getNArgs'(V0, V3520, V3529, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3530) -> ('Idris.Idris2.Builtin':'un--snd'(V3530)) end, V3516))))(V3511))), case V3531 of {'Idris.Prelude.Types.Left', E943} -> (fun (V3532) -> {'Idris.Prelude.Types.Left', V3532} end(E943)); {'Idris.Prelude.Types.Right', E944} -> (fun (V3533) -> case V3533 of {'Idris.Compiler.CompileExpr.User', E945, E946} -> (fun (V3534, V3535) -> begin (V3537 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3536) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3520, V3536)) end, V3535, [], V3511))), case V3537 of {'Idris.Prelude.Types.Left', E947} -> (fun (V3538) -> {'Idris.Prelude.Types.Left', V3538} end(E947)); {'Idris.Prelude.Types.Right', E948} -> (fun (V3539) -> begin (V3541 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3540) -> ('un--nfToCFType'(V0, V3512, V2, V3540)) end, V3539, [], V3511))), case V3541 of {'Idris.Prelude.Types.Left', E949} -> (fun (V3542) -> {'Idris.Prelude.Types.Left', V3542} end(E949)); {'Idris.Prelude.Types.Right', E950} -> (fun (V3543) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3529, V3543}} end(E950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E948)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E945, E946)); {'Idris.Compiler.CompileExpr.Struct', E951, E952} -> (fun (V3544, V3545) -> begin (V3556 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3546) -> fun (V3547) -> case V3546 of {'Idris.Builtin.MkPair', E953, E954} -> (fun (V3548, V3549) -> begin (V3550 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3520, V3549))(V3547))), case V3550 of {'Idris.Prelude.Types.Left', E955} -> (fun (V3551) -> {'Idris.Prelude.Types.Left', V3551} end(E955)); {'Idris.Prelude.Types.Right', E956} -> (fun (V3552) -> begin (V3553 = (('un--nfToCFType'(V0, V3512, 1, V3552))(V3547))), case V3553 of {'Idris.Prelude.Types.Left', E957} -> (fun (V3554) -> {'Idris.Prelude.Types.Left', V3554} end(E957)); {'Idris.Prelude.Types.Right', E958} -> (fun (V3555) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3548, V3555}} end(E958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E953, E954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3545, [], V3511))), case V3556 of {'Idris.Prelude.Types.Left', E959} -> (fun (V3557) -> {'Idris.Prelude.Types.Left', V3557} end(E959)); {'Idris.Prelude.Types.Right', E960} -> (fun (V3558) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3544, V3558}} end(E960)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E951, E952)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E961} -> (fun (V3559) -> begin (V3560 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3520, V3559))(V3511))), case V3560 of {'Idris.Prelude.Types.Left', E962} -> (fun (V3561) -> {'Idris.Prelude.Types.Left', V3561} end(E962)); {'Idris.Prelude.Types.Right', E963} -> (fun (V3562) -> begin (V3563 = (('un--nfToCFType'(V0, V3512, V2, V3562))(V3511))), case V3563 of {'Idris.Prelude.Types.Left', E964} -> (fun (V3564) -> {'Idris.Prelude.Types.Left', V3564} end(E964)); {'Idris.Prelude.Types.Right', E965} -> (fun (V3565) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3565}} end(E965)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E963)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E961)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E944)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E942)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E940)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E934, E935, E936, E937, E938)); {'Idris.Core.Value.NType', E966} -> (fun (V3566) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E966)); {'Idris.Core.Value.NErased', E967, E968} -> (fun (V3567, V3568) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E967, E968)); _ -> begin (V3570 = begin (V3569 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3569} end), case V3570 of {'Idris.Prelude.Types.Left', E928} -> (fun (V3571) -> {'Idris.Prelude.Types.Left', V3571} end(E928)); {'Idris.Prelude.Types.Right', E929} -> (fun (V3572) -> begin (V3573 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3572, {'Idris.Core.Env.Nil'}, V3, V3511))), case V3573 of {'Idris.Prelude.Types.Left', E930} -> (fun (V3574) -> {'Idris.Prelude.Types.Left', V3574} end(E930)); {'Idris.Prelude.Types.Right', E931} -> (fun (V3575) -> begin (V3582 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3576) -> fun (V3577) -> fun (V3578) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3576, V3577, V3578)) end end end, fun (V3579) -> fun (V3580) -> fun (V3581) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3579, V3580, V3581)) end end end}, V3575, V3511))), case V3582 of {'Idris.Prelude.Types.Left', E932} -> (fun (V3583) -> {'Idris.Prelude.Types.Left', V3583} end(E932)); {'Idris.Prelude.Types.Right', E933} -> (fun (V3584) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3584))))}, V3511)) end(E933)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E931)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E929)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E926, E927)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E824, E825, E826, E827} -> (fun (V3585, V3586, V3587, V3588) -> fun (V3589) -> case V3587 of {'Idris.Core.TT.Pi', E869, E870, E871, E872} -> (fun (V3590, V3591, V3592, V3593) -> begin (V3595 = begin (V3594 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3594} end), case V3595 of {'Idris.Prelude.Types.Left', E873} -> (fun (V3596) -> {'Idris.Prelude.Types.Left', V3596} end(E873)); {'Idris.Prelude.Types.Right', E874} -> (fun (V3597) -> begin (V3598 = (('un--nfToCFType'(V0, V3585, 0, V3593))(V3589))), case V3598 of {'Idris.Prelude.Types.Left', E875} -> (fun (V3599) -> {'Idris.Prelude.Types.Left', V3599} end(E875)); {'Idris.Prelude.Types.Right', E876} -> (fun (V3600) -> begin (V3601 = (((V3588(V3597))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3585, 0}))))(V3589))), case V3601 of {'Idris.Prelude.Types.Left', E877} -> (fun (V3602) -> {'Idris.Prelude.Types.Left', V3602} end(E877)); {'Idris.Prelude.Types.Right', E878} -> (fun (V3603) -> begin (V3604 = (('un--nfToCFType'(V0, V3585, 0, V3603))(V3589))), case V3604 of {'Idris.Prelude.Types.Left', E879} -> (fun (V3605) -> {'Idris.Prelude.Types.Left', V3605} end(E879)); {'Idris.Prelude.Types.Right', E880} -> (fun (V3606) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3600, V3606}} end(E880)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E874)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E869, E870, E871, E872)); _ -> case V3 of {'Idris.Core.Value.NTCon', E834, E835, E836, E837, E838} -> (fun (V3607, V3608, V3609, V3610, V3611) -> begin (V3613 = begin (V3612 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3612} end), case V3613 of {'Idris.Prelude.Types.Left', E839} -> (fun (V3614) -> {'Idris.Prelude.Types.Left', V3614} end(E839)); {'Idris.Prelude.Types.Right', E840} -> (fun (V3615) -> begin (V3622 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3616) -> fun (V3617) -> fun (V3618) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3616, V3617, V3618)) end end end, fun (V3619) -> fun (V3620) -> fun (V3621) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3619, V3620, V3621)) end end end}, V3608, V3589))), case V3622 of {'Idris.Prelude.Types.Left', E841} -> (fun (V3623) -> {'Idris.Prelude.Types.Left', V3623} end(E841)); {'Idris.Prelude.Types.Right', E842} -> (fun (V3624) -> begin (V3626 = (('un--getNArgs'(V0, V3615, V3624, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3625) -> ('Idris.Idris2.Builtin':'un--snd'(V3625)) end, V3611))))(V3589))), case V3626 of {'Idris.Prelude.Types.Left', E843} -> (fun (V3627) -> {'Idris.Prelude.Types.Left', V3627} end(E843)); {'Idris.Prelude.Types.Right', E844} -> (fun (V3628) -> case V3628 of {'Idris.Compiler.CompileExpr.User', E845, E846} -> (fun (V3629, V3630) -> begin (V3632 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3631) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3615, V3631)) end, V3630, [], V3589))), case V3632 of {'Idris.Prelude.Types.Left', E847} -> (fun (V3633) -> {'Idris.Prelude.Types.Left', V3633} end(E847)); {'Idris.Prelude.Types.Right', E848} -> (fun (V3634) -> begin (V3636 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3635) -> ('un--nfToCFType'(V0, V3607, V2, V3635)) end, V3634, [], V3589))), case V3636 of {'Idris.Prelude.Types.Left', E849} -> (fun (V3637) -> {'Idris.Prelude.Types.Left', V3637} end(E849)); {'Idris.Prelude.Types.Right', E850} -> (fun (V3638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3624, V3638}} end(E850)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E848)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E845, E846)); {'Idris.Compiler.CompileExpr.Struct', E851, E852} -> (fun (V3639, V3640) -> begin (V3651 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3641) -> fun (V3642) -> case V3641 of {'Idris.Builtin.MkPair', E853, E854} -> (fun (V3643, V3644) -> begin (V3645 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3615, V3644))(V3642))), case V3645 of {'Idris.Prelude.Types.Left', E855} -> (fun (V3646) -> {'Idris.Prelude.Types.Left', V3646} end(E855)); {'Idris.Prelude.Types.Right', E856} -> (fun (V3647) -> begin (V3648 = (('un--nfToCFType'(V0, V3607, 1, V3647))(V3642))), case V3648 of {'Idris.Prelude.Types.Left', E857} -> (fun (V3649) -> {'Idris.Prelude.Types.Left', V3649} end(E857)); {'Idris.Prelude.Types.Right', E858} -> (fun (V3650) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3643, V3650}} end(E858)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E856)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E853, E854)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3640, [], V3589))), case V3651 of {'Idris.Prelude.Types.Left', E859} -> (fun (V3652) -> {'Idris.Prelude.Types.Left', V3652} end(E859)); {'Idris.Prelude.Types.Right', E860} -> (fun (V3653) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3639, V3653}} end(E860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E851, E852)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E861} -> (fun (V3654) -> begin (V3655 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3615, V3654))(V3589))), case V3655 of {'Idris.Prelude.Types.Left', E862} -> (fun (V3656) -> {'Idris.Prelude.Types.Left', V3656} end(E862)); {'Idris.Prelude.Types.Right', E863} -> (fun (V3657) -> begin (V3658 = (('un--nfToCFType'(V0, V3607, V2, V3657))(V3589))), case V3658 of {'Idris.Prelude.Types.Left', E864} -> (fun (V3659) -> {'Idris.Prelude.Types.Left', V3659} end(E864)); {'Idris.Prelude.Types.Right', E865} -> (fun (V3660) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3660}} end(E865)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E863)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E861)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E844)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E842)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E840)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E834, E835, E836, E837, E838)); {'Idris.Core.Value.NType', E866} -> (fun (V3661) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E866)); {'Idris.Core.Value.NErased', E867, E868} -> (fun (V3662, V3663) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E867, E868)); _ -> begin (V3665 = begin (V3664 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3664} end), case V3665 of {'Idris.Prelude.Types.Left', E828} -> (fun (V3666) -> {'Idris.Prelude.Types.Left', V3666} end(E828)); {'Idris.Prelude.Types.Right', E829} -> (fun (V3667) -> begin (V3668 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3667, {'Idris.Core.Env.Nil'}, V3, V3589))), case V3668 of {'Idris.Prelude.Types.Left', E830} -> (fun (V3669) -> {'Idris.Prelude.Types.Left', V3669} end(E830)); {'Idris.Prelude.Types.Right', E831} -> (fun (V3670) -> begin (V3677 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3671) -> fun (V3672) -> fun (V3673) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3671, V3672, V3673)) end end end, fun (V3674) -> fun (V3675) -> fun (V3676) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3674, V3675, V3676)) end end end}, V3670, V3589))), case V3677 of {'Idris.Prelude.Types.Left', E832} -> (fun (V3678) -> {'Idris.Prelude.Types.Left', V3678} end(E832)); {'Idris.Prelude.Types.Right', E833} -> (fun (V3679) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3679))))}, V3589)) end(E833)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E831)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E824, E825, E826, E827)); _ -> fun (V3680) -> case V3 of {'Idris.Core.Value.NTCon', E789, E790, E791, E792, E793} -> (fun (V3681, V3682, V3683, V3684, V3685) -> begin (V3687 = begin (V3686 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3686} end), case V3687 of {'Idris.Prelude.Types.Left', E794} -> (fun (V3688) -> {'Idris.Prelude.Types.Left', V3688} end(E794)); {'Idris.Prelude.Types.Right', E795} -> (fun (V3689) -> begin (V3696 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3690) -> fun (V3691) -> fun (V3692) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3690, V3691, V3692)) end end end, fun (V3693) -> fun (V3694) -> fun (V3695) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3693, V3694, V3695)) end end end}, V3682, V3680))), case V3696 of {'Idris.Prelude.Types.Left', E796} -> (fun (V3697) -> {'Idris.Prelude.Types.Left', V3697} end(E796)); {'Idris.Prelude.Types.Right', E797} -> (fun (V3698) -> begin (V3700 = (('un--getNArgs'(V0, V3689, V3698, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3699) -> ('Idris.Idris2.Builtin':'un--snd'(V3699)) end, V3685))))(V3680))), case V3700 of {'Idris.Prelude.Types.Left', E798} -> (fun (V3701) -> {'Idris.Prelude.Types.Left', V3701} end(E798)); {'Idris.Prelude.Types.Right', E799} -> (fun (V3702) -> case V3702 of {'Idris.Compiler.CompileExpr.User', E800, E801} -> (fun (V3703, V3704) -> begin (V3706 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3705) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3689, V3705)) end, V3704, [], V3680))), case V3706 of {'Idris.Prelude.Types.Left', E802} -> (fun (V3707) -> {'Idris.Prelude.Types.Left', V3707} end(E802)); {'Idris.Prelude.Types.Right', E803} -> (fun (V3708) -> begin (V3710 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3709) -> ('un--nfToCFType'(V0, V3681, V2, V3709)) end, V3708, [], V3680))), case V3710 of {'Idris.Prelude.Types.Left', E804} -> (fun (V3711) -> {'Idris.Prelude.Types.Left', V3711} end(E804)); {'Idris.Prelude.Types.Right', E805} -> (fun (V3712) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3698, V3712}} end(E805)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E803)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E800, E801)); {'Idris.Compiler.CompileExpr.Struct', E806, E807} -> (fun (V3713, V3714) -> begin (V3725 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3715) -> fun (V3716) -> case V3715 of {'Idris.Builtin.MkPair', E808, E809} -> (fun (V3717, V3718) -> begin (V3719 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3689, V3718))(V3716))), case V3719 of {'Idris.Prelude.Types.Left', E810} -> (fun (V3720) -> {'Idris.Prelude.Types.Left', V3720} end(E810)); {'Idris.Prelude.Types.Right', E811} -> (fun (V3721) -> begin (V3722 = (('un--nfToCFType'(V0, V3681, 1, V3721))(V3716))), case V3722 of {'Idris.Prelude.Types.Left', E812} -> (fun (V3723) -> {'Idris.Prelude.Types.Left', V3723} end(E812)); {'Idris.Prelude.Types.Right', E813} -> (fun (V3724) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3717, V3724}} end(E813)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E811)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E808, E809)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3714, [], V3680))), case V3725 of {'Idris.Prelude.Types.Left', E814} -> (fun (V3726) -> {'Idris.Prelude.Types.Left', V3726} end(E814)); {'Idris.Prelude.Types.Right', E815} -> (fun (V3727) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3713, V3727}} end(E815)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E806, E807)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E816} -> (fun (V3728) -> begin (V3729 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3689, V3728))(V3680))), case V3729 of {'Idris.Prelude.Types.Left', E817} -> (fun (V3730) -> {'Idris.Prelude.Types.Left', V3730} end(E817)); {'Idris.Prelude.Types.Right', E818} -> (fun (V3731) -> begin (V3732 = (('un--nfToCFType'(V0, V3681, V2, V3731))(V3680))), case V3732 of {'Idris.Prelude.Types.Left', E819} -> (fun (V3733) -> {'Idris.Prelude.Types.Left', V3733} end(E819)); {'Idris.Prelude.Types.Right', E820} -> (fun (V3734) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3734}} end(E820)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E818)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E816)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E799)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E797)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E795)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E789, E790, E791, E792, E793)); {'Idris.Core.Value.NType', E821} -> (fun (V3735) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E821)); {'Idris.Core.Value.NErased', E822, E823} -> (fun (V3736, V3737) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E822, E823)); _ -> begin (V3739 = begin (V3738 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3738} end), case V3739 of {'Idris.Prelude.Types.Left', E783} -> (fun (V3740) -> {'Idris.Prelude.Types.Left', V3740} end(E783)); {'Idris.Prelude.Types.Right', E784} -> (fun (V3741) -> begin (V3742 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3741, {'Idris.Core.Env.Nil'}, V3, V3680))), case V3742 of {'Idris.Prelude.Types.Left', E785} -> (fun (V3743) -> {'Idris.Prelude.Types.Left', V3743} end(E785)); {'Idris.Prelude.Types.Right', E786} -> (fun (V3744) -> begin (V3751 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3745) -> fun (V3746) -> fun (V3747) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3745, V3746, V3747)) end end end, fun (V3748) -> fun (V3749) -> fun (V3750) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3748, V3749, V3750)) end end end}, V3744, V3680))), case V3751 of {'Idris.Prelude.Types.Left', E787} -> (fun (V3752) -> {'Idris.Prelude.Types.Left', V3752} end(E787)); {'Idris.Prelude.Types.Right', E788} -> (fun (V3753) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3753))))}, V3680)) end(E788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E786)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E784)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V3754) -> case V3 of {'Idris.Core.Value.NBind', E922, E923, E924, E925} -> (fun (V3755, V3756, V3757, V3758) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V3755, <<"Function types not allowed in a foreign struct"/utf8>>}, V3754)) end(E922, E923, E924, E925)); _ -> case V3 of {'Idris.Core.Value.NTCon', E887, E888, E889, E890, E891} -> (fun (V3759, V3760, V3761, V3762, V3763) -> begin (V3765 = begin (V3764 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3764} end), case V3765 of {'Idris.Prelude.Types.Left', E892} -> (fun (V3766) -> {'Idris.Prelude.Types.Left', V3766} end(E892)); {'Idris.Prelude.Types.Right', E893} -> (fun (V3767) -> begin (V3774 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3768) -> fun (V3769) -> fun (V3770) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3768, V3769, V3770)) end end end, fun (V3771) -> fun (V3772) -> fun (V3773) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3771, V3772, V3773)) end end end}, V3760, V3754))), case V3774 of {'Idris.Prelude.Types.Left', E894} -> (fun (V3775) -> {'Idris.Prelude.Types.Left', V3775} end(E894)); {'Idris.Prelude.Types.Right', E895} -> (fun (V3776) -> begin (V3778 = (('un--getNArgs'(V0, V3767, V3776, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3777) -> ('Idris.Idris2.Builtin':'un--snd'(V3777)) end, V3763))))(V3754))), case V3778 of {'Idris.Prelude.Types.Left', E896} -> (fun (V3779) -> {'Idris.Prelude.Types.Left', V3779} end(E896)); {'Idris.Prelude.Types.Right', E897} -> (fun (V3780) -> case V3780 of {'Idris.Compiler.CompileExpr.User', E898, E899} -> (fun (V3781, V3782) -> begin (V3784 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3783) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3767, V3783)) end, V3782, [], V3754))), case V3784 of {'Idris.Prelude.Types.Left', E900} -> (fun (V3785) -> {'Idris.Prelude.Types.Left', V3785} end(E900)); {'Idris.Prelude.Types.Right', E901} -> (fun (V3786) -> begin (V3788 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3787) -> ('un--nfToCFType'(V0, V3759, V2, V3787)) end, V3786, [], V3754))), case V3788 of {'Idris.Prelude.Types.Left', E902} -> (fun (V3789) -> {'Idris.Prelude.Types.Left', V3789} end(E902)); {'Idris.Prelude.Types.Right', E903} -> (fun (V3790) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3776, V3790}} end(E903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E901)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E898, E899)); {'Idris.Compiler.CompileExpr.Struct', E904, E905} -> (fun (V3791, V3792) -> begin (V3803 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3793) -> fun (V3794) -> case V3793 of {'Idris.Builtin.MkPair', E906, E907} -> (fun (V3795, V3796) -> begin (V3797 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3767, V3796))(V3794))), case V3797 of {'Idris.Prelude.Types.Left', E908} -> (fun (V3798) -> {'Idris.Prelude.Types.Left', V3798} end(E908)); {'Idris.Prelude.Types.Right', E909} -> (fun (V3799) -> begin (V3800 = (('un--nfToCFType'(V0, V3759, 1, V3799))(V3794))), case V3800 of {'Idris.Prelude.Types.Left', E910} -> (fun (V3801) -> {'Idris.Prelude.Types.Left', V3801} end(E910)); {'Idris.Prelude.Types.Right', E911} -> (fun (V3802) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3795, V3802}} end(E911)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E909)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E906, E907)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3792, [], V3754))), case V3803 of {'Idris.Prelude.Types.Left', E912} -> (fun (V3804) -> {'Idris.Prelude.Types.Left', V3804} end(E912)); {'Idris.Prelude.Types.Right', E913} -> (fun (V3805) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3791, V3805}} end(E913)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E904, E905)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E914} -> (fun (V3806) -> begin (V3807 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3767, V3806))(V3754))), case V3807 of {'Idris.Prelude.Types.Left', E915} -> (fun (V3808) -> {'Idris.Prelude.Types.Left', V3808} end(E915)); {'Idris.Prelude.Types.Right', E916} -> (fun (V3809) -> begin (V3810 = (('un--nfToCFType'(V0, V3759, V2, V3809))(V3754))), case V3810 of {'Idris.Prelude.Types.Left', E917} -> (fun (V3811) -> {'Idris.Prelude.Types.Left', V3811} end(E917)); {'Idris.Prelude.Types.Right', E918} -> (fun (V3812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3812}} end(E918)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E916)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E914)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E897)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E895)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E893)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E887, E888, E889, E890, E891)); {'Idris.Core.Value.NType', E919} -> (fun (V3813) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E919)); {'Idris.Core.Value.NErased', E920, E921} -> (fun (V3814, V3815) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E920, E921)); _ -> begin (V3817 = begin (V3816 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3816} end), case V3817 of {'Idris.Prelude.Types.Left', E881} -> (fun (V3818) -> {'Idris.Prelude.Types.Left', V3818} end(E881)); {'Idris.Prelude.Types.Right', E882} -> (fun (V3819) -> begin (V3820 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3819, {'Idris.Core.Env.Nil'}, V3, V3754))), case V3820 of {'Idris.Prelude.Types.Left', E883} -> (fun (V3821) -> {'Idris.Prelude.Types.Left', V3821} end(E883)); {'Idris.Prelude.Types.Right', E884} -> (fun (V3822) -> begin (V3829 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3823) -> fun (V3824) -> fun (V3825) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3823, V3824, V3825)) end end end, fun (V3826) -> fun (V3827) -> fun (V3828) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3826, V3827, V3828)) end end end}, V3822, V3754))), case V3829 of {'Idris.Prelude.Types.Left', E885} -> (fun (V3830) -> {'Idris.Prelude.Types.Left', V3830} end(E885)); {'Idris.Prelude.Types.Right', E886} -> (fun (V3831) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3831))))}, V3754)) end(E886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V3832) -> case V3 of {'Idris.Core.Value.NTCon', E748, E749, E750, E751, E752} -> (fun (V3833, V3834, V3835, V3836, V3837) -> begin (V3839 = begin (V3838 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3838} end), case V3839 of {'Idris.Prelude.Types.Left', E753} -> (fun (V3840) -> {'Idris.Prelude.Types.Left', V3840} end(E753)); {'Idris.Prelude.Types.Right', E754} -> (fun (V3841) -> begin (V3848 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3842) -> fun (V3843) -> fun (V3844) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3842, V3843, V3844)) end end end, fun (V3845) -> fun (V3846) -> fun (V3847) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3845, V3846, V3847)) end end end}, V3834, V3832))), case V3848 of {'Idris.Prelude.Types.Left', E755} -> (fun (V3849) -> {'Idris.Prelude.Types.Left', V3849} end(E755)); {'Idris.Prelude.Types.Right', E756} -> (fun (V3850) -> begin (V3852 = (('un--getNArgs'(V0, V3841, V3850, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3851) -> ('Idris.Idris2.Builtin':'un--snd'(V3851)) end, V3837))))(V3832))), case V3852 of {'Idris.Prelude.Types.Left', E757} -> (fun (V3853) -> {'Idris.Prelude.Types.Left', V3853} end(E757)); {'Idris.Prelude.Types.Right', E758} -> (fun (V3854) -> case V3854 of {'Idris.Compiler.CompileExpr.User', E759, E760} -> (fun (V3855, V3856) -> begin (V3858 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3857) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3841, V3857)) end, V3856, [], V3832))), case V3858 of {'Idris.Prelude.Types.Left', E761} -> (fun (V3859) -> {'Idris.Prelude.Types.Left', V3859} end(E761)); {'Idris.Prelude.Types.Right', E762} -> (fun (V3860) -> begin (V3862 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3861) -> ('un--nfToCFType'(V0, V3833, V2, V3861)) end, V3860, [], V3832))), case V3862 of {'Idris.Prelude.Types.Left', E763} -> (fun (V3863) -> {'Idris.Prelude.Types.Left', V3863} end(E763)); {'Idris.Prelude.Types.Right', E764} -> (fun (V3864) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3850, V3864}} end(E764)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E762)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E759, E760)); {'Idris.Compiler.CompileExpr.Struct', E765, E766} -> (fun (V3865, V3866) -> begin (V3877 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3867) -> fun (V3868) -> case V3867 of {'Idris.Builtin.MkPair', E767, E768} -> (fun (V3869, V3870) -> begin (V3871 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3841, V3870))(V3868))), case V3871 of {'Idris.Prelude.Types.Left', E769} -> (fun (V3872) -> {'Idris.Prelude.Types.Left', V3872} end(E769)); {'Idris.Prelude.Types.Right', E770} -> (fun (V3873) -> begin (V3874 = (('un--nfToCFType'(V0, V3833, 1, V3873))(V3868))), case V3874 of {'Idris.Prelude.Types.Left', E771} -> (fun (V3875) -> {'Idris.Prelude.Types.Left', V3875} end(E771)); {'Idris.Prelude.Types.Right', E772} -> (fun (V3876) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3869, V3876}} end(E772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E767, E768)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3866, [], V3832))), case V3877 of {'Idris.Prelude.Types.Left', E773} -> (fun (V3878) -> {'Idris.Prelude.Types.Left', V3878} end(E773)); {'Idris.Prelude.Types.Right', E774} -> (fun (V3879) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3865, V3879}} end(E774)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E765, E766)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E775} -> (fun (V3880) -> begin (V3881 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3841, V3880))(V3832))), case V3881 of {'Idris.Prelude.Types.Left', E776} -> (fun (V3882) -> {'Idris.Prelude.Types.Left', V3882} end(E776)); {'Idris.Prelude.Types.Right', E777} -> (fun (V3883) -> begin (V3884 = (('un--nfToCFType'(V0, V3833, V2, V3883))(V3832))), case V3884 of {'Idris.Prelude.Types.Left', E778} -> (fun (V3885) -> {'Idris.Prelude.Types.Left', V3885} end(E778)); {'Idris.Prelude.Types.Right', E779} -> (fun (V3886) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3886}} end(E779)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E777)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E775)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E758)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E756)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E754)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E748, E749, E750, E751, E752)); {'Idris.Core.Value.NType', E780} -> (fun (V3887) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E780)); {'Idris.Core.Value.NErased', E781, E782} -> (fun (V3888, V3889) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E781, E782)); _ -> begin (V3891 = begin (V3890 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3890} end), case V3891 of {'Idris.Prelude.Types.Left', E742} -> (fun (V3892) -> {'Idris.Prelude.Types.Left', V3892} end(E742)); {'Idris.Prelude.Types.Right', E743} -> (fun (V3893) -> begin (V3894 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3893, {'Idris.Core.Env.Nil'}, V3, V3832))), case V3894 of {'Idris.Prelude.Types.Left', E744} -> (fun (V3895) -> {'Idris.Prelude.Types.Left', V3895} end(E744)); {'Idris.Prelude.Types.Right', E745} -> (fun (V3896) -> begin (V3903 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3897) -> fun (V3898) -> fun (V3899) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3897, V3898, V3899)) end end end, fun (V3900) -> fun (V3901) -> fun (V3902) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3900, V3901, V3902)) end end end}, V3896, V3832))), case V3903 of {'Idris.Prelude.Types.Left', E746} -> (fun (V3904) -> {'Idris.Prelude.Types.Left', V3904} end(E746)); {'Idris.Prelude.Types.Right', E747} -> (fun (V3905) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3905))))}, V3832)) end(E747)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E745)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E740, E741)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E554, E555} -> (fun (V3906, V3907) -> case V3907 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V3908) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V3909) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V3910) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E638, E639, E640, E641} -> (fun (V3911, V3912, V3913, V3914) -> fun (V3915) -> case V3913 of {'Idris.Core.TT.Pi', E683, E684, E685, E686} -> (fun (V3916, V3917, V3918, V3919) -> begin (V3921 = begin (V3920 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3920} end), case V3921 of {'Idris.Prelude.Types.Left', E687} -> (fun (V3922) -> {'Idris.Prelude.Types.Left', V3922} end(E687)); {'Idris.Prelude.Types.Right', E688} -> (fun (V3923) -> begin (V3924 = (('un--nfToCFType'(V0, V3911, 0, V3919))(V3915))), case V3924 of {'Idris.Prelude.Types.Left', E689} -> (fun (V3925) -> {'Idris.Prelude.Types.Left', V3925} end(E689)); {'Idris.Prelude.Types.Right', E690} -> (fun (V3926) -> begin (V3927 = (((V3914(V3923))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3911, 0}))))(V3915))), case V3927 of {'Idris.Prelude.Types.Left', E691} -> (fun (V3928) -> {'Idris.Prelude.Types.Left', V3928} end(E691)); {'Idris.Prelude.Types.Right', E692} -> (fun (V3929) -> begin (V3930 = (('un--nfToCFType'(V0, V3911, 0, V3929))(V3915))), case V3930 of {'Idris.Prelude.Types.Left', E693} -> (fun (V3931) -> {'Idris.Prelude.Types.Left', V3931} end(E693)); {'Idris.Prelude.Types.Right', E694} -> (fun (V3932) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3926, V3932}} end(E694)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E692)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E690)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E688)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E683, E684, E685, E686)); _ -> case V3 of {'Idris.Core.Value.NTCon', E648, E649, E650, E651, E652} -> (fun (V3933, V3934, V3935, V3936, V3937) -> begin (V3939 = begin (V3938 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3938} end), case V3939 of {'Idris.Prelude.Types.Left', E653} -> (fun (V3940) -> {'Idris.Prelude.Types.Left', V3940} end(E653)); {'Idris.Prelude.Types.Right', E654} -> (fun (V3941) -> begin (V3948 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3942) -> fun (V3943) -> fun (V3944) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3942, V3943, V3944)) end end end, fun (V3945) -> fun (V3946) -> fun (V3947) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3945, V3946, V3947)) end end end}, V3934, V3915))), case V3948 of {'Idris.Prelude.Types.Left', E655} -> (fun (V3949) -> {'Idris.Prelude.Types.Left', V3949} end(E655)); {'Idris.Prelude.Types.Right', E656} -> (fun (V3950) -> begin (V3952 = (('un--getNArgs'(V0, V3941, V3950, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3951) -> ('Idris.Idris2.Builtin':'un--snd'(V3951)) end, V3937))))(V3915))), case V3952 of {'Idris.Prelude.Types.Left', E657} -> (fun (V3953) -> {'Idris.Prelude.Types.Left', V3953} end(E657)); {'Idris.Prelude.Types.Right', E658} -> (fun (V3954) -> case V3954 of {'Idris.Compiler.CompileExpr.User', E659, E660} -> (fun (V3955, V3956) -> begin (V3958 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3957) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3941, V3957)) end, V3956, [], V3915))), case V3958 of {'Idris.Prelude.Types.Left', E661} -> (fun (V3959) -> {'Idris.Prelude.Types.Left', V3959} end(E661)); {'Idris.Prelude.Types.Right', E662} -> (fun (V3960) -> begin (V3962 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3961) -> ('un--nfToCFType'(V0, V3933, V2, V3961)) end, V3960, [], V3915))), case V3962 of {'Idris.Prelude.Types.Left', E663} -> (fun (V3963) -> {'Idris.Prelude.Types.Left', V3963} end(E663)); {'Idris.Prelude.Types.Right', E664} -> (fun (V3964) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3950, V3964}} end(E664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E662)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E659, E660)); {'Idris.Compiler.CompileExpr.Struct', E665, E666} -> (fun (V3965, V3966) -> begin (V3977 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3967) -> fun (V3968) -> case V3967 of {'Idris.Builtin.MkPair', E667, E668} -> (fun (V3969, V3970) -> begin (V3971 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3941, V3970))(V3968))), case V3971 of {'Idris.Prelude.Types.Left', E669} -> (fun (V3972) -> {'Idris.Prelude.Types.Left', V3972} end(E669)); {'Idris.Prelude.Types.Right', E670} -> (fun (V3973) -> begin (V3974 = (('un--nfToCFType'(V0, V3933, 1, V3973))(V3968))), case V3974 of {'Idris.Prelude.Types.Left', E671} -> (fun (V3975) -> {'Idris.Prelude.Types.Left', V3975} end(E671)); {'Idris.Prelude.Types.Right', E672} -> (fun (V3976) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3969, V3976}} end(E672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E667, E668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3966, [], V3915))), case V3977 of {'Idris.Prelude.Types.Left', E673} -> (fun (V3978) -> {'Idris.Prelude.Types.Left', V3978} end(E673)); {'Idris.Prelude.Types.Right', E674} -> (fun (V3979) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3965, V3979}} end(E674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E665, E666)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E675} -> (fun (V3980) -> begin (V3981 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V3941, V3980))(V3915))), case V3981 of {'Idris.Prelude.Types.Left', E676} -> (fun (V3982) -> {'Idris.Prelude.Types.Left', V3982} end(E676)); {'Idris.Prelude.Types.Right', E677} -> (fun (V3983) -> begin (V3984 = (('un--nfToCFType'(V0, V3933, V2, V3983))(V3915))), case V3984 of {'Idris.Prelude.Types.Left', E678} -> (fun (V3985) -> {'Idris.Prelude.Types.Left', V3985} end(E678)); {'Idris.Prelude.Types.Right', E679} -> (fun (V3986) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3986}} end(E679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E656)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E654)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E648, E649, E650, E651, E652)); {'Idris.Core.Value.NType', E680} -> (fun (V3987) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E680)); {'Idris.Core.Value.NErased', E681, E682} -> (fun (V3988, V3989) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E681, E682)); _ -> begin (V3991 = begin (V3990 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3990} end), case V3991 of {'Idris.Prelude.Types.Left', E642} -> (fun (V3992) -> {'Idris.Prelude.Types.Left', V3992} end(E642)); {'Idris.Prelude.Types.Right', E643} -> (fun (V3993) -> begin (V3994 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V3993, {'Idris.Core.Env.Nil'}, V3, V3915))), case V3994 of {'Idris.Prelude.Types.Left', E644} -> (fun (V3995) -> {'Idris.Prelude.Types.Left', V3995} end(E644)); {'Idris.Prelude.Types.Right', E645} -> (fun (V3996) -> begin (V4003 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3997) -> fun (V3998) -> fun (V3999) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3997, V3998, V3999)) end end end, fun (V4000) -> fun (V4001) -> fun (V4002) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4000, V4001, V4002)) end end end}, V3996, V3915))), case V4003 of {'Idris.Prelude.Types.Left', E646} -> (fun (V4004) -> {'Idris.Prelude.Types.Left', V4004} end(E646)); {'Idris.Prelude.Types.Right', E647} -> (fun (V4005) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4005))))}, V3915)) end(E647)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E643)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E638, E639, E640, E641)); _ -> fun (V4006) -> case V3 of {'Idris.Core.Value.NTCon', E603, E604, E605, E606, E607} -> (fun (V4007, V4008, V4009, V4010, V4011) -> begin (V4013 = begin (V4012 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4012} end), case V4013 of {'Idris.Prelude.Types.Left', E608} -> (fun (V4014) -> {'Idris.Prelude.Types.Left', V4014} end(E608)); {'Idris.Prelude.Types.Right', E609} -> (fun (V4015) -> begin (V4022 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4016) -> fun (V4017) -> fun (V4018) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4016, V4017, V4018)) end end end, fun (V4019) -> fun (V4020) -> fun (V4021) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4019, V4020, V4021)) end end end}, V4008, V4006))), case V4022 of {'Idris.Prelude.Types.Left', E610} -> (fun (V4023) -> {'Idris.Prelude.Types.Left', V4023} end(E610)); {'Idris.Prelude.Types.Right', E611} -> (fun (V4024) -> begin (V4026 = (('un--getNArgs'(V0, V4015, V4024, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4025) -> ('Idris.Idris2.Builtin':'un--snd'(V4025)) end, V4011))))(V4006))), case V4026 of {'Idris.Prelude.Types.Left', E612} -> (fun (V4027) -> {'Idris.Prelude.Types.Left', V4027} end(E612)); {'Idris.Prelude.Types.Right', E613} -> (fun (V4028) -> case V4028 of {'Idris.Compiler.CompileExpr.User', E614, E615} -> (fun (V4029, V4030) -> begin (V4032 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4031) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4015, V4031)) end, V4030, [], V4006))), case V4032 of {'Idris.Prelude.Types.Left', E616} -> (fun (V4033) -> {'Idris.Prelude.Types.Left', V4033} end(E616)); {'Idris.Prelude.Types.Right', E617} -> (fun (V4034) -> begin (V4036 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4035) -> ('un--nfToCFType'(V0, V4007, V2, V4035)) end, V4034, [], V4006))), case V4036 of {'Idris.Prelude.Types.Left', E618} -> (fun (V4037) -> {'Idris.Prelude.Types.Left', V4037} end(E618)); {'Idris.Prelude.Types.Right', E619} -> (fun (V4038) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4024, V4038}} end(E619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E614, E615)); {'Idris.Compiler.CompileExpr.Struct', E620, E621} -> (fun (V4039, V4040) -> begin (V4051 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4041) -> fun (V4042) -> case V4041 of {'Idris.Builtin.MkPair', E622, E623} -> (fun (V4043, V4044) -> begin (V4045 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4015, V4044))(V4042))), case V4045 of {'Idris.Prelude.Types.Left', E624} -> (fun (V4046) -> {'Idris.Prelude.Types.Left', V4046} end(E624)); {'Idris.Prelude.Types.Right', E625} -> (fun (V4047) -> begin (V4048 = (('un--nfToCFType'(V0, V4007, 1, V4047))(V4042))), case V4048 of {'Idris.Prelude.Types.Left', E626} -> (fun (V4049) -> {'Idris.Prelude.Types.Left', V4049} end(E626)); {'Idris.Prelude.Types.Right', E627} -> (fun (V4050) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4043, V4050}} end(E627)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E622, E623)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4040, [], V4006))), case V4051 of {'Idris.Prelude.Types.Left', E628} -> (fun (V4052) -> {'Idris.Prelude.Types.Left', V4052} end(E628)); {'Idris.Prelude.Types.Right', E629} -> (fun (V4053) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4039, V4053}} end(E629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E620, E621)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E630} -> (fun (V4054) -> begin (V4055 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4015, V4054))(V4006))), case V4055 of {'Idris.Prelude.Types.Left', E631} -> (fun (V4056) -> {'Idris.Prelude.Types.Left', V4056} end(E631)); {'Idris.Prelude.Types.Right', E632} -> (fun (V4057) -> begin (V4058 = (('un--nfToCFType'(V0, V4007, V2, V4057))(V4006))), case V4058 of {'Idris.Prelude.Types.Left', E633} -> (fun (V4059) -> {'Idris.Prelude.Types.Left', V4059} end(E633)); {'Idris.Prelude.Types.Right', E634} -> (fun (V4060) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4060}} end(E634)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E630)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E613)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E611)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E609)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E603, E604, E605, E606, E607)); {'Idris.Core.Value.NType', E635} -> (fun (V4061) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E635)); {'Idris.Core.Value.NErased', E636, E637} -> (fun (V4062, V4063) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E636, E637)); _ -> begin (V4065 = begin (V4064 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4064} end), case V4065 of {'Idris.Prelude.Types.Left', E597} -> (fun (V4066) -> {'Idris.Prelude.Types.Left', V4066} end(E597)); {'Idris.Prelude.Types.Right', E598} -> (fun (V4067) -> begin (V4068 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4067, {'Idris.Core.Env.Nil'}, V3, V4006))), case V4068 of {'Idris.Prelude.Types.Left', E599} -> (fun (V4069) -> {'Idris.Prelude.Types.Left', V4069} end(E599)); {'Idris.Prelude.Types.Right', E600} -> (fun (V4070) -> begin (V4077 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4071) -> fun (V4072) -> fun (V4073) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4071, V4072, V4073)) end end end, fun (V4074) -> fun (V4075) -> fun (V4076) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4074, V4075, V4076)) end end end}, V4070, V4006))), case V4077 of {'Idris.Prelude.Types.Left', E601} -> (fun (V4078) -> {'Idris.Prelude.Types.Left', V4078} end(E601)); {'Idris.Prelude.Types.Right', E602} -> (fun (V4079) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4079))))}, V4006)) end(E602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V4080) -> case V3 of {'Idris.Core.Value.NBind', E736, E737, E738, E739} -> (fun (V4081, V4082, V4083, V4084) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4081, <<"Function types not allowed in a foreign struct"/utf8>>}, V4080)) end(E736, E737, E738, E739)); _ -> case V3 of {'Idris.Core.Value.NTCon', E701, E702, E703, E704, E705} -> (fun (V4085, V4086, V4087, V4088, V4089) -> begin (V4091 = begin (V4090 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4090} end), case V4091 of {'Idris.Prelude.Types.Left', E706} -> (fun (V4092) -> {'Idris.Prelude.Types.Left', V4092} end(E706)); {'Idris.Prelude.Types.Right', E707} -> (fun (V4093) -> begin (V4100 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4094) -> fun (V4095) -> fun (V4096) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4094, V4095, V4096)) end end end, fun (V4097) -> fun (V4098) -> fun (V4099) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4097, V4098, V4099)) end end end}, V4086, V4080))), case V4100 of {'Idris.Prelude.Types.Left', E708} -> (fun (V4101) -> {'Idris.Prelude.Types.Left', V4101} end(E708)); {'Idris.Prelude.Types.Right', E709} -> (fun (V4102) -> begin (V4104 = (('un--getNArgs'(V0, V4093, V4102, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4103) -> ('Idris.Idris2.Builtin':'un--snd'(V4103)) end, V4089))))(V4080))), case V4104 of {'Idris.Prelude.Types.Left', E710} -> (fun (V4105) -> {'Idris.Prelude.Types.Left', V4105} end(E710)); {'Idris.Prelude.Types.Right', E711} -> (fun (V4106) -> case V4106 of {'Idris.Compiler.CompileExpr.User', E712, E713} -> (fun (V4107, V4108) -> begin (V4110 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4109) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4093, V4109)) end, V4108, [], V4080))), case V4110 of {'Idris.Prelude.Types.Left', E714} -> (fun (V4111) -> {'Idris.Prelude.Types.Left', V4111} end(E714)); {'Idris.Prelude.Types.Right', E715} -> (fun (V4112) -> begin (V4114 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4113) -> ('un--nfToCFType'(V0, V4085, V2, V4113)) end, V4112, [], V4080))), case V4114 of {'Idris.Prelude.Types.Left', E716} -> (fun (V4115) -> {'Idris.Prelude.Types.Left', V4115} end(E716)); {'Idris.Prelude.Types.Right', E717} -> (fun (V4116) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4102, V4116}} end(E717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E715)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E712, E713)); {'Idris.Compiler.CompileExpr.Struct', E718, E719} -> (fun (V4117, V4118) -> begin (V4129 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4119) -> fun (V4120) -> case V4119 of {'Idris.Builtin.MkPair', E720, E721} -> (fun (V4121, V4122) -> begin (V4123 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4093, V4122))(V4120))), case V4123 of {'Idris.Prelude.Types.Left', E722} -> (fun (V4124) -> {'Idris.Prelude.Types.Left', V4124} end(E722)); {'Idris.Prelude.Types.Right', E723} -> (fun (V4125) -> begin (V4126 = (('un--nfToCFType'(V0, V4085, 1, V4125))(V4120))), case V4126 of {'Idris.Prelude.Types.Left', E724} -> (fun (V4127) -> {'Idris.Prelude.Types.Left', V4127} end(E724)); {'Idris.Prelude.Types.Right', E725} -> (fun (V4128) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4121, V4128}} end(E725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E720, E721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4118, [], V4080))), case V4129 of {'Idris.Prelude.Types.Left', E726} -> (fun (V4130) -> {'Idris.Prelude.Types.Left', V4130} end(E726)); {'Idris.Prelude.Types.Right', E727} -> (fun (V4131) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4117, V4131}} end(E727)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E718, E719)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E728} -> (fun (V4132) -> begin (V4133 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4093, V4132))(V4080))), case V4133 of {'Idris.Prelude.Types.Left', E729} -> (fun (V4134) -> {'Idris.Prelude.Types.Left', V4134} end(E729)); {'Idris.Prelude.Types.Right', E730} -> (fun (V4135) -> begin (V4136 = (('un--nfToCFType'(V0, V4085, V2, V4135))(V4080))), case V4136 of {'Idris.Prelude.Types.Left', E731} -> (fun (V4137) -> {'Idris.Prelude.Types.Left', V4137} end(E731)); {'Idris.Prelude.Types.Right', E732} -> (fun (V4138) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4138}} end(E732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E730)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E728)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E711)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E709)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E701, E702, E703, E704, E705)); {'Idris.Core.Value.NType', E733} -> (fun (V4139) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E733)); {'Idris.Core.Value.NErased', E734, E735} -> (fun (V4140, V4141) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E734, E735)); _ -> begin (V4143 = begin (V4142 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4142} end), case V4143 of {'Idris.Prelude.Types.Left', E695} -> (fun (V4144) -> {'Idris.Prelude.Types.Left', V4144} end(E695)); {'Idris.Prelude.Types.Right', E696} -> (fun (V4145) -> begin (V4146 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4145, {'Idris.Core.Env.Nil'}, V3, V4080))), case V4146 of {'Idris.Prelude.Types.Left', E697} -> (fun (V4147) -> {'Idris.Prelude.Types.Left', V4147} end(E697)); {'Idris.Prelude.Types.Right', E698} -> (fun (V4148) -> begin (V4155 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4149) -> fun (V4150) -> fun (V4151) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4149, V4150, V4151)) end end end, fun (V4152) -> fun (V4153) -> fun (V4154) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4152, V4153, V4154)) end end end}, V4148, V4080))), case V4155 of {'Idris.Prelude.Types.Left', E699} -> (fun (V4156) -> {'Idris.Prelude.Types.Left', V4156} end(E699)); {'Idris.Prelude.Types.Right', E700} -> (fun (V4157) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4157))))}, V4080)) end(E700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V4158) -> case V3 of {'Idris.Core.Value.NTCon', E562, E563, E564, E565, E566} -> (fun (V4159, V4160, V4161, V4162, V4163) -> begin (V4165 = begin (V4164 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4164} end), case V4165 of {'Idris.Prelude.Types.Left', E567} -> (fun (V4166) -> {'Idris.Prelude.Types.Left', V4166} end(E567)); {'Idris.Prelude.Types.Right', E568} -> (fun (V4167) -> begin (V4174 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4168) -> fun (V4169) -> fun (V4170) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4168, V4169, V4170)) end end end, fun (V4171) -> fun (V4172) -> fun (V4173) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4171, V4172, V4173)) end end end}, V4160, V4158))), case V4174 of {'Idris.Prelude.Types.Left', E569} -> (fun (V4175) -> {'Idris.Prelude.Types.Left', V4175} end(E569)); {'Idris.Prelude.Types.Right', E570} -> (fun (V4176) -> begin (V4178 = (('un--getNArgs'(V0, V4167, V4176, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4177) -> ('Idris.Idris2.Builtin':'un--snd'(V4177)) end, V4163))))(V4158))), case V4178 of {'Idris.Prelude.Types.Left', E571} -> (fun (V4179) -> {'Idris.Prelude.Types.Left', V4179} end(E571)); {'Idris.Prelude.Types.Right', E572} -> (fun (V4180) -> case V4180 of {'Idris.Compiler.CompileExpr.User', E573, E574} -> (fun (V4181, V4182) -> begin (V4184 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4183) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4167, V4183)) end, V4182, [], V4158))), case V4184 of {'Idris.Prelude.Types.Left', E575} -> (fun (V4185) -> {'Idris.Prelude.Types.Left', V4185} end(E575)); {'Idris.Prelude.Types.Right', E576} -> (fun (V4186) -> begin (V4188 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4187) -> ('un--nfToCFType'(V0, V4159, V2, V4187)) end, V4186, [], V4158))), case V4188 of {'Idris.Prelude.Types.Left', E577} -> (fun (V4189) -> {'Idris.Prelude.Types.Left', V4189} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V4190) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4176, V4190}} end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E573, E574)); {'Idris.Compiler.CompileExpr.Struct', E579, E580} -> (fun (V4191, V4192) -> begin (V4203 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4193) -> fun (V4194) -> case V4193 of {'Idris.Builtin.MkPair', E581, E582} -> (fun (V4195, V4196) -> begin (V4197 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4167, V4196))(V4194))), case V4197 of {'Idris.Prelude.Types.Left', E583} -> (fun (V4198) -> {'Idris.Prelude.Types.Left', V4198} end(E583)); {'Idris.Prelude.Types.Right', E584} -> (fun (V4199) -> begin (V4200 = (('un--nfToCFType'(V0, V4159, 1, V4199))(V4194))), case V4200 of {'Idris.Prelude.Types.Left', E585} -> (fun (V4201) -> {'Idris.Prelude.Types.Left', V4201} end(E585)); {'Idris.Prelude.Types.Right', E586} -> (fun (V4202) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4195, V4202}} end(E586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E581, E582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4192, [], V4158))), case V4203 of {'Idris.Prelude.Types.Left', E587} -> (fun (V4204) -> {'Idris.Prelude.Types.Left', V4204} end(E587)); {'Idris.Prelude.Types.Right', E588} -> (fun (V4205) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4191, V4205}} end(E588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E579, E580)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E589} -> (fun (V4206) -> begin (V4207 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4167, V4206))(V4158))), case V4207 of {'Idris.Prelude.Types.Left', E590} -> (fun (V4208) -> {'Idris.Prelude.Types.Left', V4208} end(E590)); {'Idris.Prelude.Types.Right', E591} -> (fun (V4209) -> begin (V4210 = (('un--nfToCFType'(V0, V4159, V2, V4209))(V4158))), case V4210 of {'Idris.Prelude.Types.Left', E592} -> (fun (V4211) -> {'Idris.Prelude.Types.Left', V4211} end(E592)); {'Idris.Prelude.Types.Right', E593} -> (fun (V4212) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4212}} end(E593)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E591)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E589)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E568)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E562, E563, E564, E565, E566)); {'Idris.Core.Value.NType', E594} -> (fun (V4213) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E594)); {'Idris.Core.Value.NErased', E595, E596} -> (fun (V4214, V4215) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E595, E596)); _ -> begin (V4217 = begin (V4216 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4216} end), case V4217 of {'Idris.Prelude.Types.Left', E556} -> (fun (V4218) -> {'Idris.Prelude.Types.Left', V4218} end(E556)); {'Idris.Prelude.Types.Right', E557} -> (fun (V4219) -> begin (V4220 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4219, {'Idris.Core.Env.Nil'}, V3, V4158))), case V4220 of {'Idris.Prelude.Types.Left', E558} -> (fun (V4221) -> {'Idris.Prelude.Types.Left', V4221} end(E558)); {'Idris.Prelude.Types.Right', E559} -> (fun (V4222) -> begin (V4229 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4223) -> fun (V4224) -> fun (V4225) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4223, V4224, V4225)) end end end, fun (V4226) -> fun (V4227) -> fun (V4228) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4226, V4227, V4228)) end end end}, V4222, V4158))), case V4229 of {'Idris.Prelude.Types.Left', E560} -> (fun (V4230) -> {'Idris.Prelude.Types.Left', V4230} end(E560)); {'Idris.Prelude.Types.Right', E561} -> (fun (V4231) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4231))))}, V4158)) end(E561)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E559)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E554, E555)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E452, E453, E454, E455} -> (fun (V4232, V4233, V4234, V4235) -> fun (V4236) -> case V4234 of {'Idris.Core.TT.Pi', E497, E498, E499, E500} -> (fun (V4237, V4238, V4239, V4240) -> begin (V4242 = begin (V4241 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4241} end), case V4242 of {'Idris.Prelude.Types.Left', E501} -> (fun (V4243) -> {'Idris.Prelude.Types.Left', V4243} end(E501)); {'Idris.Prelude.Types.Right', E502} -> (fun (V4244) -> begin (V4245 = (('un--nfToCFType'(V0, V4232, 0, V4240))(V4236))), case V4245 of {'Idris.Prelude.Types.Left', E503} -> (fun (V4246) -> {'Idris.Prelude.Types.Left', V4246} end(E503)); {'Idris.Prelude.Types.Right', E504} -> (fun (V4247) -> begin (V4248 = (((V4235(V4244))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4232, 0}))))(V4236))), case V4248 of {'Idris.Prelude.Types.Left', E505} -> (fun (V4249) -> {'Idris.Prelude.Types.Left', V4249} end(E505)); {'Idris.Prelude.Types.Right', E506} -> (fun (V4250) -> begin (V4251 = (('un--nfToCFType'(V0, V4232, 0, V4250))(V4236))), case V4251 of {'Idris.Prelude.Types.Left', E507} -> (fun (V4252) -> {'Idris.Prelude.Types.Left', V4252} end(E507)); {'Idris.Prelude.Types.Right', E508} -> (fun (V4253) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4247, V4253}} end(E508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E502)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E497, E498, E499, E500)); _ -> case V3 of {'Idris.Core.Value.NTCon', E462, E463, E464, E465, E466} -> (fun (V4254, V4255, V4256, V4257, V4258) -> begin (V4260 = begin (V4259 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4259} end), case V4260 of {'Idris.Prelude.Types.Left', E467} -> (fun (V4261) -> {'Idris.Prelude.Types.Left', V4261} end(E467)); {'Idris.Prelude.Types.Right', E468} -> (fun (V4262) -> begin (V4269 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4263) -> fun (V4264) -> fun (V4265) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4263, V4264, V4265)) end end end, fun (V4266) -> fun (V4267) -> fun (V4268) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4266, V4267, V4268)) end end end}, V4255, V4236))), case V4269 of {'Idris.Prelude.Types.Left', E469} -> (fun (V4270) -> {'Idris.Prelude.Types.Left', V4270} end(E469)); {'Idris.Prelude.Types.Right', E470} -> (fun (V4271) -> begin (V4273 = (('un--getNArgs'(V0, V4262, V4271, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4272) -> ('Idris.Idris2.Builtin':'un--snd'(V4272)) end, V4258))))(V4236))), case V4273 of {'Idris.Prelude.Types.Left', E471} -> (fun (V4274) -> {'Idris.Prelude.Types.Left', V4274} end(E471)); {'Idris.Prelude.Types.Right', E472} -> (fun (V4275) -> case V4275 of {'Idris.Compiler.CompileExpr.User', E473, E474} -> (fun (V4276, V4277) -> begin (V4279 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4278) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4262, V4278)) end, V4277, [], V4236))), case V4279 of {'Idris.Prelude.Types.Left', E475} -> (fun (V4280) -> {'Idris.Prelude.Types.Left', V4280} end(E475)); {'Idris.Prelude.Types.Right', E476} -> (fun (V4281) -> begin (V4283 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4282) -> ('un--nfToCFType'(V0, V4254, V2, V4282)) end, V4281, [], V4236))), case V4283 of {'Idris.Prelude.Types.Left', E477} -> (fun (V4284) -> {'Idris.Prelude.Types.Left', V4284} end(E477)); {'Idris.Prelude.Types.Right', E478} -> (fun (V4285) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4271, V4285}} end(E478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E473, E474)); {'Idris.Compiler.CompileExpr.Struct', E479, E480} -> (fun (V4286, V4287) -> begin (V4298 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4288) -> fun (V4289) -> case V4288 of {'Idris.Builtin.MkPair', E481, E482} -> (fun (V4290, V4291) -> begin (V4292 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4262, V4291))(V4289))), case V4292 of {'Idris.Prelude.Types.Left', E483} -> (fun (V4293) -> {'Idris.Prelude.Types.Left', V4293} end(E483)); {'Idris.Prelude.Types.Right', E484} -> (fun (V4294) -> begin (V4295 = (('un--nfToCFType'(V0, V4254, 1, V4294))(V4289))), case V4295 of {'Idris.Prelude.Types.Left', E485} -> (fun (V4296) -> {'Idris.Prelude.Types.Left', V4296} end(E485)); {'Idris.Prelude.Types.Right', E486} -> (fun (V4297) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4290, V4297}} end(E486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E481, E482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4287, [], V4236))), case V4298 of {'Idris.Prelude.Types.Left', E487} -> (fun (V4299) -> {'Idris.Prelude.Types.Left', V4299} end(E487)); {'Idris.Prelude.Types.Right', E488} -> (fun (V4300) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4286, V4300}} end(E488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E479, E480)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E489} -> (fun (V4301) -> begin (V4302 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4262, V4301))(V4236))), case V4302 of {'Idris.Prelude.Types.Left', E490} -> (fun (V4303) -> {'Idris.Prelude.Types.Left', V4303} end(E490)); {'Idris.Prelude.Types.Right', E491} -> (fun (V4304) -> begin (V4305 = (('un--nfToCFType'(V0, V4254, V2, V4304))(V4236))), case V4305 of {'Idris.Prelude.Types.Left', E492} -> (fun (V4306) -> {'Idris.Prelude.Types.Left', V4306} end(E492)); {'Idris.Prelude.Types.Right', E493} -> (fun (V4307) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4307}} end(E493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E491)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E468)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E462, E463, E464, E465, E466)); {'Idris.Core.Value.NType', E494} -> (fun (V4308) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E494)); {'Idris.Core.Value.NErased', E495, E496} -> (fun (V4309, V4310) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E495, E496)); _ -> begin (V4312 = begin (V4311 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4311} end), case V4312 of {'Idris.Prelude.Types.Left', E456} -> (fun (V4313) -> {'Idris.Prelude.Types.Left', V4313} end(E456)); {'Idris.Prelude.Types.Right', E457} -> (fun (V4314) -> begin (V4315 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4314, {'Idris.Core.Env.Nil'}, V3, V4236))), case V4315 of {'Idris.Prelude.Types.Left', E458} -> (fun (V4316) -> {'Idris.Prelude.Types.Left', V4316} end(E458)); {'Idris.Prelude.Types.Right', E459} -> (fun (V4317) -> begin (V4324 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4318) -> fun (V4319) -> fun (V4320) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4318, V4319, V4320)) end end end, fun (V4321) -> fun (V4322) -> fun (V4323) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4321, V4322, V4323)) end end end}, V4317, V4236))), case V4324 of {'Idris.Prelude.Types.Left', E460} -> (fun (V4325) -> {'Idris.Prelude.Types.Left', V4325} end(E460)); {'Idris.Prelude.Types.Right', E461} -> (fun (V4326) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4326))))}, V4236)) end(E461)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E459)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E452, E453, E454, E455)); _ -> fun (V4327) -> case V3 of {'Idris.Core.Value.NTCon', E417, E418, E419, E420, E421} -> (fun (V4328, V4329, V4330, V4331, V4332) -> begin (V4334 = begin (V4333 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4333} end), case V4334 of {'Idris.Prelude.Types.Left', E422} -> (fun (V4335) -> {'Idris.Prelude.Types.Left', V4335} end(E422)); {'Idris.Prelude.Types.Right', E423} -> (fun (V4336) -> begin (V4343 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4337) -> fun (V4338) -> fun (V4339) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4337, V4338, V4339)) end end end, fun (V4340) -> fun (V4341) -> fun (V4342) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4340, V4341, V4342)) end end end}, V4329, V4327))), case V4343 of {'Idris.Prelude.Types.Left', E424} -> (fun (V4344) -> {'Idris.Prelude.Types.Left', V4344} end(E424)); {'Idris.Prelude.Types.Right', E425} -> (fun (V4345) -> begin (V4347 = (('un--getNArgs'(V0, V4336, V4345, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4346) -> ('Idris.Idris2.Builtin':'un--snd'(V4346)) end, V4332))))(V4327))), case V4347 of {'Idris.Prelude.Types.Left', E426} -> (fun (V4348) -> {'Idris.Prelude.Types.Left', V4348} end(E426)); {'Idris.Prelude.Types.Right', E427} -> (fun (V4349) -> case V4349 of {'Idris.Compiler.CompileExpr.User', E428, E429} -> (fun (V4350, V4351) -> begin (V4353 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4352) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4336, V4352)) end, V4351, [], V4327))), case V4353 of {'Idris.Prelude.Types.Left', E430} -> (fun (V4354) -> {'Idris.Prelude.Types.Left', V4354} end(E430)); {'Idris.Prelude.Types.Right', E431} -> (fun (V4355) -> begin (V4357 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4356) -> ('un--nfToCFType'(V0, V4328, V2, V4356)) end, V4355, [], V4327))), case V4357 of {'Idris.Prelude.Types.Left', E432} -> (fun (V4358) -> {'Idris.Prelude.Types.Left', V4358} end(E432)); {'Idris.Prelude.Types.Right', E433} -> (fun (V4359) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4345, V4359}} end(E433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E428, E429)); {'Idris.Compiler.CompileExpr.Struct', E434, E435} -> (fun (V4360, V4361) -> begin (V4372 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4362) -> fun (V4363) -> case V4362 of {'Idris.Builtin.MkPair', E436, E437} -> (fun (V4364, V4365) -> begin (V4366 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4336, V4365))(V4363))), case V4366 of {'Idris.Prelude.Types.Left', E438} -> (fun (V4367) -> {'Idris.Prelude.Types.Left', V4367} end(E438)); {'Idris.Prelude.Types.Right', E439} -> (fun (V4368) -> begin (V4369 = (('un--nfToCFType'(V0, V4328, 1, V4368))(V4363))), case V4369 of {'Idris.Prelude.Types.Left', E440} -> (fun (V4370) -> {'Idris.Prelude.Types.Left', V4370} end(E440)); {'Idris.Prelude.Types.Right', E441} -> (fun (V4371) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4364, V4371}} end(E441)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E439)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E436, E437)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4361, [], V4327))), case V4372 of {'Idris.Prelude.Types.Left', E442} -> (fun (V4373) -> {'Idris.Prelude.Types.Left', V4373} end(E442)); {'Idris.Prelude.Types.Right', E443} -> (fun (V4374) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4360, V4374}} end(E443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E434, E435)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E444} -> (fun (V4375) -> begin (V4376 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4336, V4375))(V4327))), case V4376 of {'Idris.Prelude.Types.Left', E445} -> (fun (V4377) -> {'Idris.Prelude.Types.Left', V4377} end(E445)); {'Idris.Prelude.Types.Right', E446} -> (fun (V4378) -> begin (V4379 = (('un--nfToCFType'(V0, V4328, V2, V4378))(V4327))), case V4379 of {'Idris.Prelude.Types.Left', E447} -> (fun (V4380) -> {'Idris.Prelude.Types.Left', V4380} end(E447)); {'Idris.Prelude.Types.Right', E448} -> (fun (V4381) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4381}} end(E448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E425)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E423)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E417, E418, E419, E420, E421)); {'Idris.Core.Value.NType', E449} -> (fun (V4382) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E449)); {'Idris.Core.Value.NErased', E450, E451} -> (fun (V4383, V4384) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E450, E451)); _ -> begin (V4386 = begin (V4385 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4385} end), case V4386 of {'Idris.Prelude.Types.Left', E411} -> (fun (V4387) -> {'Idris.Prelude.Types.Left', V4387} end(E411)); {'Idris.Prelude.Types.Right', E412} -> (fun (V4388) -> begin (V4389 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4388, {'Idris.Core.Env.Nil'}, V3, V4327))), case V4389 of {'Idris.Prelude.Types.Left', E413} -> (fun (V4390) -> {'Idris.Prelude.Types.Left', V4390} end(E413)); {'Idris.Prelude.Types.Right', E414} -> (fun (V4391) -> begin (V4398 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4392) -> fun (V4393) -> fun (V4394) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4392, V4393, V4394)) end end end, fun (V4395) -> fun (V4396) -> fun (V4397) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4395, V4396, V4397)) end end end}, V4391, V4327))), case V4398 of {'Idris.Prelude.Types.Left', E415} -> (fun (V4399) -> {'Idris.Prelude.Types.Left', V4399} end(E415)); {'Idris.Prelude.Types.Right', E416} -> (fun (V4400) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4400))))}, V4327)) end(E416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V4401) -> case V3 of {'Idris.Core.Value.NBind', E550, E551, E552, E553} -> (fun (V4402, V4403, V4404, V4405) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4402, <<"Function types not allowed in a foreign struct"/utf8>>}, V4401)) end(E550, E551, E552, E553)); _ -> case V3 of {'Idris.Core.Value.NTCon', E515, E516, E517, E518, E519} -> (fun (V4406, V4407, V4408, V4409, V4410) -> begin (V4412 = begin (V4411 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4411} end), case V4412 of {'Idris.Prelude.Types.Left', E520} -> (fun (V4413) -> {'Idris.Prelude.Types.Left', V4413} end(E520)); {'Idris.Prelude.Types.Right', E521} -> (fun (V4414) -> begin (V4421 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4415) -> fun (V4416) -> fun (V4417) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4415, V4416, V4417)) end end end, fun (V4418) -> fun (V4419) -> fun (V4420) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4418, V4419, V4420)) end end end}, V4407, V4401))), case V4421 of {'Idris.Prelude.Types.Left', E522} -> (fun (V4422) -> {'Idris.Prelude.Types.Left', V4422} end(E522)); {'Idris.Prelude.Types.Right', E523} -> (fun (V4423) -> begin (V4425 = (('un--getNArgs'(V0, V4414, V4423, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4424) -> ('Idris.Idris2.Builtin':'un--snd'(V4424)) end, V4410))))(V4401))), case V4425 of {'Idris.Prelude.Types.Left', E524} -> (fun (V4426) -> {'Idris.Prelude.Types.Left', V4426} end(E524)); {'Idris.Prelude.Types.Right', E525} -> (fun (V4427) -> case V4427 of {'Idris.Compiler.CompileExpr.User', E526, E527} -> (fun (V4428, V4429) -> begin (V4431 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4430) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4414, V4430)) end, V4429, [], V4401))), case V4431 of {'Idris.Prelude.Types.Left', E528} -> (fun (V4432) -> {'Idris.Prelude.Types.Left', V4432} end(E528)); {'Idris.Prelude.Types.Right', E529} -> (fun (V4433) -> begin (V4435 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4434) -> ('un--nfToCFType'(V0, V4406, V2, V4434)) end, V4433, [], V4401))), case V4435 of {'Idris.Prelude.Types.Left', E530} -> (fun (V4436) -> {'Idris.Prelude.Types.Left', V4436} end(E530)); {'Idris.Prelude.Types.Right', E531} -> (fun (V4437) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4423, V4437}} end(E531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E526, E527)); {'Idris.Compiler.CompileExpr.Struct', E532, E533} -> (fun (V4438, V4439) -> begin (V4450 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4440) -> fun (V4441) -> case V4440 of {'Idris.Builtin.MkPair', E534, E535} -> (fun (V4442, V4443) -> begin (V4444 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4414, V4443))(V4441))), case V4444 of {'Idris.Prelude.Types.Left', E536} -> (fun (V4445) -> {'Idris.Prelude.Types.Left', V4445} end(E536)); {'Idris.Prelude.Types.Right', E537} -> (fun (V4446) -> begin (V4447 = (('un--nfToCFType'(V0, V4406, 1, V4446))(V4441))), case V4447 of {'Idris.Prelude.Types.Left', E538} -> (fun (V4448) -> {'Idris.Prelude.Types.Left', V4448} end(E538)); {'Idris.Prelude.Types.Right', E539} -> (fun (V4449) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4442, V4449}} end(E539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E534, E535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4439, [], V4401))), case V4450 of {'Idris.Prelude.Types.Left', E540} -> (fun (V4451) -> {'Idris.Prelude.Types.Left', V4451} end(E540)); {'Idris.Prelude.Types.Right', E541} -> (fun (V4452) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4438, V4452}} end(E541)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E532, E533)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E542} -> (fun (V4453) -> begin (V4454 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4414, V4453))(V4401))), case V4454 of {'Idris.Prelude.Types.Left', E543} -> (fun (V4455) -> {'Idris.Prelude.Types.Left', V4455} end(E543)); {'Idris.Prelude.Types.Right', E544} -> (fun (V4456) -> begin (V4457 = (('un--nfToCFType'(V0, V4406, V2, V4456))(V4401))), case V4457 of {'Idris.Prelude.Types.Left', E545} -> (fun (V4458) -> {'Idris.Prelude.Types.Left', V4458} end(E545)); {'Idris.Prelude.Types.Right', E546} -> (fun (V4459) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4459}} end(E546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E525)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E523)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E521)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E515, E516, E517, E518, E519)); {'Idris.Core.Value.NType', E547} -> (fun (V4460) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E547)); {'Idris.Core.Value.NErased', E548, E549} -> (fun (V4461, V4462) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E548, E549)); _ -> begin (V4464 = begin (V4463 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4463} end), case V4464 of {'Idris.Prelude.Types.Left', E509} -> (fun (V4465) -> {'Idris.Prelude.Types.Left', V4465} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V4466) -> begin (V4467 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4466, {'Idris.Core.Env.Nil'}, V3, V4401))), case V4467 of {'Idris.Prelude.Types.Left', E511} -> (fun (V4468) -> {'Idris.Prelude.Types.Left', V4468} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V4469) -> begin (V4476 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4470) -> fun (V4471) -> fun (V4472) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4470, V4471, V4472)) end end end, fun (V4473) -> fun (V4474) -> fun (V4475) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4473, V4474, V4475)) end end end}, V4469, V4401))), case V4476 of {'Idris.Prelude.Types.Left', E513} -> (fun (V4477) -> {'Idris.Prelude.Types.Left', V4477} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V4478) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4478))))}, V4401)) end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V4479) -> case V3 of {'Idris.Core.Value.NTCon', E376, E377, E378, E379, E380} -> (fun (V4480, V4481, V4482, V4483, V4484) -> begin (V4486 = begin (V4485 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4485} end), case V4486 of {'Idris.Prelude.Types.Left', E381} -> (fun (V4487) -> {'Idris.Prelude.Types.Left', V4487} end(E381)); {'Idris.Prelude.Types.Right', E382} -> (fun (V4488) -> begin (V4495 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4489) -> fun (V4490) -> fun (V4491) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4489, V4490, V4491)) end end end, fun (V4492) -> fun (V4493) -> fun (V4494) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4492, V4493, V4494)) end end end}, V4481, V4479))), case V4495 of {'Idris.Prelude.Types.Left', E383} -> (fun (V4496) -> {'Idris.Prelude.Types.Left', V4496} end(E383)); {'Idris.Prelude.Types.Right', E384} -> (fun (V4497) -> begin (V4499 = (('un--getNArgs'(V0, V4488, V4497, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4498) -> ('Idris.Idris2.Builtin':'un--snd'(V4498)) end, V4484))))(V4479))), case V4499 of {'Idris.Prelude.Types.Left', E385} -> (fun (V4500) -> {'Idris.Prelude.Types.Left', V4500} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V4501) -> case V4501 of {'Idris.Compiler.CompileExpr.User', E387, E388} -> (fun (V4502, V4503) -> begin (V4505 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4504) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4488, V4504)) end, V4503, [], V4479))), case V4505 of {'Idris.Prelude.Types.Left', E389} -> (fun (V4506) -> {'Idris.Prelude.Types.Left', V4506} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V4507) -> begin (V4509 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4508) -> ('un--nfToCFType'(V0, V4480, V2, V4508)) end, V4507, [], V4479))), case V4509 of {'Idris.Prelude.Types.Left', E391} -> (fun (V4510) -> {'Idris.Prelude.Types.Left', V4510} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V4511) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4497, V4511}} end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E387, E388)); {'Idris.Compiler.CompileExpr.Struct', E393, E394} -> (fun (V4512, V4513) -> begin (V4524 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4514) -> fun (V4515) -> case V4514 of {'Idris.Builtin.MkPair', E395, E396} -> (fun (V4516, V4517) -> begin (V4518 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4488, V4517))(V4515))), case V4518 of {'Idris.Prelude.Types.Left', E397} -> (fun (V4519) -> {'Idris.Prelude.Types.Left', V4519} end(E397)); {'Idris.Prelude.Types.Right', E398} -> (fun (V4520) -> begin (V4521 = (('un--nfToCFType'(V0, V4480, 1, V4520))(V4515))), case V4521 of {'Idris.Prelude.Types.Left', E399} -> (fun (V4522) -> {'Idris.Prelude.Types.Left', V4522} end(E399)); {'Idris.Prelude.Types.Right', E400} -> (fun (V4523) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4516, V4523}} end(E400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E395, E396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4513, [], V4479))), case V4524 of {'Idris.Prelude.Types.Left', E401} -> (fun (V4525) -> {'Idris.Prelude.Types.Left', V4525} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V4526) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4512, V4526}} end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E393, E394)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E403} -> (fun (V4527) -> begin (V4528 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4488, V4527))(V4479))), case V4528 of {'Idris.Prelude.Types.Left', E404} -> (fun (V4529) -> {'Idris.Prelude.Types.Left', V4529} end(E404)); {'Idris.Prelude.Types.Right', E405} -> (fun (V4530) -> begin (V4531 = (('un--nfToCFType'(V0, V4480, V2, V4530))(V4479))), case V4531 of {'Idris.Prelude.Types.Left', E406} -> (fun (V4532) -> {'Idris.Prelude.Types.Left', V4532} end(E406)); {'Idris.Prelude.Types.Right', E407} -> (fun (V4533) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4533}} end(E407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E405)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E376, E377, E378, E379, E380)); {'Idris.Core.Value.NType', E408} -> (fun (V4534) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E408)); {'Idris.Core.Value.NErased', E409, E410} -> (fun (V4535, V4536) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E409, E410)); _ -> begin (V4538 = begin (V4537 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4537} end), case V4538 of {'Idris.Prelude.Types.Left', E370} -> (fun (V4539) -> {'Idris.Prelude.Types.Left', V4539} end(E370)); {'Idris.Prelude.Types.Right', E371} -> (fun (V4540) -> begin (V4541 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4540, {'Idris.Core.Env.Nil'}, V3, V4479))), case V4541 of {'Idris.Prelude.Types.Left', E372} -> (fun (V4542) -> {'Idris.Prelude.Types.Left', V4542} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V4543) -> begin (V4550 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4544) -> fun (V4545) -> fun (V4546) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4544, V4545, V4546)) end end end, fun (V4547) -> fun (V4548) -> fun (V4549) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4547, V4548, V4549)) end end end}, V4543, V4479))), case V4550 of {'Idris.Prelude.Types.Left', E374} -> (fun (V4551) -> {'Idris.Prelude.Types.Left', V4551} end(E374)); {'Idris.Prelude.Types.Right', E375} -> (fun (V4552) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4552))))}, V4479)) end(E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; 1 -> case V3 of {'Idris.Core.Value.NPrimVal', E1482, E1483} -> (fun (V4553, V4554) -> case V4554 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V4555) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V4555)) end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E1668, E1669} -> (fun (V4556, V4557) -> case V4557 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V4558) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V4559) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V4560) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1752, E1753, E1754, E1755} -> (fun (V4561, V4562, V4563, V4564) -> fun (V4565) -> case V4563 of {'Idris.Core.TT.Pi', E1797, E1798, E1799, E1800} -> (fun (V4566, V4567, V4568, V4569) -> begin (V4571 = begin (V4570 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4570} end), case V4571 of {'Idris.Prelude.Types.Left', E1801} -> (fun (V4572) -> {'Idris.Prelude.Types.Left', V4572} end(E1801)); {'Idris.Prelude.Types.Right', E1802} -> (fun (V4573) -> begin (V4574 = (('un--nfToCFType'(V0, V4561, 0, V4569))(V4565))), case V4574 of {'Idris.Prelude.Types.Left', E1803} -> (fun (V4575) -> {'Idris.Prelude.Types.Left', V4575} end(E1803)); {'Idris.Prelude.Types.Right', E1804} -> (fun (V4576) -> begin (V4577 = (((V4564(V4573))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4561, 0}))))(V4565))), case V4577 of {'Idris.Prelude.Types.Left', E1805} -> (fun (V4578) -> {'Idris.Prelude.Types.Left', V4578} end(E1805)); {'Idris.Prelude.Types.Right', E1806} -> (fun (V4579) -> begin (V4580 = (('un--nfToCFType'(V0, V4561, 0, V4579))(V4565))), case V4580 of {'Idris.Prelude.Types.Left', E1807} -> (fun (V4581) -> {'Idris.Prelude.Types.Left', V4581} end(E1807)); {'Idris.Prelude.Types.Right', E1808} -> (fun (V4582) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4576, V4582}} end(E1808)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1802)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1797, E1798, E1799, E1800)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1762, E1763, E1764, E1765, E1766} -> (fun (V4583, V4584, V4585, V4586, V4587) -> begin (V4589 = begin (V4588 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4588} end), case V4589 of {'Idris.Prelude.Types.Left', E1767} -> (fun (V4590) -> {'Idris.Prelude.Types.Left', V4590} end(E1767)); {'Idris.Prelude.Types.Right', E1768} -> (fun (V4591) -> begin (V4598 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4592) -> fun (V4593) -> fun (V4594) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4592, V4593, V4594)) end end end, fun (V4595) -> fun (V4596) -> fun (V4597) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4595, V4596, V4597)) end end end}, V4584, V4565))), case V4598 of {'Idris.Prelude.Types.Left', E1769} -> (fun (V4599) -> {'Idris.Prelude.Types.Left', V4599} end(E1769)); {'Idris.Prelude.Types.Right', E1770} -> (fun (V4600) -> begin (V4602 = (('un--getNArgs'(V0, V4591, V4600, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4601) -> ('Idris.Idris2.Builtin':'un--snd'(V4601)) end, V4587))))(V4565))), case V4602 of {'Idris.Prelude.Types.Left', E1771} -> (fun (V4603) -> {'Idris.Prelude.Types.Left', V4603} end(E1771)); {'Idris.Prelude.Types.Right', E1772} -> (fun (V4604) -> case V4604 of {'Idris.Compiler.CompileExpr.User', E1773, E1774} -> (fun (V4605, V4606) -> begin (V4608 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4607) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4591, V4607)) end, V4606, [], V4565))), case V4608 of {'Idris.Prelude.Types.Left', E1775} -> (fun (V4609) -> {'Idris.Prelude.Types.Left', V4609} end(E1775)); {'Idris.Prelude.Types.Right', E1776} -> (fun (V4610) -> begin (V4612 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4611) -> ('un--nfToCFType'(V0, V4583, V2, V4611)) end, V4610, [], V4565))), case V4612 of {'Idris.Prelude.Types.Left', E1777} -> (fun (V4613) -> {'Idris.Prelude.Types.Left', V4613} end(E1777)); {'Idris.Prelude.Types.Right', E1778} -> (fun (V4614) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4600, V4614}} end(E1778)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1776)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1773, E1774)); {'Idris.Compiler.CompileExpr.Struct', E1779, E1780} -> (fun (V4615, V4616) -> begin (V4627 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4617) -> fun (V4618) -> case V4617 of {'Idris.Builtin.MkPair', E1781, E1782} -> (fun (V4619, V4620) -> begin (V4621 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4591, V4620))(V4618))), case V4621 of {'Idris.Prelude.Types.Left', E1783} -> (fun (V4622) -> {'Idris.Prelude.Types.Left', V4622} end(E1783)); {'Idris.Prelude.Types.Right', E1784} -> (fun (V4623) -> begin (V4624 = (('un--nfToCFType'(V0, V4583, 1, V4623))(V4618))), case V4624 of {'Idris.Prelude.Types.Left', E1785} -> (fun (V4625) -> {'Idris.Prelude.Types.Left', V4625} end(E1785)); {'Idris.Prelude.Types.Right', E1786} -> (fun (V4626) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4619, V4626}} end(E1786)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1784)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1781, E1782)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4616, [], V4565))), case V4627 of {'Idris.Prelude.Types.Left', E1787} -> (fun (V4628) -> {'Idris.Prelude.Types.Left', V4628} end(E1787)); {'Idris.Prelude.Types.Right', E1788} -> (fun (V4629) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4615, V4629}} end(E1788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1779, E1780)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1789} -> (fun (V4630) -> begin (V4631 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4591, V4630))(V4565))), case V4631 of {'Idris.Prelude.Types.Left', E1790} -> (fun (V4632) -> {'Idris.Prelude.Types.Left', V4632} end(E1790)); {'Idris.Prelude.Types.Right', E1791} -> (fun (V4633) -> begin (V4634 = (('un--nfToCFType'(V0, V4583, V2, V4633))(V4565))), case V4634 of {'Idris.Prelude.Types.Left', E1792} -> (fun (V4635) -> {'Idris.Prelude.Types.Left', V4635} end(E1792)); {'Idris.Prelude.Types.Right', E1793} -> (fun (V4636) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4636}} end(E1793)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1791)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1768)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1762, E1763, E1764, E1765, E1766)); {'Idris.Core.Value.NType', E1794} -> (fun (V4637) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1794)); {'Idris.Core.Value.NErased', E1795, E1796} -> (fun (V4638, V4639) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1795, E1796)); _ -> begin (V4641 = begin (V4640 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4640} end), case V4641 of {'Idris.Prelude.Types.Left', E1756} -> (fun (V4642) -> {'Idris.Prelude.Types.Left', V4642} end(E1756)); {'Idris.Prelude.Types.Right', E1757} -> (fun (V4643) -> begin (V4644 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4643, {'Idris.Core.Env.Nil'}, V3, V4565))), case V4644 of {'Idris.Prelude.Types.Left', E1758} -> (fun (V4645) -> {'Idris.Prelude.Types.Left', V4645} end(E1758)); {'Idris.Prelude.Types.Right', E1759} -> (fun (V4646) -> begin (V4653 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4647) -> fun (V4648) -> fun (V4649) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4647, V4648, V4649)) end end end, fun (V4650) -> fun (V4651) -> fun (V4652) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4650, V4651, V4652)) end end end}, V4646, V4565))), case V4653 of {'Idris.Prelude.Types.Left', E1760} -> (fun (V4654) -> {'Idris.Prelude.Types.Left', V4654} end(E1760)); {'Idris.Prelude.Types.Right', E1761} -> (fun (V4655) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4655))))}, V4565)) end(E1761)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1752, E1753, E1754, E1755)); _ -> fun (V4656) -> case V3 of {'Idris.Core.Value.NTCon', E1717, E1718, E1719, E1720, E1721} -> (fun (V4657, V4658, V4659, V4660, V4661) -> begin (V4663 = begin (V4662 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4662} end), case V4663 of {'Idris.Prelude.Types.Left', E1722} -> (fun (V4664) -> {'Idris.Prelude.Types.Left', V4664} end(E1722)); {'Idris.Prelude.Types.Right', E1723} -> (fun (V4665) -> begin (V4672 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4666) -> fun (V4667) -> fun (V4668) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4666, V4667, V4668)) end end end, fun (V4669) -> fun (V4670) -> fun (V4671) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4669, V4670, V4671)) end end end}, V4658, V4656))), case V4672 of {'Idris.Prelude.Types.Left', E1724} -> (fun (V4673) -> {'Idris.Prelude.Types.Left', V4673} end(E1724)); {'Idris.Prelude.Types.Right', E1725} -> (fun (V4674) -> begin (V4676 = (('un--getNArgs'(V0, V4665, V4674, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4675) -> ('Idris.Idris2.Builtin':'un--snd'(V4675)) end, V4661))))(V4656))), case V4676 of {'Idris.Prelude.Types.Left', E1726} -> (fun (V4677) -> {'Idris.Prelude.Types.Left', V4677} end(E1726)); {'Idris.Prelude.Types.Right', E1727} -> (fun (V4678) -> case V4678 of {'Idris.Compiler.CompileExpr.User', E1728, E1729} -> (fun (V4679, V4680) -> begin (V4682 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4681) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4665, V4681)) end, V4680, [], V4656))), case V4682 of {'Idris.Prelude.Types.Left', E1730} -> (fun (V4683) -> {'Idris.Prelude.Types.Left', V4683} end(E1730)); {'Idris.Prelude.Types.Right', E1731} -> (fun (V4684) -> begin (V4686 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4685) -> ('un--nfToCFType'(V0, V4657, V2, V4685)) end, V4684, [], V4656))), case V4686 of {'Idris.Prelude.Types.Left', E1732} -> (fun (V4687) -> {'Idris.Prelude.Types.Left', V4687} end(E1732)); {'Idris.Prelude.Types.Right', E1733} -> (fun (V4688) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4674, V4688}} end(E1733)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1731)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1728, E1729)); {'Idris.Compiler.CompileExpr.Struct', E1734, E1735} -> (fun (V4689, V4690) -> begin (V4701 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4691) -> fun (V4692) -> case V4691 of {'Idris.Builtin.MkPair', E1736, E1737} -> (fun (V4693, V4694) -> begin (V4695 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4665, V4694))(V4692))), case V4695 of {'Idris.Prelude.Types.Left', E1738} -> (fun (V4696) -> {'Idris.Prelude.Types.Left', V4696} end(E1738)); {'Idris.Prelude.Types.Right', E1739} -> (fun (V4697) -> begin (V4698 = (('un--nfToCFType'(V0, V4657, 1, V4697))(V4692))), case V4698 of {'Idris.Prelude.Types.Left', E1740} -> (fun (V4699) -> {'Idris.Prelude.Types.Left', V4699} end(E1740)); {'Idris.Prelude.Types.Right', E1741} -> (fun (V4700) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4693, V4700}} end(E1741)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1739)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1736, E1737)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4690, [], V4656))), case V4701 of {'Idris.Prelude.Types.Left', E1742} -> (fun (V4702) -> {'Idris.Prelude.Types.Left', V4702} end(E1742)); {'Idris.Prelude.Types.Right', E1743} -> (fun (V4703) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4689, V4703}} end(E1743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1734, E1735)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1744} -> (fun (V4704) -> begin (V4705 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4665, V4704))(V4656))), case V4705 of {'Idris.Prelude.Types.Left', E1745} -> (fun (V4706) -> {'Idris.Prelude.Types.Left', V4706} end(E1745)); {'Idris.Prelude.Types.Right', E1746} -> (fun (V4707) -> begin (V4708 = (('un--nfToCFType'(V0, V4657, V2, V4707))(V4656))), case V4708 of {'Idris.Prelude.Types.Left', E1747} -> (fun (V4709) -> {'Idris.Prelude.Types.Left', V4709} end(E1747)); {'Idris.Prelude.Types.Right', E1748} -> (fun (V4710) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4710}} end(E1748)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1746)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1744)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1727)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1717, E1718, E1719, E1720, E1721)); {'Idris.Core.Value.NType', E1749} -> (fun (V4711) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1749)); {'Idris.Core.Value.NErased', E1750, E1751} -> (fun (V4712, V4713) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1750, E1751)); _ -> begin (V4715 = begin (V4714 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4714} end), case V4715 of {'Idris.Prelude.Types.Left', E1711} -> (fun (V4716) -> {'Idris.Prelude.Types.Left', V4716} end(E1711)); {'Idris.Prelude.Types.Right', E1712} -> (fun (V4717) -> begin (V4718 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4717, {'Idris.Core.Env.Nil'}, V3, V4656))), case V4718 of {'Idris.Prelude.Types.Left', E1713} -> (fun (V4719) -> {'Idris.Prelude.Types.Left', V4719} end(E1713)); {'Idris.Prelude.Types.Right', E1714} -> (fun (V4720) -> begin (V4727 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4721) -> fun (V4722) -> fun (V4723) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4721, V4722, V4723)) end end end, fun (V4724) -> fun (V4725) -> fun (V4726) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4724, V4725, V4726)) end end end}, V4720, V4656))), case V4727 of {'Idris.Prelude.Types.Left', E1715} -> (fun (V4728) -> {'Idris.Prelude.Types.Left', V4728} end(E1715)); {'Idris.Prelude.Types.Right', E1716} -> (fun (V4729) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4729))))}, V4656)) end(E1716)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1714)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1712)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V4730) -> case V3 of {'Idris.Core.Value.NBind', E1850, E1851, E1852, E1853} -> (fun (V4731, V4732, V4733, V4734) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4731, <<"Function types not allowed in a foreign struct"/utf8>>}, V4730)) end(E1850, E1851, E1852, E1853)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1815, E1816, E1817, E1818, E1819} -> (fun (V4735, V4736, V4737, V4738, V4739) -> begin (V4741 = begin (V4740 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4740} end), case V4741 of {'Idris.Prelude.Types.Left', E1820} -> (fun (V4742) -> {'Idris.Prelude.Types.Left', V4742} end(E1820)); {'Idris.Prelude.Types.Right', E1821} -> (fun (V4743) -> begin (V4750 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4744) -> fun (V4745) -> fun (V4746) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4744, V4745, V4746)) end end end, fun (V4747) -> fun (V4748) -> fun (V4749) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4747, V4748, V4749)) end end end}, V4736, V4730))), case V4750 of {'Idris.Prelude.Types.Left', E1822} -> (fun (V4751) -> {'Idris.Prelude.Types.Left', V4751} end(E1822)); {'Idris.Prelude.Types.Right', E1823} -> (fun (V4752) -> begin (V4754 = (('un--getNArgs'(V0, V4743, V4752, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4753) -> ('Idris.Idris2.Builtin':'un--snd'(V4753)) end, V4739))))(V4730))), case V4754 of {'Idris.Prelude.Types.Left', E1824} -> (fun (V4755) -> {'Idris.Prelude.Types.Left', V4755} end(E1824)); {'Idris.Prelude.Types.Right', E1825} -> (fun (V4756) -> case V4756 of {'Idris.Compiler.CompileExpr.User', E1826, E1827} -> (fun (V4757, V4758) -> begin (V4760 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4759) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4743, V4759)) end, V4758, [], V4730))), case V4760 of {'Idris.Prelude.Types.Left', E1828} -> (fun (V4761) -> {'Idris.Prelude.Types.Left', V4761} end(E1828)); {'Idris.Prelude.Types.Right', E1829} -> (fun (V4762) -> begin (V4764 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4763) -> ('un--nfToCFType'(V0, V4735, V2, V4763)) end, V4762, [], V4730))), case V4764 of {'Idris.Prelude.Types.Left', E1830} -> (fun (V4765) -> {'Idris.Prelude.Types.Left', V4765} end(E1830)); {'Idris.Prelude.Types.Right', E1831} -> (fun (V4766) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4752, V4766}} end(E1831)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1826, E1827)); {'Idris.Compiler.CompileExpr.Struct', E1832, E1833} -> (fun (V4767, V4768) -> begin (V4779 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4769) -> fun (V4770) -> case V4769 of {'Idris.Builtin.MkPair', E1834, E1835} -> (fun (V4771, V4772) -> begin (V4773 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4743, V4772))(V4770))), case V4773 of {'Idris.Prelude.Types.Left', E1836} -> (fun (V4774) -> {'Idris.Prelude.Types.Left', V4774} end(E1836)); {'Idris.Prelude.Types.Right', E1837} -> (fun (V4775) -> begin (V4776 = (('un--nfToCFType'(V0, V4735, 1, V4775))(V4770))), case V4776 of {'Idris.Prelude.Types.Left', E1838} -> (fun (V4777) -> {'Idris.Prelude.Types.Left', V4777} end(E1838)); {'Idris.Prelude.Types.Right', E1839} -> (fun (V4778) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4771, V4778}} end(E1839)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1837)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1834, E1835)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4768, [], V4730))), case V4779 of {'Idris.Prelude.Types.Left', E1840} -> (fun (V4780) -> {'Idris.Prelude.Types.Left', V4780} end(E1840)); {'Idris.Prelude.Types.Right', E1841} -> (fun (V4781) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4767, V4781}} end(E1841)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1832, E1833)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1842} -> (fun (V4782) -> begin (V4783 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4743, V4782))(V4730))), case V4783 of {'Idris.Prelude.Types.Left', E1843} -> (fun (V4784) -> {'Idris.Prelude.Types.Left', V4784} end(E1843)); {'Idris.Prelude.Types.Right', E1844} -> (fun (V4785) -> begin (V4786 = (('un--nfToCFType'(V0, V4735, V2, V4785))(V4730))), case V4786 of {'Idris.Prelude.Types.Left', E1845} -> (fun (V4787) -> {'Idris.Prelude.Types.Left', V4787} end(E1845)); {'Idris.Prelude.Types.Right', E1846} -> (fun (V4788) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4788}} end(E1846)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1844)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1842)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1825)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1823)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1815, E1816, E1817, E1818, E1819)); {'Idris.Core.Value.NType', E1847} -> (fun (V4789) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1847)); {'Idris.Core.Value.NErased', E1848, E1849} -> (fun (V4790, V4791) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1848, E1849)); _ -> begin (V4793 = begin (V4792 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4792} end), case V4793 of {'Idris.Prelude.Types.Left', E1809} -> (fun (V4794) -> {'Idris.Prelude.Types.Left', V4794} end(E1809)); {'Idris.Prelude.Types.Right', E1810} -> (fun (V4795) -> begin (V4796 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4795, {'Idris.Core.Env.Nil'}, V3, V4730))), case V4796 of {'Idris.Prelude.Types.Left', E1811} -> (fun (V4797) -> {'Idris.Prelude.Types.Left', V4797} end(E1811)); {'Idris.Prelude.Types.Right', E1812} -> (fun (V4798) -> begin (V4805 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4799) -> fun (V4800) -> fun (V4801) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4799, V4800, V4801)) end end end, fun (V4802) -> fun (V4803) -> fun (V4804) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4802, V4803, V4804)) end end end}, V4798, V4730))), case V4805 of {'Idris.Prelude.Types.Left', E1813} -> (fun (V4806) -> {'Idris.Prelude.Types.Left', V4806} end(E1813)); {'Idris.Prelude.Types.Right', E1814} -> (fun (V4807) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4807))))}, V4730)) end(E1814)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1812)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1810)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V4808) -> case V3 of {'Idris.Core.Value.NTCon', E1676, E1677, E1678, E1679, E1680} -> (fun (V4809, V4810, V4811, V4812, V4813) -> begin (V4815 = begin (V4814 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4814} end), case V4815 of {'Idris.Prelude.Types.Left', E1681} -> (fun (V4816) -> {'Idris.Prelude.Types.Left', V4816} end(E1681)); {'Idris.Prelude.Types.Right', E1682} -> (fun (V4817) -> begin (V4824 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4818) -> fun (V4819) -> fun (V4820) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4818, V4819, V4820)) end end end, fun (V4821) -> fun (V4822) -> fun (V4823) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4821, V4822, V4823)) end end end}, V4810, V4808))), case V4824 of {'Idris.Prelude.Types.Left', E1683} -> (fun (V4825) -> {'Idris.Prelude.Types.Left', V4825} end(E1683)); {'Idris.Prelude.Types.Right', E1684} -> (fun (V4826) -> begin (V4828 = (('un--getNArgs'(V0, V4817, V4826, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4827) -> ('Idris.Idris2.Builtin':'un--snd'(V4827)) end, V4813))))(V4808))), case V4828 of {'Idris.Prelude.Types.Left', E1685} -> (fun (V4829) -> {'Idris.Prelude.Types.Left', V4829} end(E1685)); {'Idris.Prelude.Types.Right', E1686} -> (fun (V4830) -> case V4830 of {'Idris.Compiler.CompileExpr.User', E1687, E1688} -> (fun (V4831, V4832) -> begin (V4834 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4833) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4817, V4833)) end, V4832, [], V4808))), case V4834 of {'Idris.Prelude.Types.Left', E1689} -> (fun (V4835) -> {'Idris.Prelude.Types.Left', V4835} end(E1689)); {'Idris.Prelude.Types.Right', E1690} -> (fun (V4836) -> begin (V4838 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4837) -> ('un--nfToCFType'(V0, V4809, V2, V4837)) end, V4836, [], V4808))), case V4838 of {'Idris.Prelude.Types.Left', E1691} -> (fun (V4839) -> {'Idris.Prelude.Types.Left', V4839} end(E1691)); {'Idris.Prelude.Types.Right', E1692} -> (fun (V4840) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4826, V4840}} end(E1692)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1690)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1687, E1688)); {'Idris.Compiler.CompileExpr.Struct', E1693, E1694} -> (fun (V4841, V4842) -> begin (V4853 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4843) -> fun (V4844) -> case V4843 of {'Idris.Builtin.MkPair', E1695, E1696} -> (fun (V4845, V4846) -> begin (V4847 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4817, V4846))(V4844))), case V4847 of {'Idris.Prelude.Types.Left', E1697} -> (fun (V4848) -> {'Idris.Prelude.Types.Left', V4848} end(E1697)); {'Idris.Prelude.Types.Right', E1698} -> (fun (V4849) -> begin (V4850 = (('un--nfToCFType'(V0, V4809, 1, V4849))(V4844))), case V4850 of {'Idris.Prelude.Types.Left', E1699} -> (fun (V4851) -> {'Idris.Prelude.Types.Left', V4851} end(E1699)); {'Idris.Prelude.Types.Right', E1700} -> (fun (V4852) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4845, V4852}} end(E1700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1695, E1696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4842, [], V4808))), case V4853 of {'Idris.Prelude.Types.Left', E1701} -> (fun (V4854) -> {'Idris.Prelude.Types.Left', V4854} end(E1701)); {'Idris.Prelude.Types.Right', E1702} -> (fun (V4855) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4841, V4855}} end(E1702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1693, E1694)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1703} -> (fun (V4856) -> begin (V4857 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4817, V4856))(V4808))), case V4857 of {'Idris.Prelude.Types.Left', E1704} -> (fun (V4858) -> {'Idris.Prelude.Types.Left', V4858} end(E1704)); {'Idris.Prelude.Types.Right', E1705} -> (fun (V4859) -> begin (V4860 = (('un--nfToCFType'(V0, V4809, V2, V4859))(V4808))), case V4860 of {'Idris.Prelude.Types.Left', E1706} -> (fun (V4861) -> {'Idris.Prelude.Types.Left', V4861} end(E1706)); {'Idris.Prelude.Types.Right', E1707} -> (fun (V4862) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4862}} end(E1707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1705)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1703)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1686)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1684)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1682)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1676, E1677, E1678, E1679, E1680)); {'Idris.Core.Value.NType', E1708} -> (fun (V4863) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1708)); {'Idris.Core.Value.NErased', E1709, E1710} -> (fun (V4864, V4865) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1709, E1710)); _ -> begin (V4867 = begin (V4866 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4866} end), case V4867 of {'Idris.Prelude.Types.Left', E1670} -> (fun (V4868) -> {'Idris.Prelude.Types.Left', V4868} end(E1670)); {'Idris.Prelude.Types.Right', E1671} -> (fun (V4869) -> begin (V4870 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4869, {'Idris.Core.Env.Nil'}, V3, V4808))), case V4870 of {'Idris.Prelude.Types.Left', E1672} -> (fun (V4871) -> {'Idris.Prelude.Types.Left', V4871} end(E1672)); {'Idris.Prelude.Types.Right', E1673} -> (fun (V4872) -> begin (V4879 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4873) -> fun (V4874) -> fun (V4875) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4873, V4874, V4875)) end end end, fun (V4876) -> fun (V4877) -> fun (V4878) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4876, V4877, V4878)) end end end}, V4872, V4808))), case V4879 of {'Idris.Prelude.Types.Left', E1674} -> (fun (V4880) -> {'Idris.Prelude.Types.Left', V4880} end(E1674)); {'Idris.Prelude.Types.Right', E1675} -> (fun (V4881) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4881))))}, V4808)) end(E1675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1673)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1671)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E1668, E1669)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1566, E1567, E1568, E1569} -> (fun (V4882, V4883, V4884, V4885) -> fun (V4886) -> case V4884 of {'Idris.Core.TT.Pi', E1611, E1612, E1613, E1614} -> (fun (V4887, V4888, V4889, V4890) -> begin (V4892 = begin (V4891 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4891} end), case V4892 of {'Idris.Prelude.Types.Left', E1615} -> (fun (V4893) -> {'Idris.Prelude.Types.Left', V4893} end(E1615)); {'Idris.Prelude.Types.Right', E1616} -> (fun (V4894) -> begin (V4895 = (('un--nfToCFType'(V0, V4882, 0, V4890))(V4886))), case V4895 of {'Idris.Prelude.Types.Left', E1617} -> (fun (V4896) -> {'Idris.Prelude.Types.Left', V4896} end(E1617)); {'Idris.Prelude.Types.Right', E1618} -> (fun (V4897) -> begin (V4898 = (((V4885(V4894))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4882, 0}))))(V4886))), case V4898 of {'Idris.Prelude.Types.Left', E1619} -> (fun (V4899) -> {'Idris.Prelude.Types.Left', V4899} end(E1619)); {'Idris.Prelude.Types.Right', E1620} -> (fun (V4900) -> begin (V4901 = (('un--nfToCFType'(V0, V4882, 0, V4900))(V4886))), case V4901 of {'Idris.Prelude.Types.Left', E1621} -> (fun (V4902) -> {'Idris.Prelude.Types.Left', V4902} end(E1621)); {'Idris.Prelude.Types.Right', E1622} -> (fun (V4903) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4897, V4903}} end(E1622)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1620)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1618)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1616)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1611, E1612, E1613, E1614)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1576, E1577, E1578, E1579, E1580} -> (fun (V4904, V4905, V4906, V4907, V4908) -> begin (V4910 = begin (V4909 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4909} end), case V4910 of {'Idris.Prelude.Types.Left', E1581} -> (fun (V4911) -> {'Idris.Prelude.Types.Left', V4911} end(E1581)); {'Idris.Prelude.Types.Right', E1582} -> (fun (V4912) -> begin (V4919 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4913) -> fun (V4914) -> fun (V4915) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4913, V4914, V4915)) end end end, fun (V4916) -> fun (V4917) -> fun (V4918) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4916, V4917, V4918)) end end end}, V4905, V4886))), case V4919 of {'Idris.Prelude.Types.Left', E1583} -> (fun (V4920) -> {'Idris.Prelude.Types.Left', V4920} end(E1583)); {'Idris.Prelude.Types.Right', E1584} -> (fun (V4921) -> begin (V4923 = (('un--getNArgs'(V0, V4912, V4921, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4922) -> ('Idris.Idris2.Builtin':'un--snd'(V4922)) end, V4908))))(V4886))), case V4923 of {'Idris.Prelude.Types.Left', E1585} -> (fun (V4924) -> {'Idris.Prelude.Types.Left', V4924} end(E1585)); {'Idris.Prelude.Types.Right', E1586} -> (fun (V4925) -> case V4925 of {'Idris.Compiler.CompileExpr.User', E1587, E1588} -> (fun (V4926, V4927) -> begin (V4929 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4928) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4912, V4928)) end, V4927, [], V4886))), case V4929 of {'Idris.Prelude.Types.Left', E1589} -> (fun (V4930) -> {'Idris.Prelude.Types.Left', V4930} end(E1589)); {'Idris.Prelude.Types.Right', E1590} -> (fun (V4931) -> begin (V4933 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4932) -> ('un--nfToCFType'(V0, V4904, V2, V4932)) end, V4931, [], V4886))), case V4933 of {'Idris.Prelude.Types.Left', E1591} -> (fun (V4934) -> {'Idris.Prelude.Types.Left', V4934} end(E1591)); {'Idris.Prelude.Types.Right', E1592} -> (fun (V4935) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4921, V4935}} end(E1592)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1590)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1587, E1588)); {'Idris.Compiler.CompileExpr.Struct', E1593, E1594} -> (fun (V4936, V4937) -> begin (V4948 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4938) -> fun (V4939) -> case V4938 of {'Idris.Builtin.MkPair', E1595, E1596} -> (fun (V4940, V4941) -> begin (V4942 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4912, V4941))(V4939))), case V4942 of {'Idris.Prelude.Types.Left', E1597} -> (fun (V4943) -> {'Idris.Prelude.Types.Left', V4943} end(E1597)); {'Idris.Prelude.Types.Right', E1598} -> (fun (V4944) -> begin (V4945 = (('un--nfToCFType'(V0, V4904, 1, V4944))(V4939))), case V4945 of {'Idris.Prelude.Types.Left', E1599} -> (fun (V4946) -> {'Idris.Prelude.Types.Left', V4946} end(E1599)); {'Idris.Prelude.Types.Right', E1600} -> (fun (V4947) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4940, V4947}} end(E1600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1595, E1596)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4937, [], V4886))), case V4948 of {'Idris.Prelude.Types.Left', E1601} -> (fun (V4949) -> {'Idris.Prelude.Types.Left', V4949} end(E1601)); {'Idris.Prelude.Types.Right', E1602} -> (fun (V4950) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4936, V4950}} end(E1602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1593, E1594)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1603} -> (fun (V4951) -> begin (V4952 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4912, V4951))(V4886))), case V4952 of {'Idris.Prelude.Types.Left', E1604} -> (fun (V4953) -> {'Idris.Prelude.Types.Left', V4953} end(E1604)); {'Idris.Prelude.Types.Right', E1605} -> (fun (V4954) -> begin (V4955 = (('un--nfToCFType'(V0, V4904, V2, V4954))(V4886))), case V4955 of {'Idris.Prelude.Types.Left', E1606} -> (fun (V4956) -> {'Idris.Prelude.Types.Left', V4956} end(E1606)); {'Idris.Prelude.Types.Right', E1607} -> (fun (V4957) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4957}} end(E1607)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1605)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1603)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1576, E1577, E1578, E1579, E1580)); {'Idris.Core.Value.NType', E1608} -> (fun (V4958) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1608)); {'Idris.Core.Value.NErased', E1609, E1610} -> (fun (V4959, V4960) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1609, E1610)); _ -> begin (V4962 = begin (V4961 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4961} end), case V4962 of {'Idris.Prelude.Types.Left', E1570} -> (fun (V4963) -> {'Idris.Prelude.Types.Left', V4963} end(E1570)); {'Idris.Prelude.Types.Right', E1571} -> (fun (V4964) -> begin (V4965 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V4964, {'Idris.Core.Env.Nil'}, V3, V4886))), case V4965 of {'Idris.Prelude.Types.Left', E1572} -> (fun (V4966) -> {'Idris.Prelude.Types.Left', V4966} end(E1572)); {'Idris.Prelude.Types.Right', E1573} -> (fun (V4967) -> begin (V4974 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4968) -> fun (V4969) -> fun (V4970) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4968, V4969, V4970)) end end end, fun (V4971) -> fun (V4972) -> fun (V4973) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4971, V4972, V4973)) end end end}, V4967, V4886))), case V4974 of {'Idris.Prelude.Types.Left', E1574} -> (fun (V4975) -> {'Idris.Prelude.Types.Left', V4975} end(E1574)); {'Idris.Prelude.Types.Right', E1575} -> (fun (V4976) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4976))))}, V4886)) end(E1575)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1566, E1567, E1568, E1569)); _ -> fun (V4977) -> case V3 of {'Idris.Core.Value.NTCon', E1531, E1532, E1533, E1534, E1535} -> (fun (V4978, V4979, V4980, V4981, V4982) -> begin (V4984 = begin (V4983 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4983} end), case V4984 of {'Idris.Prelude.Types.Left', E1536} -> (fun (V4985) -> {'Idris.Prelude.Types.Left', V4985} end(E1536)); {'Idris.Prelude.Types.Right', E1537} -> (fun (V4986) -> begin (V4993 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4987) -> fun (V4988) -> fun (V4989) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4987, V4988, V4989)) end end end, fun (V4990) -> fun (V4991) -> fun (V4992) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4990, V4991, V4992)) end end end}, V4979, V4977))), case V4993 of {'Idris.Prelude.Types.Left', E1538} -> (fun (V4994) -> {'Idris.Prelude.Types.Left', V4994} end(E1538)); {'Idris.Prelude.Types.Right', E1539} -> (fun (V4995) -> begin (V4997 = (('un--getNArgs'(V0, V4986, V4995, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4996) -> ('Idris.Idris2.Builtin':'un--snd'(V4996)) end, V4982))))(V4977))), case V4997 of {'Idris.Prelude.Types.Left', E1540} -> (fun (V4998) -> {'Idris.Prelude.Types.Left', V4998} end(E1540)); {'Idris.Prelude.Types.Right', E1541} -> (fun (V4999) -> case V4999 of {'Idris.Compiler.CompileExpr.User', E1542, E1543} -> (fun (V5000, V5001) -> begin (V5003 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5002) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4986, V5002)) end, V5001, [], V4977))), case V5003 of {'Idris.Prelude.Types.Left', E1544} -> (fun (V5004) -> {'Idris.Prelude.Types.Left', V5004} end(E1544)); {'Idris.Prelude.Types.Right', E1545} -> (fun (V5005) -> begin (V5007 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5006) -> ('un--nfToCFType'(V0, V4978, V2, V5006)) end, V5005, [], V4977))), case V5007 of {'Idris.Prelude.Types.Left', E1546} -> (fun (V5008) -> {'Idris.Prelude.Types.Left', V5008} end(E1546)); {'Idris.Prelude.Types.Right', E1547} -> (fun (V5009) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4995, V5009}} end(E1547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1545)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1542, E1543)); {'Idris.Compiler.CompileExpr.Struct', E1548, E1549} -> (fun (V5010, V5011) -> begin (V5022 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5012) -> fun (V5013) -> case V5012 of {'Idris.Builtin.MkPair', E1550, E1551} -> (fun (V5014, V5015) -> begin (V5016 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4986, V5015))(V5013))), case V5016 of {'Idris.Prelude.Types.Left', E1552} -> (fun (V5017) -> {'Idris.Prelude.Types.Left', V5017} end(E1552)); {'Idris.Prelude.Types.Right', E1553} -> (fun (V5018) -> begin (V5019 = (('un--nfToCFType'(V0, V4978, 1, V5018))(V5013))), case V5019 of {'Idris.Prelude.Types.Left', E1554} -> (fun (V5020) -> {'Idris.Prelude.Types.Left', V5020} end(E1554)); {'Idris.Prelude.Types.Right', E1555} -> (fun (V5021) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5014, V5021}} end(E1555)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1550, E1551)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5011, [], V4977))), case V5022 of {'Idris.Prelude.Types.Left', E1556} -> (fun (V5023) -> {'Idris.Prelude.Types.Left', V5023} end(E1556)); {'Idris.Prelude.Types.Right', E1557} -> (fun (V5024) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5010, V5024}} end(E1557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1548, E1549)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1558} -> (fun (V5025) -> begin (V5026 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V4986, V5025))(V4977))), case V5026 of {'Idris.Prelude.Types.Left', E1559} -> (fun (V5027) -> {'Idris.Prelude.Types.Left', V5027} end(E1559)); {'Idris.Prelude.Types.Right', E1560} -> (fun (V5028) -> begin (V5029 = (('un--nfToCFType'(V0, V4978, V2, V5028))(V4977))), case V5029 of {'Idris.Prelude.Types.Left', E1561} -> (fun (V5030) -> {'Idris.Prelude.Types.Left', V5030} end(E1561)); {'Idris.Prelude.Types.Right', E1562} -> (fun (V5031) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5031}} end(E1562)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1560)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1558)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1541)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1531, E1532, E1533, E1534, E1535)); {'Idris.Core.Value.NType', E1563} -> (fun (V5032) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1563)); {'Idris.Core.Value.NErased', E1564, E1565} -> (fun (V5033, V5034) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1564, E1565)); _ -> begin (V5036 = begin (V5035 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5035} end), case V5036 of {'Idris.Prelude.Types.Left', E1525} -> (fun (V5037) -> {'Idris.Prelude.Types.Left', V5037} end(E1525)); {'Idris.Prelude.Types.Right', E1526} -> (fun (V5038) -> begin (V5039 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5038, {'Idris.Core.Env.Nil'}, V3, V4977))), case V5039 of {'Idris.Prelude.Types.Left', E1527} -> (fun (V5040) -> {'Idris.Prelude.Types.Left', V5040} end(E1527)); {'Idris.Prelude.Types.Right', E1528} -> (fun (V5041) -> begin (V5048 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5042) -> fun (V5043) -> fun (V5044) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5042, V5043, V5044)) end end end, fun (V5045) -> fun (V5046) -> fun (V5047) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5045, V5046, V5047)) end end end}, V5041, V4977))), case V5048 of {'Idris.Prelude.Types.Left', E1529} -> (fun (V5049) -> {'Idris.Prelude.Types.Left', V5049} end(E1529)); {'Idris.Prelude.Types.Right', E1530} -> (fun (V5050) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5050))))}, V4977)) end(E1530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V5051) -> case V3 of {'Idris.Core.Value.NBind', E1664, E1665, E1666, E1667} -> (fun (V5052, V5053, V5054, V5055) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V5052, <<"Function types not allowed in a foreign struct"/utf8>>}, V5051)) end(E1664, E1665, E1666, E1667)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1629, E1630, E1631, E1632, E1633} -> (fun (V5056, V5057, V5058, V5059, V5060) -> begin (V5062 = begin (V5061 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5061} end), case V5062 of {'Idris.Prelude.Types.Left', E1634} -> (fun (V5063) -> {'Idris.Prelude.Types.Left', V5063} end(E1634)); {'Idris.Prelude.Types.Right', E1635} -> (fun (V5064) -> begin (V5071 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5065) -> fun (V5066) -> fun (V5067) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5065, V5066, V5067)) end end end, fun (V5068) -> fun (V5069) -> fun (V5070) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5068, V5069, V5070)) end end end}, V5057, V5051))), case V5071 of {'Idris.Prelude.Types.Left', E1636} -> (fun (V5072) -> {'Idris.Prelude.Types.Left', V5072} end(E1636)); {'Idris.Prelude.Types.Right', E1637} -> (fun (V5073) -> begin (V5075 = (('un--getNArgs'(V0, V5064, V5073, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5074) -> ('Idris.Idris2.Builtin':'un--snd'(V5074)) end, V5060))))(V5051))), case V5075 of {'Idris.Prelude.Types.Left', E1638} -> (fun (V5076) -> {'Idris.Prelude.Types.Left', V5076} end(E1638)); {'Idris.Prelude.Types.Right', E1639} -> (fun (V5077) -> case V5077 of {'Idris.Compiler.CompileExpr.User', E1640, E1641} -> (fun (V5078, V5079) -> begin (V5081 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5080) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5064, V5080)) end, V5079, [], V5051))), case V5081 of {'Idris.Prelude.Types.Left', E1642} -> (fun (V5082) -> {'Idris.Prelude.Types.Left', V5082} end(E1642)); {'Idris.Prelude.Types.Right', E1643} -> (fun (V5083) -> begin (V5085 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5084) -> ('un--nfToCFType'(V0, V5056, V2, V5084)) end, V5083, [], V5051))), case V5085 of {'Idris.Prelude.Types.Left', E1644} -> (fun (V5086) -> {'Idris.Prelude.Types.Left', V5086} end(E1644)); {'Idris.Prelude.Types.Right', E1645} -> (fun (V5087) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5073, V5087}} end(E1645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1643)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1640, E1641)); {'Idris.Compiler.CompileExpr.Struct', E1646, E1647} -> (fun (V5088, V5089) -> begin (V5100 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5090) -> fun (V5091) -> case V5090 of {'Idris.Builtin.MkPair', E1648, E1649} -> (fun (V5092, V5093) -> begin (V5094 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5064, V5093))(V5091))), case V5094 of {'Idris.Prelude.Types.Left', E1650} -> (fun (V5095) -> {'Idris.Prelude.Types.Left', V5095} end(E1650)); {'Idris.Prelude.Types.Right', E1651} -> (fun (V5096) -> begin (V5097 = (('un--nfToCFType'(V0, V5056, 1, V5096))(V5091))), case V5097 of {'Idris.Prelude.Types.Left', E1652} -> (fun (V5098) -> {'Idris.Prelude.Types.Left', V5098} end(E1652)); {'Idris.Prelude.Types.Right', E1653} -> (fun (V5099) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5092, V5099}} end(E1653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1648, E1649)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5089, [], V5051))), case V5100 of {'Idris.Prelude.Types.Left', E1654} -> (fun (V5101) -> {'Idris.Prelude.Types.Left', V5101} end(E1654)); {'Idris.Prelude.Types.Right', E1655} -> (fun (V5102) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5088, V5102}} end(E1655)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1646, E1647)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1656} -> (fun (V5103) -> begin (V5104 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5064, V5103))(V5051))), case V5104 of {'Idris.Prelude.Types.Left', E1657} -> (fun (V5105) -> {'Idris.Prelude.Types.Left', V5105} end(E1657)); {'Idris.Prelude.Types.Right', E1658} -> (fun (V5106) -> begin (V5107 = (('un--nfToCFType'(V0, V5056, V2, V5106))(V5051))), case V5107 of {'Idris.Prelude.Types.Left', E1659} -> (fun (V5108) -> {'Idris.Prelude.Types.Left', V5108} end(E1659)); {'Idris.Prelude.Types.Right', E1660} -> (fun (V5109) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5109}} end(E1660)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1656)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1639)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1637)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1629, E1630, E1631, E1632, E1633)); {'Idris.Core.Value.NType', E1661} -> (fun (V5110) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1661)); {'Idris.Core.Value.NErased', E1662, E1663} -> (fun (V5111, V5112) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1662, E1663)); _ -> begin (V5114 = begin (V5113 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5113} end), case V5114 of {'Idris.Prelude.Types.Left', E1623} -> (fun (V5115) -> {'Idris.Prelude.Types.Left', V5115} end(E1623)); {'Idris.Prelude.Types.Right', E1624} -> (fun (V5116) -> begin (V5117 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5116, {'Idris.Core.Env.Nil'}, V3, V5051))), case V5117 of {'Idris.Prelude.Types.Left', E1625} -> (fun (V5118) -> {'Idris.Prelude.Types.Left', V5118} end(E1625)); {'Idris.Prelude.Types.Right', E1626} -> (fun (V5119) -> begin (V5126 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5120) -> fun (V5121) -> fun (V5122) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5120, V5121, V5122)) end end end, fun (V5123) -> fun (V5124) -> fun (V5125) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5123, V5124, V5125)) end end end}, V5119, V5051))), case V5126 of {'Idris.Prelude.Types.Left', E1627} -> (fun (V5127) -> {'Idris.Prelude.Types.Left', V5127} end(E1627)); {'Idris.Prelude.Types.Right', E1628} -> (fun (V5128) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5128))))}, V5051)) end(E1628)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V5129) -> case V3 of {'Idris.Core.Value.NTCon', E1490, E1491, E1492, E1493, E1494} -> (fun (V5130, V5131, V5132, V5133, V5134) -> begin (V5136 = begin (V5135 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5135} end), case V5136 of {'Idris.Prelude.Types.Left', E1495} -> (fun (V5137) -> {'Idris.Prelude.Types.Left', V5137} end(E1495)); {'Idris.Prelude.Types.Right', E1496} -> (fun (V5138) -> begin (V5145 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5139) -> fun (V5140) -> fun (V5141) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5139, V5140, V5141)) end end end, fun (V5142) -> fun (V5143) -> fun (V5144) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5142, V5143, V5144)) end end end}, V5131, V5129))), case V5145 of {'Idris.Prelude.Types.Left', E1497} -> (fun (V5146) -> {'Idris.Prelude.Types.Left', V5146} end(E1497)); {'Idris.Prelude.Types.Right', E1498} -> (fun (V5147) -> begin (V5149 = (('un--getNArgs'(V0, V5138, V5147, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5148) -> ('Idris.Idris2.Builtin':'un--snd'(V5148)) end, V5134))))(V5129))), case V5149 of {'Idris.Prelude.Types.Left', E1499} -> (fun (V5150) -> {'Idris.Prelude.Types.Left', V5150} end(E1499)); {'Idris.Prelude.Types.Right', E1500} -> (fun (V5151) -> case V5151 of {'Idris.Compiler.CompileExpr.User', E1501, E1502} -> (fun (V5152, V5153) -> begin (V5155 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5154) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5138, V5154)) end, V5153, [], V5129))), case V5155 of {'Idris.Prelude.Types.Left', E1503} -> (fun (V5156) -> {'Idris.Prelude.Types.Left', V5156} end(E1503)); {'Idris.Prelude.Types.Right', E1504} -> (fun (V5157) -> begin (V5159 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5158) -> ('un--nfToCFType'(V0, V5130, V2, V5158)) end, V5157, [], V5129))), case V5159 of {'Idris.Prelude.Types.Left', E1505} -> (fun (V5160) -> {'Idris.Prelude.Types.Left', V5160} end(E1505)); {'Idris.Prelude.Types.Right', E1506} -> (fun (V5161) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5147, V5161}} end(E1506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1501, E1502)); {'Idris.Compiler.CompileExpr.Struct', E1507, E1508} -> (fun (V5162, V5163) -> begin (V5174 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5164) -> fun (V5165) -> case V5164 of {'Idris.Builtin.MkPair', E1509, E1510} -> (fun (V5166, V5167) -> begin (V5168 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5138, V5167))(V5165))), case V5168 of {'Idris.Prelude.Types.Left', E1511} -> (fun (V5169) -> {'Idris.Prelude.Types.Left', V5169} end(E1511)); {'Idris.Prelude.Types.Right', E1512} -> (fun (V5170) -> begin (V5171 = (('un--nfToCFType'(V0, V5130, 1, V5170))(V5165))), case V5171 of {'Idris.Prelude.Types.Left', E1513} -> (fun (V5172) -> {'Idris.Prelude.Types.Left', V5172} end(E1513)); {'Idris.Prelude.Types.Right', E1514} -> (fun (V5173) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5166, V5173}} end(E1514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1509, E1510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5163, [], V5129))), case V5174 of {'Idris.Prelude.Types.Left', E1515} -> (fun (V5175) -> {'Idris.Prelude.Types.Left', V5175} end(E1515)); {'Idris.Prelude.Types.Right', E1516} -> (fun (V5176) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5162, V5176}} end(E1516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1507, E1508)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1517} -> (fun (V5177) -> begin (V5178 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5138, V5177))(V5129))), case V5178 of {'Idris.Prelude.Types.Left', E1518} -> (fun (V5179) -> {'Idris.Prelude.Types.Left', V5179} end(E1518)); {'Idris.Prelude.Types.Right', E1519} -> (fun (V5180) -> begin (V5181 = (('un--nfToCFType'(V0, V5130, V2, V5180))(V5129))), case V5181 of {'Idris.Prelude.Types.Left', E1520} -> (fun (V5182) -> {'Idris.Prelude.Types.Left', V5182} end(E1520)); {'Idris.Prelude.Types.Right', E1521} -> (fun (V5183) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5183}} end(E1521)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1519)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1517)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1500)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1498)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1496)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1490, E1491, E1492, E1493, E1494)); {'Idris.Core.Value.NType', E1522} -> (fun (V5184) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1522)); {'Idris.Core.Value.NErased', E1523, E1524} -> (fun (V5185, V5186) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1523, E1524)); _ -> begin (V5188 = begin (V5187 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5187} end), case V5188 of {'Idris.Prelude.Types.Left', E1484} -> (fun (V5189) -> {'Idris.Prelude.Types.Left', V5189} end(E1484)); {'Idris.Prelude.Types.Right', E1485} -> (fun (V5190) -> begin (V5191 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5190, {'Idris.Core.Env.Nil'}, V3, V5129))), case V5191 of {'Idris.Prelude.Types.Left', E1486} -> (fun (V5192) -> {'Idris.Prelude.Types.Left', V5192} end(E1486)); {'Idris.Prelude.Types.Right', E1487} -> (fun (V5193) -> begin (V5200 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5194) -> fun (V5195) -> fun (V5196) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5194, V5195, V5196)) end end end, fun (V5197) -> fun (V5198) -> fun (V5199) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5197, V5198, V5199)) end end end}, V5193, V5129))), case V5200 of {'Idris.Prelude.Types.Left', E1488} -> (fun (V5201) -> {'Idris.Prelude.Types.Left', V5201} end(E1488)); {'Idris.Prelude.Types.Right', E1489} -> (fun (V5202) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5202))))}, V5129)) end(E1489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1487)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E1482, E1483)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E1296, E1297} -> (fun (V5203, V5204) -> case V5204 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V5205) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V5206) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V5207) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1380, E1381, E1382, E1383} -> (fun (V5208, V5209, V5210, V5211) -> fun (V5212) -> case V5210 of {'Idris.Core.TT.Pi', E1425, E1426, E1427, E1428} -> (fun (V5213, V5214, V5215, V5216) -> begin (V5218 = begin (V5217 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5217} end), case V5218 of {'Idris.Prelude.Types.Left', E1429} -> (fun (V5219) -> {'Idris.Prelude.Types.Left', V5219} end(E1429)); {'Idris.Prelude.Types.Right', E1430} -> (fun (V5220) -> begin (V5221 = (('un--nfToCFType'(V0, V5208, 0, V5216))(V5212))), case V5221 of {'Idris.Prelude.Types.Left', E1431} -> (fun (V5222) -> {'Idris.Prelude.Types.Left', V5222} end(E1431)); {'Idris.Prelude.Types.Right', E1432} -> (fun (V5223) -> begin (V5224 = (((V5211(V5220))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5208, 0}))))(V5212))), case V5224 of {'Idris.Prelude.Types.Left', E1433} -> (fun (V5225) -> {'Idris.Prelude.Types.Left', V5225} end(E1433)); {'Idris.Prelude.Types.Right', E1434} -> (fun (V5226) -> begin (V5227 = (('un--nfToCFType'(V0, V5208, 0, V5226))(V5212))), case V5227 of {'Idris.Prelude.Types.Left', E1435} -> (fun (V5228) -> {'Idris.Prelude.Types.Left', V5228} end(E1435)); {'Idris.Prelude.Types.Right', E1436} -> (fun (V5229) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5223, V5229}} end(E1436)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1434)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1430)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1425, E1426, E1427, E1428)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1390, E1391, E1392, E1393, E1394} -> (fun (V5230, V5231, V5232, V5233, V5234) -> begin (V5236 = begin (V5235 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5235} end), case V5236 of {'Idris.Prelude.Types.Left', E1395} -> (fun (V5237) -> {'Idris.Prelude.Types.Left', V5237} end(E1395)); {'Idris.Prelude.Types.Right', E1396} -> (fun (V5238) -> begin (V5245 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5239) -> fun (V5240) -> fun (V5241) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5239, V5240, V5241)) end end end, fun (V5242) -> fun (V5243) -> fun (V5244) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5242, V5243, V5244)) end end end}, V5231, V5212))), case V5245 of {'Idris.Prelude.Types.Left', E1397} -> (fun (V5246) -> {'Idris.Prelude.Types.Left', V5246} end(E1397)); {'Idris.Prelude.Types.Right', E1398} -> (fun (V5247) -> begin (V5249 = (('un--getNArgs'(V0, V5238, V5247, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5248) -> ('Idris.Idris2.Builtin':'un--snd'(V5248)) end, V5234))))(V5212))), case V5249 of {'Idris.Prelude.Types.Left', E1399} -> (fun (V5250) -> {'Idris.Prelude.Types.Left', V5250} end(E1399)); {'Idris.Prelude.Types.Right', E1400} -> (fun (V5251) -> case V5251 of {'Idris.Compiler.CompileExpr.User', E1401, E1402} -> (fun (V5252, V5253) -> begin (V5255 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5254) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5238, V5254)) end, V5253, [], V5212))), case V5255 of {'Idris.Prelude.Types.Left', E1403} -> (fun (V5256) -> {'Idris.Prelude.Types.Left', V5256} end(E1403)); {'Idris.Prelude.Types.Right', E1404} -> (fun (V5257) -> begin (V5259 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5258) -> ('un--nfToCFType'(V0, V5230, V2, V5258)) end, V5257, [], V5212))), case V5259 of {'Idris.Prelude.Types.Left', E1405} -> (fun (V5260) -> {'Idris.Prelude.Types.Left', V5260} end(E1405)); {'Idris.Prelude.Types.Right', E1406} -> (fun (V5261) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5247, V5261}} end(E1406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1401, E1402)); {'Idris.Compiler.CompileExpr.Struct', E1407, E1408} -> (fun (V5262, V5263) -> begin (V5274 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5264) -> fun (V5265) -> case V5264 of {'Idris.Builtin.MkPair', E1409, E1410} -> (fun (V5266, V5267) -> begin (V5268 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5238, V5267))(V5265))), case V5268 of {'Idris.Prelude.Types.Left', E1411} -> (fun (V5269) -> {'Idris.Prelude.Types.Left', V5269} end(E1411)); {'Idris.Prelude.Types.Right', E1412} -> (fun (V5270) -> begin (V5271 = (('un--nfToCFType'(V0, V5230, 1, V5270))(V5265))), case V5271 of {'Idris.Prelude.Types.Left', E1413} -> (fun (V5272) -> {'Idris.Prelude.Types.Left', V5272} end(E1413)); {'Idris.Prelude.Types.Right', E1414} -> (fun (V5273) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5266, V5273}} end(E1414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1409, E1410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5263, [], V5212))), case V5274 of {'Idris.Prelude.Types.Left', E1415} -> (fun (V5275) -> {'Idris.Prelude.Types.Left', V5275} end(E1415)); {'Idris.Prelude.Types.Right', E1416} -> (fun (V5276) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5262, V5276}} end(E1416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1407, E1408)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1417} -> (fun (V5277) -> begin (V5278 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5238, V5277))(V5212))), case V5278 of {'Idris.Prelude.Types.Left', E1418} -> (fun (V5279) -> {'Idris.Prelude.Types.Left', V5279} end(E1418)); {'Idris.Prelude.Types.Right', E1419} -> (fun (V5280) -> begin (V5281 = (('un--nfToCFType'(V0, V5230, V2, V5280))(V5212))), case V5281 of {'Idris.Prelude.Types.Left', E1420} -> (fun (V5282) -> {'Idris.Prelude.Types.Left', V5282} end(E1420)); {'Idris.Prelude.Types.Right', E1421} -> (fun (V5283) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5283}} end(E1421)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1419)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1390, E1391, E1392, E1393, E1394)); {'Idris.Core.Value.NType', E1422} -> (fun (V5284) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1422)); {'Idris.Core.Value.NErased', E1423, E1424} -> (fun (V5285, V5286) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1423, E1424)); _ -> begin (V5288 = begin (V5287 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5287} end), case V5288 of {'Idris.Prelude.Types.Left', E1384} -> (fun (V5289) -> {'Idris.Prelude.Types.Left', V5289} end(E1384)); {'Idris.Prelude.Types.Right', E1385} -> (fun (V5290) -> begin (V5291 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5290, {'Idris.Core.Env.Nil'}, V3, V5212))), case V5291 of {'Idris.Prelude.Types.Left', E1386} -> (fun (V5292) -> {'Idris.Prelude.Types.Left', V5292} end(E1386)); {'Idris.Prelude.Types.Right', E1387} -> (fun (V5293) -> begin (V5300 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5294) -> fun (V5295) -> fun (V5296) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5294, V5295, V5296)) end end end, fun (V5297) -> fun (V5298) -> fun (V5299) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5297, V5298, V5299)) end end end}, V5293, V5212))), case V5300 of {'Idris.Prelude.Types.Left', E1388} -> (fun (V5301) -> {'Idris.Prelude.Types.Left', V5301} end(E1388)); {'Idris.Prelude.Types.Right', E1389} -> (fun (V5302) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5302))))}, V5212)) end(E1389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1380, E1381, E1382, E1383)); _ -> fun (V5303) -> case V3 of {'Idris.Core.Value.NTCon', E1345, E1346, E1347, E1348, E1349} -> (fun (V5304, V5305, V5306, V5307, V5308) -> begin (V5310 = begin (V5309 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5309} end), case V5310 of {'Idris.Prelude.Types.Left', E1350} -> (fun (V5311) -> {'Idris.Prelude.Types.Left', V5311} end(E1350)); {'Idris.Prelude.Types.Right', E1351} -> (fun (V5312) -> begin (V5319 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5313) -> fun (V5314) -> fun (V5315) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5313, V5314, V5315)) end end end, fun (V5316) -> fun (V5317) -> fun (V5318) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5316, V5317, V5318)) end end end}, V5305, V5303))), case V5319 of {'Idris.Prelude.Types.Left', E1352} -> (fun (V5320) -> {'Idris.Prelude.Types.Left', V5320} end(E1352)); {'Idris.Prelude.Types.Right', E1353} -> (fun (V5321) -> begin (V5323 = (('un--getNArgs'(V0, V5312, V5321, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5322) -> ('Idris.Idris2.Builtin':'un--snd'(V5322)) end, V5308))))(V5303))), case V5323 of {'Idris.Prelude.Types.Left', E1354} -> (fun (V5324) -> {'Idris.Prelude.Types.Left', V5324} end(E1354)); {'Idris.Prelude.Types.Right', E1355} -> (fun (V5325) -> case V5325 of {'Idris.Compiler.CompileExpr.User', E1356, E1357} -> (fun (V5326, V5327) -> begin (V5329 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5328) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5312, V5328)) end, V5327, [], V5303))), case V5329 of {'Idris.Prelude.Types.Left', E1358} -> (fun (V5330) -> {'Idris.Prelude.Types.Left', V5330} end(E1358)); {'Idris.Prelude.Types.Right', E1359} -> (fun (V5331) -> begin (V5333 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5332) -> ('un--nfToCFType'(V0, V5304, V2, V5332)) end, V5331, [], V5303))), case V5333 of {'Idris.Prelude.Types.Left', E1360} -> (fun (V5334) -> {'Idris.Prelude.Types.Left', V5334} end(E1360)); {'Idris.Prelude.Types.Right', E1361} -> (fun (V5335) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5321, V5335}} end(E1361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1356, E1357)); {'Idris.Compiler.CompileExpr.Struct', E1362, E1363} -> (fun (V5336, V5337) -> begin (V5348 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5338) -> fun (V5339) -> case V5338 of {'Idris.Builtin.MkPair', E1364, E1365} -> (fun (V5340, V5341) -> begin (V5342 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5312, V5341))(V5339))), case V5342 of {'Idris.Prelude.Types.Left', E1366} -> (fun (V5343) -> {'Idris.Prelude.Types.Left', V5343} end(E1366)); {'Idris.Prelude.Types.Right', E1367} -> (fun (V5344) -> begin (V5345 = (('un--nfToCFType'(V0, V5304, 1, V5344))(V5339))), case V5345 of {'Idris.Prelude.Types.Left', E1368} -> (fun (V5346) -> {'Idris.Prelude.Types.Left', V5346} end(E1368)); {'Idris.Prelude.Types.Right', E1369} -> (fun (V5347) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5340, V5347}} end(E1369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1364, E1365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5337, [], V5303))), case V5348 of {'Idris.Prelude.Types.Left', E1370} -> (fun (V5349) -> {'Idris.Prelude.Types.Left', V5349} end(E1370)); {'Idris.Prelude.Types.Right', E1371} -> (fun (V5350) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5336, V5350}} end(E1371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1362, E1363)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1372} -> (fun (V5351) -> begin (V5352 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5312, V5351))(V5303))), case V5352 of {'Idris.Prelude.Types.Left', E1373} -> (fun (V5353) -> {'Idris.Prelude.Types.Left', V5353} end(E1373)); {'Idris.Prelude.Types.Right', E1374} -> (fun (V5354) -> begin (V5355 = (('un--nfToCFType'(V0, V5304, V2, V5354))(V5303))), case V5355 of {'Idris.Prelude.Types.Left', E1375} -> (fun (V5356) -> {'Idris.Prelude.Types.Left', V5356} end(E1375)); {'Idris.Prelude.Types.Right', E1376} -> (fun (V5357) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5357}} end(E1376)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1353)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1345, E1346, E1347, E1348, E1349)); {'Idris.Core.Value.NType', E1377} -> (fun (V5358) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1377)); {'Idris.Core.Value.NErased', E1378, E1379} -> (fun (V5359, V5360) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1378, E1379)); _ -> begin (V5362 = begin (V5361 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5361} end), case V5362 of {'Idris.Prelude.Types.Left', E1339} -> (fun (V5363) -> {'Idris.Prelude.Types.Left', V5363} end(E1339)); {'Idris.Prelude.Types.Right', E1340} -> (fun (V5364) -> begin (V5365 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5364, {'Idris.Core.Env.Nil'}, V3, V5303))), case V5365 of {'Idris.Prelude.Types.Left', E1341} -> (fun (V5366) -> {'Idris.Prelude.Types.Left', V5366} end(E1341)); {'Idris.Prelude.Types.Right', E1342} -> (fun (V5367) -> begin (V5374 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5368) -> fun (V5369) -> fun (V5370) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5368, V5369, V5370)) end end end, fun (V5371) -> fun (V5372) -> fun (V5373) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5371, V5372, V5373)) end end end}, V5367, V5303))), case V5374 of {'Idris.Prelude.Types.Left', E1343} -> (fun (V5375) -> {'Idris.Prelude.Types.Left', V5375} end(E1343)); {'Idris.Prelude.Types.Right', E1344} -> (fun (V5376) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5376))))}, V5303)) end(E1344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V5377) -> case V3 of {'Idris.Core.Value.NBind', E1478, E1479, E1480, E1481} -> (fun (V5378, V5379, V5380, V5381) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V5378, <<"Function types not allowed in a foreign struct"/utf8>>}, V5377)) end(E1478, E1479, E1480, E1481)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1443, E1444, E1445, E1446, E1447} -> (fun (V5382, V5383, V5384, V5385, V5386) -> begin (V5388 = begin (V5387 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5387} end), case V5388 of {'Idris.Prelude.Types.Left', E1448} -> (fun (V5389) -> {'Idris.Prelude.Types.Left', V5389} end(E1448)); {'Idris.Prelude.Types.Right', E1449} -> (fun (V5390) -> begin (V5397 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5391) -> fun (V5392) -> fun (V5393) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5391, V5392, V5393)) end end end, fun (V5394) -> fun (V5395) -> fun (V5396) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5394, V5395, V5396)) end end end}, V5383, V5377))), case V5397 of {'Idris.Prelude.Types.Left', E1450} -> (fun (V5398) -> {'Idris.Prelude.Types.Left', V5398} end(E1450)); {'Idris.Prelude.Types.Right', E1451} -> (fun (V5399) -> begin (V5401 = (('un--getNArgs'(V0, V5390, V5399, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5400) -> ('Idris.Idris2.Builtin':'un--snd'(V5400)) end, V5386))))(V5377))), case V5401 of {'Idris.Prelude.Types.Left', E1452} -> (fun (V5402) -> {'Idris.Prelude.Types.Left', V5402} end(E1452)); {'Idris.Prelude.Types.Right', E1453} -> (fun (V5403) -> case V5403 of {'Idris.Compiler.CompileExpr.User', E1454, E1455} -> (fun (V5404, V5405) -> begin (V5407 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5406) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5390, V5406)) end, V5405, [], V5377))), case V5407 of {'Idris.Prelude.Types.Left', E1456} -> (fun (V5408) -> {'Idris.Prelude.Types.Left', V5408} end(E1456)); {'Idris.Prelude.Types.Right', E1457} -> (fun (V5409) -> begin (V5411 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5410) -> ('un--nfToCFType'(V0, V5382, V2, V5410)) end, V5409, [], V5377))), case V5411 of {'Idris.Prelude.Types.Left', E1458} -> (fun (V5412) -> {'Idris.Prelude.Types.Left', V5412} end(E1458)); {'Idris.Prelude.Types.Right', E1459} -> (fun (V5413) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5399, V5413}} end(E1459)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1454, E1455)); {'Idris.Compiler.CompileExpr.Struct', E1460, E1461} -> (fun (V5414, V5415) -> begin (V5426 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5416) -> fun (V5417) -> case V5416 of {'Idris.Builtin.MkPair', E1462, E1463} -> (fun (V5418, V5419) -> begin (V5420 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5390, V5419))(V5417))), case V5420 of {'Idris.Prelude.Types.Left', E1464} -> (fun (V5421) -> {'Idris.Prelude.Types.Left', V5421} end(E1464)); {'Idris.Prelude.Types.Right', E1465} -> (fun (V5422) -> begin (V5423 = (('un--nfToCFType'(V0, V5382, 1, V5422))(V5417))), case V5423 of {'Idris.Prelude.Types.Left', E1466} -> (fun (V5424) -> {'Idris.Prelude.Types.Left', V5424} end(E1466)); {'Idris.Prelude.Types.Right', E1467} -> (fun (V5425) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5418, V5425}} end(E1467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1462, E1463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5415, [], V5377))), case V5426 of {'Idris.Prelude.Types.Left', E1468} -> (fun (V5427) -> {'Idris.Prelude.Types.Left', V5427} end(E1468)); {'Idris.Prelude.Types.Right', E1469} -> (fun (V5428) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5414, V5428}} end(E1469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1460, E1461)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1470} -> (fun (V5429) -> begin (V5430 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5390, V5429))(V5377))), case V5430 of {'Idris.Prelude.Types.Left', E1471} -> (fun (V5431) -> {'Idris.Prelude.Types.Left', V5431} end(E1471)); {'Idris.Prelude.Types.Right', E1472} -> (fun (V5432) -> begin (V5433 = (('un--nfToCFType'(V0, V5382, V2, V5432))(V5377))), case V5433 of {'Idris.Prelude.Types.Left', E1473} -> (fun (V5434) -> {'Idris.Prelude.Types.Left', V5434} end(E1473)); {'Idris.Prelude.Types.Right', E1474} -> (fun (V5435) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5435}} end(E1474)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1453)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1451)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1449)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1443, E1444, E1445, E1446, E1447)); {'Idris.Core.Value.NType', E1475} -> (fun (V5436) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1475)); {'Idris.Core.Value.NErased', E1476, E1477} -> (fun (V5437, V5438) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1476, E1477)); _ -> begin (V5440 = begin (V5439 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5439} end), case V5440 of {'Idris.Prelude.Types.Left', E1437} -> (fun (V5441) -> {'Idris.Prelude.Types.Left', V5441} end(E1437)); {'Idris.Prelude.Types.Right', E1438} -> (fun (V5442) -> begin (V5443 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5442, {'Idris.Core.Env.Nil'}, V3, V5377))), case V5443 of {'Idris.Prelude.Types.Left', E1439} -> (fun (V5444) -> {'Idris.Prelude.Types.Left', V5444} end(E1439)); {'Idris.Prelude.Types.Right', E1440} -> (fun (V5445) -> begin (V5452 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5446) -> fun (V5447) -> fun (V5448) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5446, V5447, V5448)) end end end, fun (V5449) -> fun (V5450) -> fun (V5451) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5449, V5450, V5451)) end end end}, V5445, V5377))), case V5452 of {'Idris.Prelude.Types.Left', E1441} -> (fun (V5453) -> {'Idris.Prelude.Types.Left', V5453} end(E1441)); {'Idris.Prelude.Types.Right', E1442} -> (fun (V5454) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5454))))}, V5377)) end(E1442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V5455) -> case V3 of {'Idris.Core.Value.NTCon', E1304, E1305, E1306, E1307, E1308} -> (fun (V5456, V5457, V5458, V5459, V5460) -> begin (V5462 = begin (V5461 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5461} end), case V5462 of {'Idris.Prelude.Types.Left', E1309} -> (fun (V5463) -> {'Idris.Prelude.Types.Left', V5463} end(E1309)); {'Idris.Prelude.Types.Right', E1310} -> (fun (V5464) -> begin (V5471 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5465) -> fun (V5466) -> fun (V5467) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5465, V5466, V5467)) end end end, fun (V5468) -> fun (V5469) -> fun (V5470) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5468, V5469, V5470)) end end end}, V5457, V5455))), case V5471 of {'Idris.Prelude.Types.Left', E1311} -> (fun (V5472) -> {'Idris.Prelude.Types.Left', V5472} end(E1311)); {'Idris.Prelude.Types.Right', E1312} -> (fun (V5473) -> begin (V5475 = (('un--getNArgs'(V0, V5464, V5473, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5474) -> ('Idris.Idris2.Builtin':'un--snd'(V5474)) end, V5460))))(V5455))), case V5475 of {'Idris.Prelude.Types.Left', E1313} -> (fun (V5476) -> {'Idris.Prelude.Types.Left', V5476} end(E1313)); {'Idris.Prelude.Types.Right', E1314} -> (fun (V5477) -> case V5477 of {'Idris.Compiler.CompileExpr.User', E1315, E1316} -> (fun (V5478, V5479) -> begin (V5481 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5480) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5464, V5480)) end, V5479, [], V5455))), case V5481 of {'Idris.Prelude.Types.Left', E1317} -> (fun (V5482) -> {'Idris.Prelude.Types.Left', V5482} end(E1317)); {'Idris.Prelude.Types.Right', E1318} -> (fun (V5483) -> begin (V5485 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5484) -> ('un--nfToCFType'(V0, V5456, V2, V5484)) end, V5483, [], V5455))), case V5485 of {'Idris.Prelude.Types.Left', E1319} -> (fun (V5486) -> {'Idris.Prelude.Types.Left', V5486} end(E1319)); {'Idris.Prelude.Types.Right', E1320} -> (fun (V5487) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5473, V5487}} end(E1320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1315, E1316)); {'Idris.Compiler.CompileExpr.Struct', E1321, E1322} -> (fun (V5488, V5489) -> begin (V5500 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5490) -> fun (V5491) -> case V5490 of {'Idris.Builtin.MkPair', E1323, E1324} -> (fun (V5492, V5493) -> begin (V5494 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5464, V5493))(V5491))), case V5494 of {'Idris.Prelude.Types.Left', E1325} -> (fun (V5495) -> {'Idris.Prelude.Types.Left', V5495} end(E1325)); {'Idris.Prelude.Types.Right', E1326} -> (fun (V5496) -> begin (V5497 = (('un--nfToCFType'(V0, V5456, 1, V5496))(V5491))), case V5497 of {'Idris.Prelude.Types.Left', E1327} -> (fun (V5498) -> {'Idris.Prelude.Types.Left', V5498} end(E1327)); {'Idris.Prelude.Types.Right', E1328} -> (fun (V5499) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5492, V5499}} end(E1328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1323, E1324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5489, [], V5455))), case V5500 of {'Idris.Prelude.Types.Left', E1329} -> (fun (V5501) -> {'Idris.Prelude.Types.Left', V5501} end(E1329)); {'Idris.Prelude.Types.Right', E1330} -> (fun (V5502) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5488, V5502}} end(E1330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1321, E1322)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1331} -> (fun (V5503) -> begin (V5504 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5464, V5503))(V5455))), case V5504 of {'Idris.Prelude.Types.Left', E1332} -> (fun (V5505) -> {'Idris.Prelude.Types.Left', V5505} end(E1332)); {'Idris.Prelude.Types.Right', E1333} -> (fun (V5506) -> begin (V5507 = (('un--nfToCFType'(V0, V5456, V2, V5506))(V5455))), case V5507 of {'Idris.Prelude.Types.Left', E1334} -> (fun (V5508) -> {'Idris.Prelude.Types.Left', V5508} end(E1334)); {'Idris.Prelude.Types.Right', E1335} -> (fun (V5509) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5509}} end(E1335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1333)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1314)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1312)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1304, E1305, E1306, E1307, E1308)); {'Idris.Core.Value.NType', E1336} -> (fun (V5510) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1336)); {'Idris.Core.Value.NErased', E1337, E1338} -> (fun (V5511, V5512) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1337, E1338)); _ -> begin (V5514 = begin (V5513 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5513} end), case V5514 of {'Idris.Prelude.Types.Left', E1298} -> (fun (V5515) -> {'Idris.Prelude.Types.Left', V5515} end(E1298)); {'Idris.Prelude.Types.Right', E1299} -> (fun (V5516) -> begin (V5517 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5516, {'Idris.Core.Env.Nil'}, V3, V5455))), case V5517 of {'Idris.Prelude.Types.Left', E1300} -> (fun (V5518) -> {'Idris.Prelude.Types.Left', V5518} end(E1300)); {'Idris.Prelude.Types.Right', E1301} -> (fun (V5519) -> begin (V5526 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5520) -> fun (V5521) -> fun (V5522) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5520, V5521, V5522)) end end end, fun (V5523) -> fun (V5524) -> fun (V5525) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5523, V5524, V5525)) end end end}, V5519, V5455))), case V5526 of {'Idris.Prelude.Types.Left', E1302} -> (fun (V5527) -> {'Idris.Prelude.Types.Left', V5527} end(E1302)); {'Idris.Prelude.Types.Right', E1303} -> (fun (V5528) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5528))))}, V5455)) end(E1303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E1296, E1297)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1194, E1195, E1196, E1197} -> (fun (V5529, V5530, V5531, V5532) -> fun (V5533) -> case V5531 of {'Idris.Core.TT.Pi', E1239, E1240, E1241, E1242} -> (fun (V5534, V5535, V5536, V5537) -> begin (V5539 = begin (V5538 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5538} end), case V5539 of {'Idris.Prelude.Types.Left', E1243} -> (fun (V5540) -> {'Idris.Prelude.Types.Left', V5540} end(E1243)); {'Idris.Prelude.Types.Right', E1244} -> (fun (V5541) -> begin (V5542 = (('un--nfToCFType'(V0, V5529, 0, V5537))(V5533))), case V5542 of {'Idris.Prelude.Types.Left', E1245} -> (fun (V5543) -> {'Idris.Prelude.Types.Left', V5543} end(E1245)); {'Idris.Prelude.Types.Right', E1246} -> (fun (V5544) -> begin (V5545 = (((V5532(V5541))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5529, 0}))))(V5533))), case V5545 of {'Idris.Prelude.Types.Left', E1247} -> (fun (V5546) -> {'Idris.Prelude.Types.Left', V5546} end(E1247)); {'Idris.Prelude.Types.Right', E1248} -> (fun (V5547) -> begin (V5548 = (('un--nfToCFType'(V0, V5529, 0, V5547))(V5533))), case V5548 of {'Idris.Prelude.Types.Left', E1249} -> (fun (V5549) -> {'Idris.Prelude.Types.Left', V5549} end(E1249)); {'Idris.Prelude.Types.Right', E1250} -> (fun (V5550) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5544, V5550}} end(E1250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1239, E1240, E1241, E1242)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1204, E1205, E1206, E1207, E1208} -> (fun (V5551, V5552, V5553, V5554, V5555) -> begin (V5557 = begin (V5556 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5556} end), case V5557 of {'Idris.Prelude.Types.Left', E1209} -> (fun (V5558) -> {'Idris.Prelude.Types.Left', V5558} end(E1209)); {'Idris.Prelude.Types.Right', E1210} -> (fun (V5559) -> begin (V5566 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5560) -> fun (V5561) -> fun (V5562) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5560, V5561, V5562)) end end end, fun (V5563) -> fun (V5564) -> fun (V5565) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5563, V5564, V5565)) end end end}, V5552, V5533))), case V5566 of {'Idris.Prelude.Types.Left', E1211} -> (fun (V5567) -> {'Idris.Prelude.Types.Left', V5567} end(E1211)); {'Idris.Prelude.Types.Right', E1212} -> (fun (V5568) -> begin (V5570 = (('un--getNArgs'(V0, V5559, V5568, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5569) -> ('Idris.Idris2.Builtin':'un--snd'(V5569)) end, V5555))))(V5533))), case V5570 of {'Idris.Prelude.Types.Left', E1213} -> (fun (V5571) -> {'Idris.Prelude.Types.Left', V5571} end(E1213)); {'Idris.Prelude.Types.Right', E1214} -> (fun (V5572) -> case V5572 of {'Idris.Compiler.CompileExpr.User', E1215, E1216} -> (fun (V5573, V5574) -> begin (V5576 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5575) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5559, V5575)) end, V5574, [], V5533))), case V5576 of {'Idris.Prelude.Types.Left', E1217} -> (fun (V5577) -> {'Idris.Prelude.Types.Left', V5577} end(E1217)); {'Idris.Prelude.Types.Right', E1218} -> (fun (V5578) -> begin (V5580 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5579) -> ('un--nfToCFType'(V0, V5551, V2, V5579)) end, V5578, [], V5533))), case V5580 of {'Idris.Prelude.Types.Left', E1219} -> (fun (V5581) -> {'Idris.Prelude.Types.Left', V5581} end(E1219)); {'Idris.Prelude.Types.Right', E1220} -> (fun (V5582) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5568, V5582}} end(E1220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1215, E1216)); {'Idris.Compiler.CompileExpr.Struct', E1221, E1222} -> (fun (V5583, V5584) -> begin (V5595 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5585) -> fun (V5586) -> case V5585 of {'Idris.Builtin.MkPair', E1223, E1224} -> (fun (V5587, V5588) -> begin (V5589 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5559, V5588))(V5586))), case V5589 of {'Idris.Prelude.Types.Left', E1225} -> (fun (V5590) -> {'Idris.Prelude.Types.Left', V5590} end(E1225)); {'Idris.Prelude.Types.Right', E1226} -> (fun (V5591) -> begin (V5592 = (('un--nfToCFType'(V0, V5551, 1, V5591))(V5586))), case V5592 of {'Idris.Prelude.Types.Left', E1227} -> (fun (V5593) -> {'Idris.Prelude.Types.Left', V5593} end(E1227)); {'Idris.Prelude.Types.Right', E1228} -> (fun (V5594) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5587, V5594}} end(E1228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1223, E1224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5584, [], V5533))), case V5595 of {'Idris.Prelude.Types.Left', E1229} -> (fun (V5596) -> {'Idris.Prelude.Types.Left', V5596} end(E1229)); {'Idris.Prelude.Types.Right', E1230} -> (fun (V5597) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5583, V5597}} end(E1230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1221, E1222)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1231} -> (fun (V5598) -> begin (V5599 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5559, V5598))(V5533))), case V5599 of {'Idris.Prelude.Types.Left', E1232} -> (fun (V5600) -> {'Idris.Prelude.Types.Left', V5600} end(E1232)); {'Idris.Prelude.Types.Right', E1233} -> (fun (V5601) -> begin (V5602 = (('un--nfToCFType'(V0, V5551, V2, V5601))(V5533))), case V5602 of {'Idris.Prelude.Types.Left', E1234} -> (fun (V5603) -> {'Idris.Prelude.Types.Left', V5603} end(E1234)); {'Idris.Prelude.Types.Right', E1235} -> (fun (V5604) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5604}} end(E1235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1204, E1205, E1206, E1207, E1208)); {'Idris.Core.Value.NType', E1236} -> (fun (V5605) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1236)); {'Idris.Core.Value.NErased', E1237, E1238} -> (fun (V5606, V5607) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1237, E1238)); _ -> begin (V5609 = begin (V5608 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5608} end), case V5609 of {'Idris.Prelude.Types.Left', E1198} -> (fun (V5610) -> {'Idris.Prelude.Types.Left', V5610} end(E1198)); {'Idris.Prelude.Types.Right', E1199} -> (fun (V5611) -> begin (V5612 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5611, {'Idris.Core.Env.Nil'}, V3, V5533))), case V5612 of {'Idris.Prelude.Types.Left', E1200} -> (fun (V5613) -> {'Idris.Prelude.Types.Left', V5613} end(E1200)); {'Idris.Prelude.Types.Right', E1201} -> (fun (V5614) -> begin (V5621 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5615) -> fun (V5616) -> fun (V5617) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5615, V5616, V5617)) end end end, fun (V5618) -> fun (V5619) -> fun (V5620) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5618, V5619, V5620)) end end end}, V5614, V5533))), case V5621 of {'Idris.Prelude.Types.Left', E1202} -> (fun (V5622) -> {'Idris.Prelude.Types.Left', V5622} end(E1202)); {'Idris.Prelude.Types.Right', E1203} -> (fun (V5623) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5623))))}, V5533)) end(E1203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1194, E1195, E1196, E1197)); _ -> fun (V5624) -> case V3 of {'Idris.Core.Value.NTCon', E1159, E1160, E1161, E1162, E1163} -> (fun (V5625, V5626, V5627, V5628, V5629) -> begin (V5631 = begin (V5630 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5630} end), case V5631 of {'Idris.Prelude.Types.Left', E1164} -> (fun (V5632) -> {'Idris.Prelude.Types.Left', V5632} end(E1164)); {'Idris.Prelude.Types.Right', E1165} -> (fun (V5633) -> begin (V5640 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5634) -> fun (V5635) -> fun (V5636) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5634, V5635, V5636)) end end end, fun (V5637) -> fun (V5638) -> fun (V5639) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5637, V5638, V5639)) end end end}, V5626, V5624))), case V5640 of {'Idris.Prelude.Types.Left', E1166} -> (fun (V5641) -> {'Idris.Prelude.Types.Left', V5641} end(E1166)); {'Idris.Prelude.Types.Right', E1167} -> (fun (V5642) -> begin (V5644 = (('un--getNArgs'(V0, V5633, V5642, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5643) -> ('Idris.Idris2.Builtin':'un--snd'(V5643)) end, V5629))))(V5624))), case V5644 of {'Idris.Prelude.Types.Left', E1168} -> (fun (V5645) -> {'Idris.Prelude.Types.Left', V5645} end(E1168)); {'Idris.Prelude.Types.Right', E1169} -> (fun (V5646) -> case V5646 of {'Idris.Compiler.CompileExpr.User', E1170, E1171} -> (fun (V5647, V5648) -> begin (V5650 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5649) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5633, V5649)) end, V5648, [], V5624))), case V5650 of {'Idris.Prelude.Types.Left', E1172} -> (fun (V5651) -> {'Idris.Prelude.Types.Left', V5651} end(E1172)); {'Idris.Prelude.Types.Right', E1173} -> (fun (V5652) -> begin (V5654 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5653) -> ('un--nfToCFType'(V0, V5625, V2, V5653)) end, V5652, [], V5624))), case V5654 of {'Idris.Prelude.Types.Left', E1174} -> (fun (V5655) -> {'Idris.Prelude.Types.Left', V5655} end(E1174)); {'Idris.Prelude.Types.Right', E1175} -> (fun (V5656) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5642, V5656}} end(E1175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1170, E1171)); {'Idris.Compiler.CompileExpr.Struct', E1176, E1177} -> (fun (V5657, V5658) -> begin (V5669 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5659) -> fun (V5660) -> case V5659 of {'Idris.Builtin.MkPair', E1178, E1179} -> (fun (V5661, V5662) -> begin (V5663 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5633, V5662))(V5660))), case V5663 of {'Idris.Prelude.Types.Left', E1180} -> (fun (V5664) -> {'Idris.Prelude.Types.Left', V5664} end(E1180)); {'Idris.Prelude.Types.Right', E1181} -> (fun (V5665) -> begin (V5666 = (('un--nfToCFType'(V0, V5625, 1, V5665))(V5660))), case V5666 of {'Idris.Prelude.Types.Left', E1182} -> (fun (V5667) -> {'Idris.Prelude.Types.Left', V5667} end(E1182)); {'Idris.Prelude.Types.Right', E1183} -> (fun (V5668) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5661, V5668}} end(E1183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1178, E1179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5658, [], V5624))), case V5669 of {'Idris.Prelude.Types.Left', E1184} -> (fun (V5670) -> {'Idris.Prelude.Types.Left', V5670} end(E1184)); {'Idris.Prelude.Types.Right', E1185} -> (fun (V5671) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5657, V5671}} end(E1185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1176, E1177)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1186} -> (fun (V5672) -> begin (V5673 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5633, V5672))(V5624))), case V5673 of {'Idris.Prelude.Types.Left', E1187} -> (fun (V5674) -> {'Idris.Prelude.Types.Left', V5674} end(E1187)); {'Idris.Prelude.Types.Right', E1188} -> (fun (V5675) -> begin (V5676 = (('un--nfToCFType'(V0, V5625, V2, V5675))(V5624))), case V5676 of {'Idris.Prelude.Types.Left', E1189} -> (fun (V5677) -> {'Idris.Prelude.Types.Left', V5677} end(E1189)); {'Idris.Prelude.Types.Right', E1190} -> (fun (V5678) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5678}} end(E1190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1159, E1160, E1161, E1162, E1163)); {'Idris.Core.Value.NType', E1191} -> (fun (V5679) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1191)); {'Idris.Core.Value.NErased', E1192, E1193} -> (fun (V5680, V5681) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1192, E1193)); _ -> begin (V5683 = begin (V5682 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5682} end), case V5683 of {'Idris.Prelude.Types.Left', E1153} -> (fun (V5684) -> {'Idris.Prelude.Types.Left', V5684} end(E1153)); {'Idris.Prelude.Types.Right', E1154} -> (fun (V5685) -> begin (V5686 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5685, {'Idris.Core.Env.Nil'}, V3, V5624))), case V5686 of {'Idris.Prelude.Types.Left', E1155} -> (fun (V5687) -> {'Idris.Prelude.Types.Left', V5687} end(E1155)); {'Idris.Prelude.Types.Right', E1156} -> (fun (V5688) -> begin (V5695 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5689) -> fun (V5690) -> fun (V5691) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5689, V5690, V5691)) end end end, fun (V5692) -> fun (V5693) -> fun (V5694) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5692, V5693, V5694)) end end end}, V5688, V5624))), case V5695 of {'Idris.Prelude.Types.Left', E1157} -> (fun (V5696) -> {'Idris.Prelude.Types.Left', V5696} end(E1157)); {'Idris.Prelude.Types.Right', E1158} -> (fun (V5697) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5697))))}, V5624)) end(E1158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V5698) -> case V3 of {'Idris.Core.Value.NBind', E1292, E1293, E1294, E1295} -> (fun (V5699, V5700, V5701, V5702) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V5699, <<"Function types not allowed in a foreign struct"/utf8>>}, V5698)) end(E1292, E1293, E1294, E1295)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1257, E1258, E1259, E1260, E1261} -> (fun (V5703, V5704, V5705, V5706, V5707) -> begin (V5709 = begin (V5708 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5708} end), case V5709 of {'Idris.Prelude.Types.Left', E1262} -> (fun (V5710) -> {'Idris.Prelude.Types.Left', V5710} end(E1262)); {'Idris.Prelude.Types.Right', E1263} -> (fun (V5711) -> begin (V5718 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5712) -> fun (V5713) -> fun (V5714) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5712, V5713, V5714)) end end end, fun (V5715) -> fun (V5716) -> fun (V5717) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5715, V5716, V5717)) end end end}, V5704, V5698))), case V5718 of {'Idris.Prelude.Types.Left', E1264} -> (fun (V5719) -> {'Idris.Prelude.Types.Left', V5719} end(E1264)); {'Idris.Prelude.Types.Right', E1265} -> (fun (V5720) -> begin (V5722 = (('un--getNArgs'(V0, V5711, V5720, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5721) -> ('Idris.Idris2.Builtin':'un--snd'(V5721)) end, V5707))))(V5698))), case V5722 of {'Idris.Prelude.Types.Left', E1266} -> (fun (V5723) -> {'Idris.Prelude.Types.Left', V5723} end(E1266)); {'Idris.Prelude.Types.Right', E1267} -> (fun (V5724) -> case V5724 of {'Idris.Compiler.CompileExpr.User', E1268, E1269} -> (fun (V5725, V5726) -> begin (V5728 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5727) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5711, V5727)) end, V5726, [], V5698))), case V5728 of {'Idris.Prelude.Types.Left', E1270} -> (fun (V5729) -> {'Idris.Prelude.Types.Left', V5729} end(E1270)); {'Idris.Prelude.Types.Right', E1271} -> (fun (V5730) -> begin (V5732 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5731) -> ('un--nfToCFType'(V0, V5703, V2, V5731)) end, V5730, [], V5698))), case V5732 of {'Idris.Prelude.Types.Left', E1272} -> (fun (V5733) -> {'Idris.Prelude.Types.Left', V5733} end(E1272)); {'Idris.Prelude.Types.Right', E1273} -> (fun (V5734) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5720, V5734}} end(E1273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1268, E1269)); {'Idris.Compiler.CompileExpr.Struct', E1274, E1275} -> (fun (V5735, V5736) -> begin (V5747 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5737) -> fun (V5738) -> case V5737 of {'Idris.Builtin.MkPair', E1276, E1277} -> (fun (V5739, V5740) -> begin (V5741 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5711, V5740))(V5738))), case V5741 of {'Idris.Prelude.Types.Left', E1278} -> (fun (V5742) -> {'Idris.Prelude.Types.Left', V5742} end(E1278)); {'Idris.Prelude.Types.Right', E1279} -> (fun (V5743) -> begin (V5744 = (('un--nfToCFType'(V0, V5703, 1, V5743))(V5738))), case V5744 of {'Idris.Prelude.Types.Left', E1280} -> (fun (V5745) -> {'Idris.Prelude.Types.Left', V5745} end(E1280)); {'Idris.Prelude.Types.Right', E1281} -> (fun (V5746) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5739, V5746}} end(E1281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1276, E1277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5736, [], V5698))), case V5747 of {'Idris.Prelude.Types.Left', E1282} -> (fun (V5748) -> {'Idris.Prelude.Types.Left', V5748} end(E1282)); {'Idris.Prelude.Types.Right', E1283} -> (fun (V5749) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5735, V5749}} end(E1283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1274, E1275)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1284} -> (fun (V5750) -> begin (V5751 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5711, V5750))(V5698))), case V5751 of {'Idris.Prelude.Types.Left', E1285} -> (fun (V5752) -> {'Idris.Prelude.Types.Left', V5752} end(E1285)); {'Idris.Prelude.Types.Right', E1286} -> (fun (V5753) -> begin (V5754 = (('un--nfToCFType'(V0, V5703, V2, V5753))(V5698))), case V5754 of {'Idris.Prelude.Types.Left', E1287} -> (fun (V5755) -> {'Idris.Prelude.Types.Left', V5755} end(E1287)); {'Idris.Prelude.Types.Right', E1288} -> (fun (V5756) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5756}} end(E1288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1257, E1258, E1259, E1260, E1261)); {'Idris.Core.Value.NType', E1289} -> (fun (V5757) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1289)); {'Idris.Core.Value.NErased', E1290, E1291} -> (fun (V5758, V5759) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1290, E1291)); _ -> begin (V5761 = begin (V5760 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5760} end), case V5761 of {'Idris.Prelude.Types.Left', E1251} -> (fun (V5762) -> {'Idris.Prelude.Types.Left', V5762} end(E1251)); {'Idris.Prelude.Types.Right', E1252} -> (fun (V5763) -> begin (V5764 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5763, {'Idris.Core.Env.Nil'}, V3, V5698))), case V5764 of {'Idris.Prelude.Types.Left', E1253} -> (fun (V5765) -> {'Idris.Prelude.Types.Left', V5765} end(E1253)); {'Idris.Prelude.Types.Right', E1254} -> (fun (V5766) -> begin (V5773 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5767) -> fun (V5768) -> fun (V5769) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5767, V5768, V5769)) end end end, fun (V5770) -> fun (V5771) -> fun (V5772) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5770, V5771, V5772)) end end end}, V5766, V5698))), case V5773 of {'Idris.Prelude.Types.Left', E1255} -> (fun (V5774) -> {'Idris.Prelude.Types.Left', V5774} end(E1255)); {'Idris.Prelude.Types.Right', E1256} -> (fun (V5775) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5775))))}, V5698)) end(E1256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V5776) -> case V3 of {'Idris.Core.Value.NTCon', E1118, E1119, E1120, E1121, E1122} -> (fun (V5777, V5778, V5779, V5780, V5781) -> begin (V5783 = begin (V5782 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5782} end), case V5783 of {'Idris.Prelude.Types.Left', E1123} -> (fun (V5784) -> {'Idris.Prelude.Types.Left', V5784} end(E1123)); {'Idris.Prelude.Types.Right', E1124} -> (fun (V5785) -> begin (V5792 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5786) -> fun (V5787) -> fun (V5788) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5786, V5787, V5788)) end end end, fun (V5789) -> fun (V5790) -> fun (V5791) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5789, V5790, V5791)) end end end}, V5778, V5776))), case V5792 of {'Idris.Prelude.Types.Left', E1125} -> (fun (V5793) -> {'Idris.Prelude.Types.Left', V5793} end(E1125)); {'Idris.Prelude.Types.Right', E1126} -> (fun (V5794) -> begin (V5796 = (('un--getNArgs'(V0, V5785, V5794, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5795) -> ('Idris.Idris2.Builtin':'un--snd'(V5795)) end, V5781))))(V5776))), case V5796 of {'Idris.Prelude.Types.Left', E1127} -> (fun (V5797) -> {'Idris.Prelude.Types.Left', V5797} end(E1127)); {'Idris.Prelude.Types.Right', E1128} -> (fun (V5798) -> case V5798 of {'Idris.Compiler.CompileExpr.User', E1129, E1130} -> (fun (V5799, V5800) -> begin (V5802 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5801) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5785, V5801)) end, V5800, [], V5776))), case V5802 of {'Idris.Prelude.Types.Left', E1131} -> (fun (V5803) -> {'Idris.Prelude.Types.Left', V5803} end(E1131)); {'Idris.Prelude.Types.Right', E1132} -> (fun (V5804) -> begin (V5806 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5805) -> ('un--nfToCFType'(V0, V5777, V2, V5805)) end, V5804, [], V5776))), case V5806 of {'Idris.Prelude.Types.Left', E1133} -> (fun (V5807) -> {'Idris.Prelude.Types.Left', V5807} end(E1133)); {'Idris.Prelude.Types.Right', E1134} -> (fun (V5808) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5794, V5808}} end(E1134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1129, E1130)); {'Idris.Compiler.CompileExpr.Struct', E1135, E1136} -> (fun (V5809, V5810) -> begin (V5821 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5811) -> fun (V5812) -> case V5811 of {'Idris.Builtin.MkPair', E1137, E1138} -> (fun (V5813, V5814) -> begin (V5815 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5785, V5814))(V5812))), case V5815 of {'Idris.Prelude.Types.Left', E1139} -> (fun (V5816) -> {'Idris.Prelude.Types.Left', V5816} end(E1139)); {'Idris.Prelude.Types.Right', E1140} -> (fun (V5817) -> begin (V5818 = (('un--nfToCFType'(V0, V5777, 1, V5817))(V5812))), case V5818 of {'Idris.Prelude.Types.Left', E1141} -> (fun (V5819) -> {'Idris.Prelude.Types.Left', V5819} end(E1141)); {'Idris.Prelude.Types.Right', E1142} -> (fun (V5820) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5813, V5820}} end(E1142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1137, E1138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5810, [], V5776))), case V5821 of {'Idris.Prelude.Types.Left', E1143} -> (fun (V5822) -> {'Idris.Prelude.Types.Left', V5822} end(E1143)); {'Idris.Prelude.Types.Right', E1144} -> (fun (V5823) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5809, V5823}} end(E1144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1135, E1136)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1145} -> (fun (V5824) -> begin (V5825 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5785, V5824))(V5776))), case V5825 of {'Idris.Prelude.Types.Left', E1146} -> (fun (V5826) -> {'Idris.Prelude.Types.Left', V5826} end(E1146)); {'Idris.Prelude.Types.Right', E1147} -> (fun (V5827) -> begin (V5828 = (('un--nfToCFType'(V0, V5777, V2, V5827))(V5776))), case V5828 of {'Idris.Prelude.Types.Left', E1148} -> (fun (V5829) -> {'Idris.Prelude.Types.Left', V5829} end(E1148)); {'Idris.Prelude.Types.Right', E1149} -> (fun (V5830) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5830}} end(E1149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1118, E1119, E1120, E1121, E1122)); {'Idris.Core.Value.NType', E1150} -> (fun (V5831) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E1150)); {'Idris.Core.Value.NErased', E1151, E1152} -> (fun (V5832, V5833) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E1151, E1152)); _ -> begin (V5835 = begin (V5834 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5834} end), case V5835 of {'Idris.Prelude.Types.Left', E1112} -> (fun (V5836) -> {'Idris.Prelude.Types.Left', V5836} end(E1112)); {'Idris.Prelude.Types.Right', E1113} -> (fun (V5837) -> begin (V5838 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5837, {'Idris.Core.Env.Nil'}, V3, V5776))), case V5838 of {'Idris.Prelude.Types.Left', E1114} -> (fun (V5839) -> {'Idris.Prelude.Types.Left', V5839} end(E1114)); {'Idris.Prelude.Types.Right', E1115} -> (fun (V5840) -> begin (V5847 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5841) -> fun (V5842) -> fun (V5843) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5841, V5842, V5843)) end end end, fun (V5844) -> fun (V5845) -> fun (V5846) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5844, V5845, V5846)) end end end}, V5840, V5776))), case V5847 of {'Idris.Prelude.Types.Left', E1116} -> (fun (V5848) -> {'Idris.Prelude.Types.Left', V5848} end(E1116)); {'Idris.Prelude.Types.Right', E1117} -> (fun (V5849) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5849))))}, V5776)) end(E1117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; _ -> case V3 of {'Idris.Core.Value.NPrimVal', E184, E185} -> (fun (V5850, V5851) -> case V5851 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V5852) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V5853) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V5854) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E268, E269, E270, E271} -> (fun (V5855, V5856, V5857, V5858) -> fun (V5859) -> case V5857 of {'Idris.Core.TT.Pi', E313, E314, E315, E316} -> (fun (V5860, V5861, V5862, V5863) -> begin (V5865 = begin (V5864 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5864} end), case V5865 of {'Idris.Prelude.Types.Left', E317} -> (fun (V5866) -> {'Idris.Prelude.Types.Left', V5866} end(E317)); {'Idris.Prelude.Types.Right', E318} -> (fun (V5867) -> begin (V5868 = (('un--nfToCFType'(V0, V5855, 0, V5863))(V5859))), case V5868 of {'Idris.Prelude.Types.Left', E319} -> (fun (V5869) -> {'Idris.Prelude.Types.Left', V5869} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V5870) -> begin (V5871 = (((V5858(V5867))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5855, 0}))))(V5859))), case V5871 of {'Idris.Prelude.Types.Left', E321} -> (fun (V5872) -> {'Idris.Prelude.Types.Left', V5872} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V5873) -> begin (V5874 = (('un--nfToCFType'(V0, V5855, 0, V5873))(V5859))), case V5874 of {'Idris.Prelude.Types.Left', E323} -> (fun (V5875) -> {'Idris.Prelude.Types.Left', V5875} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V5876) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5870, V5876}} end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E313, E314, E315, E316)); _ -> case V3 of {'Idris.Core.Value.NTCon', E278, E279, E280, E281, E282} -> (fun (V5877, V5878, V5879, V5880, V5881) -> begin (V5883 = begin (V5882 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5882} end), case V5883 of {'Idris.Prelude.Types.Left', E283} -> (fun (V5884) -> {'Idris.Prelude.Types.Left', V5884} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V5885) -> begin (V5892 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5886) -> fun (V5887) -> fun (V5888) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5886, V5887, V5888)) end end end, fun (V5889) -> fun (V5890) -> fun (V5891) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5889, V5890, V5891)) end end end}, V5878, V5859))), case V5892 of {'Idris.Prelude.Types.Left', E285} -> (fun (V5893) -> {'Idris.Prelude.Types.Left', V5893} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V5894) -> begin (V5896 = (('un--getNArgs'(V0, V5885, V5894, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5895) -> ('Idris.Idris2.Builtin':'un--snd'(V5895)) end, V5881))))(V5859))), case V5896 of {'Idris.Prelude.Types.Left', E287} -> (fun (V5897) -> {'Idris.Prelude.Types.Left', V5897} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V5898) -> case V5898 of {'Idris.Compiler.CompileExpr.User', E289, E290} -> (fun (V5899, V5900) -> begin (V5902 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5901) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5885, V5901)) end, V5900, [], V5859))), case V5902 of {'Idris.Prelude.Types.Left', E291} -> (fun (V5903) -> {'Idris.Prelude.Types.Left', V5903} end(E291)); {'Idris.Prelude.Types.Right', E292} -> (fun (V5904) -> begin (V5906 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5905) -> ('un--nfToCFType'(V0, V5877, V2, V5905)) end, V5904, [], V5859))), case V5906 of {'Idris.Prelude.Types.Left', E293} -> (fun (V5907) -> {'Idris.Prelude.Types.Left', V5907} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V5908) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5894, V5908}} end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E289, E290)); {'Idris.Compiler.CompileExpr.Struct', E295, E296} -> (fun (V5909, V5910) -> begin (V5921 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5911) -> fun (V5912) -> case V5911 of {'Idris.Builtin.MkPair', E297, E298} -> (fun (V5913, V5914) -> begin (V5915 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5885, V5914))(V5912))), case V5915 of {'Idris.Prelude.Types.Left', E299} -> (fun (V5916) -> {'Idris.Prelude.Types.Left', V5916} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V5917) -> begin (V5918 = (('un--nfToCFType'(V0, V5877, 1, V5917))(V5912))), case V5918 of {'Idris.Prelude.Types.Left', E301} -> (fun (V5919) -> {'Idris.Prelude.Types.Left', V5919} end(E301)); {'Idris.Prelude.Types.Right', E302} -> (fun (V5920) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5913, V5920}} end(E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E297, E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5910, [], V5859))), case V5921 of {'Idris.Prelude.Types.Left', E303} -> (fun (V5922) -> {'Idris.Prelude.Types.Left', V5922} end(E303)); {'Idris.Prelude.Types.Right', E304} -> (fun (V5923) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5909, V5923}} end(E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E295, E296)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E305} -> (fun (V5924) -> begin (V5925 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5885, V5924))(V5859))), case V5925 of {'Idris.Prelude.Types.Left', E306} -> (fun (V5926) -> {'Idris.Prelude.Types.Left', V5926} end(E306)); {'Idris.Prelude.Types.Right', E307} -> (fun (V5927) -> begin (V5928 = (('un--nfToCFType'(V0, V5877, V2, V5927))(V5859))), case V5928 of {'Idris.Prelude.Types.Left', E308} -> (fun (V5929) -> {'Idris.Prelude.Types.Left', V5929} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V5930) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5930}} end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E278, E279, E280, E281, E282)); {'Idris.Core.Value.NType', E310} -> (fun (V5931) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E310)); {'Idris.Core.Value.NErased', E311, E312} -> (fun (V5932, V5933) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E311, E312)); _ -> begin (V5935 = begin (V5934 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5934} end), case V5935 of {'Idris.Prelude.Types.Left', E272} -> (fun (V5936) -> {'Idris.Prelude.Types.Left', V5936} end(E272)); {'Idris.Prelude.Types.Right', E273} -> (fun (V5937) -> begin (V5938 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V5937, {'Idris.Core.Env.Nil'}, V3, V5859))), case V5938 of {'Idris.Prelude.Types.Left', E274} -> (fun (V5939) -> {'Idris.Prelude.Types.Left', V5939} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V5940) -> begin (V5947 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5941) -> fun (V5942) -> fun (V5943) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5941, V5942, V5943)) end end end, fun (V5944) -> fun (V5945) -> fun (V5946) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5944, V5945, V5946)) end end end}, V5940, V5859))), case V5947 of {'Idris.Prelude.Types.Left', E276} -> (fun (V5948) -> {'Idris.Prelude.Types.Left', V5948} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V5949) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5949))))}, V5859)) end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E268, E269, E270, E271)); _ -> fun (V5950) -> case V3 of {'Idris.Core.Value.NTCon', E233, E234, E235, E236, E237} -> (fun (V5951, V5952, V5953, V5954, V5955) -> begin (V5957 = begin (V5956 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5956} end), case V5957 of {'Idris.Prelude.Types.Left', E238} -> (fun (V5958) -> {'Idris.Prelude.Types.Left', V5958} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V5959) -> begin (V5966 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5960) -> fun (V5961) -> fun (V5962) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5960, V5961, V5962)) end end end, fun (V5963) -> fun (V5964) -> fun (V5965) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5963, V5964, V5965)) end end end}, V5952, V5950))), case V5966 of {'Idris.Prelude.Types.Left', E240} -> (fun (V5967) -> {'Idris.Prelude.Types.Left', V5967} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V5968) -> begin (V5970 = (('un--getNArgs'(V0, V5959, V5968, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5969) -> ('Idris.Idris2.Builtin':'un--snd'(V5969)) end, V5955))))(V5950))), case V5970 of {'Idris.Prelude.Types.Left', E242} -> (fun (V5971) -> {'Idris.Prelude.Types.Left', V5971} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V5972) -> case V5972 of {'Idris.Compiler.CompileExpr.User', E244, E245} -> (fun (V5973, V5974) -> begin (V5976 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5975) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5959, V5975)) end, V5974, [], V5950))), case V5976 of {'Idris.Prelude.Types.Left', E246} -> (fun (V5977) -> {'Idris.Prelude.Types.Left', V5977} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V5978) -> begin (V5980 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5979) -> ('un--nfToCFType'(V0, V5951, V2, V5979)) end, V5978, [], V5950))), case V5980 of {'Idris.Prelude.Types.Left', E248} -> (fun (V5981) -> {'Idris.Prelude.Types.Left', V5981} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V5982) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5968, V5982}} end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244, E245)); {'Idris.Compiler.CompileExpr.Struct', E250, E251} -> (fun (V5983, V5984) -> begin (V5995 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5985) -> fun (V5986) -> case V5985 of {'Idris.Builtin.MkPair', E252, E253} -> (fun (V5987, V5988) -> begin (V5989 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5959, V5988))(V5986))), case V5989 of {'Idris.Prelude.Types.Left', E254} -> (fun (V5990) -> {'Idris.Prelude.Types.Left', V5990} end(E254)); {'Idris.Prelude.Types.Right', E255} -> (fun (V5991) -> begin (V5992 = (('un--nfToCFType'(V0, V5951, 1, V5991))(V5986))), case V5992 of {'Idris.Prelude.Types.Left', E256} -> (fun (V5993) -> {'Idris.Prelude.Types.Left', V5993} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V5994) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5987, V5994}} end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252, E253)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5984, [], V5950))), case V5995 of {'Idris.Prelude.Types.Left', E258} -> (fun (V5996) -> {'Idris.Prelude.Types.Left', V5996} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V5997) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5983, V5997}} end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E250, E251)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E260} -> (fun (V5998) -> begin (V5999 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V5959, V5998))(V5950))), case V5999 of {'Idris.Prelude.Types.Left', E261} -> (fun (V6000) -> {'Idris.Prelude.Types.Left', V6000} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V6001) -> begin (V6002 = (('un--nfToCFType'(V0, V5951, V2, V6001))(V5950))), case V6002 of {'Idris.Prelude.Types.Left', E263} -> (fun (V6003) -> {'Idris.Prelude.Types.Left', V6003} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V6004) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6004}} end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E233, E234, E235, E236, E237)); {'Idris.Core.Value.NType', E265} -> (fun (V6005) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E265)); {'Idris.Core.Value.NErased', E266, E267} -> (fun (V6006, V6007) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E266, E267)); _ -> begin (V6009 = begin (V6008 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6008} end), case V6009 of {'Idris.Prelude.Types.Left', E227} -> (fun (V6010) -> {'Idris.Prelude.Types.Left', V6010} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V6011) -> begin (V6012 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6011, {'Idris.Core.Env.Nil'}, V3, V5950))), case V6012 of {'Idris.Prelude.Types.Left', E229} -> (fun (V6013) -> {'Idris.Prelude.Types.Left', V6013} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V6014) -> begin (V6021 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6015) -> fun (V6016) -> fun (V6017) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6015, V6016, V6017)) end end end, fun (V6018) -> fun (V6019) -> fun (V6020) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6018, V6019, V6020)) end end end}, V6014, V5950))), case V6021 of {'Idris.Prelude.Types.Left', E231} -> (fun (V6022) -> {'Idris.Prelude.Types.Left', V6022} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V6023) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6023))))}, V5950)) end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V6024) -> case V3 of {'Idris.Core.Value.NBind', E366, E367, E368, E369} -> (fun (V6025, V6026, V6027, V6028) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6025, <<"Function types not allowed in a foreign struct"/utf8>>}, V6024)) end(E366, E367, E368, E369)); _ -> case V3 of {'Idris.Core.Value.NTCon', E331, E332, E333, E334, E335} -> (fun (V6029, V6030, V6031, V6032, V6033) -> begin (V6035 = begin (V6034 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6034} end), case V6035 of {'Idris.Prelude.Types.Left', E336} -> (fun (V6036) -> {'Idris.Prelude.Types.Left', V6036} end(E336)); {'Idris.Prelude.Types.Right', E337} -> (fun (V6037) -> begin (V6044 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6038) -> fun (V6039) -> fun (V6040) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6038, V6039, V6040)) end end end, fun (V6041) -> fun (V6042) -> fun (V6043) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6041, V6042, V6043)) end end end}, V6030, V6024))), case V6044 of {'Idris.Prelude.Types.Left', E338} -> (fun (V6045) -> {'Idris.Prelude.Types.Left', V6045} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V6046) -> begin (V6048 = (('un--getNArgs'(V0, V6037, V6046, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6047) -> ('Idris.Idris2.Builtin':'un--snd'(V6047)) end, V6033))))(V6024))), case V6048 of {'Idris.Prelude.Types.Left', E340} -> (fun (V6049) -> {'Idris.Prelude.Types.Left', V6049} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V6050) -> case V6050 of {'Idris.Compiler.CompileExpr.User', E342, E343} -> (fun (V6051, V6052) -> begin (V6054 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6053) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6037, V6053)) end, V6052, [], V6024))), case V6054 of {'Idris.Prelude.Types.Left', E344} -> (fun (V6055) -> {'Idris.Prelude.Types.Left', V6055} end(E344)); {'Idris.Prelude.Types.Right', E345} -> (fun (V6056) -> begin (V6058 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6057) -> ('un--nfToCFType'(V0, V6029, V2, V6057)) end, V6056, [], V6024))), case V6058 of {'Idris.Prelude.Types.Left', E346} -> (fun (V6059) -> {'Idris.Prelude.Types.Left', V6059} end(E346)); {'Idris.Prelude.Types.Right', E347} -> (fun (V6060) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6046, V6060}} end(E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E342, E343)); {'Idris.Compiler.CompileExpr.Struct', E348, E349} -> (fun (V6061, V6062) -> begin (V6073 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6063) -> fun (V6064) -> case V6063 of {'Idris.Builtin.MkPair', E350, E351} -> (fun (V6065, V6066) -> begin (V6067 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6037, V6066))(V6064))), case V6067 of {'Idris.Prelude.Types.Left', E352} -> (fun (V6068) -> {'Idris.Prelude.Types.Left', V6068} end(E352)); {'Idris.Prelude.Types.Right', E353} -> (fun (V6069) -> begin (V6070 = (('un--nfToCFType'(V0, V6029, 1, V6069))(V6064))), case V6070 of {'Idris.Prelude.Types.Left', E354} -> (fun (V6071) -> {'Idris.Prelude.Types.Left', V6071} end(E354)); {'Idris.Prelude.Types.Right', E355} -> (fun (V6072) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6065, V6072}} end(E355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E353)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E350, E351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6062, [], V6024))), case V6073 of {'Idris.Prelude.Types.Left', E356} -> (fun (V6074) -> {'Idris.Prelude.Types.Left', V6074} end(E356)); {'Idris.Prelude.Types.Right', E357} -> (fun (V6075) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6061, V6075}} end(E357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E348, E349)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E358} -> (fun (V6076) -> begin (V6077 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6037, V6076))(V6024))), case V6077 of {'Idris.Prelude.Types.Left', E359} -> (fun (V6078) -> {'Idris.Prelude.Types.Left', V6078} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V6079) -> begin (V6080 = (('un--nfToCFType'(V0, V6029, V2, V6079))(V6024))), case V6080 of {'Idris.Prelude.Types.Left', E361} -> (fun (V6081) -> {'Idris.Prelude.Types.Left', V6081} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V6082) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6082}} end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E331, E332, E333, E334, E335)); {'Idris.Core.Value.NType', E363} -> (fun (V6083) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E363)); {'Idris.Core.Value.NErased', E364, E365} -> (fun (V6084, V6085) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E364, E365)); _ -> begin (V6087 = begin (V6086 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6086} end), case V6087 of {'Idris.Prelude.Types.Left', E325} -> (fun (V6088) -> {'Idris.Prelude.Types.Left', V6088} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V6089) -> begin (V6090 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6089, {'Idris.Core.Env.Nil'}, V3, V6024))), case V6090 of {'Idris.Prelude.Types.Left', E327} -> (fun (V6091) -> {'Idris.Prelude.Types.Left', V6091} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V6092) -> begin (V6099 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6093) -> fun (V6094) -> fun (V6095) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6093, V6094, V6095)) end end end, fun (V6096) -> fun (V6097) -> fun (V6098) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6096, V6097, V6098)) end end end}, V6092, V6024))), case V6099 of {'Idris.Prelude.Types.Left', E329} -> (fun (V6100) -> {'Idris.Prelude.Types.Left', V6100} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V6101) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6101))))}, V6024)) end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V6102) -> case V3 of {'Idris.Core.Value.NTCon', E192, E193, E194, E195, E196} -> (fun (V6103, V6104, V6105, V6106, V6107) -> begin (V6109 = begin (V6108 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6108} end), case V6109 of {'Idris.Prelude.Types.Left', E197} -> (fun (V6110) -> {'Idris.Prelude.Types.Left', V6110} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V6111) -> begin (V6118 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6112) -> fun (V6113) -> fun (V6114) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6112, V6113, V6114)) end end end, fun (V6115) -> fun (V6116) -> fun (V6117) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6115, V6116, V6117)) end end end}, V6104, V6102))), case V6118 of {'Idris.Prelude.Types.Left', E199} -> (fun (V6119) -> {'Idris.Prelude.Types.Left', V6119} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V6120) -> begin (V6122 = (('un--getNArgs'(V0, V6111, V6120, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6121) -> ('Idris.Idris2.Builtin':'un--snd'(V6121)) end, V6107))))(V6102))), case V6122 of {'Idris.Prelude.Types.Left', E201} -> (fun (V6123) -> {'Idris.Prelude.Types.Left', V6123} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V6124) -> case V6124 of {'Idris.Compiler.CompileExpr.User', E203, E204} -> (fun (V6125, V6126) -> begin (V6128 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6127) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6111, V6127)) end, V6126, [], V6102))), case V6128 of {'Idris.Prelude.Types.Left', E205} -> (fun (V6129) -> {'Idris.Prelude.Types.Left', V6129} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V6130) -> begin (V6132 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6131) -> ('un--nfToCFType'(V0, V6103, V2, V6131)) end, V6130, [], V6102))), case V6132 of {'Idris.Prelude.Types.Left', E207} -> (fun (V6133) -> {'Idris.Prelude.Types.Left', V6133} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V6134) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6120, V6134}} end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E203, E204)); {'Idris.Compiler.CompileExpr.Struct', E209, E210} -> (fun (V6135, V6136) -> begin (V6147 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6137) -> fun (V6138) -> case V6137 of {'Idris.Builtin.MkPair', E211, E212} -> (fun (V6139, V6140) -> begin (V6141 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6111, V6140))(V6138))), case V6141 of {'Idris.Prelude.Types.Left', E213} -> (fun (V6142) -> {'Idris.Prelude.Types.Left', V6142} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V6143) -> begin (V6144 = (('un--nfToCFType'(V0, V6103, 1, V6143))(V6138))), case V6144 of {'Idris.Prelude.Types.Left', E215} -> (fun (V6145) -> {'Idris.Prelude.Types.Left', V6145} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V6146) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6139, V6146}} end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E211, E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6136, [], V6102))), case V6147 of {'Idris.Prelude.Types.Left', E217} -> (fun (V6148) -> {'Idris.Prelude.Types.Left', V6148} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V6149) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6135, V6149}} end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E209, E210)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E219} -> (fun (V6150) -> begin (V6151 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6111, V6150))(V6102))), case V6151 of {'Idris.Prelude.Types.Left', E220} -> (fun (V6152) -> {'Idris.Prelude.Types.Left', V6152} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V6153) -> begin (V6154 = (('un--nfToCFType'(V0, V6103, V2, V6153))(V6102))), case V6154 of {'Idris.Prelude.Types.Left', E222} -> (fun (V6155) -> {'Idris.Prelude.Types.Left', V6155} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V6156) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6156}} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192, E193, E194, E195, E196)); {'Idris.Core.Value.NType', E224} -> (fun (V6157) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E224)); {'Idris.Core.Value.NErased', E225, E226} -> (fun (V6158, V6159) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E225, E226)); _ -> begin (V6161 = begin (V6160 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6160} end), case V6161 of {'Idris.Prelude.Types.Left', E186} -> (fun (V6162) -> {'Idris.Prelude.Types.Left', V6162} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V6163) -> begin (V6164 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6163, {'Idris.Core.Env.Nil'}, V3, V6102))), case V6164 of {'Idris.Prelude.Types.Left', E188} -> (fun (V6165) -> {'Idris.Prelude.Types.Left', V6165} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V6166) -> begin (V6173 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6167) -> fun (V6168) -> fun (V6169) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6167, V6168, V6169)) end end end, fun (V6170) -> fun (V6171) -> fun (V6172) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6170, V6171, V6172)) end end end}, V6166, V6102))), case V6173 of {'Idris.Prelude.Types.Left', E190} -> (fun (V6174) -> {'Idris.Prelude.Types.Left', V6174} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V6175) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6175))))}, V6102)) end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E184, E185)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E82, E83, E84, E85} -> (fun (V6176, V6177, V6178, V6179) -> fun (V6180) -> case V6178 of {'Idris.Core.TT.Pi', E127, E128, E129, E130} -> (fun (V6181, V6182, V6183, V6184) -> begin (V6186 = begin (V6185 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6185} end), case V6186 of {'Idris.Prelude.Types.Left', E131} -> (fun (V6187) -> {'Idris.Prelude.Types.Left', V6187} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V6188) -> begin (V6189 = (('un--nfToCFType'(V0, V6176, 0, V6184))(V6180))), case V6189 of {'Idris.Prelude.Types.Left', E133} -> (fun (V6190) -> {'Idris.Prelude.Types.Left', V6190} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V6191) -> begin (V6192 = (((V6179(V6188))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V6176, 0}))))(V6180))), case V6192 of {'Idris.Prelude.Types.Left', E135} -> (fun (V6193) -> {'Idris.Prelude.Types.Left', V6193} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V6194) -> begin (V6195 = (('un--nfToCFType'(V0, V6176, 0, V6194))(V6180))), case V6195 of {'Idris.Prelude.Types.Left', E137} -> (fun (V6196) -> {'Idris.Prelude.Types.Left', V6196} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V6197) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V6191, V6197}} end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127, E128, E129, E130)); _ -> case V3 of {'Idris.Core.Value.NTCon', E92, E93, E94, E95, E96} -> (fun (V6198, V6199, V6200, V6201, V6202) -> begin (V6204 = begin (V6203 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6203} end), case V6204 of {'Idris.Prelude.Types.Left', E97} -> (fun (V6205) -> {'Idris.Prelude.Types.Left', V6205} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V6206) -> begin (V6213 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6207) -> fun (V6208) -> fun (V6209) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6207, V6208, V6209)) end end end, fun (V6210) -> fun (V6211) -> fun (V6212) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6210, V6211, V6212)) end end end}, V6199, V6180))), case V6213 of {'Idris.Prelude.Types.Left', E99} -> (fun (V6214) -> {'Idris.Prelude.Types.Left', V6214} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V6215) -> begin (V6217 = (('un--getNArgs'(V0, V6206, V6215, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6216) -> ('Idris.Idris2.Builtin':'un--snd'(V6216)) end, V6202))))(V6180))), case V6217 of {'Idris.Prelude.Types.Left', E101} -> (fun (V6218) -> {'Idris.Prelude.Types.Left', V6218} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V6219) -> case V6219 of {'Idris.Compiler.CompileExpr.User', E103, E104} -> (fun (V6220, V6221) -> begin (V6223 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6222) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6206, V6222)) end, V6221, [], V6180))), case V6223 of {'Idris.Prelude.Types.Left', E105} -> (fun (V6224) -> {'Idris.Prelude.Types.Left', V6224} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V6225) -> begin (V6227 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6226) -> ('un--nfToCFType'(V0, V6198, V2, V6226)) end, V6225, [], V6180))), case V6227 of {'Idris.Prelude.Types.Left', E107} -> (fun (V6228) -> {'Idris.Prelude.Types.Left', V6228} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V6229) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6215, V6229}} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103, E104)); {'Idris.Compiler.CompileExpr.Struct', E109, E110} -> (fun (V6230, V6231) -> begin (V6242 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6232) -> fun (V6233) -> case V6232 of {'Idris.Builtin.MkPair', E111, E112} -> (fun (V6234, V6235) -> begin (V6236 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6206, V6235))(V6233))), case V6236 of {'Idris.Prelude.Types.Left', E113} -> (fun (V6237) -> {'Idris.Prelude.Types.Left', V6237} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V6238) -> begin (V6239 = (('un--nfToCFType'(V0, V6198, 1, V6238))(V6233))), case V6239 of {'Idris.Prelude.Types.Left', E115} -> (fun (V6240) -> {'Idris.Prelude.Types.Left', V6240} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V6241) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6234, V6241}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111, E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6231, [], V6180))), case V6242 of {'Idris.Prelude.Types.Left', E117} -> (fun (V6243) -> {'Idris.Prelude.Types.Left', V6243} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V6244) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6230, V6244}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109, E110)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E119} -> (fun (V6245) -> begin (V6246 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6206, V6245))(V6180))), case V6246 of {'Idris.Prelude.Types.Left', E120} -> (fun (V6247) -> {'Idris.Prelude.Types.Left', V6247} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V6248) -> begin (V6249 = (('un--nfToCFType'(V0, V6198, V2, V6248))(V6180))), case V6249 of {'Idris.Prelude.Types.Left', E122} -> (fun (V6250) -> {'Idris.Prelude.Types.Left', V6250} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V6251) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6251}} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92, E93, E94, E95, E96)); {'Idris.Core.Value.NType', E124} -> (fun (V6252) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E124)); {'Idris.Core.Value.NErased', E125, E126} -> (fun (V6253, V6254) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E125, E126)); _ -> begin (V6256 = begin (V6255 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6255} end), case V6256 of {'Idris.Prelude.Types.Left', E86} -> (fun (V6257) -> {'Idris.Prelude.Types.Left', V6257} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V6258) -> begin (V6259 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6258, {'Idris.Core.Env.Nil'}, V3, V6180))), case V6259 of {'Idris.Prelude.Types.Left', E88} -> (fun (V6260) -> {'Idris.Prelude.Types.Left', V6260} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V6261) -> begin (V6268 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6262) -> fun (V6263) -> fun (V6264) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6262, V6263, V6264)) end end end, fun (V6265) -> fun (V6266) -> fun (V6267) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6265, V6266, V6267)) end end end}, V6261, V6180))), case V6268 of {'Idris.Prelude.Types.Left', E90} -> (fun (V6269) -> {'Idris.Prelude.Types.Left', V6269} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V6270) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6270))))}, V6180)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E82, E83, E84, E85)); _ -> fun (V6271) -> case V3 of {'Idris.Core.Value.NTCon', E47, E48, E49, E50, E51} -> (fun (V6272, V6273, V6274, V6275, V6276) -> begin (V6278 = begin (V6277 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6277} end), case V6278 of {'Idris.Prelude.Types.Left', E52} -> (fun (V6279) -> {'Idris.Prelude.Types.Left', V6279} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V6280) -> begin (V6287 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6281) -> fun (V6282) -> fun (V6283) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6281, V6282, V6283)) end end end, fun (V6284) -> fun (V6285) -> fun (V6286) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6284, V6285, V6286)) end end end}, V6273, V6271))), case V6287 of {'Idris.Prelude.Types.Left', E54} -> (fun (V6288) -> {'Idris.Prelude.Types.Left', V6288} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V6289) -> begin (V6291 = (('un--getNArgs'(V0, V6280, V6289, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6290) -> ('Idris.Idris2.Builtin':'un--snd'(V6290)) end, V6276))))(V6271))), case V6291 of {'Idris.Prelude.Types.Left', E56} -> (fun (V6292) -> {'Idris.Prelude.Types.Left', V6292} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V6293) -> case V6293 of {'Idris.Compiler.CompileExpr.User', E58, E59} -> (fun (V6294, V6295) -> begin (V6297 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6296) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6280, V6296)) end, V6295, [], V6271))), case V6297 of {'Idris.Prelude.Types.Left', E60} -> (fun (V6298) -> {'Idris.Prelude.Types.Left', V6298} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V6299) -> begin (V6301 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6300) -> ('un--nfToCFType'(V0, V6272, V2, V6300)) end, V6299, [], V6271))), case V6301 of {'Idris.Prelude.Types.Left', E62} -> (fun (V6302) -> {'Idris.Prelude.Types.Left', V6302} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V6303) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6289, V6303}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58, E59)); {'Idris.Compiler.CompileExpr.Struct', E64, E65} -> (fun (V6304, V6305) -> begin (V6316 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6306) -> fun (V6307) -> case V6306 of {'Idris.Builtin.MkPair', E66, E67} -> (fun (V6308, V6309) -> begin (V6310 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6280, V6309))(V6307))), case V6310 of {'Idris.Prelude.Types.Left', E68} -> (fun (V6311) -> {'Idris.Prelude.Types.Left', V6311} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V6312) -> begin (V6313 = (('un--nfToCFType'(V0, V6272, 1, V6312))(V6307))), case V6313 of {'Idris.Prelude.Types.Left', E70} -> (fun (V6314) -> {'Idris.Prelude.Types.Left', V6314} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V6315) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6308, V6315}} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6305, [], V6271))), case V6316 of {'Idris.Prelude.Types.Left', E72} -> (fun (V6317) -> {'Idris.Prelude.Types.Left', V6317} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V6318) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6304, V6318}} end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64, E65)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E74} -> (fun (V6319) -> begin (V6320 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6280, V6319))(V6271))), case V6320 of {'Idris.Prelude.Types.Left', E75} -> (fun (V6321) -> {'Idris.Prelude.Types.Left', V6321} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V6322) -> begin (V6323 = (('un--nfToCFType'(V0, V6272, V2, V6322))(V6271))), case V6323 of {'Idris.Prelude.Types.Left', E77} -> (fun (V6324) -> {'Idris.Prelude.Types.Left', V6324} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V6325) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6325}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47, E48, E49, E50, E51)); {'Idris.Core.Value.NType', E79} -> (fun (V6326) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E79)); {'Idris.Core.Value.NErased', E80, E81} -> (fun (V6327, V6328) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E80, E81)); _ -> begin (V6330 = begin (V6329 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6329} end), case V6330 of {'Idris.Prelude.Types.Left', E41} -> (fun (V6331) -> {'Idris.Prelude.Types.Left', V6331} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V6332) -> begin (V6333 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6332, {'Idris.Core.Env.Nil'}, V3, V6271))), case V6333 of {'Idris.Prelude.Types.Left', E43} -> (fun (V6334) -> {'Idris.Prelude.Types.Left', V6334} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V6335) -> begin (V6342 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6336) -> fun (V6337) -> fun (V6338) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6336, V6337, V6338)) end end end, fun (V6339) -> fun (V6340) -> fun (V6341) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6339, V6340, V6341)) end end end}, V6335, V6271))), case V6342 of {'Idris.Prelude.Types.Left', E45} -> (fun (V6343) -> {'Idris.Prelude.Types.Left', V6343} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V6344) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6344))))}, V6271)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V6345) -> case V3 of {'Idris.Core.Value.NBind', E180, E181, E182, E183} -> (fun (V6346, V6347, V6348, V6349) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6346, <<"Function types not allowed in a foreign struct"/utf8>>}, V6345)) end(E180, E181, E182, E183)); _ -> case V3 of {'Idris.Core.Value.NTCon', E145, E146, E147, E148, E149} -> (fun (V6350, V6351, V6352, V6353, V6354) -> begin (V6356 = begin (V6355 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6355} end), case V6356 of {'Idris.Prelude.Types.Left', E150} -> (fun (V6357) -> {'Idris.Prelude.Types.Left', V6357} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V6358) -> begin (V6365 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6359) -> fun (V6360) -> fun (V6361) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6359, V6360, V6361)) end end end, fun (V6362) -> fun (V6363) -> fun (V6364) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6362, V6363, V6364)) end end end}, V6351, V6345))), case V6365 of {'Idris.Prelude.Types.Left', E152} -> (fun (V6366) -> {'Idris.Prelude.Types.Left', V6366} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V6367) -> begin (V6369 = (('un--getNArgs'(V0, V6358, V6367, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6368) -> ('Idris.Idris2.Builtin':'un--snd'(V6368)) end, V6354))))(V6345))), case V6369 of {'Idris.Prelude.Types.Left', E154} -> (fun (V6370) -> {'Idris.Prelude.Types.Left', V6370} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V6371) -> case V6371 of {'Idris.Compiler.CompileExpr.User', E156, E157} -> (fun (V6372, V6373) -> begin (V6375 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6374) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6358, V6374)) end, V6373, [], V6345))), case V6375 of {'Idris.Prelude.Types.Left', E158} -> (fun (V6376) -> {'Idris.Prelude.Types.Left', V6376} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V6377) -> begin (V6379 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6378) -> ('un--nfToCFType'(V0, V6350, V2, V6378)) end, V6377, [], V6345))), case V6379 of {'Idris.Prelude.Types.Left', E160} -> (fun (V6380) -> {'Idris.Prelude.Types.Left', V6380} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V6381) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6367, V6381}} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156, E157)); {'Idris.Compiler.CompileExpr.Struct', E162, E163} -> (fun (V6382, V6383) -> begin (V6394 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6384) -> fun (V6385) -> case V6384 of {'Idris.Builtin.MkPair', E164, E165} -> (fun (V6386, V6387) -> begin (V6388 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6358, V6387))(V6385))), case V6388 of {'Idris.Prelude.Types.Left', E166} -> (fun (V6389) -> {'Idris.Prelude.Types.Left', V6389} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V6390) -> begin (V6391 = (('un--nfToCFType'(V0, V6350, 1, V6390))(V6385))), case V6391 of {'Idris.Prelude.Types.Left', E168} -> (fun (V6392) -> {'Idris.Prelude.Types.Left', V6392} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V6393) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6386, V6393}} end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164, E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6383, [], V6345))), case V6394 of {'Idris.Prelude.Types.Left', E170} -> (fun (V6395) -> {'Idris.Prelude.Types.Left', V6395} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V6396) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6382, V6396}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162, E163)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E172} -> (fun (V6397) -> begin (V6398 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6358, V6397))(V6345))), case V6398 of {'Idris.Prelude.Types.Left', E173} -> (fun (V6399) -> {'Idris.Prelude.Types.Left', V6399} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V6400) -> begin (V6401 = (('un--nfToCFType'(V0, V6350, V2, V6400))(V6345))), case V6401 of {'Idris.Prelude.Types.Left', E175} -> (fun (V6402) -> {'Idris.Prelude.Types.Left', V6402} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V6403) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6403}} end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145, E146, E147, E148, E149)); {'Idris.Core.Value.NType', E177} -> (fun (V6404) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E177)); {'Idris.Core.Value.NErased', E178, E179} -> (fun (V6405, V6406) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E178, E179)); _ -> begin (V6408 = begin (V6407 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6407} end), case V6408 of {'Idris.Prelude.Types.Left', E139} -> (fun (V6409) -> {'Idris.Prelude.Types.Left', V6409} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V6410) -> begin (V6411 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6410, {'Idris.Core.Env.Nil'}, V3, V6345))), case V6411 of {'Idris.Prelude.Types.Left', E141} -> (fun (V6412) -> {'Idris.Prelude.Types.Left', V6412} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V6413) -> begin (V6420 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6414) -> fun (V6415) -> fun (V6416) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6414, V6415, V6416)) end end end, fun (V6417) -> fun (V6418) -> fun (V6419) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6417, V6418, V6419)) end end end}, V6413, V6345))), case V6420 of {'Idris.Prelude.Types.Left', E143} -> (fun (V6421) -> {'Idris.Prelude.Types.Left', V6421} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V6422) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6422))))}, V6345)) end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V6423) -> case V3 of {'Idris.Core.Value.NTCon', E6, E7, E8, E9, E10} -> (fun (V6424, V6425, V6426, V6427, V6428) -> begin (V6430 = begin (V6429 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6429} end), case V6430 of {'Idris.Prelude.Types.Left', E11} -> (fun (V6431) -> {'Idris.Prelude.Types.Left', V6431} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V6432) -> begin (V6439 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6433) -> fun (V6434) -> fun (V6435) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6433, V6434, V6435)) end end end, fun (V6436) -> fun (V6437) -> fun (V6438) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6436, V6437, V6438)) end end end}, V6425, V6423))), case V6439 of {'Idris.Prelude.Types.Left', E13} -> (fun (V6440) -> {'Idris.Prelude.Types.Left', V6440} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V6441) -> begin (V6443 = (('un--getNArgs'(V0, V6432, V6441, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6442) -> ('Idris.Idris2.Builtin':'un--snd'(V6442)) end, V6428))))(V6423))), case V6443 of {'Idris.Prelude.Types.Left', E15} -> (fun (V6444) -> {'Idris.Prelude.Types.Left', V6444} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V6445) -> case V6445 of {'Idris.Compiler.CompileExpr.User', E17, E18} -> (fun (V6446, V6447) -> begin (V6449 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6448) -> ('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6432, V6448)) end, V6447, [], V6423))), case V6449 of {'Idris.Prelude.Types.Left', E19} -> (fun (V6450) -> {'Idris.Prelude.Types.Left', V6450} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V6451) -> begin (V6453 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6452) -> ('un--nfToCFType'(V0, V6424, V2, V6452)) end, V6451, [], V6423))), case V6453 of {'Idris.Prelude.Types.Left', E21} -> (fun (V6454) -> {'Idris.Prelude.Types.Left', V6454} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V6455) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6441, V6455}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17, E18)); {'Idris.Compiler.CompileExpr.Struct', E23, E24} -> (fun (V6456, V6457) -> begin (V6468 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6458) -> fun (V6459) -> case V6458 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V6460, V6461) -> begin (V6462 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6432, V6461))(V6459))), case V6462 of {'Idris.Prelude.Types.Left', E27} -> (fun (V6463) -> {'Idris.Prelude.Types.Left', V6463} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V6464) -> begin (V6465 = (('un--nfToCFType'(V0, V6424, 1, V6464))(V6459))), case V6465 of {'Idris.Prelude.Types.Left', E29} -> (fun (V6466) -> {'Idris.Prelude.Types.Left', V6466} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V6467) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6460, V6467}} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6457, [], V6423))), case V6468 of {'Idris.Prelude.Types.Left', E31} -> (fun (V6469) -> {'Idris.Prelude.Types.Left', V6469} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V6470) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6456, V6470}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23, E24)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E33} -> (fun (V6471) -> begin (V6472 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V6432, V6471))(V6423))), case V6472 of {'Idris.Prelude.Types.Left', E34} -> (fun (V6473) -> {'Idris.Prelude.Types.Left', V6473} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V6474) -> begin (V6475 = (('un--nfToCFType'(V0, V6424, V2, V6474))(V6423))), case V6475 of {'Idris.Prelude.Types.Left', E36} -> (fun (V6476) -> {'Idris.Prelude.Types.Left', V6476} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V6477) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6477}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7, E8, E9, E10)); {'Idris.Core.Value.NType', E38} -> (fun (V6478) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"Type"/utf8>>}, []}} end(E38)); {'Idris.Core.Value.NErased', E39, E40} -> (fun (V6479, V6480) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', <<"__"/utf8>>}, []}} end(E39, E40)); _ -> begin (V6482 = begin (V6481 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6481} end), case V6482 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6483) -> {'Idris.Prelude.Types.Left', V6483} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6484) -> begin (V6485 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote_NF'(V0, [], V6484, {'Idris.Core.Env.Nil'}, V3, V6423))), case V6485 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6486) -> {'Idris.Prelude.Types.Left', V6486} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V6487) -> begin (V6494 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6488) -> fun (V6489) -> fun (V6490) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6488, V6489, V6490)) end end end, fun (V6491) -> fun (V6492) -> fun (V6493) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6491, V6492, V6493)) end end end}, V6487, V6423))), case V6494 of {'Idris.Prelude.Types.Left', E4} -> (fun (V6495) -> {'Idris.Prelude.Types.Left', V6495} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V6496) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6496))))}, V6423)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end.
'un--natMinus'(V0, V1, V2) -> case V2 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V3, V4) -> case V4 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V5, V6) -> case V6 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V0, {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.UN', <<"prim__sub_Integer"/utf8>>}}, [V3 | [V5 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--natHack'() -> [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"natToInteger"/utf8>>}}, (1 + 0), fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> case V3 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Data.Vect.Nil'} -> (fun () -> V4 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"integerToNat"/utf8>>}}, (1 + 0), fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V10, V11) -> case V11 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V6, {'Idris.Core.CompileExpr.CRef', V7, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"prim__integerToNat"/utf8>>}}}, [V10 | []]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"plus"/utf8>>}}, (1 + (1 + 0)), fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> case V15 of {'Idris.Data.Vect.::', E4, E5} -> (fun (V16, V17) -> case V17 of {'Idris.Data.Vect.::', E6, E7} -> (fun (V18, V19) -> case V19 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V12, {'Idris.Core.CompileExpr.CRef', V13, {'Idris.Core.Name.UN', <<"prim__add_Integer"/utf8>>}}, [V16 | [V18 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', <<"mult"/utf8>>}}, (1 + (1 + 0)), fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> case V23 of {'Idris.Data.Vect.::', E8, E9} -> (fun (V24, V25) -> case V25 of {'Idris.Data.Vect.::', E10, E11} -> (fun (V26, V27) -> case V27 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V20, {'Idris.Core.CompileExpr.CRef', V21, {'Idris.Core.Name.UN', <<"prim__mul_Integer"/utf8>>}}, [V24 | [V26 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--natNS'()), {'Idris.Core.Name.UN', <<"minus"/utf8>>}}, (1 + (1 + 0)), fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('un--natMinus'(V28, V29, V31)) end end end end} | []]]]]].
'un--natBranch'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V3, V4, V5, V6, V7) -> ('un--isNatCon'(V0, V1, V3)) end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkSub'(V0, V1, V2) -> case V2 of [] -> {'Idris.Builtin.DPair.MkDPair', V1, {'Idris.Core.TT.SubRefl'}}; _ -> case V1 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V3, V4) -> case ('un--mkSub'((1 + V0), V4, V2)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V5, V6) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V9, V10)) end end}, V0, V2)) of 1 -> {'Idris.Builtin.DPair.MkDPair', V5, {'Idris.Core.TT.DropCons', V6}}; 0 -> {'Idris.Builtin.DPair.MkDPair', [V3 | V5], {'Idris.Core.TT.KeepCons', V6}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mkForgetDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V35 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V35 of {'Idris.Prelude.Types.Left', E30} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V37) -> case V37 of {'Idris.Prelude.Types.Just', E32} -> (fun (V38) -> case V38 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> case V57 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E54} -> (fun (V60) -> begin (V61 = ('Idris.Idris2.Core.CompileExpr':'un--forgetDef'(V60))), ('Idris.Idris2.Core.Context':'un--setNamedCompiled'(V0, V1, V61, V2)) end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mkDropSubst'(V0, V1, V2, V3) -> case V3 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V4, V5) -> case ('un--mkDropSubst'(('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V0)), V1, V2, V5)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V6, V7) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V10, V11)) end end}, V0, V1)) of 1 -> {'Idris.Builtin.DPair.MkDPair', V6, {'Idris.Core.TT.DropCons', V7}}; 0 -> {'Idris.Builtin.DPair.MkDPair', [V4 | V6], {'Idris.Core.TT.KeepCons', V7}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkArgList'(V0, V1) -> case V1 of 0 -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Compiler.CompileExpr.NoArgs'}}; _ -> begin (V2 = (V1 - 1)), case ('un--mkArgList'(((V0 + 1) rem 9223372036854775808), V2)) of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V3, V4) -> {'Idris.Builtin.DPair.MkDPair', [{'Idris.Core.Name.MN', <<"arg"/utf8>>, V0} | V3], {'Idris.Compiler.CompileExpr.ConsArg', {'Idris.Core.Name.MN', <<"arg"/utf8>>, V0}, V4}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--magic'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Core.CompileExpr.CLam', V2, V3, ('un--magic'(V0, V4))} end(E0, E1, E2)); _ -> ('nested--7497-2630--in--un--go'(V1, V0, V0, V1)) end.
'un--isNatCon'(V0, V1, V2) -> case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V2, V0)))) of 1 -> 1; 0 -> ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V2, V1)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getZBranch'(V0, V1) -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V2, V3) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(('un--tryZBranch'(V0, V2)), ('un--getZBranch'(V0, V3)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getSBranch'(V0, V1, V2) -> case V2 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(('un--trySBranch'(V0, V1, V3)), ('un--getSBranch'(V0, V1, V4)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getPArgs'(V0, V1, V2, V3) -> begin (V4 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1, V2))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = {'Idris.Core.Value.NDCon', V7, V8, V9, V10, V11}), ('case--case block in getPArgs-5337'(V2, V1, V0, V8, V9, V10, V11, V7, V12, ('Idris.Idris2.Data.List':'un--reverse'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V13) -> ('Idris.Idris2.Builtin':'un--snd'(V13)) end, V11)))), V3)) end end(E2, E3, E4, E5, E6)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V6)), <<"Badly formed struct type"/utf8>>}, V3)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getNewType'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V7, V8) -> case V7 of {'Idris.Core.CaseTree.DefaultCase', E2} -> (fun (V9) -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E2)); {'Idris.Core.CaseTree.ConCase', E3, E4, E5, E6} -> (fun (V11, V12, V13, V14) -> fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> begin (V48 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V11, case V19 of {'Idris.Core.Context.MkDefs', E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36} -> (fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47) -> V20 end(E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V15))), case V48 of {'Idris.Prelude.Types.Left', E37} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V50) -> case V50 of {'Idris.Prelude.Types.Just', E39} -> (fun (V51) -> case V51 of {'Idris.Core.Context.DCon', E40, E41, E42} -> (fun (V52, V53, V54) -> case V54 of {'Idris.Prelude.Types.Just', E43} -> (fun (V55) -> case V55 of {'Idris.Builtin.MkPair', E44, E45} -> (fun (V56, V57) -> begin (V58 = ('nested--9053-4508--in--un--mkSubst'(V13, V0, V14, V12, V11, V8, V4, V3, V2, V1, 0, V3, V57, V13))), begin (V59 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'(V13, V0)), V1, V4, V14))(V15))), case V59 of {'Idris.Prelude.Types.Left', E46} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.CompileExpr':'un--substs'(V13, V0, V58, V61))}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E44, E45)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E43)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E40, E41, E42)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E39)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5, E6)); _ -> ('un--getNewType'(V0, V1, V2, V3, V4, V8)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNArgs'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Core.Name.UN', E2} -> (fun (V6) -> case V6 of <<"IORes"/utf8>> -> fun (V7) -> case V3 of [E3 | E4] -> (fun (V8, V9) -> case V9 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NIORes', V8}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E3, E4)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Ptr"/utf8>> -> fun (V10) -> case V3 of [E5 | E6] -> (fun (V11, V12) -> case V12 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E5, E6)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"AnyPtr"/utf8>> -> fun (V13) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"GCPtr"/utf8>> -> fun (V14) -> case V3 of [E7 | E8] -> (fun (V15, V16) -> case V16 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E7, E8)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"GCAnyPtr"/utf8>> -> fun (V17) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Buffer"/utf8>> -> fun (V18) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NBuffer'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Unit"/utf8>> -> fun (V19) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NUnit'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Struct"/utf8>> -> case V3 of [E9 | E10] -> (fun (V20, V21) -> fun (V22) -> case V21 of [E11 | E12] -> (fun (V23, V24) -> case V24 of [] -> begin (V25 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1, V20))(V22))), case V25 of {'Idris.Prelude.Types.Left', E13} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V27) -> case V27 of {'Idris.Core.Value.NPrimVal', E15, E16} -> (fun (V28, V29) -> case V29 of {'Idris.Core.TT.Str', E17} -> (fun (V30) -> begin (V31 = ('un--getFieldArgs'(V0, V1, V23, V22))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Struct', V30, V33}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V27)), <<"Unknown name for struct"/utf8>>}, V22)) end end(E15, E16)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V27)), <<"Unknown name for struct"/utf8>>}, V22)) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E11, E12)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E9, E10)); _ -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; _ -> fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E2)); _ -> fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E0, E1)); _ -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end.
'un--getFieldArgs'(V0, V1, V2, V3) -> begin (V4 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V0, [], V1, V2))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = {'Idris.Core.Value.NDCon', V7, V8, V9, V10, V11}), (('case--case block in getFieldArgs-5526'(V2, V1, V0, V8, V9, V10, V11, V7, V12, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V13) -> ('Idris.Idris2.Builtin':'un--snd'(V13)) end, V11))))(V3)) end end(E2, E3, E4, E5, E6)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V6)), <<"Badly formed struct type"/utf8>>}, V3)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getDef'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Core.CaseTree.DefaultCase', E2} -> (fun (V7) -> fun (V8) -> begin (V9 = (('un--toCExpTree'(V0, V1, V2, V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V11}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); {'Idris.Core.CaseTree.ConstCase', E5, E6} -> (fun (V12, V13) -> case V12 of {'Idris.Core.TT.WorldVal'} -> (fun () -> fun (V14) -> begin (V15 = (('un--toCExpTree'(V0, V1, V2, V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('un--getDef'(V0, V1, V2, V6)) end end(E5, E6)); _ -> ('un--getDef'(V0, V1, V2, V6)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getCFTypes'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Value.NBind', E2, E3, E4, E5} -> (fun (V4, V5, V6, V7) -> case V6 of {'Idris.Core.TT.Pi', E8, E9, E10, E11} -> (fun (V8, V9, V10, V11) -> begin (V12 = (('un--nfToCFType'(V0, V4, 0, V11))(V3))), case V12 of {'Idris.Prelude.Types.Left', E12} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E14} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V18) -> begin (V19 = (((V7(V18))(('Idris.Idris2.Core.Normalise':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4, 0}))))(V3))), case V19 of {'Idris.Prelude.Types.Left', E16} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V21) -> ('un--getCFTypes'(V0, [V14 | V1], V21, V3)) end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9, E10, E11)); _ -> begin (V22 = (('un--nfToCFType'(V0, ('Idris.Idris2.Core.Value':'un--getLoc'(V2)), 0, V2))(V3))), case V22 of {'Idris.Prelude.Types.Left', E6} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Data.List':'un--reverse'(V1)), V24}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3, E4, E5)); _ -> begin (V25 = (('un--nfToCFType'(V0, ('Idris.Idris2.Core.Value':'un--getLoc'(V2)), 0, V2))(V3))), case V25 of {'Idris.Prelude.Types.Left', E0} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Data.List':'un--reverse'(V1)), V27}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--expandToArity'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.CErased', E2} -> (fun (V4) -> {'Idris.Core.CompileExpr.CErased', V4} end(E2)); _ -> case V1 of 0 -> ('nested--6986-2190--in--un--applyAll'(V0, V3, V2, V2, V3)); _ -> begin (V5 = (V1 - 1)), case V3 of [E0 | E1] -> (fun (V6, V7) -> ('un--expandToArity'(V0, V5, ('nested--6986-2212--in--un--addArg'(V0, V5, V6, V7, V2, V2, V6)), V7)) end(E0, E1)); _ -> case V3 of [] -> ('un--etaExpand'(V0, 0, V1, V2, [])); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'un--etaExpand'(V0, V1, V2, V3, V4) -> case V2 of 0 -> ('nested--6886-2090--in--un--mkApp'(V0, V4, V3, V1, V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5) -> ('nested--6886-2089--in--un--mkLocal'(V0, V4, V3, V1, ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V3)), V5)) end, ('Idris.Idris2.Data.List':'un--reverse'(V4)))))); _ -> begin (V6 = (V2 - 1)), {'Idris.Core.CompileExpr.CLam', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V3)), {'Idris.Core.Name.MN', <<"eta"/utf8>>, V1}, ('un--etaExpand'([{'Idris.Core.Name.MN', <<"eta"/utf8>>, V1} | V0], ((V1 + 1) rem 9223372036854775808), V6, ('Idris.Idris2.Core.CompileExpr':'dn--un--weaken_Weaken_CExp'(V3)), [0 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V7) -> ('un--weakenVar'(V7)) end, V4))]))} end end.
'un--eraseConArgs'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--expandToArity'(V0, V1, V3, V4))), case ('Idris.Idris2.Data.List':'un--isNil'(V2)) of 1 -> V5; 0 -> ('un--dropPos'(V2, V5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--enumTree'(V0) -> case V0 of {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> (fun (V1, V2, V3, V4) -> begin (V16 = ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'({'Idris.Prelude.Interfaces.MkApplicative', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V7, V8)) end end end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V10)) end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V13, V14)) end end end end}, fun (V15) -> ('nested--8278-3346--in--un--toEnum'(V4, V3, V2, V1, V15)) end, V3))), case V16 of {'Idris.Prelude.Types.Just', E4} -> (fun (V17) -> {'Idris.Core.CompileExpr.CConstCase', V1, V2, V17, V4} end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Core.CompileExpr.CConCase', V1, V2, V3, V4} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> V0 end.
'un--dropPos'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Core.CompileExpr.CLam', V2, V3, ('un--dropPos'(V0, V4))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CApp', E3, E4, E5} -> (fun (V5, V6, V7) -> case V6 of {'Idris.Core.CompileExpr.CApp', E6, E7, E8} -> (fun (V8, V9, V10) -> {'Idris.Core.CompileExpr.CApp', V5, ('un--dropPos'(V0, V6)), V7} end(E6, E7, E8)); _ -> {'Idris.Core.CompileExpr.CApp', V5, V6, ('un--dropFrom'(V0, 0, V7))} end end(E3, E4, E5)); {'Idris.Core.CompileExpr.CCon', E9, E10, E11, E12, E13} -> (fun (V11, V12, V13, V14, V15) -> {'Idris.Core.CompileExpr.CCon', V11, V12, V13, V14, ('un--dropFrom'(V0, 0, V15))} end(E9, E10, E11, E12, E13)); _ -> V1 end.
'un--dropFrom'(V0, V1, V2) -> case V2 of [] -> []; [E0 | E1] -> (fun (V3, V4) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V7, V8)) end end}, V1, V0)) of 1 -> ('un--dropFrom'(V0, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V1)), V4)); 0 -> [V3 | ('un--dropFrom'(V0, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V1)), V4))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dconFlag'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V35 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V35 of {'Idris.Prelude.Types.Left', E30} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V37) -> case V37 of {'Idris.Prelude.Types.Just', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Right', ('nested--8356-3409--in--un--ciFlags'(V1, V0, case V38 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V50 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--constCases'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Core.CaseTree.ConstCase', E2, E3} -> (fun (V7, V8) -> case V7 of {'Idris.Core.TT.WorldVal'} -> (fun () -> ('un--constCases'(V0, V1, V2, V6)) end()); _ -> fun (V9) -> begin (V10 = (('un--toCExpTree'(V0, V1, V2, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> begin (V13 = (('un--constCases'(V0, V1, V2, V6))(V9))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConstAlt', V7, V12} | V15]} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3)); _ -> ('un--constCases'(V0, V1, V2, V6)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--conCases'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Core.CaseTree.ConCase', E2, E3, E4, E5} -> (fun (V7, V8, V9, V10) -> fun (V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V44 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V7, case V15 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V16 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V11))), case V44 of {'Idris.Prelude.Types.Left', E36} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V46) -> case V46 of {'Idris.Prelude.Types.Just', E38} -> (fun (V47) -> begin (V48 = {'Idris.Prelude.Types.Just', V47}), (('case--case block in conCases-4175'(V9, V0, V10, V8, V7, V6, V2, V1, V15, V47, V48, case V47 of {'Idris.Core.Context.MkGlobalDef', E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59} -> (fun (V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> V66 end(E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V11)) end end(E38)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V70 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V7, V11))), case V70 of {'Idris.Prelude.Types.Left', E60} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V72) -> begin (V73 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--++'(V9, V0)), V1, V2, V10))(V11))), case V73 of {'Idris.Prelude.Types.Left', E62} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V75) -> begin (V76 = (('un--conCases'(V0, V1, V2, V6))(V11))), case V76 of {'Idris.Prelude.Types.Left', E64} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V78) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V72, 1, {'Idris.Prelude.Types.Nothing'}, V9, V75} | V78]} end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3, E4, E5)); _ -> ('un--conCases'(V0, V1, V2, V6)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileExp'(V0, V1, V2) -> begin (V3 = ('un--builtinMagic'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V7 = ('un--toCExp'([], V0, fun (V6) -> (V5('erased')) end, {'Idris.Core.Name.UN', <<"main"/utf8>>}, V1, V2))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', V9} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V35 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V35 of {'Idris.Prelude.Types.Left', E30} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V37) -> case V37 of {'Idris.Prelude.Types.Just', E32} -> (fun (V38) -> begin (V111 = begin (V66 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V39, V40, V41)) end end end, fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V42, V43, V44)) end end end}, case V38 of {'Idris.Core.Context.MkGlobalDef', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> V62 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2))), case V66 of {'Idris.Prelude.Types.Left', E54} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V68) -> (('un--toCDef'(V0, V1, case V38 of {'Idris.Core.Context.MkGlobalDef', E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76} -> (fun (V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89) -> V71 end(E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V38 of {'Idris.Core.Context.MkGlobalDef', E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97} -> (fun (V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110) -> V93 end(E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V68))(V2)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V111 of {'Idris.Prelude.Types.Left', E98} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V113) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V0, V1, V113, V2)) end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--builtinNatTree\x{27}'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> (fun (V3, V4, V5, V6) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V18)) end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V22, V23, V24, V25)) end end end end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V27)) end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V30, V31, V32)) end end end end end}, fun (V33) -> ('un--natBranch'(V0, V1, V33)) end, V5)) of 1 -> begin (V35 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> {'Idris.Core.CompileExpr.CCrash', V3, <<"Nat case not covered"/utf8>>} end, fun () -> fun (V34) -> V34 end end, V6))), begin (V37 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V35 end, fun () -> fun (V36) -> V36 end end, ('un--getSBranch'(V1, V4, V5))))), begin (V39 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V35 end, fun () -> fun (V38) -> V38 end end, ('un--getZBranch'(V0, V5))))), {'Idris.Core.CompileExpr.CConstCase', V3, V4, [{'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.BI', 0}, V39} | []], {'Idris.Prelude.Types.Just', V37}} end end end; 0 -> {'Idris.Core.CompileExpr.CConCase', V3, V4, V5, V6}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); _ -> V2 end.
'un--builtinNatTree'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V34 = case V5 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V21 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', fun (V35) -> ('un--builtinNatTree\x{27}'(case V34 of {'Idris.Core.Context.MkBuiltinTransforms', E30, E31, E32, E33, E34} -> (fun (V36, V37, V38, V39, V40) -> V37 end(E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V34 of {'Idris.Core.Context.MkBuiltinTransforms', E35, E36, E37, E38, E39} -> (fun (V41, V42, V43, V44, V45) -> V43 end(E35, E36, E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V35)) end} end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--builtinMagic'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V34 = case V5 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V21 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V43 = ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Idris.Prelude.Interfaces.MkMonoid', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V35, V36)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}, fun (V37) -> ('nested--7834-2938--in--un--builtinMagicNat'(V0, V37)) end, ('Idris.Idris2.Libraries.Data.NameMap':'un--values'(case V34 of {'Idris.Core.Context.MkBuiltinTransforms', E30, E31, E32, E33, E34} -> (fun (V38, V39, V40, V41, V42) -> V38 end(E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))), begin (V50 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V44) -> ('nested--7834-2939--in--un--natToIntMagic'(V0, V44)) end, ('Idris.Idris2.Libraries.Data.NameMap':'un--toList'(case V34 of {'Idris.Core.Context.MkBuiltinTransforms', E35, E36, E37, E38, E39} -> (fun (V45, V46, V47, V48, V49) -> V48 end(E35, E36, E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))), begin (V57 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V51) -> ('nested--7834-2940--in--un--intToNatMagic'(V0, V51)) end, ('Idris.Idris2.Libraries.Data.NameMap':'un--toList'(case V34 of {'Idris.Core.Context.MkBuiltinTransforms', E40, E41, E42, E43, E44} -> (fun (V52, V53, V54, V55, V56) -> V56 end(E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))), {'Idris.Prelude.Types.Right', fun (V58) -> fun (V59) -> ('un--magic'(('Idris.Idris2.Prelude.Types.List':'un--++'(('un--natHack'()), ('Idris.Idris2.Prelude.Types.List':'un--++'(V43, ('Idris.Idris2.Prelude.Types.List':'un--++'(V50, V57)))))), V59)) end end} end end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--applyNewType'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--expandToArity'(V0, V1, V3, V4))), ('nested--7090-2272--in--un--keepArg'(V0, V4, V3, V2, V1, V5)) end.
