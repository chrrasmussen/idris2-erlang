-module('Idris.Idris2.TTImp.WithClause').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in getNewLHS-12712'/22,
  'nested--7490-12938--in--un--wrhsC'/10,
  'nested--7490-12937--in--un--wrhs'/9,
  'nested--7490-12935--in--un--withApply'/11,
  'nested--7490-12936--in--un--updateWith'/11,
  'nested--6914-12454--in--un--dropWithArgs'/11,
  'un--withRHS'/8,
  'un--mergeMatches'/5,
  'un--matchFail'/2,
  'un--matchAny'/6,
  'un--matchAll'/5,
  'un--getNewLHS'/9,
  'un--getMatch'/5,
  'un--getHeadLoc'/1,
  'un--getArgMatch'/6,
  'un--addAlias'/5
]).
'case--case block in case block in case block in getNewLHS-12712'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of [E0 | E1] -> (fun (V22, V23) -> begin (V27 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V15)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V18)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" dropping "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V24) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V25, V26)) end end}, [V22 | V23])))))))))) end, V21))), case V27 of {'Idris.Prelude.Types.Left', E2} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V29) -> begin (V30 = (('un--getMatch'(V7, V8, 1, V15, V18))(V21))), case V30 of {'Idris.Prelude.Types.Left', E4} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V32) -> begin (V48 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matches: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V34)) end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V35, V36)) end end}, {'Idris.Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V38, V39)) end end}}, V33)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V42)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V43, V44)) end end}, {'Idris.Prelude.Show.MkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V46, V47)) end end}}, V40, V41)) end end}, V32)))) end, V21))), case V48 of {'Idris.Prelude.Types.Left', E6} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V50) -> begin (V52 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V51) -> ('un--getArgMatch'(V9, {'Idris.TTImp.Elab.Check.InLHS', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'())}, 0, V22, V32, V51)) end, V2))), begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parameters: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V54, V55)) end end}, V52)))) end, V21))), case V56 of {'Idris.Prelude.Types.Left', E8} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V58) -> begin (V59 = (('un--getHeadLoc'(V0))(V21))), case V59 of {'Idris.Prelude.Types.Left', E10} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V61) -> begin (V62 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V61, V3}, ('Idris.Idris2.Prelude.Types.List':'un--++'(V52, V23))))), begin (V63 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V62)))) end, V21))), case V63 of {'Idris.Prelude.Types.Left', E12} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V65) -> {'Idris.Prelude.Types.Right', V62} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V21)) end.
'nested--7490-12938--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V10, V11, V12) -> begin (V13 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V12))(V9))), case V13 of {'Idris.Prelude.Types.Left', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V10, V11, V15}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', V8} end.
'nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V9, V10, V11, V12, V13, V14) -> fun (V15) -> begin (V16 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V13))(V15))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V19 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V14))(V15))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V9, V10, V11, V12, V18, V21}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V22, V23, V24, V25, V26, V27) -> fun (V28) -> begin (V29 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V26))(V28))), case V29 of {'Idris.Prelude.Types.Left', E16} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V31) -> begin (V32 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V27))(V28))), case V32 of {'Idris.Prelude.Types.Left', E18} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V22, V23, V24, V25, V31, V34}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25, E26} -> (fun (V35, V36, V37, V38, V39, V40, V41) -> fun (V42) -> begin (V43 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V39))(V42))), case V43 of {'Idris.Prelude.Types.Left', E27} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V45) -> begin (V46 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V40))(V42))), case V46 of {'Idris.Prelude.Types.Left', E29} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V48) -> begin (V49 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V41))(V42))), case V49 of {'Idris.Prelude.Types.Left', E31} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V35, V36, V37, V38, V45, V48, V51}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25, E26)); {'Idris.TTImp.TTImp.ICase', E33, E34, E35, E36} -> (fun (V52, V53, V54, V55) -> fun (V56) -> begin (V57 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V53))(V56))), case V57 of {'Idris.Prelude.Types.Left', E37} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V59) -> begin (V60 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V54))(V56))), case V60 of {'Idris.Prelude.Types.Left', E39} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V62) -> begin (V65 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V63) -> fun (V64) -> ('nested--7490-12938--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7, V63, V64)) end end, V55, [], V56))), case V65 of {'Idris.Prelude.Types.Left', E41} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V67) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V52, V59, V62, V67}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35, E36)); {'Idris.TTImp.TTImp.ILocal', E43, E44, E45} -> (fun (V68, V69, V70) -> fun (V71) -> begin (V72 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V70))(V71))), case V72 of {'Idris.Prelude.Types.Left', E46} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V74) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V68, V69, V74}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43, E44, E45)); {'Idris.TTImp.TTImp.IUpdate', E48, E49, E50} -> (fun (V75, V76, V77) -> fun (V78) -> begin (V79 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V77))(V78))), case V79 of {'Idris.Prelude.Types.Left', E51} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V75, V76, V81}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49, E50)); {'Idris.TTImp.TTImp.IApp', E53, E54, E55} -> (fun (V82, V83, V84) -> fun (V85) -> begin (V86 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V83))(V85))), case V86 of {'Idris.Prelude.Types.Left', E56} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V88) -> begin (V89 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V84))(V85))), case V89 of {'Idris.Prelude.Types.Left', E58} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V82, V88, V91}} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E53, E54, E55)); {'Idris.TTImp.TTImp.IAutoApp', E60, E61, E62} -> (fun (V92, V93, V94) -> fun (V95) -> begin (V96 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V93))(V95))), case V96 of {'Idris.Prelude.Types.Left', E63} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V98) -> begin (V99 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V94))(V95))), case V99 of {'Idris.Prelude.Types.Left', E65} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V101) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V92, V98, V101}} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E60, E61, E62)); {'Idris.TTImp.TTImp.INamedApp', E67, E68, E69, E70} -> (fun (V102, V103, V104, V105) -> fun (V106) -> begin (V107 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V103))(V106))), case V107 of {'Idris.Prelude.Types.Left', E71} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V109) -> begin (V110 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V105))(V106))), case V110 of {'Idris.Prelude.Types.Left', E73} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V112) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V102, V109, V104, V112}} end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E67, E68, E69, E70)); {'Idris.TTImp.TTImp.IWithApp', E75, E76, E77} -> (fun (V113, V114, V115) -> ('nested--7490-12936--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V113, V114, [V115 | []])) end(E75, E76, E77)); {'Idris.TTImp.TTImp.IRewrite', E78, E79, E80} -> (fun (V116, V117, V118) -> fun (V119) -> begin (V120 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V117))(V119))), case V120 of {'Idris.Prelude.Types.Left', E81} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V122) -> begin (V123 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V118))(V119))), case V123 of {'Idris.Prelude.Types.Left', E83} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V125) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V116, V122, V125}} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E78, E79, E80)); {'Idris.TTImp.TTImp.IDelayed', E85, E86, E87} -> (fun (V126, V127, V128) -> fun (V129) -> begin (V130 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V128))(V129))), case V130 of {'Idris.Prelude.Types.Left', E88} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V132) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V126, V127, V132}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85, E86, E87)); {'Idris.TTImp.TTImp.IDelay', E90, E91} -> (fun (V133, V134) -> fun (V135) -> begin (V136 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V134))(V135))), case V136 of {'Idris.Prelude.Types.Left', E92} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V138) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V133, V138}} end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90, E91)); {'Idris.TTImp.TTImp.IForce', E94, E95} -> (fun (V139, V140) -> fun (V141) -> begin (V142 = (('nested--7490-12937--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V140))(V141))), case V142 of {'Idris.Prelude.Types.Left', E96} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V144) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V139, V144}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E94, E95)); _ -> fun (V145) -> {'Idris.Prelude.Types.Right', V8} end end.
'nested--7490-12935--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of [] -> V9; [E0 | E1] -> (fun (V11, V12) -> ('nested--7490-12935--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, {'Idris.TTImp.TTImp.IWithApp', V8, V9, V11}, V12)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7490-12936--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of {'Idris.TTImp.TTImp.IWithApp', E14, E15, E16} -> (fun (V11, V12, V13) -> ('nested--7490-12936--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12, [V13 | V10])) end(E14, E15, E16)); _ -> fun (V14) -> case V10 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V8, <<"Badly formed \x{27}with\x{27} application"/utf8>>}, V14)); [E0 | E1] -> (fun (V15, V16) -> begin (V17 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With-app: Matching "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V0)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V9)))))))) end, V14))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--getMatch'(V6, V7, 0, V0, V9))(V14))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V23 = (('un--getHeadLoc'(V9))(V14))), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> begin (V41 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Result: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V28, V29)) end end}, {'Idris.Prelude.Show.MkShow', fun (V30) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V31, V32)) end end}}, V26)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V36, V37)) end end}, {'Idris.Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V39, V40)) end end}}, V33, V34)) end end}, V22)))) end, V14))), case V41 of {'Idris.Prelude.Types.Left', E8} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V43) -> begin (V45 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V25, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V44) -> ('un--getArgMatch'(V8, {'Idris.TTImp.Elab.Check.InExpr'}, 1, V15, V22, V44)) end, V2))))), begin (V103 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With args for RHS: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V50, V51)) end end}, V48)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V55, V56)) end end}, V52, V53)) end end}, {'Idris.Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V58, V59)) end end}}, V47)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V62) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V63) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V63)) end, fun (V64) -> fun (V65) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V64, V65)) end end}, V62)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V68) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V69, V70)) end end}, V66, V67)) end end}, {'Idris.Prelude.Show.MkShow', fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V71)) end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V72, V73)) end end}}, V60, V61)) end end}, V46)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V78)) end, fun (V79) -> fun (V80) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V79, V80)) end end}, V77)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V83) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V84, V85)) end end}, V81, V82)) end end}, {'Idris.Prelude.Show.MkShow', fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V86)) end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V87, V88)) end end}}, V76)) end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V91) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V92)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V93, V94)) end end}, V91)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V97) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V97)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V98, V99)) end end}, V95, V96)) end end}, {'Idris.Prelude.Show.MkShow', fun (V100) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V100)) end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V101, V102)) end end}}, V89, V90)) end end}, V74, V75)) end end}, V2)))) end, V14))), case V103 of {'Idris.Prelude.Types.Left', E10} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V105) -> begin (V106 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New RHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V45)))) end, V14))), case V106 of {'Idris.Prelude.Types.Left', E12} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V108) -> {'Idris.Prelude.Types.Right', ('nested--7490-12935--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V45, V16))} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'nested--6914-12454--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 0 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V10, []}} end; _ -> begin (V12 = (V9 - 1)), fun (V13) -> case V10 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V14, V15, V16) -> begin (V17 = (('nested--6914-12454--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12, V15))(V13))), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, [V16 | V21]}} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V13)) end end end end.
'un--withRHS'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('nested--7490-12937--in--un--wrhs'(V7, V6, V5, V4, V3, V2, V1, V0, V6)).
'un--mergeMatches'(V0, V1, V2, V3, V4) -> case V3 of [] -> {'Idris.Prelude.Types.Right', []}; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('un--mergeMatches'(V0, V1, V2, V6, V4))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V14, V15)) end end}, V7, V11)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V7, V8} | V11]} end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V16) -> begin (V20 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V17) -> case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', 0} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--getMatch'(V0, V1, V2, V8, V16)), V4))), case V20 of {'Idris.Prelude.Types.Left', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Right', V11} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchFail'(V0, V1) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V0, <<"With clause does not match parent"/utf8>>}, V1)).
'un--matchAny'(V0, V1, V2, V3, V4, V5) -> case V4 of [] -> ('un--matchFail'(V2, V5)); [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('un--getMatch'(V0, V1, V3, V8, V9)), fun (V10) -> fun (V11) -> ('un--matchAny'(V0, V1, V2, V3, V7, V11)) end end, V5)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchAll'(V0, V1, V2, V3, V4) -> case V3 of [] -> {'Idris.Prelude.Types.Right', []}; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('un--matchAll'(V0, V1, V2, V6, V4))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> begin (V12 = (('un--getMatch'(V0, V1, V2, V7, V8))(V4))), case V12 of {'Idris.Prelude.Types.Left', E6} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V14) -> ('un--mergeMatches'(V0, V1, V2, ('Idris.Idris2.Prelude.Types.List':'un--++'(V14, V11)), V4)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNewLHS'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V9 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V2))), fun (V10) -> begin (V11 = (('nested--6914-12454--in--un--dropWithArgs'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V3, V8))(V10))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V14, V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V0, V10))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V0, 1, V10))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V0, 0, V7, V10))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V25 = {'Idris.Builtin.MkPair', V14, V15}), case V24 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V26, V27) -> begin (V28 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V0, 0, V14, V10))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> begin (V31 = {'Idris.Builtin.MkPair', V26, V27}), case V30 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V32, V33) -> begin (V34 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V0, V18, V10))), case V34 of {'Idris.Prelude.Types.Left', E16} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V36) -> begin (V37 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parent LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V27)))) end, V10))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Modified LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V33)))) end, V10))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V43 = {'Idris.Builtin.MkPair', V32, V33}), ('case--case block in case block in case block in getNewLHS-12712'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V9, V14, V15, V25, V18, V26, V27, V31, V32, V33, V43, ('Idris.Idris2.Data.List':'un--reverse'(V15)), V10)) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--getMatch'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.IBindVar', E173, E174} -> (fun (V5, V6) -> fun (V7) -> case V4 of {'Idris.TTImp.TTImp.IBindVar', E175, E176} -> (fun (V8, V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V10) -> case V10 of {'Idris.Prelude.Types.Left', E177} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V12) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V6, V4} | []]} end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V13) -> ('un--addAlias'(V0, V1, V8, V5, V13)) end, V7)) end(E175, E176)); _ -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V6, V4} | []]} end end end(E173, E174)); {'Idris.TTImp.TTImp.Implicit', E179, E180} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', []} end end(E179, E180)); {'Idris.TTImp.TTImp.IVar', E181, E182} -> (fun (V17, V18) -> case V18 of {'Idris.Core.Name.NS', E360, E361} -> (fun (V19, V20) -> case V4 of {'Idris.TTImp.TTImp.IVar', E539, E540} -> (fun (V21, V22) -> case V22 of {'Idris.Core.Name.NS', E543, E544} -> (fun (V23, V24) -> fun (V25) -> case case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V24)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V23, V19)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V26) -> case V26 of {'Idris.Prelude.Types.Left', E545} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E545)); {'Idris.Prelude.Types.Right', E546} -> (fun (V28) -> {'Idris.Prelude.Types.Right', []} end(E546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V29) -> ('un--addAlias'(V0, V1, V21, V17, V29)) end, V25)); 0 -> ('un--matchFail'(V21, V25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E543, E544)); _ -> fun (V30) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V22)) of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V31) -> case V31 of {'Idris.Prelude.Types.Left', E541} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E541)); {'Idris.Prelude.Types.Right', E542} -> (fun (V33) -> {'Idris.Prelude.Types.Right', []} end(E542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V34) -> ('un--addAlias'(V0, V1, V21, V17, V34)) end, V30)); 0 -> ('un--matchFail'(V21, V30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E539, E540)); _ -> case V4 of {'Idris.TTImp.TTImp.IVar', E535, E536} -> (fun (V35, V36) -> fun (V37) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V18, V36)) of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V38) -> case V38 of {'Idris.Prelude.Types.Left', E537} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E537)); {'Idris.Prelude.Types.Right', E538} -> (fun (V40) -> {'Idris.Prelude.Types.Right', []} end(E538)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V41) -> ('un--addAlias'(V0, V1, V35, V17, V41)) end, V37)); 0 -> ('un--matchFail'(V35, V37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E535, E536)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E468, E469, E470, E471} -> (fun (V42, V43, V44, V45) -> fun (V46) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V43, V4} | [{'Idris.Builtin.MkPair', V45, V45} | []]], V46)) end end(E468, E469, E470, E471)); {'Idris.TTImp.TTImp.IAutoApp', E472, E473, E474} -> (fun (V47, V48, V49) -> fun (V50) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V48, V4} | [{'Idris.Builtin.MkPair', V49, V49} | []]], V50)) end end(E472, E473, E474)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E461, E462, E463, E464} -> (fun (V51, V52, V53, V54) -> fun (V55) -> ('un--matchFail'(V51, V55)) end end(E461, E462, E463, E464)); {'Idris.TTImp.TTImp.IAutoApp', E465, E466, E467} -> (fun (V56, V57, V58) -> fun (V59) -> ('un--matchFail'(V56, V59)) end end(E465, E466, E467)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E426, E427, E428} -> (fun (V60, V61, V62) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E440, E441, E442} -> (fun (V63, V64, V65) -> fun (V66) -> ('un--matchAny'(V0, V1, V60, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V62, V65)), V66)) end end(E440, E441, E442)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E435, E436, E437, E438, E439} -> (fun (V67, V68, V69, V70, V71) -> ('un--getMatch'(V0, V1, V2, V3, V71)) end(E435, E436, E437, E438, E439)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E429} -> (fun (V72) -> fun (V73) -> case V4 of {'Idris.TTImp.TTImp.IType', E430} -> (fun (V74) -> {'Idris.Prelude.Types.Right', []} end(E430)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V73)) end end end(E429)); {'Idris.TTImp.TTImp.IPrimVal', E431, E432} -> (fun (V75, V76) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E433, E434} -> (fun (V77, V78) -> fun (V79) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V76, V78)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V75, V79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E433, E434)); _ -> fun (V80) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V80)) end end end(E431, E432)); _ -> fun (V81) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V81)) end end end end end(E426, E427, E428)); {'Idris.TTImp.TTImp.IAs', E443, E444, E445, E446, E447} -> (fun (V82, V83, V84, V85, V86) -> case V85 of {'Idris.Core.Name.UN', E448} -> (fun (V87) -> fun (V88) -> case V4 of {'Idris.TTImp.TTImp.IAs', E451, E452, E453, E454, E455} -> (fun (V89, V90, V91, V92, V93) -> case V92 of {'Idris.Core.Name.UN', E458} -> (fun (V94) -> begin (V95 = (('un--getMatch'(V0, V1, V2, V86, V93))(V88))), case V95 of {'Idris.Prelude.Types.Left', E459} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E459)); {'Idris.Prelude.Types.Right', E460} -> (fun (V97) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V87, {'Idris.TTImp.TTImp.IBindVar', V90, V94}} | V97], V88)) end(E460)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E458)); _ -> begin (V98 = (('un--getMatch'(V0, V1, V2, V86, V4))(V88))), case V98 of {'Idris.Prelude.Types.Left', E456} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E456)); {'Idris.Prelude.Types.Right', E457} -> (fun (V100) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V87, V4} | V100], V88)) end(E457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E451, E452, E453, E454, E455)); _ -> begin (V101 = (('un--getMatch'(V0, V1, V2, V86, V4))(V88))), case V101 of {'Idris.Prelude.Types.Left', E449} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E449)); {'Idris.Prelude.Types.Right', E450} -> (fun (V103) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V87, V4} | V103], V88)) end(E450)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E448)); _ -> ('un--getMatch'(V0, V1, V2, V86, V4)) end end(E443, E444, E445, E446, E447)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E421, E422, E423, E424, E425} -> (fun (V104, V105, V106, V107, V108) -> ('un--getMatch'(V0, V1, V2, V3, V108)) end(E421, E422, E423, E424, E425)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E415} -> (fun (V109) -> fun (V110) -> case V4 of {'Idris.TTImp.TTImp.IType', E416} -> (fun (V111) -> {'Idris.Prelude.Types.Right', []} end(E416)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V110)) end end end(E415)); {'Idris.TTImp.TTImp.IPrimVal', E417, E418} -> (fun (V112, V113) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E419, E420} -> (fun (V114, V115) -> fun (V116) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V113, V115)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V112, V116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E419, E420)); _ -> fun (V117) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V117)) end end end(E417, E418)); _ -> fun (V118) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V118)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E528, E529, E530, E531} -> (fun (V119, V120, V121, V122) -> ('un--getMatch'(V0, V1, 0, V120, V120)) end(E528, E529, E530, E531)); {'Idris.TTImp.TTImp.IAutoApp', E532, E533, E534} -> (fun (V123, V124, V125) -> ('un--getMatch'(V0, V1, 0, V124, V124)) end(E532, E533, E534)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E521, E522, E523, E524} -> (fun (V126, V127, V128, V129) -> fun (V130) -> ('un--matchFail'(V126, V130)) end end(E521, E522, E523, E524)); {'Idris.TTImp.TTImp.IAutoApp', E525, E526, E527} -> (fun (V131, V132, V133) -> fun (V134) -> ('un--matchFail'(V131, V134)) end end(E525, E526, E527)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E486, E487, E488} -> (fun (V135, V136, V137) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E500, E501, E502} -> (fun (V138, V139, V140) -> fun (V141) -> ('un--matchAny'(V0, V1, V135, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V137, V140)), V141)) end end(E500, E501, E502)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E495, E496, E497, E498, E499} -> (fun (V142, V143, V144, V145, V146) -> ('un--getMatch'(V0, V1, V2, V3, V146)) end(E495, E496, E497, E498, E499)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E489} -> (fun (V147) -> fun (V148) -> case V4 of {'Idris.TTImp.TTImp.IType', E490} -> (fun (V149) -> {'Idris.Prelude.Types.Right', []} end(E490)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V148)) end end end(E489)); {'Idris.TTImp.TTImp.IPrimVal', E491, E492} -> (fun (V150, V151) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E493, E494} -> (fun (V152, V153) -> fun (V154) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V151, V153)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V150, V154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E493, E494)); _ -> fun (V155) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V155)) end end end(E491, E492)); _ -> fun (V156) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V156)) end end end end end(E486, E487, E488)); {'Idris.TTImp.TTImp.IAs', E503, E504, E505, E506, E507} -> (fun (V157, V158, V159, V160, V161) -> case V160 of {'Idris.Core.Name.UN', E508} -> (fun (V162) -> fun (V163) -> case V4 of {'Idris.TTImp.TTImp.IAs', E511, E512, E513, E514, E515} -> (fun (V164, V165, V166, V167, V168) -> case V167 of {'Idris.Core.Name.UN', E518} -> (fun (V169) -> begin (V170 = (('un--getMatch'(V0, V1, V2, V161, V168))(V163))), case V170 of {'Idris.Prelude.Types.Left', E519} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E519)); {'Idris.Prelude.Types.Right', E520} -> (fun (V172) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V162, {'Idris.TTImp.TTImp.IBindVar', V165, V169}} | V172], V163)) end(E520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E518)); _ -> begin (V173 = (('un--getMatch'(V0, V1, V2, V161, V4))(V163))), case V173 of {'Idris.Prelude.Types.Left', E516} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E516)); {'Idris.Prelude.Types.Right', E517} -> (fun (V175) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V162, V4} | V175], V163)) end(E517)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E511, E512, E513, E514, E515)); _ -> begin (V176 = (('un--getMatch'(V0, V1, V2, V161, V4))(V163))), case V176 of {'Idris.Prelude.Types.Left', E509} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V178) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V162, V4} | V178], V163)) end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E508)); _ -> ('un--getMatch'(V0, V1, V2, V161, V4)) end end(E503, E504, E505, E506, E507)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E481, E482, E483, E484, E485} -> (fun (V179, V180, V181, V182, V183) -> ('un--getMatch'(V0, V1, V2, V3, V183)) end(E481, E482, E483, E484, E485)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E475} -> (fun (V184) -> fun (V185) -> case V4 of {'Idris.TTImp.TTImp.IType', E476} -> (fun (V186) -> {'Idris.Prelude.Types.Right', []} end(E476)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V185)) end end end(E475)); {'Idris.TTImp.TTImp.IPrimVal', E477, E478} -> (fun (V187, V188) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E479, E480} -> (fun (V189, V190) -> fun (V191) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V188, V190)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V187, V191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E479, E480)); _ -> fun (V192) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V192)) end end end(E477, E478)); _ -> fun (V193) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V193)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E408, E409, E410, E411} -> (fun (V194, V195, V196, V197) -> fun (V198) -> ('un--matchFail'(V194, V198)) end end(E408, E409, E410, E411)); {'Idris.TTImp.TTImp.IAutoApp', E412, E413, E414} -> (fun (V199, V200, V201) -> fun (V202) -> ('un--matchFail'(V199, V202)) end end(E412, E413, E414)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E373, E374, E375} -> (fun (V203, V204, V205) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E387, E388, E389} -> (fun (V206, V207, V208) -> fun (V209) -> ('un--matchAny'(V0, V1, V203, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V205, V208)), V209)) end end(E387, E388, E389)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E382, E383, E384, E385, E386} -> (fun (V210, V211, V212, V213, V214) -> ('un--getMatch'(V0, V1, V2, V3, V214)) end(E382, E383, E384, E385, E386)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E376} -> (fun (V215) -> fun (V216) -> case V4 of {'Idris.TTImp.TTImp.IType', E377} -> (fun (V217) -> {'Idris.Prelude.Types.Right', []} end(E377)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V216)) end end end(E376)); {'Idris.TTImp.TTImp.IPrimVal', E378, E379} -> (fun (V218, V219) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E380, E381} -> (fun (V220, V221) -> fun (V222) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V219, V221)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V218, V222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E380, E381)); _ -> fun (V223) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V223)) end end end(E378, E379)); _ -> fun (V224) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V224)) end end end end end(E373, E374, E375)); {'Idris.TTImp.TTImp.IAs', E390, E391, E392, E393, E394} -> (fun (V225, V226, V227, V228, V229) -> case V228 of {'Idris.Core.Name.UN', E395} -> (fun (V230) -> fun (V231) -> case V4 of {'Idris.TTImp.TTImp.IAs', E398, E399, E400, E401, E402} -> (fun (V232, V233, V234, V235, V236) -> case V235 of {'Idris.Core.Name.UN', E405} -> (fun (V237) -> begin (V238 = (('un--getMatch'(V0, V1, V2, V229, V236))(V231))), case V238 of {'Idris.Prelude.Types.Left', E406} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E406)); {'Idris.Prelude.Types.Right', E407} -> (fun (V240) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V230, {'Idris.TTImp.TTImp.IBindVar', V233, V237}} | V240], V231)) end(E407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E405)); _ -> begin (V241 = (('un--getMatch'(V0, V1, V2, V229, V4))(V231))), case V241 of {'Idris.Prelude.Types.Left', E403} -> (fun (V242) -> {'Idris.Prelude.Types.Left', V242} end(E403)); {'Idris.Prelude.Types.Right', E404} -> (fun (V243) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V230, V4} | V243], V231)) end(E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E398, E399, E400, E401, E402)); _ -> begin (V244 = (('un--getMatch'(V0, V1, V2, V229, V4))(V231))), case V244 of {'Idris.Prelude.Types.Left', E396} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E396)); {'Idris.Prelude.Types.Right', E397} -> (fun (V246) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V230, V4} | V246], V231)) end(E397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E395)); _ -> ('un--getMatch'(V0, V1, V2, V229, V4)) end end(E390, E391, E392, E393, E394)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E368, E369, E370, E371, E372} -> (fun (V247, V248, V249, V250, V251) -> ('un--getMatch'(V0, V1, V2, V3, V251)) end(E368, E369, E370, E371, E372)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E362} -> (fun (V252) -> fun (V253) -> case V4 of {'Idris.TTImp.TTImp.IType', E363} -> (fun (V254) -> {'Idris.Prelude.Types.Right', []} end(E363)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V253)) end end end(E362)); {'Idris.TTImp.TTImp.IPrimVal', E364, E365} -> (fun (V255, V256) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E366, E367} -> (fun (V257, V258) -> fun (V259) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V256, V258)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V255, V259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E366, E367)); _ -> fun (V260) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V260)) end end end(E364, E365)); _ -> fun (V261) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V261)) end end end end end end end end end(E360, E361)); _ -> case V4 of {'Idris.TTImp.TTImp.IVar', E356, E357} -> (fun (V262, V263) -> fun (V264) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V18, V263)) of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V265) -> case V265 of {'Idris.Prelude.Types.Left', E358} -> (fun (V266) -> {'Idris.Prelude.Types.Left', V266} end(E358)); {'Idris.Prelude.Types.Right', E359} -> (fun (V267) -> {'Idris.Prelude.Types.Right', []} end(E359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V268) -> ('un--addAlias'(V0, V1, V262, V17, V268)) end, V264)); 0 -> ('un--matchFail'(V262, V264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E356, E357)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E289, E290, E291, E292} -> (fun (V269, V270, V271, V272) -> fun (V273) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V270, V4} | [{'Idris.Builtin.MkPair', V272, V272} | []]], V273)) end end(E289, E290, E291, E292)); {'Idris.TTImp.TTImp.IAutoApp', E293, E294, E295} -> (fun (V274, V275, V276) -> fun (V277) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V275, V4} | [{'Idris.Builtin.MkPair', V276, V276} | []]], V277)) end end(E293, E294, E295)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E282, E283, E284, E285} -> (fun (V278, V279, V280, V281) -> fun (V282) -> ('un--matchFail'(V278, V282)) end end(E282, E283, E284, E285)); {'Idris.TTImp.TTImp.IAutoApp', E286, E287, E288} -> (fun (V283, V284, V285) -> fun (V286) -> ('un--matchFail'(V283, V286)) end end(E286, E287, E288)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E247, E248, E249} -> (fun (V287, V288, V289) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E261, E262, E263} -> (fun (V290, V291, V292) -> fun (V293) -> ('un--matchAny'(V0, V1, V287, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V289, V292)), V293)) end end(E261, E262, E263)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E256, E257, E258, E259, E260} -> (fun (V294, V295, V296, V297, V298) -> ('un--getMatch'(V0, V1, V2, V3, V298)) end(E256, E257, E258, E259, E260)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E250} -> (fun (V299) -> fun (V300) -> case V4 of {'Idris.TTImp.TTImp.IType', E251} -> (fun (V301) -> {'Idris.Prelude.Types.Right', []} end(E251)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V300)) end end end(E250)); {'Idris.TTImp.TTImp.IPrimVal', E252, E253} -> (fun (V302, V303) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E254, E255} -> (fun (V304, V305) -> fun (V306) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V303, V305)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V302, V306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E254, E255)); _ -> fun (V307) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V307)) end end end(E252, E253)); _ -> fun (V308) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V308)) end end end end end(E247, E248, E249)); {'Idris.TTImp.TTImp.IAs', E264, E265, E266, E267, E268} -> (fun (V309, V310, V311, V312, V313) -> case V312 of {'Idris.Core.Name.UN', E269} -> (fun (V314) -> fun (V315) -> case V4 of {'Idris.TTImp.TTImp.IAs', E272, E273, E274, E275, E276} -> (fun (V316, V317, V318, V319, V320) -> case V319 of {'Idris.Core.Name.UN', E279} -> (fun (V321) -> begin (V322 = (('un--getMatch'(V0, V1, V2, V313, V320))(V315))), case V322 of {'Idris.Prelude.Types.Left', E280} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V324) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V314, {'Idris.TTImp.TTImp.IBindVar', V317, V321}} | V324], V315)) end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E279)); _ -> begin (V325 = (('un--getMatch'(V0, V1, V2, V313, V4))(V315))), case V325 of {'Idris.Prelude.Types.Left', E277} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V327) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V314, V4} | V327], V315)) end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E272, E273, E274, E275, E276)); _ -> begin (V328 = (('un--getMatch'(V0, V1, V2, V313, V4))(V315))), case V328 of {'Idris.Prelude.Types.Left', E270} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V330) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V314, V4} | V330], V315)) end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E269)); _ -> ('un--getMatch'(V0, V1, V2, V313, V4)) end end(E264, E265, E266, E267, E268)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E242, E243, E244, E245, E246} -> (fun (V331, V332, V333, V334, V335) -> ('un--getMatch'(V0, V1, V2, V3, V335)) end(E242, E243, E244, E245, E246)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E236} -> (fun (V336) -> fun (V337) -> case V4 of {'Idris.TTImp.TTImp.IType', E237} -> (fun (V338) -> {'Idris.Prelude.Types.Right', []} end(E237)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V337)) end end end(E236)); {'Idris.TTImp.TTImp.IPrimVal', E238, E239} -> (fun (V339, V340) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E240, E241} -> (fun (V341, V342) -> fun (V343) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V340, V342)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V339, V343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240, E241)); _ -> fun (V344) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V344)) end end end(E238, E239)); _ -> fun (V345) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V345)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E349, E350, E351, E352} -> (fun (V346, V347, V348, V349) -> ('un--getMatch'(V0, V1, 0, V347, V347)) end(E349, E350, E351, E352)); {'Idris.TTImp.TTImp.IAutoApp', E353, E354, E355} -> (fun (V350, V351, V352) -> ('un--getMatch'(V0, V1, 0, V351, V351)) end(E353, E354, E355)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E342, E343, E344, E345} -> (fun (V353, V354, V355, V356) -> fun (V357) -> ('un--matchFail'(V353, V357)) end end(E342, E343, E344, E345)); {'Idris.TTImp.TTImp.IAutoApp', E346, E347, E348} -> (fun (V358, V359, V360) -> fun (V361) -> ('un--matchFail'(V358, V361)) end end(E346, E347, E348)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E307, E308, E309} -> (fun (V362, V363, V364) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E321, E322, E323} -> (fun (V365, V366, V367) -> fun (V368) -> ('un--matchAny'(V0, V1, V362, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V364, V367)), V368)) end end(E321, E322, E323)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E316, E317, E318, E319, E320} -> (fun (V369, V370, V371, V372, V373) -> ('un--getMatch'(V0, V1, V2, V3, V373)) end(E316, E317, E318, E319, E320)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E310} -> (fun (V374) -> fun (V375) -> case V4 of {'Idris.TTImp.TTImp.IType', E311} -> (fun (V376) -> {'Idris.Prelude.Types.Right', []} end(E311)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V375)) end end end(E310)); {'Idris.TTImp.TTImp.IPrimVal', E312, E313} -> (fun (V377, V378) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E314, E315} -> (fun (V379, V380) -> fun (V381) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V378, V380)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V377, V381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E314, E315)); _ -> fun (V382) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V382)) end end end(E312, E313)); _ -> fun (V383) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V383)) end end end end end(E307, E308, E309)); {'Idris.TTImp.TTImp.IAs', E324, E325, E326, E327, E328} -> (fun (V384, V385, V386, V387, V388) -> case V387 of {'Idris.Core.Name.UN', E329} -> (fun (V389) -> fun (V390) -> case V4 of {'Idris.TTImp.TTImp.IAs', E332, E333, E334, E335, E336} -> (fun (V391, V392, V393, V394, V395) -> case V394 of {'Idris.Core.Name.UN', E339} -> (fun (V396) -> begin (V397 = (('un--getMatch'(V0, V1, V2, V388, V395))(V390))), case V397 of {'Idris.Prelude.Types.Left', E340} -> (fun (V398) -> {'Idris.Prelude.Types.Left', V398} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V399) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V389, {'Idris.TTImp.TTImp.IBindVar', V392, V396}} | V399], V390)) end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E339)); _ -> begin (V400 = (('un--getMatch'(V0, V1, V2, V388, V4))(V390))), case V400 of {'Idris.Prelude.Types.Left', E337} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E337)); {'Idris.Prelude.Types.Right', E338} -> (fun (V402) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V389, V4} | V402], V390)) end(E338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E332, E333, E334, E335, E336)); _ -> begin (V403 = (('un--getMatch'(V0, V1, V2, V388, V4))(V390))), case V403 of {'Idris.Prelude.Types.Left', E330} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E330)); {'Idris.Prelude.Types.Right', E331} -> (fun (V405) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V389, V4} | V405], V390)) end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E329)); _ -> ('un--getMatch'(V0, V1, V2, V388, V4)) end end(E324, E325, E326, E327, E328)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E302, E303, E304, E305, E306} -> (fun (V406, V407, V408, V409, V410) -> ('un--getMatch'(V0, V1, V2, V3, V410)) end(E302, E303, E304, E305, E306)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E296} -> (fun (V411) -> fun (V412) -> case V4 of {'Idris.TTImp.TTImp.IType', E297} -> (fun (V413) -> {'Idris.Prelude.Types.Right', []} end(E297)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V412)) end end end(E296)); {'Idris.TTImp.TTImp.IPrimVal', E298, E299} -> (fun (V414, V415) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E300, E301} -> (fun (V416, V417) -> fun (V418) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V415, V417)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V414, V418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E300, E301)); _ -> fun (V419) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V419)) end end end(E298, E299)); _ -> fun (V420) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V420)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E229, E230, E231, E232} -> (fun (V421, V422, V423, V424) -> fun (V425) -> ('un--matchFail'(V421, V425)) end end(E229, E230, E231, E232)); {'Idris.TTImp.TTImp.IAutoApp', E233, E234, E235} -> (fun (V426, V427, V428) -> fun (V429) -> ('un--matchFail'(V426, V429)) end end(E233, E234, E235)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E194, E195, E196} -> (fun (V430, V431, V432) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E208, E209, E210} -> (fun (V433, V434, V435) -> fun (V436) -> ('un--matchAny'(V0, V1, V430, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V432, V435)), V436)) end end(E208, E209, E210)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E203, E204, E205, E206, E207} -> (fun (V437, V438, V439, V440, V441) -> ('un--getMatch'(V0, V1, V2, V3, V441)) end(E203, E204, E205, E206, E207)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E197} -> (fun (V442) -> fun (V443) -> case V4 of {'Idris.TTImp.TTImp.IType', E198} -> (fun (V444) -> {'Idris.Prelude.Types.Right', []} end(E198)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V443)) end end end(E197)); {'Idris.TTImp.TTImp.IPrimVal', E199, E200} -> (fun (V445, V446) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E201, E202} -> (fun (V447, V448) -> fun (V449) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V446, V448)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V445, V449)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201, E202)); _ -> fun (V450) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V450)) end end end(E199, E200)); _ -> fun (V451) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V451)) end end end end end(E194, E195, E196)); {'Idris.TTImp.TTImp.IAs', E211, E212, E213, E214, E215} -> (fun (V452, V453, V454, V455, V456) -> case V455 of {'Idris.Core.Name.UN', E216} -> (fun (V457) -> fun (V458) -> case V4 of {'Idris.TTImp.TTImp.IAs', E219, E220, E221, E222, E223} -> (fun (V459, V460, V461, V462, V463) -> case V462 of {'Idris.Core.Name.UN', E226} -> (fun (V464) -> begin (V465 = (('un--getMatch'(V0, V1, V2, V456, V463))(V458))), case V465 of {'Idris.Prelude.Types.Left', E227} -> (fun (V466) -> {'Idris.Prelude.Types.Left', V466} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V467) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V457, {'Idris.TTImp.TTImp.IBindVar', V460, V464}} | V467], V458)) end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E226)); _ -> begin (V468 = (('un--getMatch'(V0, V1, V2, V456, V4))(V458))), case V468 of {'Idris.Prelude.Types.Left', E224} -> (fun (V469) -> {'Idris.Prelude.Types.Left', V469} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V470) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V457, V4} | V470], V458)) end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E219, E220, E221, E222, E223)); _ -> begin (V471 = (('un--getMatch'(V0, V1, V2, V456, V4))(V458))), case V471 of {'Idris.Prelude.Types.Left', E217} -> (fun (V472) -> {'Idris.Prelude.Types.Left', V472} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V473) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V457, V4} | V473], V458)) end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E216)); _ -> ('un--getMatch'(V0, V1, V2, V456, V4)) end end(E211, E212, E213, E214, E215)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E189, E190, E191, E192, E193} -> (fun (V474, V475, V476, V477, V478) -> ('un--getMatch'(V0, V1, V2, V3, V478)) end(E189, E190, E191, E192, E193)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E183} -> (fun (V479) -> fun (V480) -> case V4 of {'Idris.TTImp.TTImp.IType', E184} -> (fun (V481) -> {'Idris.Prelude.Types.Right', []} end(E184)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V480)) end end end(E183)); {'Idris.TTImp.TTImp.IPrimVal', E185, E186} -> (fun (V482, V483) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E187, E188} -> (fun (V484, V485) -> fun (V486) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V483, V485)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V482, V486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E187, E188)); _ -> fun (V487) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V487)) end end end(E185, E186)); _ -> fun (V488) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V488)) end end end end end end end end end(E181, E182)); {'Idris.TTImp.TTImp.IPi', E547, E548, E549, E550, E551, E552} -> (fun (V489, V490, V491, V492, V493, V494) -> case V4 of {'Idris.TTImp.TTImp.IPi', E726, E727, E728, E729, E730, E731} -> (fun (V495, V496, V497, V498, V499, V500) -> case case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V490, V496)) of 1 -> case ('Idris.Idris2.Core.TT':'un--eqPiInfoBy'(fun (V501) -> fun (V502) -> 1 end end, V491, V497)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Idris.Prelude.EqOrd.MkEq', fun (V503) -> fun (V504) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V503, V504)) end end, fun (V505) -> fun (V506) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V505, V506)) end end}, V492, V498)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> fun (V507) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V493, V499} | [{'Idris.Builtin.MkPair', V494, V500} | []]], V507)) end; 0 -> fun (V508) -> ('un--matchFail'(V495, V508)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E726, E727, E728, E729, E730, E731)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E659, E660, E661, E662} -> (fun (V509, V510, V511, V512) -> fun (V513) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V510, V4} | [{'Idris.Builtin.MkPair', V512, V512} | []]], V513)) end end(E659, E660, E661, E662)); {'Idris.TTImp.TTImp.IAutoApp', E663, E664, E665} -> (fun (V514, V515, V516) -> fun (V517) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V515, V4} | [{'Idris.Builtin.MkPair', V516, V516} | []]], V517)) end end(E663, E664, E665)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E652, E653, E654, E655} -> (fun (V518, V519, V520, V521) -> fun (V522) -> ('un--matchFail'(V518, V522)) end end(E652, E653, E654, E655)); {'Idris.TTImp.TTImp.IAutoApp', E656, E657, E658} -> (fun (V523, V524, V525) -> fun (V526) -> ('un--matchFail'(V523, V526)) end end(E656, E657, E658)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E617, E618, E619} -> (fun (V527, V528, V529) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E631, E632, E633} -> (fun (V530, V531, V532) -> fun (V533) -> ('un--matchAny'(V0, V1, V527, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V529, V532)), V533)) end end(E631, E632, E633)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E626, E627, E628, E629, E630} -> (fun (V534, V535, V536, V537, V538) -> ('un--getMatch'(V0, V1, V2, V3, V538)) end(E626, E627, E628, E629, E630)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E620} -> (fun (V539) -> fun (V540) -> case V4 of {'Idris.TTImp.TTImp.IType', E621} -> (fun (V541) -> {'Idris.Prelude.Types.Right', []} end(E621)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V540)) end end end(E620)); {'Idris.TTImp.TTImp.IPrimVal', E622, E623} -> (fun (V542, V543) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E624, E625} -> (fun (V544, V545) -> fun (V546) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V543, V545)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V542, V546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E624, E625)); _ -> fun (V547) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V547)) end end end(E622, E623)); _ -> fun (V548) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V548)) end end end end end(E617, E618, E619)); {'Idris.TTImp.TTImp.IAs', E634, E635, E636, E637, E638} -> (fun (V549, V550, V551, V552, V553) -> case V552 of {'Idris.Core.Name.UN', E639} -> (fun (V554) -> fun (V555) -> case V4 of {'Idris.TTImp.TTImp.IAs', E642, E643, E644, E645, E646} -> (fun (V556, V557, V558, V559, V560) -> case V559 of {'Idris.Core.Name.UN', E649} -> (fun (V561) -> begin (V562 = (('un--getMatch'(V0, V1, V2, V553, V560))(V555))), case V562 of {'Idris.Prelude.Types.Left', E650} -> (fun (V563) -> {'Idris.Prelude.Types.Left', V563} end(E650)); {'Idris.Prelude.Types.Right', E651} -> (fun (V564) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V554, {'Idris.TTImp.TTImp.IBindVar', V557, V561}} | V564], V555)) end(E651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E649)); _ -> begin (V565 = (('un--getMatch'(V0, V1, V2, V553, V4))(V555))), case V565 of {'Idris.Prelude.Types.Left', E647} -> (fun (V566) -> {'Idris.Prelude.Types.Left', V566} end(E647)); {'Idris.Prelude.Types.Right', E648} -> (fun (V567) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V554, V4} | V567], V555)) end(E648)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E642, E643, E644, E645, E646)); _ -> begin (V568 = (('un--getMatch'(V0, V1, V2, V553, V4))(V555))), case V568 of {'Idris.Prelude.Types.Left', E640} -> (fun (V569) -> {'Idris.Prelude.Types.Left', V569} end(E640)); {'Idris.Prelude.Types.Right', E641} -> (fun (V570) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V554, V4} | V570], V555)) end(E641)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E639)); _ -> ('un--getMatch'(V0, V1, V2, V553, V4)) end end(E634, E635, E636, E637, E638)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E612, E613, E614, E615, E616} -> (fun (V571, V572, V573, V574, V575) -> ('un--getMatch'(V0, V1, V2, V3, V575)) end(E612, E613, E614, E615, E616)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E606} -> (fun (V576) -> fun (V577) -> case V4 of {'Idris.TTImp.TTImp.IType', E607} -> (fun (V578) -> {'Idris.Prelude.Types.Right', []} end(E607)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V577)) end end end(E606)); {'Idris.TTImp.TTImp.IPrimVal', E608, E609} -> (fun (V579, V580) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E610, E611} -> (fun (V581, V582) -> fun (V583) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V580, V582)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V579, V583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E610, E611)); _ -> fun (V584) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V584)) end end end(E608, E609)); _ -> fun (V585) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V585)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E719, E720, E721, E722} -> (fun (V586, V587, V588, V589) -> ('un--getMatch'(V0, V1, 0, V587, V587)) end(E719, E720, E721, E722)); {'Idris.TTImp.TTImp.IAutoApp', E723, E724, E725} -> (fun (V590, V591, V592) -> ('un--getMatch'(V0, V1, 0, V591, V591)) end(E723, E724, E725)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E712, E713, E714, E715} -> (fun (V593, V594, V595, V596) -> fun (V597) -> ('un--matchFail'(V593, V597)) end end(E712, E713, E714, E715)); {'Idris.TTImp.TTImp.IAutoApp', E716, E717, E718} -> (fun (V598, V599, V600) -> fun (V601) -> ('un--matchFail'(V598, V601)) end end(E716, E717, E718)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E677, E678, E679} -> (fun (V602, V603, V604) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E691, E692, E693} -> (fun (V605, V606, V607) -> fun (V608) -> ('un--matchAny'(V0, V1, V602, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V604, V607)), V608)) end end(E691, E692, E693)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E686, E687, E688, E689, E690} -> (fun (V609, V610, V611, V612, V613) -> ('un--getMatch'(V0, V1, V2, V3, V613)) end(E686, E687, E688, E689, E690)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E680} -> (fun (V614) -> fun (V615) -> case V4 of {'Idris.TTImp.TTImp.IType', E681} -> (fun (V616) -> {'Idris.Prelude.Types.Right', []} end(E681)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V615)) end end end(E680)); {'Idris.TTImp.TTImp.IPrimVal', E682, E683} -> (fun (V617, V618) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E684, E685} -> (fun (V619, V620) -> fun (V621) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V618, V620)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V617, V621)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E684, E685)); _ -> fun (V622) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V622)) end end end(E682, E683)); _ -> fun (V623) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V623)) end end end end end(E677, E678, E679)); {'Idris.TTImp.TTImp.IAs', E694, E695, E696, E697, E698} -> (fun (V624, V625, V626, V627, V628) -> case V627 of {'Idris.Core.Name.UN', E699} -> (fun (V629) -> fun (V630) -> case V4 of {'Idris.TTImp.TTImp.IAs', E702, E703, E704, E705, E706} -> (fun (V631, V632, V633, V634, V635) -> case V634 of {'Idris.Core.Name.UN', E709} -> (fun (V636) -> begin (V637 = (('un--getMatch'(V0, V1, V2, V628, V635))(V630))), case V637 of {'Idris.Prelude.Types.Left', E710} -> (fun (V638) -> {'Idris.Prelude.Types.Left', V638} end(E710)); {'Idris.Prelude.Types.Right', E711} -> (fun (V639) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V629, {'Idris.TTImp.TTImp.IBindVar', V632, V636}} | V639], V630)) end(E711)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E709)); _ -> begin (V640 = (('un--getMatch'(V0, V1, V2, V628, V4))(V630))), case V640 of {'Idris.Prelude.Types.Left', E707} -> (fun (V641) -> {'Idris.Prelude.Types.Left', V641} end(E707)); {'Idris.Prelude.Types.Right', E708} -> (fun (V642) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V629, V4} | V642], V630)) end(E708)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E702, E703, E704, E705, E706)); _ -> begin (V643 = (('un--getMatch'(V0, V1, V2, V628, V4))(V630))), case V643 of {'Idris.Prelude.Types.Left', E700} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E700)); {'Idris.Prelude.Types.Right', E701} -> (fun (V645) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V629, V4} | V645], V630)) end(E701)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E699)); _ -> ('un--getMatch'(V0, V1, V2, V628, V4)) end end(E694, E695, E696, E697, E698)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E672, E673, E674, E675, E676} -> (fun (V646, V647, V648, V649, V650) -> ('un--getMatch'(V0, V1, V2, V3, V650)) end(E672, E673, E674, E675, E676)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E666} -> (fun (V651) -> fun (V652) -> case V4 of {'Idris.TTImp.TTImp.IType', E667} -> (fun (V653) -> {'Idris.Prelude.Types.Right', []} end(E667)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V652)) end end end(E666)); {'Idris.TTImp.TTImp.IPrimVal', E668, E669} -> (fun (V654, V655) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E670, E671} -> (fun (V656, V657) -> fun (V658) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V655, V657)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V654, V658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E670, E671)); _ -> fun (V659) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V659)) end end end(E668, E669)); _ -> fun (V660) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V660)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E599, E600, E601, E602} -> (fun (V661, V662, V663, V664) -> fun (V665) -> ('un--matchFail'(V661, V665)) end end(E599, E600, E601, E602)); {'Idris.TTImp.TTImp.IAutoApp', E603, E604, E605} -> (fun (V666, V667, V668) -> fun (V669) -> ('un--matchFail'(V666, V669)) end end(E603, E604, E605)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E564, E565, E566} -> (fun (V670, V671, V672) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E578, E579, E580} -> (fun (V673, V674, V675) -> fun (V676) -> ('un--matchAny'(V0, V1, V670, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V672, V675)), V676)) end end(E578, E579, E580)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E573, E574, E575, E576, E577} -> (fun (V677, V678, V679, V680, V681) -> ('un--getMatch'(V0, V1, V2, V3, V681)) end(E573, E574, E575, E576, E577)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E567} -> (fun (V682) -> fun (V683) -> case V4 of {'Idris.TTImp.TTImp.IType', E568} -> (fun (V684) -> {'Idris.Prelude.Types.Right', []} end(E568)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V683)) end end end(E567)); {'Idris.TTImp.TTImp.IPrimVal', E569, E570} -> (fun (V685, V686) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E571, E572} -> (fun (V687, V688) -> fun (V689) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V686, V688)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V685, V689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E571, E572)); _ -> fun (V690) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V690)) end end end(E569, E570)); _ -> fun (V691) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V691)) end end end end end(E564, E565, E566)); {'Idris.TTImp.TTImp.IAs', E581, E582, E583, E584, E585} -> (fun (V692, V693, V694, V695, V696) -> case V695 of {'Idris.Core.Name.UN', E586} -> (fun (V697) -> fun (V698) -> case V4 of {'Idris.TTImp.TTImp.IAs', E589, E590, E591, E592, E593} -> (fun (V699, V700, V701, V702, V703) -> case V702 of {'Idris.Core.Name.UN', E596} -> (fun (V704) -> begin (V705 = (('un--getMatch'(V0, V1, V2, V696, V703))(V698))), case V705 of {'Idris.Prelude.Types.Left', E597} -> (fun (V706) -> {'Idris.Prelude.Types.Left', V706} end(E597)); {'Idris.Prelude.Types.Right', E598} -> (fun (V707) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V697, {'Idris.TTImp.TTImp.IBindVar', V700, V704}} | V707], V698)) end(E598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E596)); _ -> begin (V708 = (('un--getMatch'(V0, V1, V2, V696, V4))(V698))), case V708 of {'Idris.Prelude.Types.Left', E594} -> (fun (V709) -> {'Idris.Prelude.Types.Left', V709} end(E594)); {'Idris.Prelude.Types.Right', E595} -> (fun (V710) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V697, V4} | V710], V698)) end(E595)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E589, E590, E591, E592, E593)); _ -> begin (V711 = (('un--getMatch'(V0, V1, V2, V696, V4))(V698))), case V711 of {'Idris.Prelude.Types.Left', E587} -> (fun (V712) -> {'Idris.Prelude.Types.Left', V712} end(E587)); {'Idris.Prelude.Types.Right', E588} -> (fun (V713) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V697, V4} | V713], V698)) end(E588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E586)); _ -> ('un--getMatch'(V0, V1, V2, V696, V4)) end end(E581, E582, E583, E584, E585)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E559, E560, E561, E562, E563} -> (fun (V714, V715, V716, V717, V718) -> ('un--getMatch'(V0, V1, V2, V3, V718)) end(E559, E560, E561, E562, E563)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E553} -> (fun (V719) -> fun (V720) -> case V4 of {'Idris.TTImp.TTImp.IType', E554} -> (fun (V721) -> {'Idris.Prelude.Types.Right', []} end(E554)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V720)) end end end(E553)); {'Idris.TTImp.TTImp.IPrimVal', E555, E556} -> (fun (V722, V723) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E557, E558} -> (fun (V724, V725) -> fun (V726) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V723, V725)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V722, V726)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E557, E558)); _ -> fun (V727) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V727)) end end end(E555, E556)); _ -> fun (V728) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V728)) end end end end end end end end(E547, E548, E549, E550, E551, E552)); {'Idris.TTImp.TTImp.IApp', E732, E733, E734} -> (fun (V729, V730, V731) -> case V4 of {'Idris.TTImp.TTImp.IApp', E908, E909, E910} -> (fun (V732, V733, V734) -> fun (V735) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V730, V733} | [{'Idris.Builtin.MkPair', V731, V734} | []]], V735)) end end(E908, E909, E910)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E841, E842, E843, E844} -> (fun (V736, V737, V738, V739) -> fun (V740) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V737, V4} | [{'Idris.Builtin.MkPair', V739, V739} | []]], V740)) end end(E841, E842, E843, E844)); {'Idris.TTImp.TTImp.IAutoApp', E845, E846, E847} -> (fun (V741, V742, V743) -> fun (V744) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V742, V4} | [{'Idris.Builtin.MkPair', V743, V743} | []]], V744)) end end(E845, E846, E847)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E834, E835, E836, E837} -> (fun (V745, V746, V747, V748) -> fun (V749) -> ('un--matchFail'(V745, V749)) end end(E834, E835, E836, E837)); {'Idris.TTImp.TTImp.IAutoApp', E838, E839, E840} -> (fun (V750, V751, V752) -> fun (V753) -> ('un--matchFail'(V750, V753)) end end(E838, E839, E840)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E799, E800, E801} -> (fun (V754, V755, V756) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E813, E814, E815} -> (fun (V757, V758, V759) -> fun (V760) -> ('un--matchAny'(V0, V1, V754, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V756, V759)), V760)) end end(E813, E814, E815)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E808, E809, E810, E811, E812} -> (fun (V761, V762, V763, V764, V765) -> ('un--getMatch'(V0, V1, V2, V3, V765)) end(E808, E809, E810, E811, E812)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E802} -> (fun (V766) -> fun (V767) -> case V4 of {'Idris.TTImp.TTImp.IType', E803} -> (fun (V768) -> {'Idris.Prelude.Types.Right', []} end(E803)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V767)) end end end(E802)); {'Idris.TTImp.TTImp.IPrimVal', E804, E805} -> (fun (V769, V770) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E806, E807} -> (fun (V771, V772) -> fun (V773) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V770, V772)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V769, V773)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E806, E807)); _ -> fun (V774) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V774)) end end end(E804, E805)); _ -> fun (V775) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V775)) end end end end end(E799, E800, E801)); {'Idris.TTImp.TTImp.IAs', E816, E817, E818, E819, E820} -> (fun (V776, V777, V778, V779, V780) -> case V779 of {'Idris.Core.Name.UN', E821} -> (fun (V781) -> fun (V782) -> case V4 of {'Idris.TTImp.TTImp.IAs', E824, E825, E826, E827, E828} -> (fun (V783, V784, V785, V786, V787) -> case V786 of {'Idris.Core.Name.UN', E831} -> (fun (V788) -> begin (V789 = (('un--getMatch'(V0, V1, V2, V780, V787))(V782))), case V789 of {'Idris.Prelude.Types.Left', E832} -> (fun (V790) -> {'Idris.Prelude.Types.Left', V790} end(E832)); {'Idris.Prelude.Types.Right', E833} -> (fun (V791) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V781, {'Idris.TTImp.TTImp.IBindVar', V784, V788}} | V791], V782)) end(E833)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E831)); _ -> begin (V792 = (('un--getMatch'(V0, V1, V2, V780, V4))(V782))), case V792 of {'Idris.Prelude.Types.Left', E829} -> (fun (V793) -> {'Idris.Prelude.Types.Left', V793} end(E829)); {'Idris.Prelude.Types.Right', E830} -> (fun (V794) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V781, V4} | V794], V782)) end(E830)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E824, E825, E826, E827, E828)); _ -> begin (V795 = (('un--getMatch'(V0, V1, V2, V780, V4))(V782))), case V795 of {'Idris.Prelude.Types.Left', E822} -> (fun (V796) -> {'Idris.Prelude.Types.Left', V796} end(E822)); {'Idris.Prelude.Types.Right', E823} -> (fun (V797) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V781, V4} | V797], V782)) end(E823)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E821)); _ -> ('un--getMatch'(V0, V1, V2, V780, V4)) end end(E816, E817, E818, E819, E820)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E794, E795, E796, E797, E798} -> (fun (V798, V799, V800, V801, V802) -> ('un--getMatch'(V0, V1, V2, V3, V802)) end(E794, E795, E796, E797, E798)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E788} -> (fun (V803) -> fun (V804) -> case V4 of {'Idris.TTImp.TTImp.IType', E789} -> (fun (V805) -> {'Idris.Prelude.Types.Right', []} end(E789)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V804)) end end end(E788)); {'Idris.TTImp.TTImp.IPrimVal', E790, E791} -> (fun (V806, V807) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E792, E793} -> (fun (V808, V809) -> fun (V810) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V807, V809)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V806, V810)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E792, E793)); _ -> fun (V811) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V811)) end end end(E790, E791)); _ -> fun (V812) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V812)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E901, E902, E903, E904} -> (fun (V813, V814, V815, V816) -> ('un--getMatch'(V0, V1, 0, V814, V814)) end(E901, E902, E903, E904)); {'Idris.TTImp.TTImp.IAutoApp', E905, E906, E907} -> (fun (V817, V818, V819) -> ('un--getMatch'(V0, V1, 0, V818, V818)) end(E905, E906, E907)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E894, E895, E896, E897} -> (fun (V820, V821, V822, V823) -> fun (V824) -> ('un--matchFail'(V820, V824)) end end(E894, E895, E896, E897)); {'Idris.TTImp.TTImp.IAutoApp', E898, E899, E900} -> (fun (V825, V826, V827) -> fun (V828) -> ('un--matchFail'(V825, V828)) end end(E898, E899, E900)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E859, E860, E861} -> (fun (V829, V830, V831) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E873, E874, E875} -> (fun (V832, V833, V834) -> fun (V835) -> ('un--matchAny'(V0, V1, V829, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V831, V834)), V835)) end end(E873, E874, E875)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E868, E869, E870, E871, E872} -> (fun (V836, V837, V838, V839, V840) -> ('un--getMatch'(V0, V1, V2, V3, V840)) end(E868, E869, E870, E871, E872)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E862} -> (fun (V841) -> fun (V842) -> case V4 of {'Idris.TTImp.TTImp.IType', E863} -> (fun (V843) -> {'Idris.Prelude.Types.Right', []} end(E863)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V842)) end end end(E862)); {'Idris.TTImp.TTImp.IPrimVal', E864, E865} -> (fun (V844, V845) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E866, E867} -> (fun (V846, V847) -> fun (V848) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V845, V847)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V844, V848)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E866, E867)); _ -> fun (V849) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V849)) end end end(E864, E865)); _ -> fun (V850) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V850)) end end end end end(E859, E860, E861)); {'Idris.TTImp.TTImp.IAs', E876, E877, E878, E879, E880} -> (fun (V851, V852, V853, V854, V855) -> case V854 of {'Idris.Core.Name.UN', E881} -> (fun (V856) -> fun (V857) -> case V4 of {'Idris.TTImp.TTImp.IAs', E884, E885, E886, E887, E888} -> (fun (V858, V859, V860, V861, V862) -> case V861 of {'Idris.Core.Name.UN', E891} -> (fun (V863) -> begin (V864 = (('un--getMatch'(V0, V1, V2, V855, V862))(V857))), case V864 of {'Idris.Prelude.Types.Left', E892} -> (fun (V865) -> {'Idris.Prelude.Types.Left', V865} end(E892)); {'Idris.Prelude.Types.Right', E893} -> (fun (V866) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V856, {'Idris.TTImp.TTImp.IBindVar', V859, V863}} | V866], V857)) end(E893)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E891)); _ -> begin (V867 = (('un--getMatch'(V0, V1, V2, V855, V4))(V857))), case V867 of {'Idris.Prelude.Types.Left', E889} -> (fun (V868) -> {'Idris.Prelude.Types.Left', V868} end(E889)); {'Idris.Prelude.Types.Right', E890} -> (fun (V869) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V856, V4} | V869], V857)) end(E890)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E884, E885, E886, E887, E888)); _ -> begin (V870 = (('un--getMatch'(V0, V1, V2, V855, V4))(V857))), case V870 of {'Idris.Prelude.Types.Left', E882} -> (fun (V871) -> {'Idris.Prelude.Types.Left', V871} end(E882)); {'Idris.Prelude.Types.Right', E883} -> (fun (V872) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V856, V4} | V872], V857)) end(E883)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E881)); _ -> ('un--getMatch'(V0, V1, V2, V855, V4)) end end(E876, E877, E878, E879, E880)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E854, E855, E856, E857, E858} -> (fun (V873, V874, V875, V876, V877) -> ('un--getMatch'(V0, V1, V2, V3, V877)) end(E854, E855, E856, E857, E858)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E848} -> (fun (V878) -> fun (V879) -> case V4 of {'Idris.TTImp.TTImp.IType', E849} -> (fun (V880) -> {'Idris.Prelude.Types.Right', []} end(E849)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V879)) end end end(E848)); {'Idris.TTImp.TTImp.IPrimVal', E850, E851} -> (fun (V881, V882) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E852, E853} -> (fun (V883, V884) -> fun (V885) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V882, V884)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V881, V885)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E852, E853)); _ -> fun (V886) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V886)) end end end(E850, E851)); _ -> fun (V887) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V887)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E781, E782, E783, E784} -> (fun (V888, V889, V890, V891) -> fun (V892) -> ('un--matchFail'(V888, V892)) end end(E781, E782, E783, E784)); {'Idris.TTImp.TTImp.IAutoApp', E785, E786, E787} -> (fun (V893, V894, V895) -> fun (V896) -> ('un--matchFail'(V893, V896)) end end(E785, E786, E787)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E746, E747, E748} -> (fun (V897, V898, V899) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E760, E761, E762} -> (fun (V900, V901, V902) -> fun (V903) -> ('un--matchAny'(V0, V1, V897, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V899, V902)), V903)) end end(E760, E761, E762)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E755, E756, E757, E758, E759} -> (fun (V904, V905, V906, V907, V908) -> ('un--getMatch'(V0, V1, V2, V3, V908)) end(E755, E756, E757, E758, E759)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E749} -> (fun (V909) -> fun (V910) -> case V4 of {'Idris.TTImp.TTImp.IType', E750} -> (fun (V911) -> {'Idris.Prelude.Types.Right', []} end(E750)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V910)) end end end(E749)); {'Idris.TTImp.TTImp.IPrimVal', E751, E752} -> (fun (V912, V913) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E753, E754} -> (fun (V914, V915) -> fun (V916) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V913, V915)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V912, V916)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E753, E754)); _ -> fun (V917) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V917)) end end end(E751, E752)); _ -> fun (V918) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V918)) end end end end end(E746, E747, E748)); {'Idris.TTImp.TTImp.IAs', E763, E764, E765, E766, E767} -> (fun (V919, V920, V921, V922, V923) -> case V922 of {'Idris.Core.Name.UN', E768} -> (fun (V924) -> fun (V925) -> case V4 of {'Idris.TTImp.TTImp.IAs', E771, E772, E773, E774, E775} -> (fun (V926, V927, V928, V929, V930) -> case V929 of {'Idris.Core.Name.UN', E778} -> (fun (V931) -> begin (V932 = (('un--getMatch'(V0, V1, V2, V923, V930))(V925))), case V932 of {'Idris.Prelude.Types.Left', E779} -> (fun (V933) -> {'Idris.Prelude.Types.Left', V933} end(E779)); {'Idris.Prelude.Types.Right', E780} -> (fun (V934) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V924, {'Idris.TTImp.TTImp.IBindVar', V927, V931}} | V934], V925)) end(E780)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E778)); _ -> begin (V935 = (('un--getMatch'(V0, V1, V2, V923, V4))(V925))), case V935 of {'Idris.Prelude.Types.Left', E776} -> (fun (V936) -> {'Idris.Prelude.Types.Left', V936} end(E776)); {'Idris.Prelude.Types.Right', E777} -> (fun (V937) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V924, V4} | V937], V925)) end(E777)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E771, E772, E773, E774, E775)); _ -> begin (V938 = (('un--getMatch'(V0, V1, V2, V923, V4))(V925))), case V938 of {'Idris.Prelude.Types.Left', E769} -> (fun (V939) -> {'Idris.Prelude.Types.Left', V939} end(E769)); {'Idris.Prelude.Types.Right', E770} -> (fun (V940) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V924, V4} | V940], V925)) end(E770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E768)); _ -> ('un--getMatch'(V0, V1, V2, V923, V4)) end end(E763, E764, E765, E766, E767)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E741, E742, E743, E744, E745} -> (fun (V941, V942, V943, V944, V945) -> ('un--getMatch'(V0, V1, V2, V3, V945)) end(E741, E742, E743, E744, E745)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E735} -> (fun (V946) -> fun (V947) -> case V4 of {'Idris.TTImp.TTImp.IType', E736} -> (fun (V948) -> {'Idris.Prelude.Types.Right', []} end(E736)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V947)) end end end(E735)); {'Idris.TTImp.TTImp.IPrimVal', E737, E738} -> (fun (V949, V950) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E739, E740} -> (fun (V951, V952) -> fun (V953) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V950, V952)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V949, V953)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E739, E740)); _ -> fun (V954) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V954)) end end end(E737, E738)); _ -> fun (V955) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V955)) end end end end end end end end(E732, E733, E734)); {'Idris.TTImp.TTImp.IAutoApp', E911, E912, E913} -> (fun (V956, V957, V958) -> case V4 of {'Idris.TTImp.TTImp.IAutoApp', E1087, E1088, E1089} -> (fun (V959, V960, V961) -> fun (V962) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V957, V960} | [{'Idris.Builtin.MkPair', V958, V961} | []]], V962)) end end(E1087, E1088, E1089)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1020, E1021, E1022, E1023} -> (fun (V963, V964, V965, V966) -> fun (V967) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V964, V4} | [{'Idris.Builtin.MkPair', V966, V966} | []]], V967)) end end(E1020, E1021, E1022, E1023)); {'Idris.TTImp.TTImp.IAutoApp', E1024, E1025, E1026} -> (fun (V968, V969, V970) -> fun (V971) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V969, V4} | [{'Idris.Builtin.MkPair', V970, V970} | []]], V971)) end end(E1024, E1025, E1026)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1013, E1014, E1015, E1016} -> (fun (V972, V973, V974, V975) -> fun (V976) -> ('un--matchFail'(V972, V976)) end end(E1013, E1014, E1015, E1016)); {'Idris.TTImp.TTImp.IAutoApp', E1017, E1018, E1019} -> (fun (V977, V978, V979) -> fun (V980) -> ('un--matchFail'(V977, V980)) end end(E1017, E1018, E1019)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E978, E979, E980} -> (fun (V981, V982, V983) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E992, E993, E994} -> (fun (V984, V985, V986) -> fun (V987) -> ('un--matchAny'(V0, V1, V981, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V983, V986)), V987)) end end(E992, E993, E994)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E987, E988, E989, E990, E991} -> (fun (V988, V989, V990, V991, V992) -> ('un--getMatch'(V0, V1, V2, V3, V992)) end(E987, E988, E989, E990, E991)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E981} -> (fun (V993) -> fun (V994) -> case V4 of {'Idris.TTImp.TTImp.IType', E982} -> (fun (V995) -> {'Idris.Prelude.Types.Right', []} end(E982)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V994)) end end end(E981)); {'Idris.TTImp.TTImp.IPrimVal', E983, E984} -> (fun (V996, V997) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E985, E986} -> (fun (V998, V999) -> fun (V1000) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V997, V999)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V996, V1000)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E985, E986)); _ -> fun (V1001) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1001)) end end end(E983, E984)); _ -> fun (V1002) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1002)) end end end end end(E978, E979, E980)); {'Idris.TTImp.TTImp.IAs', E995, E996, E997, E998, E999} -> (fun (V1003, V1004, V1005, V1006, V1007) -> case V1006 of {'Idris.Core.Name.UN', E1000} -> (fun (V1008) -> fun (V1009) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1003, E1004, E1005, E1006, E1007} -> (fun (V1010, V1011, V1012, V1013, V1014) -> case V1013 of {'Idris.Core.Name.UN', E1010} -> (fun (V1015) -> begin (V1016 = (('un--getMatch'(V0, V1, V2, V1007, V1014))(V1009))), case V1016 of {'Idris.Prelude.Types.Left', E1011} -> (fun (V1017) -> {'Idris.Prelude.Types.Left', V1017} end(E1011)); {'Idris.Prelude.Types.Right', E1012} -> (fun (V1018) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1008, {'Idris.TTImp.TTImp.IBindVar', V1011, V1015}} | V1018], V1009)) end(E1012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1010)); _ -> begin (V1019 = (('un--getMatch'(V0, V1, V2, V1007, V4))(V1009))), case V1019 of {'Idris.Prelude.Types.Left', E1008} -> (fun (V1020) -> {'Idris.Prelude.Types.Left', V1020} end(E1008)); {'Idris.Prelude.Types.Right', E1009} -> (fun (V1021) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1008, V4} | V1021], V1009)) end(E1009)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1003, E1004, E1005, E1006, E1007)); _ -> begin (V1022 = (('un--getMatch'(V0, V1, V2, V1007, V4))(V1009))), case V1022 of {'Idris.Prelude.Types.Left', E1001} -> (fun (V1023) -> {'Idris.Prelude.Types.Left', V1023} end(E1001)); {'Idris.Prelude.Types.Right', E1002} -> (fun (V1024) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1008, V4} | V1024], V1009)) end(E1002)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1000)); _ -> ('un--getMatch'(V0, V1, V2, V1007, V4)) end end(E995, E996, E997, E998, E999)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E973, E974, E975, E976, E977} -> (fun (V1025, V1026, V1027, V1028, V1029) -> ('un--getMatch'(V0, V1, V2, V3, V1029)) end(E973, E974, E975, E976, E977)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E967} -> (fun (V1030) -> fun (V1031) -> case V4 of {'Idris.TTImp.TTImp.IType', E968} -> (fun (V1032) -> {'Idris.Prelude.Types.Right', []} end(E968)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1031)) end end end(E967)); {'Idris.TTImp.TTImp.IPrimVal', E969, E970} -> (fun (V1033, V1034) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E971, E972} -> (fun (V1035, V1036) -> fun (V1037) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1034, V1036)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1033, V1037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E971, E972)); _ -> fun (V1038) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1038)) end end end(E969, E970)); _ -> fun (V1039) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1039)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1080, E1081, E1082, E1083} -> (fun (V1040, V1041, V1042, V1043) -> ('un--getMatch'(V0, V1, 0, V1041, V1041)) end(E1080, E1081, E1082, E1083)); {'Idris.TTImp.TTImp.IAutoApp', E1084, E1085, E1086} -> (fun (V1044, V1045, V1046) -> ('un--getMatch'(V0, V1, 0, V1045, V1045)) end(E1084, E1085, E1086)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1073, E1074, E1075, E1076} -> (fun (V1047, V1048, V1049, V1050) -> fun (V1051) -> ('un--matchFail'(V1047, V1051)) end end(E1073, E1074, E1075, E1076)); {'Idris.TTImp.TTImp.IAutoApp', E1077, E1078, E1079} -> (fun (V1052, V1053, V1054) -> fun (V1055) -> ('un--matchFail'(V1052, V1055)) end end(E1077, E1078, E1079)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1038, E1039, E1040} -> (fun (V1056, V1057, V1058) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1052, E1053, E1054} -> (fun (V1059, V1060, V1061) -> fun (V1062) -> ('un--matchAny'(V0, V1, V1056, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1058, V1061)), V1062)) end end(E1052, E1053, E1054)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1047, E1048, E1049, E1050, E1051} -> (fun (V1063, V1064, V1065, V1066, V1067) -> ('un--getMatch'(V0, V1, V2, V3, V1067)) end(E1047, E1048, E1049, E1050, E1051)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1041} -> (fun (V1068) -> fun (V1069) -> case V4 of {'Idris.TTImp.TTImp.IType', E1042} -> (fun (V1070) -> {'Idris.Prelude.Types.Right', []} end(E1042)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1069)) end end end(E1041)); {'Idris.TTImp.TTImp.IPrimVal', E1043, E1044} -> (fun (V1071, V1072) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1045, E1046} -> (fun (V1073, V1074) -> fun (V1075) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1072, V1074)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1071, V1075)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1045, E1046)); _ -> fun (V1076) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1076)) end end end(E1043, E1044)); _ -> fun (V1077) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1077)) end end end end end(E1038, E1039, E1040)); {'Idris.TTImp.TTImp.IAs', E1055, E1056, E1057, E1058, E1059} -> (fun (V1078, V1079, V1080, V1081, V1082) -> case V1081 of {'Idris.Core.Name.UN', E1060} -> (fun (V1083) -> fun (V1084) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1063, E1064, E1065, E1066, E1067} -> (fun (V1085, V1086, V1087, V1088, V1089) -> case V1088 of {'Idris.Core.Name.UN', E1070} -> (fun (V1090) -> begin (V1091 = (('un--getMatch'(V0, V1, V2, V1082, V1089))(V1084))), case V1091 of {'Idris.Prelude.Types.Left', E1071} -> (fun (V1092) -> {'Idris.Prelude.Types.Left', V1092} end(E1071)); {'Idris.Prelude.Types.Right', E1072} -> (fun (V1093) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1083, {'Idris.TTImp.TTImp.IBindVar', V1086, V1090}} | V1093], V1084)) end(E1072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1070)); _ -> begin (V1094 = (('un--getMatch'(V0, V1, V2, V1082, V4))(V1084))), case V1094 of {'Idris.Prelude.Types.Left', E1068} -> (fun (V1095) -> {'Idris.Prelude.Types.Left', V1095} end(E1068)); {'Idris.Prelude.Types.Right', E1069} -> (fun (V1096) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1083, V4} | V1096], V1084)) end(E1069)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1063, E1064, E1065, E1066, E1067)); _ -> begin (V1097 = (('un--getMatch'(V0, V1, V2, V1082, V4))(V1084))), case V1097 of {'Idris.Prelude.Types.Left', E1061} -> (fun (V1098) -> {'Idris.Prelude.Types.Left', V1098} end(E1061)); {'Idris.Prelude.Types.Right', E1062} -> (fun (V1099) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1083, V4} | V1099], V1084)) end(E1062)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1060)); _ -> ('un--getMatch'(V0, V1, V2, V1082, V4)) end end(E1055, E1056, E1057, E1058, E1059)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1033, E1034, E1035, E1036, E1037} -> (fun (V1100, V1101, V1102, V1103, V1104) -> ('un--getMatch'(V0, V1, V2, V3, V1104)) end(E1033, E1034, E1035, E1036, E1037)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1027} -> (fun (V1105) -> fun (V1106) -> case V4 of {'Idris.TTImp.TTImp.IType', E1028} -> (fun (V1107) -> {'Idris.Prelude.Types.Right', []} end(E1028)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1106)) end end end(E1027)); {'Idris.TTImp.TTImp.IPrimVal', E1029, E1030} -> (fun (V1108, V1109) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1031, E1032} -> (fun (V1110, V1111) -> fun (V1112) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1109, V1111)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1108, V1112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1031, E1032)); _ -> fun (V1113) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1113)) end end end(E1029, E1030)); _ -> fun (V1114) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1114)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E960, E961, E962, E963} -> (fun (V1115, V1116, V1117, V1118) -> fun (V1119) -> ('un--matchFail'(V1115, V1119)) end end(E960, E961, E962, E963)); {'Idris.TTImp.TTImp.IAutoApp', E964, E965, E966} -> (fun (V1120, V1121, V1122) -> fun (V1123) -> ('un--matchFail'(V1120, V1123)) end end(E964, E965, E966)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E925, E926, E927} -> (fun (V1124, V1125, V1126) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E939, E940, E941} -> (fun (V1127, V1128, V1129) -> fun (V1130) -> ('un--matchAny'(V0, V1, V1124, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1126, V1129)), V1130)) end end(E939, E940, E941)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E934, E935, E936, E937, E938} -> (fun (V1131, V1132, V1133, V1134, V1135) -> ('un--getMatch'(V0, V1, V2, V3, V1135)) end(E934, E935, E936, E937, E938)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E928} -> (fun (V1136) -> fun (V1137) -> case V4 of {'Idris.TTImp.TTImp.IType', E929} -> (fun (V1138) -> {'Idris.Prelude.Types.Right', []} end(E929)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1137)) end end end(E928)); {'Idris.TTImp.TTImp.IPrimVal', E930, E931} -> (fun (V1139, V1140) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E932, E933} -> (fun (V1141, V1142) -> fun (V1143) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1140, V1142)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1139, V1143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E932, E933)); _ -> fun (V1144) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1144)) end end end(E930, E931)); _ -> fun (V1145) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1145)) end end end end end(E925, E926, E927)); {'Idris.TTImp.TTImp.IAs', E942, E943, E944, E945, E946} -> (fun (V1146, V1147, V1148, V1149, V1150) -> case V1149 of {'Idris.Core.Name.UN', E947} -> (fun (V1151) -> fun (V1152) -> case V4 of {'Idris.TTImp.TTImp.IAs', E950, E951, E952, E953, E954} -> (fun (V1153, V1154, V1155, V1156, V1157) -> case V1156 of {'Idris.Core.Name.UN', E957} -> (fun (V1158) -> begin (V1159 = (('un--getMatch'(V0, V1, V2, V1150, V1157))(V1152))), case V1159 of {'Idris.Prelude.Types.Left', E958} -> (fun (V1160) -> {'Idris.Prelude.Types.Left', V1160} end(E958)); {'Idris.Prelude.Types.Right', E959} -> (fun (V1161) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1151, {'Idris.TTImp.TTImp.IBindVar', V1154, V1158}} | V1161], V1152)) end(E959)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E957)); _ -> begin (V1162 = (('un--getMatch'(V0, V1, V2, V1150, V4))(V1152))), case V1162 of {'Idris.Prelude.Types.Left', E955} -> (fun (V1163) -> {'Idris.Prelude.Types.Left', V1163} end(E955)); {'Idris.Prelude.Types.Right', E956} -> (fun (V1164) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1151, V4} | V1164], V1152)) end(E956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E950, E951, E952, E953, E954)); _ -> begin (V1165 = (('un--getMatch'(V0, V1, V2, V1150, V4))(V1152))), case V1165 of {'Idris.Prelude.Types.Left', E948} -> (fun (V1166) -> {'Idris.Prelude.Types.Left', V1166} end(E948)); {'Idris.Prelude.Types.Right', E949} -> (fun (V1167) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1151, V4} | V1167], V1152)) end(E949)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E947)); _ -> ('un--getMatch'(V0, V1, V2, V1150, V4)) end end(E942, E943, E944, E945, E946)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E920, E921, E922, E923, E924} -> (fun (V1168, V1169, V1170, V1171, V1172) -> ('un--getMatch'(V0, V1, V2, V3, V1172)) end(E920, E921, E922, E923, E924)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E914} -> (fun (V1173) -> fun (V1174) -> case V4 of {'Idris.TTImp.TTImp.IType', E915} -> (fun (V1175) -> {'Idris.Prelude.Types.Right', []} end(E915)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1174)) end end end(E914)); {'Idris.TTImp.TTImp.IPrimVal', E916, E917} -> (fun (V1176, V1177) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E918, E919} -> (fun (V1178, V1179) -> fun (V1180) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1177, V1179)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1176, V1180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E918, E919)); _ -> fun (V1181) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1181)) end end end(E916, E917)); _ -> fun (V1182) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1182)) end end end end end end end end(E911, E912, E913)); {'Idris.TTImp.TTImp.INamedApp', E1090, E1091, E1092, E1093} -> (fun (V1183, V1184, V1185, V1186) -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1267, E1268, E1269, E1270} -> (fun (V1187, V1188, V1189, V1190) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1185, V1189)) of 1 -> fun (V1191) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1184, V1188} | [{'Idris.Builtin.MkPair', V1186, V1190} | []]], V1191)) end; 0 -> fun (V1192) -> ('un--matchFail'(V1187, V1192)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1267, E1268, E1269, E1270)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1200, E1201, E1202, E1203} -> (fun (V1193, V1194, V1195, V1196) -> fun (V1197) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1194, V4} | [{'Idris.Builtin.MkPair', V1196, V1196} | []]], V1197)) end end(E1200, E1201, E1202, E1203)); {'Idris.TTImp.TTImp.IAutoApp', E1204, E1205, E1206} -> (fun (V1198, V1199, V1200) -> fun (V1201) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1199, V4} | [{'Idris.Builtin.MkPair', V1200, V1200} | []]], V1201)) end end(E1204, E1205, E1206)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1193, E1194, E1195, E1196} -> (fun (V1202, V1203, V1204, V1205) -> fun (V1206) -> ('un--matchFail'(V1202, V1206)) end end(E1193, E1194, E1195, E1196)); {'Idris.TTImp.TTImp.IAutoApp', E1197, E1198, E1199} -> (fun (V1207, V1208, V1209) -> fun (V1210) -> ('un--matchFail'(V1207, V1210)) end end(E1197, E1198, E1199)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1158, E1159, E1160} -> (fun (V1211, V1212, V1213) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1172, E1173, E1174} -> (fun (V1214, V1215, V1216) -> fun (V1217) -> ('un--matchAny'(V0, V1, V1211, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1213, V1216)), V1217)) end end(E1172, E1173, E1174)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1167, E1168, E1169, E1170, E1171} -> (fun (V1218, V1219, V1220, V1221, V1222) -> ('un--getMatch'(V0, V1, V2, V3, V1222)) end(E1167, E1168, E1169, E1170, E1171)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1161} -> (fun (V1223) -> fun (V1224) -> case V4 of {'Idris.TTImp.TTImp.IType', E1162} -> (fun (V1225) -> {'Idris.Prelude.Types.Right', []} end(E1162)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1224)) end end end(E1161)); {'Idris.TTImp.TTImp.IPrimVal', E1163, E1164} -> (fun (V1226, V1227) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1165, E1166} -> (fun (V1228, V1229) -> fun (V1230) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1227, V1229)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1226, V1230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1165, E1166)); _ -> fun (V1231) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1231)) end end end(E1163, E1164)); _ -> fun (V1232) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1232)) end end end end end(E1158, E1159, E1160)); {'Idris.TTImp.TTImp.IAs', E1175, E1176, E1177, E1178, E1179} -> (fun (V1233, V1234, V1235, V1236, V1237) -> case V1236 of {'Idris.Core.Name.UN', E1180} -> (fun (V1238) -> fun (V1239) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1183, E1184, E1185, E1186, E1187} -> (fun (V1240, V1241, V1242, V1243, V1244) -> case V1243 of {'Idris.Core.Name.UN', E1190} -> (fun (V1245) -> begin (V1246 = (('un--getMatch'(V0, V1, V2, V1237, V1244))(V1239))), case V1246 of {'Idris.Prelude.Types.Left', E1191} -> (fun (V1247) -> {'Idris.Prelude.Types.Left', V1247} end(E1191)); {'Idris.Prelude.Types.Right', E1192} -> (fun (V1248) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1238, {'Idris.TTImp.TTImp.IBindVar', V1241, V1245}} | V1248], V1239)) end(E1192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1190)); _ -> begin (V1249 = (('un--getMatch'(V0, V1, V2, V1237, V4))(V1239))), case V1249 of {'Idris.Prelude.Types.Left', E1188} -> (fun (V1250) -> {'Idris.Prelude.Types.Left', V1250} end(E1188)); {'Idris.Prelude.Types.Right', E1189} -> (fun (V1251) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1238, V4} | V1251], V1239)) end(E1189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1183, E1184, E1185, E1186, E1187)); _ -> begin (V1252 = (('un--getMatch'(V0, V1, V2, V1237, V4))(V1239))), case V1252 of {'Idris.Prelude.Types.Left', E1181} -> (fun (V1253) -> {'Idris.Prelude.Types.Left', V1253} end(E1181)); {'Idris.Prelude.Types.Right', E1182} -> (fun (V1254) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1238, V4} | V1254], V1239)) end(E1182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1180)); _ -> ('un--getMatch'(V0, V1, V2, V1237, V4)) end end(E1175, E1176, E1177, E1178, E1179)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1153, E1154, E1155, E1156, E1157} -> (fun (V1255, V1256, V1257, V1258, V1259) -> ('un--getMatch'(V0, V1, V2, V3, V1259)) end(E1153, E1154, E1155, E1156, E1157)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1147} -> (fun (V1260) -> fun (V1261) -> case V4 of {'Idris.TTImp.TTImp.IType', E1148} -> (fun (V1262) -> {'Idris.Prelude.Types.Right', []} end(E1148)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1261)) end end end(E1147)); {'Idris.TTImp.TTImp.IPrimVal', E1149, E1150} -> (fun (V1263, V1264) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1151, E1152} -> (fun (V1265, V1266) -> fun (V1267) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1264, V1266)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1263, V1267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1151, E1152)); _ -> fun (V1268) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1268)) end end end(E1149, E1150)); _ -> fun (V1269) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1269)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1260, E1261, E1262, E1263} -> (fun (V1270, V1271, V1272, V1273) -> ('un--getMatch'(V0, V1, 0, V1271, V1271)) end(E1260, E1261, E1262, E1263)); {'Idris.TTImp.TTImp.IAutoApp', E1264, E1265, E1266} -> (fun (V1274, V1275, V1276) -> ('un--getMatch'(V0, V1, 0, V1275, V1275)) end(E1264, E1265, E1266)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1253, E1254, E1255, E1256} -> (fun (V1277, V1278, V1279, V1280) -> fun (V1281) -> ('un--matchFail'(V1277, V1281)) end end(E1253, E1254, E1255, E1256)); {'Idris.TTImp.TTImp.IAutoApp', E1257, E1258, E1259} -> (fun (V1282, V1283, V1284) -> fun (V1285) -> ('un--matchFail'(V1282, V1285)) end end(E1257, E1258, E1259)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1218, E1219, E1220} -> (fun (V1286, V1287, V1288) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1232, E1233, E1234} -> (fun (V1289, V1290, V1291) -> fun (V1292) -> ('un--matchAny'(V0, V1, V1286, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1288, V1291)), V1292)) end end(E1232, E1233, E1234)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1227, E1228, E1229, E1230, E1231} -> (fun (V1293, V1294, V1295, V1296, V1297) -> ('un--getMatch'(V0, V1, V2, V3, V1297)) end(E1227, E1228, E1229, E1230, E1231)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1221} -> (fun (V1298) -> fun (V1299) -> case V4 of {'Idris.TTImp.TTImp.IType', E1222} -> (fun (V1300) -> {'Idris.Prelude.Types.Right', []} end(E1222)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1299)) end end end(E1221)); {'Idris.TTImp.TTImp.IPrimVal', E1223, E1224} -> (fun (V1301, V1302) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1225, E1226} -> (fun (V1303, V1304) -> fun (V1305) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1302, V1304)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1301, V1305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1225, E1226)); _ -> fun (V1306) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1306)) end end end(E1223, E1224)); _ -> fun (V1307) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1307)) end end end end end(E1218, E1219, E1220)); {'Idris.TTImp.TTImp.IAs', E1235, E1236, E1237, E1238, E1239} -> (fun (V1308, V1309, V1310, V1311, V1312) -> case V1311 of {'Idris.Core.Name.UN', E1240} -> (fun (V1313) -> fun (V1314) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1243, E1244, E1245, E1246, E1247} -> (fun (V1315, V1316, V1317, V1318, V1319) -> case V1318 of {'Idris.Core.Name.UN', E1250} -> (fun (V1320) -> begin (V1321 = (('un--getMatch'(V0, V1, V2, V1312, V1319))(V1314))), case V1321 of {'Idris.Prelude.Types.Left', E1251} -> (fun (V1322) -> {'Idris.Prelude.Types.Left', V1322} end(E1251)); {'Idris.Prelude.Types.Right', E1252} -> (fun (V1323) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1313, {'Idris.TTImp.TTImp.IBindVar', V1316, V1320}} | V1323], V1314)) end(E1252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1250)); _ -> begin (V1324 = (('un--getMatch'(V0, V1, V2, V1312, V4))(V1314))), case V1324 of {'Idris.Prelude.Types.Left', E1248} -> (fun (V1325) -> {'Idris.Prelude.Types.Left', V1325} end(E1248)); {'Idris.Prelude.Types.Right', E1249} -> (fun (V1326) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1313, V4} | V1326], V1314)) end(E1249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1243, E1244, E1245, E1246, E1247)); _ -> begin (V1327 = (('un--getMatch'(V0, V1, V2, V1312, V4))(V1314))), case V1327 of {'Idris.Prelude.Types.Left', E1241} -> (fun (V1328) -> {'Idris.Prelude.Types.Left', V1328} end(E1241)); {'Idris.Prelude.Types.Right', E1242} -> (fun (V1329) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1313, V4} | V1329], V1314)) end(E1242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1240)); _ -> ('un--getMatch'(V0, V1, V2, V1312, V4)) end end(E1235, E1236, E1237, E1238, E1239)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1213, E1214, E1215, E1216, E1217} -> (fun (V1330, V1331, V1332, V1333, V1334) -> ('un--getMatch'(V0, V1, V2, V3, V1334)) end(E1213, E1214, E1215, E1216, E1217)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1207} -> (fun (V1335) -> fun (V1336) -> case V4 of {'Idris.TTImp.TTImp.IType', E1208} -> (fun (V1337) -> {'Idris.Prelude.Types.Right', []} end(E1208)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1336)) end end end(E1207)); {'Idris.TTImp.TTImp.IPrimVal', E1209, E1210} -> (fun (V1338, V1339) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1211, E1212} -> (fun (V1340, V1341) -> fun (V1342) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1339, V1341)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1338, V1342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1211, E1212)); _ -> fun (V1343) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1343)) end end end(E1209, E1210)); _ -> fun (V1344) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1344)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1140, E1141, E1142, E1143} -> (fun (V1345, V1346, V1347, V1348) -> fun (V1349) -> ('un--matchFail'(V1345, V1349)) end end(E1140, E1141, E1142, E1143)); {'Idris.TTImp.TTImp.IAutoApp', E1144, E1145, E1146} -> (fun (V1350, V1351, V1352) -> fun (V1353) -> ('un--matchFail'(V1350, V1353)) end end(E1144, E1145, E1146)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1105, E1106, E1107} -> (fun (V1354, V1355, V1356) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1119, E1120, E1121} -> (fun (V1357, V1358, V1359) -> fun (V1360) -> ('un--matchAny'(V0, V1, V1354, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1356, V1359)), V1360)) end end(E1119, E1120, E1121)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1114, E1115, E1116, E1117, E1118} -> (fun (V1361, V1362, V1363, V1364, V1365) -> ('un--getMatch'(V0, V1, V2, V3, V1365)) end(E1114, E1115, E1116, E1117, E1118)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1108} -> (fun (V1366) -> fun (V1367) -> case V4 of {'Idris.TTImp.TTImp.IType', E1109} -> (fun (V1368) -> {'Idris.Prelude.Types.Right', []} end(E1109)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1367)) end end end(E1108)); {'Idris.TTImp.TTImp.IPrimVal', E1110, E1111} -> (fun (V1369, V1370) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1112, E1113} -> (fun (V1371, V1372) -> fun (V1373) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1370, V1372)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1369, V1373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1112, E1113)); _ -> fun (V1374) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1374)) end end end(E1110, E1111)); _ -> fun (V1375) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1375)) end end end end end(E1105, E1106, E1107)); {'Idris.TTImp.TTImp.IAs', E1122, E1123, E1124, E1125, E1126} -> (fun (V1376, V1377, V1378, V1379, V1380) -> case V1379 of {'Idris.Core.Name.UN', E1127} -> (fun (V1381) -> fun (V1382) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1130, E1131, E1132, E1133, E1134} -> (fun (V1383, V1384, V1385, V1386, V1387) -> case V1386 of {'Idris.Core.Name.UN', E1137} -> (fun (V1388) -> begin (V1389 = (('un--getMatch'(V0, V1, V2, V1380, V1387))(V1382))), case V1389 of {'Idris.Prelude.Types.Left', E1138} -> (fun (V1390) -> {'Idris.Prelude.Types.Left', V1390} end(E1138)); {'Idris.Prelude.Types.Right', E1139} -> (fun (V1391) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1381, {'Idris.TTImp.TTImp.IBindVar', V1384, V1388}} | V1391], V1382)) end(E1139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1137)); _ -> begin (V1392 = (('un--getMatch'(V0, V1, V2, V1380, V4))(V1382))), case V1392 of {'Idris.Prelude.Types.Left', E1135} -> (fun (V1393) -> {'Idris.Prelude.Types.Left', V1393} end(E1135)); {'Idris.Prelude.Types.Right', E1136} -> (fun (V1394) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1381, V4} | V1394], V1382)) end(E1136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1130, E1131, E1132, E1133, E1134)); _ -> begin (V1395 = (('un--getMatch'(V0, V1, V2, V1380, V4))(V1382))), case V1395 of {'Idris.Prelude.Types.Left', E1128} -> (fun (V1396) -> {'Idris.Prelude.Types.Left', V1396} end(E1128)); {'Idris.Prelude.Types.Right', E1129} -> (fun (V1397) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1381, V4} | V1397], V1382)) end(E1129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1127)); _ -> ('un--getMatch'(V0, V1, V2, V1380, V4)) end end(E1122, E1123, E1124, E1125, E1126)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1100, E1101, E1102, E1103, E1104} -> (fun (V1398, V1399, V1400, V1401, V1402) -> ('un--getMatch'(V0, V1, V2, V3, V1402)) end(E1100, E1101, E1102, E1103, E1104)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1094} -> (fun (V1403) -> fun (V1404) -> case V4 of {'Idris.TTImp.TTImp.IType', E1095} -> (fun (V1405) -> {'Idris.Prelude.Types.Right', []} end(E1095)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1404)) end end end(E1094)); {'Idris.TTImp.TTImp.IPrimVal', E1096, E1097} -> (fun (V1406, V1407) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1098, E1099} -> (fun (V1408, V1409) -> fun (V1410) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1407, V1409)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1406, V1410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1098, E1099)); _ -> fun (V1411) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1411)) end end end(E1096, E1097)); _ -> fun (V1412) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1412)) end end end end end end end end(E1090, E1091, E1092, E1093)); {'Idris.TTImp.TTImp.IWithApp', E1271, E1272, E1273} -> (fun (V1413, V1414, V1415) -> case V4 of {'Idris.TTImp.TTImp.IWithApp', E1447, E1448, E1449} -> (fun (V1416, V1417, V1418) -> fun (V1419) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1414, V1417} | [{'Idris.Builtin.MkPair', V1415, V1418} | []]], V1419)) end end(E1447, E1448, E1449)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1380, E1381, E1382, E1383} -> (fun (V1420, V1421, V1422, V1423) -> fun (V1424) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1421, V4} | [{'Idris.Builtin.MkPair', V1423, V1423} | []]], V1424)) end end(E1380, E1381, E1382, E1383)); {'Idris.TTImp.TTImp.IAutoApp', E1384, E1385, E1386} -> (fun (V1425, V1426, V1427) -> fun (V1428) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1426, V4} | [{'Idris.Builtin.MkPair', V1427, V1427} | []]], V1428)) end end(E1384, E1385, E1386)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1373, E1374, E1375, E1376} -> (fun (V1429, V1430, V1431, V1432) -> fun (V1433) -> ('un--matchFail'(V1429, V1433)) end end(E1373, E1374, E1375, E1376)); {'Idris.TTImp.TTImp.IAutoApp', E1377, E1378, E1379} -> (fun (V1434, V1435, V1436) -> fun (V1437) -> ('un--matchFail'(V1434, V1437)) end end(E1377, E1378, E1379)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1338, E1339, E1340} -> (fun (V1438, V1439, V1440) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1352, E1353, E1354} -> (fun (V1441, V1442, V1443) -> fun (V1444) -> ('un--matchAny'(V0, V1, V1438, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1440, V1443)), V1444)) end end(E1352, E1353, E1354)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1347, E1348, E1349, E1350, E1351} -> (fun (V1445, V1446, V1447, V1448, V1449) -> ('un--getMatch'(V0, V1, V2, V3, V1449)) end(E1347, E1348, E1349, E1350, E1351)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1341} -> (fun (V1450) -> fun (V1451) -> case V4 of {'Idris.TTImp.TTImp.IType', E1342} -> (fun (V1452) -> {'Idris.Prelude.Types.Right', []} end(E1342)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1451)) end end end(E1341)); {'Idris.TTImp.TTImp.IPrimVal', E1343, E1344} -> (fun (V1453, V1454) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1345, E1346} -> (fun (V1455, V1456) -> fun (V1457) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1454, V1456)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1453, V1457)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1345, E1346)); _ -> fun (V1458) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1458)) end end end(E1343, E1344)); _ -> fun (V1459) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1459)) end end end end end(E1338, E1339, E1340)); {'Idris.TTImp.TTImp.IAs', E1355, E1356, E1357, E1358, E1359} -> (fun (V1460, V1461, V1462, V1463, V1464) -> case V1463 of {'Idris.Core.Name.UN', E1360} -> (fun (V1465) -> fun (V1466) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1363, E1364, E1365, E1366, E1367} -> (fun (V1467, V1468, V1469, V1470, V1471) -> case V1470 of {'Idris.Core.Name.UN', E1370} -> (fun (V1472) -> begin (V1473 = (('un--getMatch'(V0, V1, V2, V1464, V1471))(V1466))), case V1473 of {'Idris.Prelude.Types.Left', E1371} -> (fun (V1474) -> {'Idris.Prelude.Types.Left', V1474} end(E1371)); {'Idris.Prelude.Types.Right', E1372} -> (fun (V1475) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1465, {'Idris.TTImp.TTImp.IBindVar', V1468, V1472}} | V1475], V1466)) end(E1372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1370)); _ -> begin (V1476 = (('un--getMatch'(V0, V1, V2, V1464, V4))(V1466))), case V1476 of {'Idris.Prelude.Types.Left', E1368} -> (fun (V1477) -> {'Idris.Prelude.Types.Left', V1477} end(E1368)); {'Idris.Prelude.Types.Right', E1369} -> (fun (V1478) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1465, V4} | V1478], V1466)) end(E1369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1363, E1364, E1365, E1366, E1367)); _ -> begin (V1479 = (('un--getMatch'(V0, V1, V2, V1464, V4))(V1466))), case V1479 of {'Idris.Prelude.Types.Left', E1361} -> (fun (V1480) -> {'Idris.Prelude.Types.Left', V1480} end(E1361)); {'Idris.Prelude.Types.Right', E1362} -> (fun (V1481) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1465, V4} | V1481], V1466)) end(E1362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1360)); _ -> ('un--getMatch'(V0, V1, V2, V1464, V4)) end end(E1355, E1356, E1357, E1358, E1359)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1333, E1334, E1335, E1336, E1337} -> (fun (V1482, V1483, V1484, V1485, V1486) -> ('un--getMatch'(V0, V1, V2, V3, V1486)) end(E1333, E1334, E1335, E1336, E1337)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1327} -> (fun (V1487) -> fun (V1488) -> case V4 of {'Idris.TTImp.TTImp.IType', E1328} -> (fun (V1489) -> {'Idris.Prelude.Types.Right', []} end(E1328)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1488)) end end end(E1327)); {'Idris.TTImp.TTImp.IPrimVal', E1329, E1330} -> (fun (V1490, V1491) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1331, E1332} -> (fun (V1492, V1493) -> fun (V1494) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1491, V1493)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1490, V1494)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1331, E1332)); _ -> fun (V1495) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1495)) end end end(E1329, E1330)); _ -> fun (V1496) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1496)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1440, E1441, E1442, E1443} -> (fun (V1497, V1498, V1499, V1500) -> ('un--getMatch'(V0, V1, 0, V1498, V1498)) end(E1440, E1441, E1442, E1443)); {'Idris.TTImp.TTImp.IAutoApp', E1444, E1445, E1446} -> (fun (V1501, V1502, V1503) -> ('un--getMatch'(V0, V1, 0, V1502, V1502)) end(E1444, E1445, E1446)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1433, E1434, E1435, E1436} -> (fun (V1504, V1505, V1506, V1507) -> fun (V1508) -> ('un--matchFail'(V1504, V1508)) end end(E1433, E1434, E1435, E1436)); {'Idris.TTImp.TTImp.IAutoApp', E1437, E1438, E1439} -> (fun (V1509, V1510, V1511) -> fun (V1512) -> ('un--matchFail'(V1509, V1512)) end end(E1437, E1438, E1439)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1398, E1399, E1400} -> (fun (V1513, V1514, V1515) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1412, E1413, E1414} -> (fun (V1516, V1517, V1518) -> fun (V1519) -> ('un--matchAny'(V0, V1, V1513, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1515, V1518)), V1519)) end end(E1412, E1413, E1414)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1407, E1408, E1409, E1410, E1411} -> (fun (V1520, V1521, V1522, V1523, V1524) -> ('un--getMatch'(V0, V1, V2, V3, V1524)) end(E1407, E1408, E1409, E1410, E1411)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1401} -> (fun (V1525) -> fun (V1526) -> case V4 of {'Idris.TTImp.TTImp.IType', E1402} -> (fun (V1527) -> {'Idris.Prelude.Types.Right', []} end(E1402)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1526)) end end end(E1401)); {'Idris.TTImp.TTImp.IPrimVal', E1403, E1404} -> (fun (V1528, V1529) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1405, E1406} -> (fun (V1530, V1531) -> fun (V1532) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1529, V1531)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1528, V1532)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1405, E1406)); _ -> fun (V1533) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1533)) end end end(E1403, E1404)); _ -> fun (V1534) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1534)) end end end end end(E1398, E1399, E1400)); {'Idris.TTImp.TTImp.IAs', E1415, E1416, E1417, E1418, E1419} -> (fun (V1535, V1536, V1537, V1538, V1539) -> case V1538 of {'Idris.Core.Name.UN', E1420} -> (fun (V1540) -> fun (V1541) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1423, E1424, E1425, E1426, E1427} -> (fun (V1542, V1543, V1544, V1545, V1546) -> case V1545 of {'Idris.Core.Name.UN', E1430} -> (fun (V1547) -> begin (V1548 = (('un--getMatch'(V0, V1, V2, V1539, V1546))(V1541))), case V1548 of {'Idris.Prelude.Types.Left', E1431} -> (fun (V1549) -> {'Idris.Prelude.Types.Left', V1549} end(E1431)); {'Idris.Prelude.Types.Right', E1432} -> (fun (V1550) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1540, {'Idris.TTImp.TTImp.IBindVar', V1543, V1547}} | V1550], V1541)) end(E1432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1430)); _ -> begin (V1551 = (('un--getMatch'(V0, V1, V2, V1539, V4))(V1541))), case V1551 of {'Idris.Prelude.Types.Left', E1428} -> (fun (V1552) -> {'Idris.Prelude.Types.Left', V1552} end(E1428)); {'Idris.Prelude.Types.Right', E1429} -> (fun (V1553) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1540, V4} | V1553], V1541)) end(E1429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1423, E1424, E1425, E1426, E1427)); _ -> begin (V1554 = (('un--getMatch'(V0, V1, V2, V1539, V4))(V1541))), case V1554 of {'Idris.Prelude.Types.Left', E1421} -> (fun (V1555) -> {'Idris.Prelude.Types.Left', V1555} end(E1421)); {'Idris.Prelude.Types.Right', E1422} -> (fun (V1556) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1540, V4} | V1556], V1541)) end(E1422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1420)); _ -> ('un--getMatch'(V0, V1, V2, V1539, V4)) end end(E1415, E1416, E1417, E1418, E1419)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1393, E1394, E1395, E1396, E1397} -> (fun (V1557, V1558, V1559, V1560, V1561) -> ('un--getMatch'(V0, V1, V2, V3, V1561)) end(E1393, E1394, E1395, E1396, E1397)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1387} -> (fun (V1562) -> fun (V1563) -> case V4 of {'Idris.TTImp.TTImp.IType', E1388} -> (fun (V1564) -> {'Idris.Prelude.Types.Right', []} end(E1388)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1563)) end end end(E1387)); {'Idris.TTImp.TTImp.IPrimVal', E1389, E1390} -> (fun (V1565, V1566) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1391, E1392} -> (fun (V1567, V1568) -> fun (V1569) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1566, V1568)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1565, V1569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1391, E1392)); _ -> fun (V1570) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1570)) end end end(E1389, E1390)); _ -> fun (V1571) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1571)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1320, E1321, E1322, E1323} -> (fun (V1572, V1573, V1574, V1575) -> fun (V1576) -> ('un--matchFail'(V1572, V1576)) end end(E1320, E1321, E1322, E1323)); {'Idris.TTImp.TTImp.IAutoApp', E1324, E1325, E1326} -> (fun (V1577, V1578, V1579) -> fun (V1580) -> ('un--matchFail'(V1577, V1580)) end end(E1324, E1325, E1326)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1285, E1286, E1287} -> (fun (V1581, V1582, V1583) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1299, E1300, E1301} -> (fun (V1584, V1585, V1586) -> fun (V1587) -> ('un--matchAny'(V0, V1, V1581, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1583, V1586)), V1587)) end end(E1299, E1300, E1301)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1294, E1295, E1296, E1297, E1298} -> (fun (V1588, V1589, V1590, V1591, V1592) -> ('un--getMatch'(V0, V1, V2, V3, V1592)) end(E1294, E1295, E1296, E1297, E1298)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1288} -> (fun (V1593) -> fun (V1594) -> case V4 of {'Idris.TTImp.TTImp.IType', E1289} -> (fun (V1595) -> {'Idris.Prelude.Types.Right', []} end(E1289)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1594)) end end end(E1288)); {'Idris.TTImp.TTImp.IPrimVal', E1290, E1291} -> (fun (V1596, V1597) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1292, E1293} -> (fun (V1598, V1599) -> fun (V1600) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1597, V1599)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1596, V1600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1292, E1293)); _ -> fun (V1601) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1601)) end end end(E1290, E1291)); _ -> fun (V1602) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1602)) end end end end end(E1285, E1286, E1287)); {'Idris.TTImp.TTImp.IAs', E1302, E1303, E1304, E1305, E1306} -> (fun (V1603, V1604, V1605, V1606, V1607) -> case V1606 of {'Idris.Core.Name.UN', E1307} -> (fun (V1608) -> fun (V1609) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1310, E1311, E1312, E1313, E1314} -> (fun (V1610, V1611, V1612, V1613, V1614) -> case V1613 of {'Idris.Core.Name.UN', E1317} -> (fun (V1615) -> begin (V1616 = (('un--getMatch'(V0, V1, V2, V1607, V1614))(V1609))), case V1616 of {'Idris.Prelude.Types.Left', E1318} -> (fun (V1617) -> {'Idris.Prelude.Types.Left', V1617} end(E1318)); {'Idris.Prelude.Types.Right', E1319} -> (fun (V1618) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1608, {'Idris.TTImp.TTImp.IBindVar', V1611, V1615}} | V1618], V1609)) end(E1319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1317)); _ -> begin (V1619 = (('un--getMatch'(V0, V1, V2, V1607, V4))(V1609))), case V1619 of {'Idris.Prelude.Types.Left', E1315} -> (fun (V1620) -> {'Idris.Prelude.Types.Left', V1620} end(E1315)); {'Idris.Prelude.Types.Right', E1316} -> (fun (V1621) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1608, V4} | V1621], V1609)) end(E1316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1310, E1311, E1312, E1313, E1314)); _ -> begin (V1622 = (('un--getMatch'(V0, V1, V2, V1607, V4))(V1609))), case V1622 of {'Idris.Prelude.Types.Left', E1308} -> (fun (V1623) -> {'Idris.Prelude.Types.Left', V1623} end(E1308)); {'Idris.Prelude.Types.Right', E1309} -> (fun (V1624) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1608, V4} | V1624], V1609)) end(E1309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1307)); _ -> ('un--getMatch'(V0, V1, V2, V1607, V4)) end end(E1302, E1303, E1304, E1305, E1306)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1280, E1281, E1282, E1283, E1284} -> (fun (V1625, V1626, V1627, V1628, V1629) -> ('un--getMatch'(V0, V1, V2, V3, V1629)) end(E1280, E1281, E1282, E1283, E1284)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1274} -> (fun (V1630) -> fun (V1631) -> case V4 of {'Idris.TTImp.TTImp.IType', E1275} -> (fun (V1632) -> {'Idris.Prelude.Types.Right', []} end(E1275)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1631)) end end end(E1274)); {'Idris.TTImp.TTImp.IPrimVal', E1276, E1277} -> (fun (V1633, V1634) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1278, E1279} -> (fun (V1635, V1636) -> fun (V1637) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1634, V1636)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1633, V1637)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1278, E1279)); _ -> fun (V1638) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1638)) end end end(E1276, E1277)); _ -> fun (V1639) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1639)) end end end end end end end end(E1271, E1272, E1273)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E106, E107, E108, E109} -> (fun (V1640, V1641, V1642, V1643) -> fun (V1644) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1641, V4} | [{'Idris.Builtin.MkPair', V1643, V1643} | []]], V1644)) end end(E106, E107, E108, E109)); {'Idris.TTImp.TTImp.IAutoApp', E110, E111, E112} -> (fun (V1645, V1646, V1647) -> fun (V1648) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1646, V4} | [{'Idris.Builtin.MkPair', V1647, V1647} | []]], V1648)) end end(E110, E111, E112)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E99, E100, E101, E102} -> (fun (V1649, V1650, V1651, V1652) -> fun (V1653) -> ('un--matchFail'(V1649, V1653)) end end(E99, E100, E101, E102)); {'Idris.TTImp.TTImp.IAutoApp', E103, E104, E105} -> (fun (V1654, V1655, V1656) -> fun (V1657) -> ('un--matchFail'(V1654, V1657)) end end(E103, E104, E105)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E64, E65, E66} -> (fun (V1658, V1659, V1660) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E78, E79, E80} -> (fun (V1661, V1662, V1663) -> fun (V1664) -> ('un--matchAny'(V0, V1, V1658, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1660, V1663)), V1664)) end end(E78, E79, E80)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E73, E74, E75, E76, E77} -> (fun (V1665, V1666, V1667, V1668, V1669) -> ('un--getMatch'(V0, V1, V2, V3, V1669)) end(E73, E74, E75, E76, E77)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E67} -> (fun (V1670) -> fun (V1671) -> case V4 of {'Idris.TTImp.TTImp.IType', E68} -> (fun (V1672) -> {'Idris.Prelude.Types.Right', []} end(E68)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1671)) end end end(E67)); {'Idris.TTImp.TTImp.IPrimVal', E69, E70} -> (fun (V1673, V1674) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E71, E72} -> (fun (V1675, V1676) -> fun (V1677) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1674, V1676)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1673, V1677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71, E72)); _ -> fun (V1678) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1678)) end end end(E69, E70)); _ -> fun (V1679) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1679)) end end end end end(E64, E65, E66)); {'Idris.TTImp.TTImp.IAs', E81, E82, E83, E84, E85} -> (fun (V1680, V1681, V1682, V1683, V1684) -> case V1683 of {'Idris.Core.Name.UN', E86} -> (fun (V1685) -> fun (V1686) -> case V4 of {'Idris.TTImp.TTImp.IAs', E89, E90, E91, E92, E93} -> (fun (V1687, V1688, V1689, V1690, V1691) -> case V1690 of {'Idris.Core.Name.UN', E96} -> (fun (V1692) -> begin (V1693 = (('un--getMatch'(V0, V1, V2, V1684, V1691))(V1686))), case V1693 of {'Idris.Prelude.Types.Left', E97} -> (fun (V1694) -> {'Idris.Prelude.Types.Left', V1694} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V1695) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1685, {'Idris.TTImp.TTImp.IBindVar', V1688, V1692}} | V1695], V1686)) end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> begin (V1696 = (('un--getMatch'(V0, V1, V2, V1684, V4))(V1686))), case V1696 of {'Idris.Prelude.Types.Left', E94} -> (fun (V1697) -> {'Idris.Prelude.Types.Left', V1697} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V1698) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1685, V4} | V1698], V1686)) end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E89, E90, E91, E92, E93)); _ -> begin (V1699 = (('un--getMatch'(V0, V1, V2, V1684, V4))(V1686))), case V1699 of {'Idris.Prelude.Types.Left', E87} -> (fun (V1700) -> {'Idris.Prelude.Types.Left', V1700} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V1701) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1685, V4} | V1701], V1686)) end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E86)); _ -> ('un--getMatch'(V0, V1, V2, V1684, V4)) end end(E81, E82, E83, E84, E85)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E59, E60, E61, E62, E63} -> (fun (V1702, V1703, V1704, V1705, V1706) -> ('un--getMatch'(V0, V1, V2, V3, V1706)) end(E59, E60, E61, E62, E63)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E53} -> (fun (V1707) -> fun (V1708) -> case V4 of {'Idris.TTImp.TTImp.IType', E54} -> (fun (V1709) -> {'Idris.Prelude.Types.Right', []} end(E54)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1708)) end end end(E53)); {'Idris.TTImp.TTImp.IPrimVal', E55, E56} -> (fun (V1710, V1711) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E57, E58} -> (fun (V1712, V1713) -> fun (V1714) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1711, V1713)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1710, V1714)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57, E58)); _ -> fun (V1715) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1715)) end end end(E55, E56)); _ -> fun (V1716) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1716)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E166, E167, E168, E169} -> (fun (V1717, V1718, V1719, V1720) -> ('un--getMatch'(V0, V1, 0, V1718, V1718)) end(E166, E167, E168, E169)); {'Idris.TTImp.TTImp.IAutoApp', E170, E171, E172} -> (fun (V1721, V1722, V1723) -> ('un--getMatch'(V0, V1, 0, V1722, V1722)) end(E170, E171, E172)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E159, E160, E161, E162} -> (fun (V1724, V1725, V1726, V1727) -> fun (V1728) -> ('un--matchFail'(V1724, V1728)) end end(E159, E160, E161, E162)); {'Idris.TTImp.TTImp.IAutoApp', E163, E164, E165} -> (fun (V1729, V1730, V1731) -> fun (V1732) -> ('un--matchFail'(V1729, V1732)) end end(E163, E164, E165)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E124, E125, E126} -> (fun (V1733, V1734, V1735) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E138, E139, E140} -> (fun (V1736, V1737, V1738) -> fun (V1739) -> ('un--matchAny'(V0, V1, V1733, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1735, V1738)), V1739)) end end(E138, E139, E140)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E133, E134, E135, E136, E137} -> (fun (V1740, V1741, V1742, V1743, V1744) -> ('un--getMatch'(V0, V1, V2, V3, V1744)) end(E133, E134, E135, E136, E137)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E127} -> (fun (V1745) -> fun (V1746) -> case V4 of {'Idris.TTImp.TTImp.IType', E128} -> (fun (V1747) -> {'Idris.Prelude.Types.Right', []} end(E128)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1746)) end end end(E127)); {'Idris.TTImp.TTImp.IPrimVal', E129, E130} -> (fun (V1748, V1749) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E131, E132} -> (fun (V1750, V1751) -> fun (V1752) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1749, V1751)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1748, V1752)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131, E132)); _ -> fun (V1753) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1753)) end end end(E129, E130)); _ -> fun (V1754) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1754)) end end end end end(E124, E125, E126)); {'Idris.TTImp.TTImp.IAs', E141, E142, E143, E144, E145} -> (fun (V1755, V1756, V1757, V1758, V1759) -> case V1758 of {'Idris.Core.Name.UN', E146} -> (fun (V1760) -> fun (V1761) -> case V4 of {'Idris.TTImp.TTImp.IAs', E149, E150, E151, E152, E153} -> (fun (V1762, V1763, V1764, V1765, V1766) -> case V1765 of {'Idris.Core.Name.UN', E156} -> (fun (V1767) -> begin (V1768 = (('un--getMatch'(V0, V1, V2, V1759, V1766))(V1761))), case V1768 of {'Idris.Prelude.Types.Left', E157} -> (fun (V1769) -> {'Idris.Prelude.Types.Left', V1769} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V1770) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1760, {'Idris.TTImp.TTImp.IBindVar', V1763, V1767}} | V1770], V1761)) end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156)); _ -> begin (V1771 = (('un--getMatch'(V0, V1, V2, V1759, V4))(V1761))), case V1771 of {'Idris.Prelude.Types.Left', E154} -> (fun (V1772) -> {'Idris.Prelude.Types.Left', V1772} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V1773) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1760, V4} | V1773], V1761)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E149, E150, E151, E152, E153)); _ -> begin (V1774 = (('un--getMatch'(V0, V1, V2, V1759, V4))(V1761))), case V1774 of {'Idris.Prelude.Types.Left', E147} -> (fun (V1775) -> {'Idris.Prelude.Types.Left', V1775} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V1776) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1760, V4} | V1776], V1761)) end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E146)); _ -> ('un--getMatch'(V0, V1, V2, V1759, V4)) end end(E141, E142, E143, E144, E145)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E119, E120, E121, E122, E123} -> (fun (V1777, V1778, V1779, V1780, V1781) -> ('un--getMatch'(V0, V1, V2, V3, V1781)) end(E119, E120, E121, E122, E123)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E113} -> (fun (V1782) -> fun (V1783) -> case V4 of {'Idris.TTImp.TTImp.IType', E114} -> (fun (V1784) -> {'Idris.Prelude.Types.Right', []} end(E114)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1783)) end end end(E113)); {'Idris.TTImp.TTImp.IPrimVal', E115, E116} -> (fun (V1785, V1786) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E117, E118} -> (fun (V1787, V1788) -> fun (V1789) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1786, V1788)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1785, V1789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117, E118)); _ -> fun (V1790) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1790)) end end end(E115, E116)); _ -> fun (V1791) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1791)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E46, E47, E48, E49} -> (fun (V1792, V1793, V1794, V1795) -> fun (V1796) -> ('un--matchFail'(V1792, V1796)) end end(E46, E47, E48, E49)); {'Idris.TTImp.TTImp.IAutoApp', E50, E51, E52} -> (fun (V1797, V1798, V1799) -> fun (V1800) -> ('un--matchFail'(V1797, V1800)) end end(E50, E51, E52)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E11, E12, E13} -> (fun (V1801, V1802, V1803) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E25, E26, E27} -> (fun (V1804, V1805, V1806) -> fun (V1807) -> ('un--matchAny'(V0, V1, V1801, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1803, V1806)), V1807)) end end(E25, E26, E27)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E20, E21, E22, E23, E24} -> (fun (V1808, V1809, V1810, V1811, V1812) -> ('un--getMatch'(V0, V1, V2, V3, V1812)) end(E20, E21, E22, E23, E24)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E14} -> (fun (V1813) -> fun (V1814) -> case V4 of {'Idris.TTImp.TTImp.IType', E15} -> (fun (V1815) -> {'Idris.Prelude.Types.Right', []} end(E15)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1814)) end end end(E14)); {'Idris.TTImp.TTImp.IPrimVal', E16, E17} -> (fun (V1816, V1817) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E18, E19} -> (fun (V1818, V1819) -> fun (V1820) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1817, V1819)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1816, V1820)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18, E19)); _ -> fun (V1821) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1821)) end end end(E16, E17)); _ -> fun (V1822) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1822)) end end end end end(E11, E12, E13)); {'Idris.TTImp.TTImp.IAs', E28, E29, E30, E31, E32} -> (fun (V1823, V1824, V1825, V1826, V1827) -> case V1826 of {'Idris.Core.Name.UN', E33} -> (fun (V1828) -> fun (V1829) -> case V4 of {'Idris.TTImp.TTImp.IAs', E36, E37, E38, E39, E40} -> (fun (V1830, V1831, V1832, V1833, V1834) -> case V1833 of {'Idris.Core.Name.UN', E43} -> (fun (V1835) -> begin (V1836 = (('un--getMatch'(V0, V1, V2, V1827, V1834))(V1829))), case V1836 of {'Idris.Prelude.Types.Left', E44} -> (fun (V1837) -> {'Idris.Prelude.Types.Left', V1837} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V1838) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1828, {'Idris.TTImp.TTImp.IBindVar', V1831, V1835}} | V1838], V1829)) end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> begin (V1839 = (('un--getMatch'(V0, V1, V2, V1827, V4))(V1829))), case V1839 of {'Idris.Prelude.Types.Left', E41} -> (fun (V1840) -> {'Idris.Prelude.Types.Left', V1840} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V1841) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1828, V4} | V1841], V1829)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E36, E37, E38, E39, E40)); _ -> begin (V1842 = (('un--getMatch'(V0, V1, V2, V1827, V4))(V1829))), case V1842 of {'Idris.Prelude.Types.Left', E34} -> (fun (V1843) -> {'Idris.Prelude.Types.Left', V1843} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V1844) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1828, V4} | V1844], V1829)) end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33)); _ -> ('un--getMatch'(V0, V1, V2, V1827, V4)) end end(E28, E29, E30, E31, E32)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E6, E7, E8, E9, E10} -> (fun (V1845, V1846, V1847, V1848, V1849) -> ('un--getMatch'(V0, V1, V2, V3, V1849)) end(E6, E7, E8, E9, E10)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E0} -> (fun (V1850) -> fun (V1851) -> case V4 of {'Idris.TTImp.TTImp.IType', E1} -> (fun (V1852) -> {'Idris.Prelude.Types.Right', []} end(E1)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1851)) end end end(E0)); {'Idris.TTImp.TTImp.IPrimVal', E2, E3} -> (fun (V1853, V1854) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E4, E5} -> (fun (V1855, V1856) -> fun (V1857) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1854, V1856)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1853, V1857)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> fun (V1858) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1858)) end end end(E2, E3)); _ -> fun (V1859) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1859)) end end end end end end end.
'un--getHeadLoc'(V0) -> case V0 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V1, V2) -> fun (V3) -> {'Idris.Prelude.Types.Right', V1} end end(E0, E1)); {'Idris.TTImp.TTImp.IApp', E2, E3, E4} -> (fun (V4, V5, V6) -> ('un--getHeadLoc'(V5)) end(E2, E3, E4)); {'Idris.TTImp.TTImp.IAutoApp', E5, E6, E7} -> (fun (V7, V8, V9) -> ('un--getHeadLoc'(V8)) end(E5, E6, E7)); {'Idris.TTImp.TTImp.INamedApp', E8, E9, E10, E11} -> (fun (V10, V11, V12, V13) -> ('un--getHeadLoc'(V11)) end(E8, E9, E10, E11)); _ -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Could not find head of LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V0))))}, V14)) end end.
'un--getArgMatch'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V3 end()); _ -> case V2 of 1 -> case V5 of {'Idris.Prelude.Types.Just', E8} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V7, V8) -> case V7 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V8)), fun (V9) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V12, V13)) end end}, V9, V4)) end)) of {'Idris.Prelude.Types.Just', E19} -> (fun (V14) -> V14 end(E19)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V15 = {'Idris.TTImp.TTImp.ISearch', V0, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(500))}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V8, V15}; 0 -> V15; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> case V5 of {'Idris.Prelude.Types.Just', E15} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V17, V18) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V18)), fun (V19) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V22, V23)) end end}, V19, V4)) end)) of {'Idris.Prelude.Types.Just', E18} -> (fun (V24) -> V24 end(E18)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V25 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V18, V25}; 0 -> V25; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13, E14)); _ -> case V5 of {'Idris.Prelude.Types.Just', E9} -> (fun (V26) -> case V26 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V27, V28) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V28)), fun (V29) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V32, V33)) end end}, V29, V4)) end)) of {'Idris.Prelude.Types.Just', E12} -> (fun (V34) -> V34 end(E12)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V35 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V28, V35}; 0 -> V35; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> case V5 of {'Idris.Prelude.Types.Just', E4} -> (fun (V36) -> case V36 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V37, V38) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V38)), fun (V39) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V40, V41)) end end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V42, V43)) end end}, V39, V4)) end)) of {'Idris.Prelude.Types.Just', E7} -> (fun (V44) -> V44 end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V45 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V38, V45}; 0 -> V45; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V46) -> case V46 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V47, V48) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V48)), fun (V49) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V52, V53)) end end}, V49, V4)) end)) of {'Idris.Prelude.Types.Just', E3} -> (fun (V54) -> V54 end(E3)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V55 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V48, V55}; 0 -> V55; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--addAlias'(V0, V1, V2, V3, V4) -> case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V2)) of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V3)) of {'Idris.Prelude.Types.Just', E1} -> (fun (V6) -> begin (V139 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"ide-mode.highlight.alias"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Adding alias: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V7) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V8, V9)) end end}, {'Idris.Prelude.Show.MkShow', fun (V10) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V11) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V12) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V12)) end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V13, V14)) end end}, {'Idris.Prelude.Show.MkShow', fun (V15) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V16, V17)) end end}}, V11)) end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V21, V22)) end end}, {'Idris.Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V24, V25)) end end}}, V18, V19)) end end}, {'Idris.Prelude.Show.MkShow', fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V28, V29)) end end}, {'Idris.Prelude.Show.MkShow', fun (V30) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V31, V32)) end end}}, V26)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V36, V37)) end end}, {'Idris.Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V39, V40)) end end}}, V33, V34)) end end}}, V10)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V44)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V45, V46)) end end}, {'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V48, V49)) end end}}, V43)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V53, V54)) end end}, {'Idris.Prelude.Show.MkShow', fun (V55) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V55)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V56, V57)) end end}}, V50, V51)) end end}, {'Idris.Prelude.Show.MkShow', fun (V58) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V59) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V59)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V60, V61)) end end}, {'Idris.Prelude.Show.MkShow', fun (V62) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V62)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V63, V64)) end end}}, V58)) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V67) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V67)) end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V68, V69)) end end}, {'Idris.Prelude.Show.MkShow', fun (V70) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V70)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V71, V72)) end end}}, V65, V66)) end end}}, V41, V42)) end end}}, V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" -> "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V73) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V74, V75)) end end}, {'Idris.Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V78)) end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V79, V80)) end end}, {'Idris.Prelude.Show.MkShow', fun (V81) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V81)) end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V82, V83)) end end}}, V77)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V86) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V86)) end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V87, V88)) end end}, {'Idris.Prelude.Show.MkShow', fun (V89) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V89)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V90, V91)) end end}}, V84, V85)) end end}, {'Idris.Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V93)) end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V94, V95)) end end}, {'Idris.Prelude.Show.MkShow', fun (V96) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V96)) end, fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V97, V98)) end end}}, V92)) end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V101) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V101)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V102, V103)) end end}, {'Idris.Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V105, V106)) end end}}, V99, V100)) end end}}, V76)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V110) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V110)) end, fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V111, V112)) end end}, {'Idris.Prelude.Show.MkShow', fun (V113) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V113)) end, fun (V114) -> fun (V115) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V114, V115)) end end}}, V109)) end, fun (V116) -> fun (V117) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V118) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V118)) end, fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V119, V120)) end end}, {'Idris.Prelude.Show.MkShow', fun (V121) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V121)) end, fun (V122) -> fun (V123) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V122, V123)) end end}}, V116, V117)) end end}, {'Idris.Prelude.Show.MkShow', fun (V124) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V125) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V125)) end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V126, V127)) end end}, {'Idris.Prelude.Show.MkShow', fun (V128) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V128)) end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V129, V130)) end end}}, V124)) end, fun (V131) -> fun (V132) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V133) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V133)) end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V134, V135)) end end}, {'Idris.Prelude.Show.MkShow', fun (V136) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V136)) end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V137, V138)) end end}}, V131, V132)) end end}}, V107, V108)) end end}}, V6)))))))) end, V4))), case V139 of {'Idris.Prelude.Types.Left', E2} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V141) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticAlias'(V0, V5, V6, V4)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
