-module('Idris.Idris2.TTImp.WithClause').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in getNewLHS-1642'/20,
  'case--case block in case block in getNewLHS-1568'/17,
  'case--case block in getNewLHS-1526'/14,
  'case--getNewLHS-1486'/10,
  'case--getNewLHS,dropWithArgs-1429'/14,
  'case--case block in getArgMatch-1362'/9,
  'case--getArgMatch-1324'/8,
  'case--case block in getArgMatch-1275'/7,
  'case--getArgMatch-1243'/6,
  'case--mergeMatches-1181'/6,
  'case--getMatch-1088'/6,
  'case--getMatch-872'/10,
  'case--getMatch-750'/14,
  'case--getMatch-678'/6,
  'case--getMatch-637'/7,
  'case--getMatch-591'/8,
  'nested--8597-1838--in--un--wrhsC'/8,
  'nested--8597-1837--in--un--wrhs'/8,
  'nested--8597-1835--in--un--withApply'/10,
  'nested--8597-1836--in--un--updateWith'/10,
  'nested--7141-709--in--un--samePiInfo'/15,
  'nested--8088-1406--in--un--dropWithArgs'/11,
  'un--withRHS'/7,
  'un--mergeMatches'/2,
  'un--matchFail'/3,
  'un--matchAny'/3,
  'un--matchAll'/2,
  'un--getNewLHS'/10,
  'un--getMatch'/3,
  'un--getArgMatch'/6
]).
'case--case block in case block in case block in getNewLHS-1642'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of [E0 | E1] -> (fun (V20, V21) -> fun (V22) -> begin (V26 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V14)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V17)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" dropping "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V23) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V24, V25)) end end}, [V20 | V21])))))))))) end))(V22))), case V26 of {'Idris.Prelude.Types.Left', E2} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V28) -> begin (V29 = (('un--getMatch'(0, V14, V17))(V22))), case V29 of {'Idris.Prelude.Types.Left', E4} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V31) -> begin (V47 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matches: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V33) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V34, V35)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V36) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V36)) end, fun (V37) -> fun (V38) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V37, V38)) end end}}, V32)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V41) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V41)) end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V42, V43)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V44) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V44)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V45, V46)) end end}}, V39, V40)) end end}, V31)))) end))(V22))), case V47 of {'Idris.Prelude.Types.Left', E6} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V49) -> begin (V51 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V50) -> ('un--getArgMatch'(V7, {'Idris.TTImp.Elab.Check.InLHS', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'())}, 1, V20, V31, V50)) end, V3))), begin (V55 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parameters: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V53, V54)) end end}, V51)))) end))(V22))), case V55 of {'Idris.Prelude.Types.Left', E8} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V57) -> begin (V58 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, V4}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V51, V21))))), begin (V59 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V58)))) end))(V22))), case V59 of {'Idris.Prelude.Types.Left', E10} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V61) -> {'Idris.Prelude.Types.Right', V58} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V62) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V62)) end end.
'case--case block in case block in getNewLHS-1568'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> begin (V20 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V12, V19))), case V20 of {'Idris.Prelude.Types.Left', E2} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V22) -> begin (V23 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parent LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V14)))) end))(V19))), case V23 of {'Idris.Prelude.Types.Left', E4} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V25) -> begin (V26 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Modified LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V18)))) end))(V19))), case V26 of {'Idris.Prelude.Types.Left', E6} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V28) -> begin (V29 = {'Idris.Builtin.MkPair', V17, V18}), (('case--case block in case block in case block in getNewLHS-1642'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18, V29, ('Idris.Idris2.Data.List':'un--reverse'('erased', V10))))(V19)) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in getNewLHS-1526'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V9, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = {'Idris.Builtin.MkPair', V14, V15}), case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V21, V22) -> begin (V23 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V12, V16))), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> begin (V26 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parent LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V15)))) end))(V16))), case V26 of {'Idris.Prelude.Types.Left', E8} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V28) -> begin (V29 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Modified LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V22)))) end))(V16))), case V29 of {'Idris.Prelude.Types.Left', E10} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V31) -> begin (V32 = {'Idris.Builtin.MkPair', V21, V22}), (('case--case block in case block in case block in getNewLHS-1642'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V14, V15, V20, V21, V22, V32, ('Idris.Idris2.Data.List':'un--reverse'('erased', V10))))(V16)) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewLHS-1486'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V8, V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, 0, V12))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V2, V12))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = {'Idris.Builtin.MkPair', V10, V11}), case V21 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V23, V24) -> begin (V25 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V10, V12))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> begin (V28 = {'Idris.Builtin.MkPair', V23, V24}), case V27 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V29, V30) -> begin (V31 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V15, V12))), case V31 of {'Idris.Prelude.Types.Left', E14} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V33) -> begin (V34 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parent LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V24)))) end))(V12))), case V34 of {'Idris.Prelude.Types.Left', E16} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V36) -> begin (V37 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Modified LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V30)))) end))(V12))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = {'Idris.Builtin.MkPair', V29, V30}), (('case--case block in case block in case block in getNewLHS-1642'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V10, V11, V22, V15, V23, V24, V28, V29, V30, V40, ('Idris.Idris2.Data.List':'un--reverse'('erased', V11))))(V12)) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewLHS,dropWithArgs-1429'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V14, [V11 | V15]}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in getArgMatch-1362'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of 0 -> {'Idris.TTImp.TTImp.IAs', V6, V6, {'Idris.Core.TT.UseLeft'}, V1, V7}; 1 -> V7; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getArgMatch-1324'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> V8 end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V9 = {'Idris.TTImp.TTImp.Implicit', V6, 0}), ('case--case block in getArgMatch-1362'(V0, V1, V2, V3, V4, V5, V6, V9, ('Idris.Idris2.Data.Maybe':'un--isJust'('erased', ('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V5)))))) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in getArgMatch-1275'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> {'Idris.TTImp.TTImp.IAs', V4, V4, {'Idris.Core.TT.UseLeft'}, V0, V5}; 1 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getArgMatch-1243'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> V6 end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V7 = {'Idris.TTImp.TTImp.ISearch', V4, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(500))}), ('case--case block in getArgMatch-1275'(V0, V1, V2, V3, V4, V7, ('Idris.Idris2.Data.Maybe':'un--isJust'('erased', ('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V3)))))) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeMatches-1181'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V0, V1} | V4]} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> fun (V8) -> begin (V12 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V9) -> case V9 of {'Idris.Prelude.Types.Left', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--getMatch'(V3, V1, V7)), V8))), case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> (('un--mergeMatches'(V3, V2))(V8)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-1088'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> fun (V6) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V7) -> ('un--matchFail'('erased', V1, V7)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-872'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> ('un--matchAll'(V8, [{'Idris.Builtin.MkPair', V3, V6} | [{'Idris.Builtin.MkPair', V1, V4} | []]])); 1 -> fun (V10) -> ('un--matchFail'('erased', V7, V10)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-750'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('un--matchAll'(V12, [{'Idris.Builtin.MkPair', V2, V7} | [{'Idris.Builtin.MkPair', V1, V6} | []]])); 1 -> fun (V14) -> ('un--matchFail'('erased', V11, V14)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-678'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> fun (V6) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V7) -> ('un--matchFail'('erased', V3, V7)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-637'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V8) -> ('un--matchFail'('erased', V4, V8)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-591'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> fun (V8) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V9) -> ('un--matchFail'('erased', V5, V9)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8597-1838--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V8, V9, V10) -> fun (V11) -> begin (V12 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V10))(V11))), case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V8, V9, V14}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> fun (V15) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V8, V9, V10, V11, V12, V13) -> fun (V14) -> begin (V15 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V13))(V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V8, V9, V10, V11, V17, V20}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V21, V22, V23, V24, V25, V26) -> fun (V27) -> begin (V28 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V25))(V27))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> begin (V31 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V21, V22, V23, V24, V30, V33}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25, E26} -> (fun (V34, V35, V36, V37, V38, V39, V40) -> fun (V41) -> begin (V42 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V38))(V41))), case V42 of {'Idris.Prelude.Types.Left', E27} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V44) -> begin (V45 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V39))(V41))), case V45 of {'Idris.Prelude.Types.Left', E29} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V47) -> begin (V48 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V40))(V41))), case V48 of {'Idris.Prelude.Types.Left', E31} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V50) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V34, V35, V36, V37, V44, V47, V50}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25, E26)); {'Idris.TTImp.TTImp.ICase', E33, E34, E35, E36} -> (fun (V51, V52, V53, V54) -> fun (V55) -> begin (V56 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V52))(V55))), case V56 of {'Idris.Prelude.Types.Left', E37} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V58) -> begin (V59 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V53))(V55))), case V59 of {'Idris.Prelude.Types.Left', E39} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V61) -> begin (V63 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V62) -> ('nested--8597-1838--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V62)) end, V54, []))(V55))), case V63 of {'Idris.Prelude.Types.Left', E41} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V51, V58, V61, V65}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35, E36)); {'Idris.TTImp.TTImp.ILocal', E43, E44, E45} -> (fun (V66, V67, V68) -> fun (V69) -> begin (V70 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V68))(V69))), case V70 of {'Idris.Prelude.Types.Left', E46} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V72) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V66, V67, V72}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43, E44, E45)); {'Idris.TTImp.TTImp.IUpdate', E48, E49, E50} -> (fun (V73, V74, V75) -> fun (V76) -> begin (V77 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V75))(V76))), case V77 of {'Idris.Prelude.Types.Left', E51} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V73, V74, V79}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49, E50)); {'Idris.TTImp.TTImp.IApp', E53, E54, E55} -> (fun (V80, V81, V82) -> fun (V83) -> begin (V84 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V81))(V83))), case V84 of {'Idris.Prelude.Types.Left', E56} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V86) -> begin (V87 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V82))(V83))), case V87 of {'Idris.Prelude.Types.Left', E58} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V89) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V80, V86, V89}} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E53, E54, E55)); {'Idris.TTImp.TTImp.IAutoApp', E60, E61, E62} -> (fun (V90, V91, V92) -> fun (V93) -> begin (V94 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V91))(V93))), case V94 of {'Idris.Prelude.Types.Left', E63} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V96) -> begin (V97 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V92))(V93))), case V97 of {'Idris.Prelude.Types.Left', E65} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V90, V96, V99}} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E60, E61, E62)); {'Idris.TTImp.TTImp.INamedApp', E67, E68, E69, E70} -> (fun (V100, V101, V102, V103) -> fun (V104) -> begin (V105 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V101))(V104))), case V105 of {'Idris.Prelude.Types.Left', E71} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V107) -> begin (V108 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V103))(V104))), case V108 of {'Idris.Prelude.Types.Left', E73} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V110) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V100, V107, V102, V110}} end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E67, E68, E69, E70)); {'Idris.TTImp.TTImp.IWithApp', E75, E76, E77} -> (fun (V111, V112, V113) -> ('nested--8597-1836--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V111, V112, [V113 | []])) end(E75, E76, E77)); {'Idris.TTImp.TTImp.IRewrite', E78, E79, E80} -> (fun (V114, V115, V116) -> fun (V117) -> begin (V118 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V115))(V117))), case V118 of {'Idris.Prelude.Types.Left', E81} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V120) -> begin (V121 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V116))(V117))), case V121 of {'Idris.Prelude.Types.Left', E83} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V123) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V114, V120, V123}} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E78, E79, E80)); {'Idris.TTImp.TTImp.IDelayed', E85, E86, E87} -> (fun (V124, V125, V126) -> fun (V127) -> begin (V128 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V126))(V127))), case V128 of {'Idris.Prelude.Types.Left', E88} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V130) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V124, V125, V130}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85, E86, E87)); {'Idris.TTImp.TTImp.IDelay', E90, E91} -> (fun (V131, V132) -> fun (V133) -> begin (V134 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V132))(V133))), case V134 of {'Idris.Prelude.Types.Left', E92} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V136) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V131, V136}} end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90, E91)); {'Idris.TTImp.TTImp.IForce', E94, E95} -> (fun (V137, V138) -> fun (V139) -> begin (V140 = (('nested--8597-1837--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V138))(V139))), case V140 of {'Idris.Prelude.Types.Left', E96} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V142) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V137, V142}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E94, E95)); _ -> fun (V143) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--8597-1835--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [] -> V8; [E0 | E1] -> (fun (V10, V11) -> ('nested--8597-1835--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, {'Idris.TTImp.TTImp.IWithApp', V7, V8, V10}, V11)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8597-1836--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.IWithApp', E12, E13, E14} -> (fun (V10, V11, V12) -> ('nested--8597-1836--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V11, [V12 | V9])) end(E12, E13, E14)); _ -> case V9 of [] -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} application"/utf8>>}, V13)) end; [E0 | E1] -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With-app: Matching "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V0)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V8)))))))) end))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--getMatch'(1, V0, V8))(V16))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V38 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Result: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V24) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V25, V26)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V27) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V28, V29)) end end}}, V23)) end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V32)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V33, V34)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V36, V37)) end end}}, V30, V31)) end end}, V22)))) end))(V16))), case V38 of {'Idris.Prelude.Types.Left', E6} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V40) -> begin (V42 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('un--getArgMatch'(V7, {'Idris.TTImp.Elab.Check.InExpr'}, 0, V14, V22, V41)) end, V2))))), begin (V100 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With args for RHS: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V47, V48)) end end}, V45)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V52, V53)) end end}, V49, V50)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V54) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V55, V56)) end end}}, V44)) end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V59) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V60) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V61, V62)) end end}, V59)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V65) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V65)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V66, V67)) end end}, V63, V64)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V68) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V69, V70)) end end}}, V57, V58)) end end}, V43)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V73) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V74) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V75) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V76, V77)) end end}, V74)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V80) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V80)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V81, V82)) end end}, V78, V79)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V84, V85)) end end}}, V73)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V88) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V89) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V89)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V90, V91)) end end}, V88)) end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V94) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V95, V96)) end end}, V92, V93)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V97) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V97)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V98, V99)) end end}}, V86, V87)) end end}, V71, V72)) end end}, V2)))) end))(V16))), case V100 of {'Idris.Prelude.Types.Left', E8} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V102) -> begin (V103 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New RHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V42)))) end))(V16))), case V103 of {'Idris.Prelude.Types.Left', E10} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V105) -> {'Idris.Prelude.Types.Right', ('nested--8597-1835--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V42, V15))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--7141-709--in--un--samePiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.Core.TT.Explicit'} -> (fun () -> case V14 of {'Idris.Core.TT.Explicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> case V14 of {'Idris.Core.TT.Implicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V14 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V15) -> case V14 of {'Idris.Core.TT.DefImplicit', E1} -> (fun (V16) -> 0 end(E1)); _ -> 1 end end(E0)); _ -> 1 end.
'nested--8088-1406--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 0 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V10, []}} end; _ -> begin (V12 = (V9 - 1)), case V10 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V13, V14, V15) -> fun (V16) -> begin (V17 = (('nested--8088-1406--in--un--dropWithArgs'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V12, V14))(V16))), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, [V15 | V21]}} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V22)) end end end end.
'un--withRHS'(V0, V1, V2, V3, V4, V5, V6) -> ('nested--8597-1837--in--un--wrhs'(V6, V5, V4, V3, V2, V1, V0, V5)).
'un--mergeMatches'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('un--mergeMatches'(V0, V4))(V7))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> (('case--mergeMatches-1181'(V5, V6, V4, V0, V10, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V13, V14)) end end}, V5, V10))))(V7)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchFail'(V0, V1, V2) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"With clause does not match parent"/utf8>>}, V2)).
'un--matchAny'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> ('un--matchFail'('erased', V0, V3)) end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'('erased', ('un--getMatch'(V1, V6, V7)), fun (V9) -> ('un--matchAny'(V0, V1, V5)) end, V8)) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchAll'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('un--matchAll'(V0, V4))(V7))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = (('un--getMatch'(V0, V5, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> (('un--mergeMatches'(V0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V13, V10))))(V7)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNewLHS'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V10 = (('nested--8088-1406--in--un--dropWithArgs'('erased', V8, V7, V6, V5, V4, V3, V2, V1, V3, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V9))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, 0, V9))), case V18 of {'Idris.Prelude.Types.Left', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V7, V9))), case V21 of {'Idris.Prelude.Types.Left', E8} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V23) -> begin (V24 = {'Idris.Builtin.MkPair', V13, V14}), case V23 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V25, V26) -> begin (V27 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V13, V9))), case V27 of {'Idris.Prelude.Types.Left', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V29) -> begin (V30 = {'Idris.Builtin.MkPair', V25, V26}), case V29 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V31, V32) -> begin (V33 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V17, V9))), case V33 of {'Idris.Prelude.Types.Left', E16} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V35) -> begin (V36 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parent LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V26)))) end))(V9))), case V36 of {'Idris.Prelude.Types.Left', E18} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V38) -> begin (V39 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Modified LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V32)))) end))(V9))), case V39 of {'Idris.Prelude.Types.Left', E20} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V41) -> begin (V42 = {'Idris.Builtin.MkPair', V31, V32}), (('case--case block in case block in case block in getNewLHS-1642'('erased', V8, V7, V6, V5, V4, V3, V2, V1, V13, V14, V24, V17, V25, V26, V30, V31, V32, V42, ('Idris.Idris2.Data.List':'un--reverse'('erased', V14))))(V9)) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getMatch'(V0, V1, V2) -> case V1 of {'Idris.TTImp.TTImp.IBindVar', E173, E174} -> (fun (V3, V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V4, V2} | []]} end end(E173, E174)); {'Idris.TTImp.TTImp.Implicit', E175, E176} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', []} end end(E175, E176)); {'Idris.TTImp.TTImp.IVar', E177, E178} -> (fun (V9, V10) -> case V10 of {'Idris.Core.Name.NS', E354, E355} -> (fun (V11, V12) -> case V2 of {'Idris.TTImp.TTImp.IVar', E531, E532} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.NS', E533, E534} -> (fun (V15, V16) -> ('case--getMatch-591'(V9, V12, V11, V16, V15, V13, V0, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V12, V16)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V15, V11)) end)))) end(E533, E534)); _ -> ('case--getMatch-637'(V9, V12, V11, V14, V13, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V12, V14)))) end end(E531, E532)); _ -> case V2 of {'Idris.TTImp.TTImp.IVar', E529, E530} -> (fun (V17, V18) -> ('case--getMatch-678'(V9, V10, V18, V17, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V10, V18)))) end(E529, E530)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E462, E463, E464, E465} -> (fun (V19, V20, V21, V22) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V20, V2} | [{'Idris.Builtin.MkPair', V22, V22} | []]])) end(E462, E463, E464, E465)); {'Idris.TTImp.TTImp.IAutoApp', E466, E467, E468} -> (fun (V23, V24, V25) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V24, V2} | [{'Idris.Builtin.MkPair', V25, V25} | []]])) end(E466, E467, E468)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E455, E456, E457, E458} -> (fun (V26, V27, V28, V29) -> fun (V30) -> ('un--matchFail'('erased', V26, V30)) end end(E455, E456, E457, E458)); {'Idris.TTImp.TTImp.IAutoApp', E459, E460, E461} -> (fun (V31, V32, V33) -> fun (V34) -> ('un--matchFail'('erased', V31, V34)) end end(E459, E460, E461)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E420, E421, E422} -> (fun (V35, V36, V37) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E434, E435, E436} -> (fun (V38, V39, V40) -> ('un--matchAny'(V35, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V37, V40)))) end(E434, E435, E436)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E429, E430, E431, E432, E433} -> (fun (V41, V42, V43, V44, V45) -> ('un--getMatch'(V0, V1, V45)) end(E429, E430, E431, E432, E433)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E423} -> (fun (V46) -> case V2 of {'Idris.TTImp.TTImp.IType', E424} -> (fun (V47) -> fun (V48) -> {'Idris.Prelude.Types.Right', []} end end(E424)); _ -> fun (V49) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V49)) end end end(E423)); {'Idris.TTImp.TTImp.IPrimVal', E425, E426} -> (fun (V50, V51) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E427, E428} -> (fun (V52, V53) -> ('case--getMatch-1088'(V51, V50, V53, V52, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V51, V53)))) end(E427, E428)); _ -> fun (V54) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V54)) end end end(E425, E426)); _ -> fun (V55) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V55)) end end end end end(E420, E421, E422)); {'Idris.TTImp.TTImp.IAs', E437, E438, E439, E440, E441} -> (fun (V56, V57, V58, V59, V60) -> case V59 of {'Idris.Core.Name.UN', E442} -> (fun (V61) -> case V2 of {'Idris.TTImp.TTImp.IAs', E445, E446, E447, E448, E449} -> (fun (V62, V63, V64, V65, V66) -> case V65 of {'Idris.Core.Name.UN', E452} -> (fun (V67) -> fun (V68) -> begin (V69 = (('un--getMatch'(V0, V60, V66))(V68))), case V69 of {'Idris.Prelude.Types.Left', E453} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E453)); {'Idris.Prelude.Types.Right', E454} -> (fun (V71) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V61, {'Idris.TTImp.TTImp.IBindVar', V62, V67}} | V71]))(V68)) end(E454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E452)); _ -> fun (V72) -> begin (V73 = (('un--getMatch'(V0, V60, V2))(V72))), case V73 of {'Idris.Prelude.Types.Left', E450} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E450)); {'Idris.Prelude.Types.Right', E451} -> (fun (V75) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V61, V2} | V75]))(V72)) end(E451)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E445, E446, E447, E448, E449)); _ -> fun (V76) -> begin (V77 = (('un--getMatch'(V0, V60, V2))(V76))), case V77 of {'Idris.Prelude.Types.Left', E443} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E443)); {'Idris.Prelude.Types.Right', E444} -> (fun (V79) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V61, V2} | V79]))(V76)) end(E444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E442)); _ -> ('un--getMatch'(V0, V60, V2)) end end(E437, E438, E439, E440, E441)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E415, E416, E417, E418, E419} -> (fun (V80, V81, V82, V83, V84) -> ('un--getMatch'(V0, V1, V84)) end(E415, E416, E417, E418, E419)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E409} -> (fun (V85) -> case V2 of {'Idris.TTImp.TTImp.IType', E410} -> (fun (V86) -> fun (V87) -> {'Idris.Prelude.Types.Right', []} end end(E410)); _ -> fun (V88) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V88)) end end end(E409)); {'Idris.TTImp.TTImp.IPrimVal', E411, E412} -> (fun (V89, V90) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E413, E414} -> (fun (V91, V92) -> ('case--getMatch-1088'(V90, V89, V92, V91, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V90, V92)))) end(E413, E414)); _ -> fun (V93) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V93)) end end end(E411, E412)); _ -> fun (V94) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V94)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E522, E523, E524, E525} -> (fun (V95, V96, V97, V98) -> ('un--getMatch'(1, V96, V96)) end(E522, E523, E524, E525)); {'Idris.TTImp.TTImp.IAutoApp', E526, E527, E528} -> (fun (V99, V100, V101) -> ('un--getMatch'(1, V100, V100)) end(E526, E527, E528)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E515, E516, E517, E518} -> (fun (V102, V103, V104, V105) -> fun (V106) -> ('un--matchFail'('erased', V102, V106)) end end(E515, E516, E517, E518)); {'Idris.TTImp.TTImp.IAutoApp', E519, E520, E521} -> (fun (V107, V108, V109) -> fun (V110) -> ('un--matchFail'('erased', V107, V110)) end end(E519, E520, E521)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E480, E481, E482} -> (fun (V111, V112, V113) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E494, E495, E496} -> (fun (V114, V115, V116) -> ('un--matchAny'(V111, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V113, V116)))) end(E494, E495, E496)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E489, E490, E491, E492, E493} -> (fun (V117, V118, V119, V120, V121) -> ('un--getMatch'(V0, V1, V121)) end(E489, E490, E491, E492, E493)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E483} -> (fun (V122) -> case V2 of {'Idris.TTImp.TTImp.IType', E484} -> (fun (V123) -> fun (V124) -> {'Idris.Prelude.Types.Right', []} end end(E484)); _ -> fun (V125) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V125)) end end end(E483)); {'Idris.TTImp.TTImp.IPrimVal', E485, E486} -> (fun (V126, V127) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E487, E488} -> (fun (V128, V129) -> ('case--getMatch-1088'(V127, V126, V129, V128, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V127, V129)))) end(E487, E488)); _ -> fun (V130) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V130)) end end end(E485, E486)); _ -> fun (V131) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V131)) end end end end end(E480, E481, E482)); {'Idris.TTImp.TTImp.IAs', E497, E498, E499, E500, E501} -> (fun (V132, V133, V134, V135, V136) -> case V135 of {'Idris.Core.Name.UN', E502} -> (fun (V137) -> case V2 of {'Idris.TTImp.TTImp.IAs', E505, E506, E507, E508, E509} -> (fun (V138, V139, V140, V141, V142) -> case V141 of {'Idris.Core.Name.UN', E512} -> (fun (V143) -> fun (V144) -> begin (V145 = (('un--getMatch'(V0, V136, V142))(V144))), case V145 of {'Idris.Prelude.Types.Left', E513} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V147) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V137, {'Idris.TTImp.TTImp.IBindVar', V138, V143}} | V147]))(V144)) end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E512)); _ -> fun (V148) -> begin (V149 = (('un--getMatch'(V0, V136, V2))(V148))), case V149 of {'Idris.Prelude.Types.Left', E510} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E510)); {'Idris.Prelude.Types.Right', E511} -> (fun (V151) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V137, V2} | V151]))(V148)) end(E511)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E505, E506, E507, E508, E509)); _ -> fun (V152) -> begin (V153 = (('un--getMatch'(V0, V136, V2))(V152))), case V153 of {'Idris.Prelude.Types.Left', E503} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E503)); {'Idris.Prelude.Types.Right', E504} -> (fun (V155) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V137, V2} | V155]))(V152)) end(E504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E502)); _ -> ('un--getMatch'(V0, V136, V2)) end end(E497, E498, E499, E500, E501)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E475, E476, E477, E478, E479} -> (fun (V156, V157, V158, V159, V160) -> ('un--getMatch'(V0, V1, V160)) end(E475, E476, E477, E478, E479)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E469} -> (fun (V161) -> case V2 of {'Idris.TTImp.TTImp.IType', E470} -> (fun (V162) -> fun (V163) -> {'Idris.Prelude.Types.Right', []} end end(E470)); _ -> fun (V164) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V164)) end end end(E469)); {'Idris.TTImp.TTImp.IPrimVal', E471, E472} -> (fun (V165, V166) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E473, E474} -> (fun (V167, V168) -> ('case--getMatch-1088'(V166, V165, V168, V167, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V166, V168)))) end(E473, E474)); _ -> fun (V169) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V169)) end end end(E471, E472)); _ -> fun (V170) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V170)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E402, E403, E404, E405} -> (fun (V171, V172, V173, V174) -> fun (V175) -> ('un--matchFail'('erased', V171, V175)) end end(E402, E403, E404, E405)); {'Idris.TTImp.TTImp.IAutoApp', E406, E407, E408} -> (fun (V176, V177, V178) -> fun (V179) -> ('un--matchFail'('erased', V176, V179)) end end(E406, E407, E408)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E367, E368, E369} -> (fun (V180, V181, V182) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E381, E382, E383} -> (fun (V183, V184, V185) -> ('un--matchAny'(V180, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V182, V185)))) end(E381, E382, E383)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E376, E377, E378, E379, E380} -> (fun (V186, V187, V188, V189, V190) -> ('un--getMatch'(V0, V1, V190)) end(E376, E377, E378, E379, E380)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E370} -> (fun (V191) -> case V2 of {'Idris.TTImp.TTImp.IType', E371} -> (fun (V192) -> fun (V193) -> {'Idris.Prelude.Types.Right', []} end end(E371)); _ -> fun (V194) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V194)) end end end(E370)); {'Idris.TTImp.TTImp.IPrimVal', E372, E373} -> (fun (V195, V196) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E374, E375} -> (fun (V197, V198) -> ('case--getMatch-1088'(V196, V195, V198, V197, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V196, V198)))) end(E374, E375)); _ -> fun (V199) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V199)) end end end(E372, E373)); _ -> fun (V200) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V200)) end end end end end(E367, E368, E369)); {'Idris.TTImp.TTImp.IAs', E384, E385, E386, E387, E388} -> (fun (V201, V202, V203, V204, V205) -> case V204 of {'Idris.Core.Name.UN', E389} -> (fun (V206) -> case V2 of {'Idris.TTImp.TTImp.IAs', E392, E393, E394, E395, E396} -> (fun (V207, V208, V209, V210, V211) -> case V210 of {'Idris.Core.Name.UN', E399} -> (fun (V212) -> fun (V213) -> begin (V214 = (('un--getMatch'(V0, V205, V211))(V213))), case V214 of {'Idris.Prelude.Types.Left', E400} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E400)); {'Idris.Prelude.Types.Right', E401} -> (fun (V216) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V206, {'Idris.TTImp.TTImp.IBindVar', V207, V212}} | V216]))(V213)) end(E401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E399)); _ -> fun (V217) -> begin (V218 = (('un--getMatch'(V0, V205, V2))(V217))), case V218 of {'Idris.Prelude.Types.Left', E397} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E397)); {'Idris.Prelude.Types.Right', E398} -> (fun (V220) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V206, V2} | V220]))(V217)) end(E398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E392, E393, E394, E395, E396)); _ -> fun (V221) -> begin (V222 = (('un--getMatch'(V0, V205, V2))(V221))), case V222 of {'Idris.Prelude.Types.Left', E390} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E390)); {'Idris.Prelude.Types.Right', E391} -> (fun (V224) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V206, V2} | V224]))(V221)) end(E391)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E389)); _ -> ('un--getMatch'(V0, V205, V2)) end end(E384, E385, E386, E387, E388)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E362, E363, E364, E365, E366} -> (fun (V225, V226, V227, V228, V229) -> ('un--getMatch'(V0, V1, V229)) end(E362, E363, E364, E365, E366)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E356} -> (fun (V230) -> case V2 of {'Idris.TTImp.TTImp.IType', E357} -> (fun (V231) -> fun (V232) -> {'Idris.Prelude.Types.Right', []} end end(E357)); _ -> fun (V233) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V233)) end end end(E356)); {'Idris.TTImp.TTImp.IPrimVal', E358, E359} -> (fun (V234, V235) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E360, E361} -> (fun (V236, V237) -> ('case--getMatch-1088'(V235, V234, V237, V236, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V235, V237)))) end(E360, E361)); _ -> fun (V238) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V238)) end end end(E358, E359)); _ -> fun (V239) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V239)) end end end end end end end end end(E354, E355)); _ -> case V2 of {'Idris.TTImp.TTImp.IVar', E352, E353} -> (fun (V240, V241) -> ('case--getMatch-678'(V9, V10, V241, V240, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V10, V241)))) end(E352, E353)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E285, E286, E287, E288} -> (fun (V242, V243, V244, V245) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V243, V2} | [{'Idris.Builtin.MkPair', V245, V245} | []]])) end(E285, E286, E287, E288)); {'Idris.TTImp.TTImp.IAutoApp', E289, E290, E291} -> (fun (V246, V247, V248) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V247, V2} | [{'Idris.Builtin.MkPair', V248, V248} | []]])) end(E289, E290, E291)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E278, E279, E280, E281} -> (fun (V249, V250, V251, V252) -> fun (V253) -> ('un--matchFail'('erased', V249, V253)) end end(E278, E279, E280, E281)); {'Idris.TTImp.TTImp.IAutoApp', E282, E283, E284} -> (fun (V254, V255, V256) -> fun (V257) -> ('un--matchFail'('erased', V254, V257)) end end(E282, E283, E284)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E243, E244, E245} -> (fun (V258, V259, V260) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E257, E258, E259} -> (fun (V261, V262, V263) -> ('un--matchAny'(V258, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V260, V263)))) end(E257, E258, E259)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E252, E253, E254, E255, E256} -> (fun (V264, V265, V266, V267, V268) -> ('un--getMatch'(V0, V1, V268)) end(E252, E253, E254, E255, E256)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E246} -> (fun (V269) -> case V2 of {'Idris.TTImp.TTImp.IType', E247} -> (fun (V270) -> fun (V271) -> {'Idris.Prelude.Types.Right', []} end end(E247)); _ -> fun (V272) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V272)) end end end(E246)); {'Idris.TTImp.TTImp.IPrimVal', E248, E249} -> (fun (V273, V274) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E250, E251} -> (fun (V275, V276) -> ('case--getMatch-1088'(V274, V273, V276, V275, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V274, V276)))) end(E250, E251)); _ -> fun (V277) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V277)) end end end(E248, E249)); _ -> fun (V278) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V278)) end end end end end(E243, E244, E245)); {'Idris.TTImp.TTImp.IAs', E260, E261, E262, E263, E264} -> (fun (V279, V280, V281, V282, V283) -> case V282 of {'Idris.Core.Name.UN', E265} -> (fun (V284) -> case V2 of {'Idris.TTImp.TTImp.IAs', E268, E269, E270, E271, E272} -> (fun (V285, V286, V287, V288, V289) -> case V288 of {'Idris.Core.Name.UN', E275} -> (fun (V290) -> fun (V291) -> begin (V292 = (('un--getMatch'(V0, V283, V289))(V291))), case V292 of {'Idris.Prelude.Types.Left', E276} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V294) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V284, {'Idris.TTImp.TTImp.IBindVar', V285, V290}} | V294]))(V291)) end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E275)); _ -> fun (V295) -> begin (V296 = (('un--getMatch'(V0, V283, V2))(V295))), case V296 of {'Idris.Prelude.Types.Left', E273} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V298) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V284, V2} | V298]))(V295)) end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E268, E269, E270, E271, E272)); _ -> fun (V299) -> begin (V300 = (('un--getMatch'(V0, V283, V2))(V299))), case V300 of {'Idris.Prelude.Types.Left', E266} -> (fun (V301) -> {'Idris.Prelude.Types.Left', V301} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V302) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V284, V2} | V302]))(V299)) end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E265)); _ -> ('un--getMatch'(V0, V283, V2)) end end(E260, E261, E262, E263, E264)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E238, E239, E240, E241, E242} -> (fun (V303, V304, V305, V306, V307) -> ('un--getMatch'(V0, V1, V307)) end(E238, E239, E240, E241, E242)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E232} -> (fun (V308) -> case V2 of {'Idris.TTImp.TTImp.IType', E233} -> (fun (V309) -> fun (V310) -> {'Idris.Prelude.Types.Right', []} end end(E233)); _ -> fun (V311) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V311)) end end end(E232)); {'Idris.TTImp.TTImp.IPrimVal', E234, E235} -> (fun (V312, V313) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E236, E237} -> (fun (V314, V315) -> ('case--getMatch-1088'(V313, V312, V315, V314, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V313, V315)))) end(E236, E237)); _ -> fun (V316) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V316)) end end end(E234, E235)); _ -> fun (V317) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V317)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E345, E346, E347, E348} -> (fun (V318, V319, V320, V321) -> ('un--getMatch'(1, V319, V319)) end(E345, E346, E347, E348)); {'Idris.TTImp.TTImp.IAutoApp', E349, E350, E351} -> (fun (V322, V323, V324) -> ('un--getMatch'(1, V323, V323)) end(E349, E350, E351)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E338, E339, E340, E341} -> (fun (V325, V326, V327, V328) -> fun (V329) -> ('un--matchFail'('erased', V325, V329)) end end(E338, E339, E340, E341)); {'Idris.TTImp.TTImp.IAutoApp', E342, E343, E344} -> (fun (V330, V331, V332) -> fun (V333) -> ('un--matchFail'('erased', V330, V333)) end end(E342, E343, E344)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E303, E304, E305} -> (fun (V334, V335, V336) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E317, E318, E319} -> (fun (V337, V338, V339) -> ('un--matchAny'(V334, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V336, V339)))) end(E317, E318, E319)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E312, E313, E314, E315, E316} -> (fun (V340, V341, V342, V343, V344) -> ('un--getMatch'(V0, V1, V344)) end(E312, E313, E314, E315, E316)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E306} -> (fun (V345) -> case V2 of {'Idris.TTImp.TTImp.IType', E307} -> (fun (V346) -> fun (V347) -> {'Idris.Prelude.Types.Right', []} end end(E307)); _ -> fun (V348) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V348)) end end end(E306)); {'Idris.TTImp.TTImp.IPrimVal', E308, E309} -> (fun (V349, V350) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E310, E311} -> (fun (V351, V352) -> ('case--getMatch-1088'(V350, V349, V352, V351, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V350, V352)))) end(E310, E311)); _ -> fun (V353) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V353)) end end end(E308, E309)); _ -> fun (V354) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V354)) end end end end end(E303, E304, E305)); {'Idris.TTImp.TTImp.IAs', E320, E321, E322, E323, E324} -> (fun (V355, V356, V357, V358, V359) -> case V358 of {'Idris.Core.Name.UN', E325} -> (fun (V360) -> case V2 of {'Idris.TTImp.TTImp.IAs', E328, E329, E330, E331, E332} -> (fun (V361, V362, V363, V364, V365) -> case V364 of {'Idris.Core.Name.UN', E335} -> (fun (V366) -> fun (V367) -> begin (V368 = (('un--getMatch'(V0, V359, V365))(V367))), case V368 of {'Idris.Prelude.Types.Left', E336} -> (fun (V369) -> {'Idris.Prelude.Types.Left', V369} end(E336)); {'Idris.Prelude.Types.Right', E337} -> (fun (V370) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V360, {'Idris.TTImp.TTImp.IBindVar', V361, V366}} | V370]))(V367)) end(E337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E335)); _ -> fun (V371) -> begin (V372 = (('un--getMatch'(V0, V359, V2))(V371))), case V372 of {'Idris.Prelude.Types.Left', E333} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E333)); {'Idris.Prelude.Types.Right', E334} -> (fun (V374) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V360, V2} | V374]))(V371)) end(E334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E328, E329, E330, E331, E332)); _ -> fun (V375) -> begin (V376 = (('un--getMatch'(V0, V359, V2))(V375))), case V376 of {'Idris.Prelude.Types.Left', E326} -> (fun (V377) -> {'Idris.Prelude.Types.Left', V377} end(E326)); {'Idris.Prelude.Types.Right', E327} -> (fun (V378) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V360, V2} | V378]))(V375)) end(E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E325)); _ -> ('un--getMatch'(V0, V359, V2)) end end(E320, E321, E322, E323, E324)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E298, E299, E300, E301, E302} -> (fun (V379, V380, V381, V382, V383) -> ('un--getMatch'(V0, V1, V383)) end(E298, E299, E300, E301, E302)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E292} -> (fun (V384) -> case V2 of {'Idris.TTImp.TTImp.IType', E293} -> (fun (V385) -> fun (V386) -> {'Idris.Prelude.Types.Right', []} end end(E293)); _ -> fun (V387) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V387)) end end end(E292)); {'Idris.TTImp.TTImp.IPrimVal', E294, E295} -> (fun (V388, V389) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E296, E297} -> (fun (V390, V391) -> ('case--getMatch-1088'(V389, V388, V391, V390, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V389, V391)))) end(E296, E297)); _ -> fun (V392) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V392)) end end end(E294, E295)); _ -> fun (V393) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V393)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E225, E226, E227, E228} -> (fun (V394, V395, V396, V397) -> fun (V398) -> ('un--matchFail'('erased', V394, V398)) end end(E225, E226, E227, E228)); {'Idris.TTImp.TTImp.IAutoApp', E229, E230, E231} -> (fun (V399, V400, V401) -> fun (V402) -> ('un--matchFail'('erased', V399, V402)) end end(E229, E230, E231)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E190, E191, E192} -> (fun (V403, V404, V405) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E204, E205, E206} -> (fun (V406, V407, V408) -> ('un--matchAny'(V403, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V405, V408)))) end(E204, E205, E206)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E199, E200, E201, E202, E203} -> (fun (V409, V410, V411, V412, V413) -> ('un--getMatch'(V0, V1, V413)) end(E199, E200, E201, E202, E203)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E193} -> (fun (V414) -> case V2 of {'Idris.TTImp.TTImp.IType', E194} -> (fun (V415) -> fun (V416) -> {'Idris.Prelude.Types.Right', []} end end(E194)); _ -> fun (V417) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V417)) end end end(E193)); {'Idris.TTImp.TTImp.IPrimVal', E195, E196} -> (fun (V418, V419) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E197, E198} -> (fun (V420, V421) -> ('case--getMatch-1088'(V419, V418, V421, V420, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V419, V421)))) end(E197, E198)); _ -> fun (V422) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V422)) end end end(E195, E196)); _ -> fun (V423) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V423)) end end end end end(E190, E191, E192)); {'Idris.TTImp.TTImp.IAs', E207, E208, E209, E210, E211} -> (fun (V424, V425, V426, V427, V428) -> case V427 of {'Idris.Core.Name.UN', E212} -> (fun (V429) -> case V2 of {'Idris.TTImp.TTImp.IAs', E215, E216, E217, E218, E219} -> (fun (V430, V431, V432, V433, V434) -> case V433 of {'Idris.Core.Name.UN', E222} -> (fun (V435) -> fun (V436) -> begin (V437 = (('un--getMatch'(V0, V428, V434))(V436))), case V437 of {'Idris.Prelude.Types.Left', E223} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V439) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V429, {'Idris.TTImp.TTImp.IBindVar', V430, V435}} | V439]))(V436)) end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E222)); _ -> fun (V440) -> begin (V441 = (('un--getMatch'(V0, V428, V2))(V440))), case V441 of {'Idris.Prelude.Types.Left', E220} -> (fun (V442) -> {'Idris.Prelude.Types.Left', V442} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V443) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V429, V2} | V443]))(V440)) end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E215, E216, E217, E218, E219)); _ -> fun (V444) -> begin (V445 = (('un--getMatch'(V0, V428, V2))(V444))), case V445 of {'Idris.Prelude.Types.Left', E213} -> (fun (V446) -> {'Idris.Prelude.Types.Left', V446} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V447) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V429, V2} | V447]))(V444)) end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E212)); _ -> ('un--getMatch'(V0, V428, V2)) end end(E207, E208, E209, E210, E211)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E185, E186, E187, E188, E189} -> (fun (V448, V449, V450, V451, V452) -> ('un--getMatch'(V0, V1, V452)) end(E185, E186, E187, E188, E189)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E179} -> (fun (V453) -> case V2 of {'Idris.TTImp.TTImp.IType', E180} -> (fun (V454) -> fun (V455) -> {'Idris.Prelude.Types.Right', []} end end(E180)); _ -> fun (V456) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V456)) end end end(E179)); {'Idris.TTImp.TTImp.IPrimVal', E181, E182} -> (fun (V457, V458) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E183, E184} -> (fun (V459, V460) -> ('case--getMatch-1088'(V458, V457, V460, V459, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V458, V460)))) end(E183, E184)); _ -> fun (V461) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V461)) end end end(E181, E182)); _ -> fun (V462) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V462)) end end end end end end end end end(E177, E178)); {'Idris.TTImp.TTImp.IPi', E535, E536, E537, E538, E539, E540} -> (fun (V463, V464, V465, V466, V467, V468) -> case V2 of {'Idris.TTImp.TTImp.IPi', E714, E715, E716, E717, E718, E719} -> (fun (V469, V470, V471, V472, V473, V474) -> ('case--getMatch-750'(V463, V468, V467, V466, V465, V464, V474, V473, V472, V471, V470, V469, V0, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V464, V470)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(('nested--7141-709--in--un--samePiInfo'(V463, V468, V467, V466, V465, V464, V474, V473, V472, V471, V470, V469, V0, V465, V471)), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V475) -> fun (V476) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V475, V476)) end end, fun (V477) -> fun (V478) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V477, V478)) end end}, V466, V472)) end)) end)))) end(E714, E715, E716, E717, E718, E719)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E647, E648, E649, E650} -> (fun (V479, V480, V481, V482) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V480, V2} | [{'Idris.Builtin.MkPair', V482, V482} | []]])) end(E647, E648, E649, E650)); {'Idris.TTImp.TTImp.IAutoApp', E651, E652, E653} -> (fun (V483, V484, V485) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V484, V2} | [{'Idris.Builtin.MkPair', V485, V485} | []]])) end(E651, E652, E653)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E640, E641, E642, E643} -> (fun (V486, V487, V488, V489) -> fun (V490) -> ('un--matchFail'('erased', V486, V490)) end end(E640, E641, E642, E643)); {'Idris.TTImp.TTImp.IAutoApp', E644, E645, E646} -> (fun (V491, V492, V493) -> fun (V494) -> ('un--matchFail'('erased', V491, V494)) end end(E644, E645, E646)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E605, E606, E607} -> (fun (V495, V496, V497) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E619, E620, E621} -> (fun (V498, V499, V500) -> ('un--matchAny'(V495, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V497, V500)))) end(E619, E620, E621)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E614, E615, E616, E617, E618} -> (fun (V501, V502, V503, V504, V505) -> ('un--getMatch'(V0, V1, V505)) end(E614, E615, E616, E617, E618)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E608} -> (fun (V506) -> case V2 of {'Idris.TTImp.TTImp.IType', E609} -> (fun (V507) -> fun (V508) -> {'Idris.Prelude.Types.Right', []} end end(E609)); _ -> fun (V509) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V509)) end end end(E608)); {'Idris.TTImp.TTImp.IPrimVal', E610, E611} -> (fun (V510, V511) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E612, E613} -> (fun (V512, V513) -> ('case--getMatch-1088'(V511, V510, V513, V512, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V511, V513)))) end(E612, E613)); _ -> fun (V514) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V514)) end end end(E610, E611)); _ -> fun (V515) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V515)) end end end end end(E605, E606, E607)); {'Idris.TTImp.TTImp.IAs', E622, E623, E624, E625, E626} -> (fun (V516, V517, V518, V519, V520) -> case V519 of {'Idris.Core.Name.UN', E627} -> (fun (V521) -> case V2 of {'Idris.TTImp.TTImp.IAs', E630, E631, E632, E633, E634} -> (fun (V522, V523, V524, V525, V526) -> case V525 of {'Idris.Core.Name.UN', E637} -> (fun (V527) -> fun (V528) -> begin (V529 = (('un--getMatch'(V0, V520, V526))(V528))), case V529 of {'Idris.Prelude.Types.Left', E638} -> (fun (V530) -> {'Idris.Prelude.Types.Left', V530} end(E638)); {'Idris.Prelude.Types.Right', E639} -> (fun (V531) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V521, {'Idris.TTImp.TTImp.IBindVar', V522, V527}} | V531]))(V528)) end(E639)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E637)); _ -> fun (V532) -> begin (V533 = (('un--getMatch'(V0, V520, V2))(V532))), case V533 of {'Idris.Prelude.Types.Left', E635} -> (fun (V534) -> {'Idris.Prelude.Types.Left', V534} end(E635)); {'Idris.Prelude.Types.Right', E636} -> (fun (V535) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V521, V2} | V535]))(V532)) end(E636)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E630, E631, E632, E633, E634)); _ -> fun (V536) -> begin (V537 = (('un--getMatch'(V0, V520, V2))(V536))), case V537 of {'Idris.Prelude.Types.Left', E628} -> (fun (V538) -> {'Idris.Prelude.Types.Left', V538} end(E628)); {'Idris.Prelude.Types.Right', E629} -> (fun (V539) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V521, V2} | V539]))(V536)) end(E629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E627)); _ -> ('un--getMatch'(V0, V520, V2)) end end(E622, E623, E624, E625, E626)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E600, E601, E602, E603, E604} -> (fun (V540, V541, V542, V543, V544) -> ('un--getMatch'(V0, V1, V544)) end(E600, E601, E602, E603, E604)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E594} -> (fun (V545) -> case V2 of {'Idris.TTImp.TTImp.IType', E595} -> (fun (V546) -> fun (V547) -> {'Idris.Prelude.Types.Right', []} end end(E595)); _ -> fun (V548) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V548)) end end end(E594)); {'Idris.TTImp.TTImp.IPrimVal', E596, E597} -> (fun (V549, V550) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E598, E599} -> (fun (V551, V552) -> ('case--getMatch-1088'(V550, V549, V552, V551, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V550, V552)))) end(E598, E599)); _ -> fun (V553) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V553)) end end end(E596, E597)); _ -> fun (V554) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V554)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E707, E708, E709, E710} -> (fun (V555, V556, V557, V558) -> ('un--getMatch'(1, V556, V556)) end(E707, E708, E709, E710)); {'Idris.TTImp.TTImp.IAutoApp', E711, E712, E713} -> (fun (V559, V560, V561) -> ('un--getMatch'(1, V560, V560)) end(E711, E712, E713)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E700, E701, E702, E703} -> (fun (V562, V563, V564, V565) -> fun (V566) -> ('un--matchFail'('erased', V562, V566)) end end(E700, E701, E702, E703)); {'Idris.TTImp.TTImp.IAutoApp', E704, E705, E706} -> (fun (V567, V568, V569) -> fun (V570) -> ('un--matchFail'('erased', V567, V570)) end end(E704, E705, E706)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E665, E666, E667} -> (fun (V571, V572, V573) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E679, E680, E681} -> (fun (V574, V575, V576) -> ('un--matchAny'(V571, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V573, V576)))) end(E679, E680, E681)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E674, E675, E676, E677, E678} -> (fun (V577, V578, V579, V580, V581) -> ('un--getMatch'(V0, V1, V581)) end(E674, E675, E676, E677, E678)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E668} -> (fun (V582) -> case V2 of {'Idris.TTImp.TTImp.IType', E669} -> (fun (V583) -> fun (V584) -> {'Idris.Prelude.Types.Right', []} end end(E669)); _ -> fun (V585) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V585)) end end end(E668)); {'Idris.TTImp.TTImp.IPrimVal', E670, E671} -> (fun (V586, V587) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E672, E673} -> (fun (V588, V589) -> ('case--getMatch-1088'(V587, V586, V589, V588, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V587, V589)))) end(E672, E673)); _ -> fun (V590) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V590)) end end end(E670, E671)); _ -> fun (V591) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V591)) end end end end end(E665, E666, E667)); {'Idris.TTImp.TTImp.IAs', E682, E683, E684, E685, E686} -> (fun (V592, V593, V594, V595, V596) -> case V595 of {'Idris.Core.Name.UN', E687} -> (fun (V597) -> case V2 of {'Idris.TTImp.TTImp.IAs', E690, E691, E692, E693, E694} -> (fun (V598, V599, V600, V601, V602) -> case V601 of {'Idris.Core.Name.UN', E697} -> (fun (V603) -> fun (V604) -> begin (V605 = (('un--getMatch'(V0, V596, V602))(V604))), case V605 of {'Idris.Prelude.Types.Left', E698} -> (fun (V606) -> {'Idris.Prelude.Types.Left', V606} end(E698)); {'Idris.Prelude.Types.Right', E699} -> (fun (V607) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V597, {'Idris.TTImp.TTImp.IBindVar', V598, V603}} | V607]))(V604)) end(E699)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E697)); _ -> fun (V608) -> begin (V609 = (('un--getMatch'(V0, V596, V2))(V608))), case V609 of {'Idris.Prelude.Types.Left', E695} -> (fun (V610) -> {'Idris.Prelude.Types.Left', V610} end(E695)); {'Idris.Prelude.Types.Right', E696} -> (fun (V611) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V597, V2} | V611]))(V608)) end(E696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E690, E691, E692, E693, E694)); _ -> fun (V612) -> begin (V613 = (('un--getMatch'(V0, V596, V2))(V612))), case V613 of {'Idris.Prelude.Types.Left', E688} -> (fun (V614) -> {'Idris.Prelude.Types.Left', V614} end(E688)); {'Idris.Prelude.Types.Right', E689} -> (fun (V615) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V597, V2} | V615]))(V612)) end(E689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E687)); _ -> ('un--getMatch'(V0, V596, V2)) end end(E682, E683, E684, E685, E686)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E660, E661, E662, E663, E664} -> (fun (V616, V617, V618, V619, V620) -> ('un--getMatch'(V0, V1, V620)) end(E660, E661, E662, E663, E664)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E654} -> (fun (V621) -> case V2 of {'Idris.TTImp.TTImp.IType', E655} -> (fun (V622) -> fun (V623) -> {'Idris.Prelude.Types.Right', []} end end(E655)); _ -> fun (V624) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V624)) end end end(E654)); {'Idris.TTImp.TTImp.IPrimVal', E656, E657} -> (fun (V625, V626) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E658, E659} -> (fun (V627, V628) -> ('case--getMatch-1088'(V626, V625, V628, V627, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V626, V628)))) end(E658, E659)); _ -> fun (V629) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V629)) end end end(E656, E657)); _ -> fun (V630) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V630)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E587, E588, E589, E590} -> (fun (V631, V632, V633, V634) -> fun (V635) -> ('un--matchFail'('erased', V631, V635)) end end(E587, E588, E589, E590)); {'Idris.TTImp.TTImp.IAutoApp', E591, E592, E593} -> (fun (V636, V637, V638) -> fun (V639) -> ('un--matchFail'('erased', V636, V639)) end end(E591, E592, E593)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E552, E553, E554} -> (fun (V640, V641, V642) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E566, E567, E568} -> (fun (V643, V644, V645) -> ('un--matchAny'(V640, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V642, V645)))) end(E566, E567, E568)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E561, E562, E563, E564, E565} -> (fun (V646, V647, V648, V649, V650) -> ('un--getMatch'(V0, V1, V650)) end(E561, E562, E563, E564, E565)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E555} -> (fun (V651) -> case V2 of {'Idris.TTImp.TTImp.IType', E556} -> (fun (V652) -> fun (V653) -> {'Idris.Prelude.Types.Right', []} end end(E556)); _ -> fun (V654) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V654)) end end end(E555)); {'Idris.TTImp.TTImp.IPrimVal', E557, E558} -> (fun (V655, V656) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E559, E560} -> (fun (V657, V658) -> ('case--getMatch-1088'(V656, V655, V658, V657, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V656, V658)))) end(E559, E560)); _ -> fun (V659) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V659)) end end end(E557, E558)); _ -> fun (V660) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V660)) end end end end end(E552, E553, E554)); {'Idris.TTImp.TTImp.IAs', E569, E570, E571, E572, E573} -> (fun (V661, V662, V663, V664, V665) -> case V664 of {'Idris.Core.Name.UN', E574} -> (fun (V666) -> case V2 of {'Idris.TTImp.TTImp.IAs', E577, E578, E579, E580, E581} -> (fun (V667, V668, V669, V670, V671) -> case V670 of {'Idris.Core.Name.UN', E584} -> (fun (V672) -> fun (V673) -> begin (V674 = (('un--getMatch'(V0, V665, V671))(V673))), case V674 of {'Idris.Prelude.Types.Left', E585} -> (fun (V675) -> {'Idris.Prelude.Types.Left', V675} end(E585)); {'Idris.Prelude.Types.Right', E586} -> (fun (V676) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V666, {'Idris.TTImp.TTImp.IBindVar', V667, V672}} | V676]))(V673)) end(E586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E584)); _ -> fun (V677) -> begin (V678 = (('un--getMatch'(V0, V665, V2))(V677))), case V678 of {'Idris.Prelude.Types.Left', E582} -> (fun (V679) -> {'Idris.Prelude.Types.Left', V679} end(E582)); {'Idris.Prelude.Types.Right', E583} -> (fun (V680) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V666, V2} | V680]))(V677)) end(E583)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E577, E578, E579, E580, E581)); _ -> fun (V681) -> begin (V682 = (('un--getMatch'(V0, V665, V2))(V681))), case V682 of {'Idris.Prelude.Types.Left', E575} -> (fun (V683) -> {'Idris.Prelude.Types.Left', V683} end(E575)); {'Idris.Prelude.Types.Right', E576} -> (fun (V684) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V666, V2} | V684]))(V681)) end(E576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E574)); _ -> ('un--getMatch'(V0, V665, V2)) end end(E569, E570, E571, E572, E573)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E547, E548, E549, E550, E551} -> (fun (V685, V686, V687, V688, V689) -> ('un--getMatch'(V0, V1, V689)) end(E547, E548, E549, E550, E551)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E541} -> (fun (V690) -> case V2 of {'Idris.TTImp.TTImp.IType', E542} -> (fun (V691) -> fun (V692) -> {'Idris.Prelude.Types.Right', []} end end(E542)); _ -> fun (V693) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V693)) end end end(E541)); {'Idris.TTImp.TTImp.IPrimVal', E543, E544} -> (fun (V694, V695) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E545, E546} -> (fun (V696, V697) -> ('case--getMatch-1088'(V695, V694, V697, V696, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V695, V697)))) end(E545, E546)); _ -> fun (V698) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V698)) end end end(E543, E544)); _ -> fun (V699) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V699)) end end end end end end end end(E535, E536, E537, E538, E539, E540)); {'Idris.TTImp.TTImp.IApp', E720, E721, E722} -> (fun (V700, V701, V702) -> case V2 of {'Idris.TTImp.TTImp.IApp', E896, E897, E898} -> (fun (V703, V704, V705) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V701, V704} | [{'Idris.Builtin.MkPair', V702, V705} | []]])) end(E896, E897, E898)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E829, E830, E831, E832} -> (fun (V706, V707, V708, V709) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V707, V2} | [{'Idris.Builtin.MkPair', V709, V709} | []]])) end(E829, E830, E831, E832)); {'Idris.TTImp.TTImp.IAutoApp', E833, E834, E835} -> (fun (V710, V711, V712) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V711, V2} | [{'Idris.Builtin.MkPair', V712, V712} | []]])) end(E833, E834, E835)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E822, E823, E824, E825} -> (fun (V713, V714, V715, V716) -> fun (V717) -> ('un--matchFail'('erased', V713, V717)) end end(E822, E823, E824, E825)); {'Idris.TTImp.TTImp.IAutoApp', E826, E827, E828} -> (fun (V718, V719, V720) -> fun (V721) -> ('un--matchFail'('erased', V718, V721)) end end(E826, E827, E828)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E787, E788, E789} -> (fun (V722, V723, V724) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E801, E802, E803} -> (fun (V725, V726, V727) -> ('un--matchAny'(V722, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V724, V727)))) end(E801, E802, E803)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E796, E797, E798, E799, E800} -> (fun (V728, V729, V730, V731, V732) -> ('un--getMatch'(V0, V1, V732)) end(E796, E797, E798, E799, E800)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E790} -> (fun (V733) -> case V2 of {'Idris.TTImp.TTImp.IType', E791} -> (fun (V734) -> fun (V735) -> {'Idris.Prelude.Types.Right', []} end end(E791)); _ -> fun (V736) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V736)) end end end(E790)); {'Idris.TTImp.TTImp.IPrimVal', E792, E793} -> (fun (V737, V738) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E794, E795} -> (fun (V739, V740) -> ('case--getMatch-1088'(V738, V737, V740, V739, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V738, V740)))) end(E794, E795)); _ -> fun (V741) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V741)) end end end(E792, E793)); _ -> fun (V742) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V742)) end end end end end(E787, E788, E789)); {'Idris.TTImp.TTImp.IAs', E804, E805, E806, E807, E808} -> (fun (V743, V744, V745, V746, V747) -> case V746 of {'Idris.Core.Name.UN', E809} -> (fun (V748) -> case V2 of {'Idris.TTImp.TTImp.IAs', E812, E813, E814, E815, E816} -> (fun (V749, V750, V751, V752, V753) -> case V752 of {'Idris.Core.Name.UN', E819} -> (fun (V754) -> fun (V755) -> begin (V756 = (('un--getMatch'(V0, V747, V753))(V755))), case V756 of {'Idris.Prelude.Types.Left', E820} -> (fun (V757) -> {'Idris.Prelude.Types.Left', V757} end(E820)); {'Idris.Prelude.Types.Right', E821} -> (fun (V758) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V748, {'Idris.TTImp.TTImp.IBindVar', V749, V754}} | V758]))(V755)) end(E821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E819)); _ -> fun (V759) -> begin (V760 = (('un--getMatch'(V0, V747, V2))(V759))), case V760 of {'Idris.Prelude.Types.Left', E817} -> (fun (V761) -> {'Idris.Prelude.Types.Left', V761} end(E817)); {'Idris.Prelude.Types.Right', E818} -> (fun (V762) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V748, V2} | V762]))(V759)) end(E818)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E812, E813, E814, E815, E816)); _ -> fun (V763) -> begin (V764 = (('un--getMatch'(V0, V747, V2))(V763))), case V764 of {'Idris.Prelude.Types.Left', E810} -> (fun (V765) -> {'Idris.Prelude.Types.Left', V765} end(E810)); {'Idris.Prelude.Types.Right', E811} -> (fun (V766) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V748, V2} | V766]))(V763)) end(E811)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E809)); _ -> ('un--getMatch'(V0, V747, V2)) end end(E804, E805, E806, E807, E808)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E782, E783, E784, E785, E786} -> (fun (V767, V768, V769, V770, V771) -> ('un--getMatch'(V0, V1, V771)) end(E782, E783, E784, E785, E786)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E776} -> (fun (V772) -> case V2 of {'Idris.TTImp.TTImp.IType', E777} -> (fun (V773) -> fun (V774) -> {'Idris.Prelude.Types.Right', []} end end(E777)); _ -> fun (V775) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V775)) end end end(E776)); {'Idris.TTImp.TTImp.IPrimVal', E778, E779} -> (fun (V776, V777) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E780, E781} -> (fun (V778, V779) -> ('case--getMatch-1088'(V777, V776, V779, V778, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V777, V779)))) end(E780, E781)); _ -> fun (V780) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V780)) end end end(E778, E779)); _ -> fun (V781) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V781)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E889, E890, E891, E892} -> (fun (V782, V783, V784, V785) -> ('un--getMatch'(1, V783, V783)) end(E889, E890, E891, E892)); {'Idris.TTImp.TTImp.IAutoApp', E893, E894, E895} -> (fun (V786, V787, V788) -> ('un--getMatch'(1, V787, V787)) end(E893, E894, E895)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E882, E883, E884, E885} -> (fun (V789, V790, V791, V792) -> fun (V793) -> ('un--matchFail'('erased', V789, V793)) end end(E882, E883, E884, E885)); {'Idris.TTImp.TTImp.IAutoApp', E886, E887, E888} -> (fun (V794, V795, V796) -> fun (V797) -> ('un--matchFail'('erased', V794, V797)) end end(E886, E887, E888)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E847, E848, E849} -> (fun (V798, V799, V800) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E861, E862, E863} -> (fun (V801, V802, V803) -> ('un--matchAny'(V798, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V800, V803)))) end(E861, E862, E863)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E856, E857, E858, E859, E860} -> (fun (V804, V805, V806, V807, V808) -> ('un--getMatch'(V0, V1, V808)) end(E856, E857, E858, E859, E860)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E850} -> (fun (V809) -> case V2 of {'Idris.TTImp.TTImp.IType', E851} -> (fun (V810) -> fun (V811) -> {'Idris.Prelude.Types.Right', []} end end(E851)); _ -> fun (V812) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V812)) end end end(E850)); {'Idris.TTImp.TTImp.IPrimVal', E852, E853} -> (fun (V813, V814) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E854, E855} -> (fun (V815, V816) -> ('case--getMatch-1088'(V814, V813, V816, V815, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V814, V816)))) end(E854, E855)); _ -> fun (V817) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V817)) end end end(E852, E853)); _ -> fun (V818) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V818)) end end end end end(E847, E848, E849)); {'Idris.TTImp.TTImp.IAs', E864, E865, E866, E867, E868} -> (fun (V819, V820, V821, V822, V823) -> case V822 of {'Idris.Core.Name.UN', E869} -> (fun (V824) -> case V2 of {'Idris.TTImp.TTImp.IAs', E872, E873, E874, E875, E876} -> (fun (V825, V826, V827, V828, V829) -> case V828 of {'Idris.Core.Name.UN', E879} -> (fun (V830) -> fun (V831) -> begin (V832 = (('un--getMatch'(V0, V823, V829))(V831))), case V832 of {'Idris.Prelude.Types.Left', E880} -> (fun (V833) -> {'Idris.Prelude.Types.Left', V833} end(E880)); {'Idris.Prelude.Types.Right', E881} -> (fun (V834) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V824, {'Idris.TTImp.TTImp.IBindVar', V825, V830}} | V834]))(V831)) end(E881)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E879)); _ -> fun (V835) -> begin (V836 = (('un--getMatch'(V0, V823, V2))(V835))), case V836 of {'Idris.Prelude.Types.Left', E877} -> (fun (V837) -> {'Idris.Prelude.Types.Left', V837} end(E877)); {'Idris.Prelude.Types.Right', E878} -> (fun (V838) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V824, V2} | V838]))(V835)) end(E878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E872, E873, E874, E875, E876)); _ -> fun (V839) -> begin (V840 = (('un--getMatch'(V0, V823, V2))(V839))), case V840 of {'Idris.Prelude.Types.Left', E870} -> (fun (V841) -> {'Idris.Prelude.Types.Left', V841} end(E870)); {'Idris.Prelude.Types.Right', E871} -> (fun (V842) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V824, V2} | V842]))(V839)) end(E871)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E869)); _ -> ('un--getMatch'(V0, V823, V2)) end end(E864, E865, E866, E867, E868)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E842, E843, E844, E845, E846} -> (fun (V843, V844, V845, V846, V847) -> ('un--getMatch'(V0, V1, V847)) end(E842, E843, E844, E845, E846)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E836} -> (fun (V848) -> case V2 of {'Idris.TTImp.TTImp.IType', E837} -> (fun (V849) -> fun (V850) -> {'Idris.Prelude.Types.Right', []} end end(E837)); _ -> fun (V851) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V851)) end end end(E836)); {'Idris.TTImp.TTImp.IPrimVal', E838, E839} -> (fun (V852, V853) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E840, E841} -> (fun (V854, V855) -> ('case--getMatch-1088'(V853, V852, V855, V854, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V853, V855)))) end(E840, E841)); _ -> fun (V856) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V856)) end end end(E838, E839)); _ -> fun (V857) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V857)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E769, E770, E771, E772} -> (fun (V858, V859, V860, V861) -> fun (V862) -> ('un--matchFail'('erased', V858, V862)) end end(E769, E770, E771, E772)); {'Idris.TTImp.TTImp.IAutoApp', E773, E774, E775} -> (fun (V863, V864, V865) -> fun (V866) -> ('un--matchFail'('erased', V863, V866)) end end(E773, E774, E775)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E734, E735, E736} -> (fun (V867, V868, V869) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E748, E749, E750} -> (fun (V870, V871, V872) -> ('un--matchAny'(V867, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V869, V872)))) end(E748, E749, E750)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E743, E744, E745, E746, E747} -> (fun (V873, V874, V875, V876, V877) -> ('un--getMatch'(V0, V1, V877)) end(E743, E744, E745, E746, E747)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E737} -> (fun (V878) -> case V2 of {'Idris.TTImp.TTImp.IType', E738} -> (fun (V879) -> fun (V880) -> {'Idris.Prelude.Types.Right', []} end end(E738)); _ -> fun (V881) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V881)) end end end(E737)); {'Idris.TTImp.TTImp.IPrimVal', E739, E740} -> (fun (V882, V883) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E741, E742} -> (fun (V884, V885) -> ('case--getMatch-1088'(V883, V882, V885, V884, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V883, V885)))) end(E741, E742)); _ -> fun (V886) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V886)) end end end(E739, E740)); _ -> fun (V887) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V887)) end end end end end(E734, E735, E736)); {'Idris.TTImp.TTImp.IAs', E751, E752, E753, E754, E755} -> (fun (V888, V889, V890, V891, V892) -> case V891 of {'Idris.Core.Name.UN', E756} -> (fun (V893) -> case V2 of {'Idris.TTImp.TTImp.IAs', E759, E760, E761, E762, E763} -> (fun (V894, V895, V896, V897, V898) -> case V897 of {'Idris.Core.Name.UN', E766} -> (fun (V899) -> fun (V900) -> begin (V901 = (('un--getMatch'(V0, V892, V898))(V900))), case V901 of {'Idris.Prelude.Types.Left', E767} -> (fun (V902) -> {'Idris.Prelude.Types.Left', V902} end(E767)); {'Idris.Prelude.Types.Right', E768} -> (fun (V903) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V893, {'Idris.TTImp.TTImp.IBindVar', V894, V899}} | V903]))(V900)) end(E768)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E766)); _ -> fun (V904) -> begin (V905 = (('un--getMatch'(V0, V892, V2))(V904))), case V905 of {'Idris.Prelude.Types.Left', E764} -> (fun (V906) -> {'Idris.Prelude.Types.Left', V906} end(E764)); {'Idris.Prelude.Types.Right', E765} -> (fun (V907) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V893, V2} | V907]))(V904)) end(E765)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E759, E760, E761, E762, E763)); _ -> fun (V908) -> begin (V909 = (('un--getMatch'(V0, V892, V2))(V908))), case V909 of {'Idris.Prelude.Types.Left', E757} -> (fun (V910) -> {'Idris.Prelude.Types.Left', V910} end(E757)); {'Idris.Prelude.Types.Right', E758} -> (fun (V911) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V893, V2} | V911]))(V908)) end(E758)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E756)); _ -> ('un--getMatch'(V0, V892, V2)) end end(E751, E752, E753, E754, E755)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E729, E730, E731, E732, E733} -> (fun (V912, V913, V914, V915, V916) -> ('un--getMatch'(V0, V1, V916)) end(E729, E730, E731, E732, E733)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E723} -> (fun (V917) -> case V2 of {'Idris.TTImp.TTImp.IType', E724} -> (fun (V918) -> fun (V919) -> {'Idris.Prelude.Types.Right', []} end end(E724)); _ -> fun (V920) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V920)) end end end(E723)); {'Idris.TTImp.TTImp.IPrimVal', E725, E726} -> (fun (V921, V922) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E727, E728} -> (fun (V923, V924) -> ('case--getMatch-1088'(V922, V921, V924, V923, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V922, V924)))) end(E727, E728)); _ -> fun (V925) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V925)) end end end(E725, E726)); _ -> fun (V926) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V926)) end end end end end end end end(E720, E721, E722)); {'Idris.TTImp.TTImp.IAutoApp', E899, E900, E901} -> (fun (V927, V928, V929) -> case V2 of {'Idris.TTImp.TTImp.IAutoApp', E1075, E1076, E1077} -> (fun (V930, V931, V932) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V928, V931} | [{'Idris.Builtin.MkPair', V929, V932} | []]])) end(E1075, E1076, E1077)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1008, E1009, E1010, E1011} -> (fun (V933, V934, V935, V936) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V934, V2} | [{'Idris.Builtin.MkPair', V936, V936} | []]])) end(E1008, E1009, E1010, E1011)); {'Idris.TTImp.TTImp.IAutoApp', E1012, E1013, E1014} -> (fun (V937, V938, V939) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V938, V2} | [{'Idris.Builtin.MkPair', V939, V939} | []]])) end(E1012, E1013, E1014)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1001, E1002, E1003, E1004} -> (fun (V940, V941, V942, V943) -> fun (V944) -> ('un--matchFail'('erased', V940, V944)) end end(E1001, E1002, E1003, E1004)); {'Idris.TTImp.TTImp.IAutoApp', E1005, E1006, E1007} -> (fun (V945, V946, V947) -> fun (V948) -> ('un--matchFail'('erased', V945, V948)) end end(E1005, E1006, E1007)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E966, E967, E968} -> (fun (V949, V950, V951) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E980, E981, E982} -> (fun (V952, V953, V954) -> ('un--matchAny'(V949, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V951, V954)))) end(E980, E981, E982)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E975, E976, E977, E978, E979} -> (fun (V955, V956, V957, V958, V959) -> ('un--getMatch'(V0, V1, V959)) end(E975, E976, E977, E978, E979)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E969} -> (fun (V960) -> case V2 of {'Idris.TTImp.TTImp.IType', E970} -> (fun (V961) -> fun (V962) -> {'Idris.Prelude.Types.Right', []} end end(E970)); _ -> fun (V963) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V963)) end end end(E969)); {'Idris.TTImp.TTImp.IPrimVal', E971, E972} -> (fun (V964, V965) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E973, E974} -> (fun (V966, V967) -> ('case--getMatch-1088'(V965, V964, V967, V966, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V965, V967)))) end(E973, E974)); _ -> fun (V968) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V968)) end end end(E971, E972)); _ -> fun (V969) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V969)) end end end end end(E966, E967, E968)); {'Idris.TTImp.TTImp.IAs', E983, E984, E985, E986, E987} -> (fun (V970, V971, V972, V973, V974) -> case V973 of {'Idris.Core.Name.UN', E988} -> (fun (V975) -> case V2 of {'Idris.TTImp.TTImp.IAs', E991, E992, E993, E994, E995} -> (fun (V976, V977, V978, V979, V980) -> case V979 of {'Idris.Core.Name.UN', E998} -> (fun (V981) -> fun (V982) -> begin (V983 = (('un--getMatch'(V0, V974, V980))(V982))), case V983 of {'Idris.Prelude.Types.Left', E999} -> (fun (V984) -> {'Idris.Prelude.Types.Left', V984} end(E999)); {'Idris.Prelude.Types.Right', E1000} -> (fun (V985) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V975, {'Idris.TTImp.TTImp.IBindVar', V976, V981}} | V985]))(V982)) end(E1000)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E998)); _ -> fun (V986) -> begin (V987 = (('un--getMatch'(V0, V974, V2))(V986))), case V987 of {'Idris.Prelude.Types.Left', E996} -> (fun (V988) -> {'Idris.Prelude.Types.Left', V988} end(E996)); {'Idris.Prelude.Types.Right', E997} -> (fun (V989) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V975, V2} | V989]))(V986)) end(E997)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E991, E992, E993, E994, E995)); _ -> fun (V990) -> begin (V991 = (('un--getMatch'(V0, V974, V2))(V990))), case V991 of {'Idris.Prelude.Types.Left', E989} -> (fun (V992) -> {'Idris.Prelude.Types.Left', V992} end(E989)); {'Idris.Prelude.Types.Right', E990} -> (fun (V993) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V975, V2} | V993]))(V990)) end(E990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E988)); _ -> ('un--getMatch'(V0, V974, V2)) end end(E983, E984, E985, E986, E987)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E961, E962, E963, E964, E965} -> (fun (V994, V995, V996, V997, V998) -> ('un--getMatch'(V0, V1, V998)) end(E961, E962, E963, E964, E965)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E955} -> (fun (V999) -> case V2 of {'Idris.TTImp.TTImp.IType', E956} -> (fun (V1000) -> fun (V1001) -> {'Idris.Prelude.Types.Right', []} end end(E956)); _ -> fun (V1002) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1002)) end end end(E955)); {'Idris.TTImp.TTImp.IPrimVal', E957, E958} -> (fun (V1003, V1004) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E959, E960} -> (fun (V1005, V1006) -> ('case--getMatch-1088'(V1004, V1003, V1006, V1005, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1004, V1006)))) end(E959, E960)); _ -> fun (V1007) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1007)) end end end(E957, E958)); _ -> fun (V1008) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1008)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1068, E1069, E1070, E1071} -> (fun (V1009, V1010, V1011, V1012) -> ('un--getMatch'(1, V1010, V1010)) end(E1068, E1069, E1070, E1071)); {'Idris.TTImp.TTImp.IAutoApp', E1072, E1073, E1074} -> (fun (V1013, V1014, V1015) -> ('un--getMatch'(1, V1014, V1014)) end(E1072, E1073, E1074)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1061, E1062, E1063, E1064} -> (fun (V1016, V1017, V1018, V1019) -> fun (V1020) -> ('un--matchFail'('erased', V1016, V1020)) end end(E1061, E1062, E1063, E1064)); {'Idris.TTImp.TTImp.IAutoApp', E1065, E1066, E1067} -> (fun (V1021, V1022, V1023) -> fun (V1024) -> ('un--matchFail'('erased', V1021, V1024)) end end(E1065, E1066, E1067)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1026, E1027, E1028} -> (fun (V1025, V1026, V1027) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1040, E1041, E1042} -> (fun (V1028, V1029, V1030) -> ('un--matchAny'(V1025, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1027, V1030)))) end(E1040, E1041, E1042)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1035, E1036, E1037, E1038, E1039} -> (fun (V1031, V1032, V1033, V1034, V1035) -> ('un--getMatch'(V0, V1, V1035)) end(E1035, E1036, E1037, E1038, E1039)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1029} -> (fun (V1036) -> case V2 of {'Idris.TTImp.TTImp.IType', E1030} -> (fun (V1037) -> fun (V1038) -> {'Idris.Prelude.Types.Right', []} end end(E1030)); _ -> fun (V1039) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1039)) end end end(E1029)); {'Idris.TTImp.TTImp.IPrimVal', E1031, E1032} -> (fun (V1040, V1041) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1033, E1034} -> (fun (V1042, V1043) -> ('case--getMatch-1088'(V1041, V1040, V1043, V1042, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1041, V1043)))) end(E1033, E1034)); _ -> fun (V1044) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1044)) end end end(E1031, E1032)); _ -> fun (V1045) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1045)) end end end end end(E1026, E1027, E1028)); {'Idris.TTImp.TTImp.IAs', E1043, E1044, E1045, E1046, E1047} -> (fun (V1046, V1047, V1048, V1049, V1050) -> case V1049 of {'Idris.Core.Name.UN', E1048} -> (fun (V1051) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1051, E1052, E1053, E1054, E1055} -> (fun (V1052, V1053, V1054, V1055, V1056) -> case V1055 of {'Idris.Core.Name.UN', E1058} -> (fun (V1057) -> fun (V1058) -> begin (V1059 = (('un--getMatch'(V0, V1050, V1056))(V1058))), case V1059 of {'Idris.Prelude.Types.Left', E1059} -> (fun (V1060) -> {'Idris.Prelude.Types.Left', V1060} end(E1059)); {'Idris.Prelude.Types.Right', E1060} -> (fun (V1061) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1051, {'Idris.TTImp.TTImp.IBindVar', V1052, V1057}} | V1061]))(V1058)) end(E1060)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1058)); _ -> fun (V1062) -> begin (V1063 = (('un--getMatch'(V0, V1050, V2))(V1062))), case V1063 of {'Idris.Prelude.Types.Left', E1056} -> (fun (V1064) -> {'Idris.Prelude.Types.Left', V1064} end(E1056)); {'Idris.Prelude.Types.Right', E1057} -> (fun (V1065) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1051, V2} | V1065]))(V1062)) end(E1057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1051, E1052, E1053, E1054, E1055)); _ -> fun (V1066) -> begin (V1067 = (('un--getMatch'(V0, V1050, V2))(V1066))), case V1067 of {'Idris.Prelude.Types.Left', E1049} -> (fun (V1068) -> {'Idris.Prelude.Types.Left', V1068} end(E1049)); {'Idris.Prelude.Types.Right', E1050} -> (fun (V1069) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1051, V2} | V1069]))(V1066)) end(E1050)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1048)); _ -> ('un--getMatch'(V0, V1050, V2)) end end(E1043, E1044, E1045, E1046, E1047)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1021, E1022, E1023, E1024, E1025} -> (fun (V1070, V1071, V1072, V1073, V1074) -> ('un--getMatch'(V0, V1, V1074)) end(E1021, E1022, E1023, E1024, E1025)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1015} -> (fun (V1075) -> case V2 of {'Idris.TTImp.TTImp.IType', E1016} -> (fun (V1076) -> fun (V1077) -> {'Idris.Prelude.Types.Right', []} end end(E1016)); _ -> fun (V1078) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1078)) end end end(E1015)); {'Idris.TTImp.TTImp.IPrimVal', E1017, E1018} -> (fun (V1079, V1080) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1019, E1020} -> (fun (V1081, V1082) -> ('case--getMatch-1088'(V1080, V1079, V1082, V1081, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1080, V1082)))) end(E1019, E1020)); _ -> fun (V1083) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1083)) end end end(E1017, E1018)); _ -> fun (V1084) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1084)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E948, E949, E950, E951} -> (fun (V1085, V1086, V1087, V1088) -> fun (V1089) -> ('un--matchFail'('erased', V1085, V1089)) end end(E948, E949, E950, E951)); {'Idris.TTImp.TTImp.IAutoApp', E952, E953, E954} -> (fun (V1090, V1091, V1092) -> fun (V1093) -> ('un--matchFail'('erased', V1090, V1093)) end end(E952, E953, E954)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E913, E914, E915} -> (fun (V1094, V1095, V1096) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E927, E928, E929} -> (fun (V1097, V1098, V1099) -> ('un--matchAny'(V1094, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1096, V1099)))) end(E927, E928, E929)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E922, E923, E924, E925, E926} -> (fun (V1100, V1101, V1102, V1103, V1104) -> ('un--getMatch'(V0, V1, V1104)) end(E922, E923, E924, E925, E926)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E916} -> (fun (V1105) -> case V2 of {'Idris.TTImp.TTImp.IType', E917} -> (fun (V1106) -> fun (V1107) -> {'Idris.Prelude.Types.Right', []} end end(E917)); _ -> fun (V1108) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1108)) end end end(E916)); {'Idris.TTImp.TTImp.IPrimVal', E918, E919} -> (fun (V1109, V1110) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E920, E921} -> (fun (V1111, V1112) -> ('case--getMatch-1088'(V1110, V1109, V1112, V1111, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1110, V1112)))) end(E920, E921)); _ -> fun (V1113) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1113)) end end end(E918, E919)); _ -> fun (V1114) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1114)) end end end end end(E913, E914, E915)); {'Idris.TTImp.TTImp.IAs', E930, E931, E932, E933, E934} -> (fun (V1115, V1116, V1117, V1118, V1119) -> case V1118 of {'Idris.Core.Name.UN', E935} -> (fun (V1120) -> case V2 of {'Idris.TTImp.TTImp.IAs', E938, E939, E940, E941, E942} -> (fun (V1121, V1122, V1123, V1124, V1125) -> case V1124 of {'Idris.Core.Name.UN', E945} -> (fun (V1126) -> fun (V1127) -> begin (V1128 = (('un--getMatch'(V0, V1119, V1125))(V1127))), case V1128 of {'Idris.Prelude.Types.Left', E946} -> (fun (V1129) -> {'Idris.Prelude.Types.Left', V1129} end(E946)); {'Idris.Prelude.Types.Right', E947} -> (fun (V1130) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1120, {'Idris.TTImp.TTImp.IBindVar', V1121, V1126}} | V1130]))(V1127)) end(E947)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E945)); _ -> fun (V1131) -> begin (V1132 = (('un--getMatch'(V0, V1119, V2))(V1131))), case V1132 of {'Idris.Prelude.Types.Left', E943} -> (fun (V1133) -> {'Idris.Prelude.Types.Left', V1133} end(E943)); {'Idris.Prelude.Types.Right', E944} -> (fun (V1134) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1120, V2} | V1134]))(V1131)) end(E944)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E938, E939, E940, E941, E942)); _ -> fun (V1135) -> begin (V1136 = (('un--getMatch'(V0, V1119, V2))(V1135))), case V1136 of {'Idris.Prelude.Types.Left', E936} -> (fun (V1137) -> {'Idris.Prelude.Types.Left', V1137} end(E936)); {'Idris.Prelude.Types.Right', E937} -> (fun (V1138) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1120, V2} | V1138]))(V1135)) end(E937)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E935)); _ -> ('un--getMatch'(V0, V1119, V2)) end end(E930, E931, E932, E933, E934)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E908, E909, E910, E911, E912} -> (fun (V1139, V1140, V1141, V1142, V1143) -> ('un--getMatch'(V0, V1, V1143)) end(E908, E909, E910, E911, E912)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E902} -> (fun (V1144) -> case V2 of {'Idris.TTImp.TTImp.IType', E903} -> (fun (V1145) -> fun (V1146) -> {'Idris.Prelude.Types.Right', []} end end(E903)); _ -> fun (V1147) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1147)) end end end(E902)); {'Idris.TTImp.TTImp.IPrimVal', E904, E905} -> (fun (V1148, V1149) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E906, E907} -> (fun (V1150, V1151) -> ('case--getMatch-1088'(V1149, V1148, V1151, V1150, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1149, V1151)))) end(E906, E907)); _ -> fun (V1152) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1152)) end end end(E904, E905)); _ -> fun (V1153) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1153)) end end end end end end end end(E899, E900, E901)); {'Idris.TTImp.TTImp.INamedApp', E1078, E1079, E1080, E1081} -> (fun (V1154, V1155, V1156, V1157) -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1255, E1256, E1257, E1258} -> (fun (V1158, V1159, V1160, V1161) -> ('case--getMatch-872'(V1154, V1157, V1156, V1155, V1161, V1160, V1159, V1158, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1156, V1160)))) end(E1255, E1256, E1257, E1258)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1188, E1189, E1190, E1191} -> (fun (V1162, V1163, V1164, V1165) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1163, V2} | [{'Idris.Builtin.MkPair', V1165, V1165} | []]])) end(E1188, E1189, E1190, E1191)); {'Idris.TTImp.TTImp.IAutoApp', E1192, E1193, E1194} -> (fun (V1166, V1167, V1168) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1167, V2} | [{'Idris.Builtin.MkPair', V1168, V1168} | []]])) end(E1192, E1193, E1194)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1181, E1182, E1183, E1184} -> (fun (V1169, V1170, V1171, V1172) -> fun (V1173) -> ('un--matchFail'('erased', V1169, V1173)) end end(E1181, E1182, E1183, E1184)); {'Idris.TTImp.TTImp.IAutoApp', E1185, E1186, E1187} -> (fun (V1174, V1175, V1176) -> fun (V1177) -> ('un--matchFail'('erased', V1174, V1177)) end end(E1185, E1186, E1187)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1146, E1147, E1148} -> (fun (V1178, V1179, V1180) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1160, E1161, E1162} -> (fun (V1181, V1182, V1183) -> ('un--matchAny'(V1178, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1180, V1183)))) end(E1160, E1161, E1162)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1155, E1156, E1157, E1158, E1159} -> (fun (V1184, V1185, V1186, V1187, V1188) -> ('un--getMatch'(V0, V1, V1188)) end(E1155, E1156, E1157, E1158, E1159)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1149} -> (fun (V1189) -> case V2 of {'Idris.TTImp.TTImp.IType', E1150} -> (fun (V1190) -> fun (V1191) -> {'Idris.Prelude.Types.Right', []} end end(E1150)); _ -> fun (V1192) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1192)) end end end(E1149)); {'Idris.TTImp.TTImp.IPrimVal', E1151, E1152} -> (fun (V1193, V1194) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1153, E1154} -> (fun (V1195, V1196) -> ('case--getMatch-1088'(V1194, V1193, V1196, V1195, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1194, V1196)))) end(E1153, E1154)); _ -> fun (V1197) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1197)) end end end(E1151, E1152)); _ -> fun (V1198) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1198)) end end end end end(E1146, E1147, E1148)); {'Idris.TTImp.TTImp.IAs', E1163, E1164, E1165, E1166, E1167} -> (fun (V1199, V1200, V1201, V1202, V1203) -> case V1202 of {'Idris.Core.Name.UN', E1168} -> (fun (V1204) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1171, E1172, E1173, E1174, E1175} -> (fun (V1205, V1206, V1207, V1208, V1209) -> case V1208 of {'Idris.Core.Name.UN', E1178} -> (fun (V1210) -> fun (V1211) -> begin (V1212 = (('un--getMatch'(V0, V1203, V1209))(V1211))), case V1212 of {'Idris.Prelude.Types.Left', E1179} -> (fun (V1213) -> {'Idris.Prelude.Types.Left', V1213} end(E1179)); {'Idris.Prelude.Types.Right', E1180} -> (fun (V1214) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1204, {'Idris.TTImp.TTImp.IBindVar', V1205, V1210}} | V1214]))(V1211)) end(E1180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1178)); _ -> fun (V1215) -> begin (V1216 = (('un--getMatch'(V0, V1203, V2))(V1215))), case V1216 of {'Idris.Prelude.Types.Left', E1176} -> (fun (V1217) -> {'Idris.Prelude.Types.Left', V1217} end(E1176)); {'Idris.Prelude.Types.Right', E1177} -> (fun (V1218) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1204, V2} | V1218]))(V1215)) end(E1177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1171, E1172, E1173, E1174, E1175)); _ -> fun (V1219) -> begin (V1220 = (('un--getMatch'(V0, V1203, V2))(V1219))), case V1220 of {'Idris.Prelude.Types.Left', E1169} -> (fun (V1221) -> {'Idris.Prelude.Types.Left', V1221} end(E1169)); {'Idris.Prelude.Types.Right', E1170} -> (fun (V1222) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1204, V2} | V1222]))(V1219)) end(E1170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1168)); _ -> ('un--getMatch'(V0, V1203, V2)) end end(E1163, E1164, E1165, E1166, E1167)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1141, E1142, E1143, E1144, E1145} -> (fun (V1223, V1224, V1225, V1226, V1227) -> ('un--getMatch'(V0, V1, V1227)) end(E1141, E1142, E1143, E1144, E1145)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1135} -> (fun (V1228) -> case V2 of {'Idris.TTImp.TTImp.IType', E1136} -> (fun (V1229) -> fun (V1230) -> {'Idris.Prelude.Types.Right', []} end end(E1136)); _ -> fun (V1231) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1231)) end end end(E1135)); {'Idris.TTImp.TTImp.IPrimVal', E1137, E1138} -> (fun (V1232, V1233) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1139, E1140} -> (fun (V1234, V1235) -> ('case--getMatch-1088'(V1233, V1232, V1235, V1234, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1233, V1235)))) end(E1139, E1140)); _ -> fun (V1236) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1236)) end end end(E1137, E1138)); _ -> fun (V1237) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1237)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1248, E1249, E1250, E1251} -> (fun (V1238, V1239, V1240, V1241) -> ('un--getMatch'(1, V1239, V1239)) end(E1248, E1249, E1250, E1251)); {'Idris.TTImp.TTImp.IAutoApp', E1252, E1253, E1254} -> (fun (V1242, V1243, V1244) -> ('un--getMatch'(1, V1243, V1243)) end(E1252, E1253, E1254)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1241, E1242, E1243, E1244} -> (fun (V1245, V1246, V1247, V1248) -> fun (V1249) -> ('un--matchFail'('erased', V1245, V1249)) end end(E1241, E1242, E1243, E1244)); {'Idris.TTImp.TTImp.IAutoApp', E1245, E1246, E1247} -> (fun (V1250, V1251, V1252) -> fun (V1253) -> ('un--matchFail'('erased', V1250, V1253)) end end(E1245, E1246, E1247)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1206, E1207, E1208} -> (fun (V1254, V1255, V1256) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1220, E1221, E1222} -> (fun (V1257, V1258, V1259) -> ('un--matchAny'(V1254, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1256, V1259)))) end(E1220, E1221, E1222)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1215, E1216, E1217, E1218, E1219} -> (fun (V1260, V1261, V1262, V1263, V1264) -> ('un--getMatch'(V0, V1, V1264)) end(E1215, E1216, E1217, E1218, E1219)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1209} -> (fun (V1265) -> case V2 of {'Idris.TTImp.TTImp.IType', E1210} -> (fun (V1266) -> fun (V1267) -> {'Idris.Prelude.Types.Right', []} end end(E1210)); _ -> fun (V1268) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1268)) end end end(E1209)); {'Idris.TTImp.TTImp.IPrimVal', E1211, E1212} -> (fun (V1269, V1270) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1213, E1214} -> (fun (V1271, V1272) -> ('case--getMatch-1088'(V1270, V1269, V1272, V1271, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1270, V1272)))) end(E1213, E1214)); _ -> fun (V1273) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1273)) end end end(E1211, E1212)); _ -> fun (V1274) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1274)) end end end end end(E1206, E1207, E1208)); {'Idris.TTImp.TTImp.IAs', E1223, E1224, E1225, E1226, E1227} -> (fun (V1275, V1276, V1277, V1278, V1279) -> case V1278 of {'Idris.Core.Name.UN', E1228} -> (fun (V1280) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1231, E1232, E1233, E1234, E1235} -> (fun (V1281, V1282, V1283, V1284, V1285) -> case V1284 of {'Idris.Core.Name.UN', E1238} -> (fun (V1286) -> fun (V1287) -> begin (V1288 = (('un--getMatch'(V0, V1279, V1285))(V1287))), case V1288 of {'Idris.Prelude.Types.Left', E1239} -> (fun (V1289) -> {'Idris.Prelude.Types.Left', V1289} end(E1239)); {'Idris.Prelude.Types.Right', E1240} -> (fun (V1290) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1280, {'Idris.TTImp.TTImp.IBindVar', V1281, V1286}} | V1290]))(V1287)) end(E1240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1238)); _ -> fun (V1291) -> begin (V1292 = (('un--getMatch'(V0, V1279, V2))(V1291))), case V1292 of {'Idris.Prelude.Types.Left', E1236} -> (fun (V1293) -> {'Idris.Prelude.Types.Left', V1293} end(E1236)); {'Idris.Prelude.Types.Right', E1237} -> (fun (V1294) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1280, V2} | V1294]))(V1291)) end(E1237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1231, E1232, E1233, E1234, E1235)); _ -> fun (V1295) -> begin (V1296 = (('un--getMatch'(V0, V1279, V2))(V1295))), case V1296 of {'Idris.Prelude.Types.Left', E1229} -> (fun (V1297) -> {'Idris.Prelude.Types.Left', V1297} end(E1229)); {'Idris.Prelude.Types.Right', E1230} -> (fun (V1298) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1280, V2} | V1298]))(V1295)) end(E1230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1228)); _ -> ('un--getMatch'(V0, V1279, V2)) end end(E1223, E1224, E1225, E1226, E1227)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1201, E1202, E1203, E1204, E1205} -> (fun (V1299, V1300, V1301, V1302, V1303) -> ('un--getMatch'(V0, V1, V1303)) end(E1201, E1202, E1203, E1204, E1205)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1195} -> (fun (V1304) -> case V2 of {'Idris.TTImp.TTImp.IType', E1196} -> (fun (V1305) -> fun (V1306) -> {'Idris.Prelude.Types.Right', []} end end(E1196)); _ -> fun (V1307) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1307)) end end end(E1195)); {'Idris.TTImp.TTImp.IPrimVal', E1197, E1198} -> (fun (V1308, V1309) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1199, E1200} -> (fun (V1310, V1311) -> ('case--getMatch-1088'(V1309, V1308, V1311, V1310, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1309, V1311)))) end(E1199, E1200)); _ -> fun (V1312) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1312)) end end end(E1197, E1198)); _ -> fun (V1313) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1313)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1128, E1129, E1130, E1131} -> (fun (V1314, V1315, V1316, V1317) -> fun (V1318) -> ('un--matchFail'('erased', V1314, V1318)) end end(E1128, E1129, E1130, E1131)); {'Idris.TTImp.TTImp.IAutoApp', E1132, E1133, E1134} -> (fun (V1319, V1320, V1321) -> fun (V1322) -> ('un--matchFail'('erased', V1319, V1322)) end end(E1132, E1133, E1134)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1093, E1094, E1095} -> (fun (V1323, V1324, V1325) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1107, E1108, E1109} -> (fun (V1326, V1327, V1328) -> ('un--matchAny'(V1323, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1325, V1328)))) end(E1107, E1108, E1109)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1102, E1103, E1104, E1105, E1106} -> (fun (V1329, V1330, V1331, V1332, V1333) -> ('un--getMatch'(V0, V1, V1333)) end(E1102, E1103, E1104, E1105, E1106)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1096} -> (fun (V1334) -> case V2 of {'Idris.TTImp.TTImp.IType', E1097} -> (fun (V1335) -> fun (V1336) -> {'Idris.Prelude.Types.Right', []} end end(E1097)); _ -> fun (V1337) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1337)) end end end(E1096)); {'Idris.TTImp.TTImp.IPrimVal', E1098, E1099} -> (fun (V1338, V1339) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1100, E1101} -> (fun (V1340, V1341) -> ('case--getMatch-1088'(V1339, V1338, V1341, V1340, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1339, V1341)))) end(E1100, E1101)); _ -> fun (V1342) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1342)) end end end(E1098, E1099)); _ -> fun (V1343) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1343)) end end end end end(E1093, E1094, E1095)); {'Idris.TTImp.TTImp.IAs', E1110, E1111, E1112, E1113, E1114} -> (fun (V1344, V1345, V1346, V1347, V1348) -> case V1347 of {'Idris.Core.Name.UN', E1115} -> (fun (V1349) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1118, E1119, E1120, E1121, E1122} -> (fun (V1350, V1351, V1352, V1353, V1354) -> case V1353 of {'Idris.Core.Name.UN', E1125} -> (fun (V1355) -> fun (V1356) -> begin (V1357 = (('un--getMatch'(V0, V1348, V1354))(V1356))), case V1357 of {'Idris.Prelude.Types.Left', E1126} -> (fun (V1358) -> {'Idris.Prelude.Types.Left', V1358} end(E1126)); {'Idris.Prelude.Types.Right', E1127} -> (fun (V1359) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1349, {'Idris.TTImp.TTImp.IBindVar', V1350, V1355}} | V1359]))(V1356)) end(E1127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1125)); _ -> fun (V1360) -> begin (V1361 = (('un--getMatch'(V0, V1348, V2))(V1360))), case V1361 of {'Idris.Prelude.Types.Left', E1123} -> (fun (V1362) -> {'Idris.Prelude.Types.Left', V1362} end(E1123)); {'Idris.Prelude.Types.Right', E1124} -> (fun (V1363) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1349, V2} | V1363]))(V1360)) end(E1124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1118, E1119, E1120, E1121, E1122)); _ -> fun (V1364) -> begin (V1365 = (('un--getMatch'(V0, V1348, V2))(V1364))), case V1365 of {'Idris.Prelude.Types.Left', E1116} -> (fun (V1366) -> {'Idris.Prelude.Types.Left', V1366} end(E1116)); {'Idris.Prelude.Types.Right', E1117} -> (fun (V1367) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1349, V2} | V1367]))(V1364)) end(E1117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1115)); _ -> ('un--getMatch'(V0, V1348, V2)) end end(E1110, E1111, E1112, E1113, E1114)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1088, E1089, E1090, E1091, E1092} -> (fun (V1368, V1369, V1370, V1371, V1372) -> ('un--getMatch'(V0, V1, V1372)) end(E1088, E1089, E1090, E1091, E1092)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1082} -> (fun (V1373) -> case V2 of {'Idris.TTImp.TTImp.IType', E1083} -> (fun (V1374) -> fun (V1375) -> {'Idris.Prelude.Types.Right', []} end end(E1083)); _ -> fun (V1376) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1376)) end end end(E1082)); {'Idris.TTImp.TTImp.IPrimVal', E1084, E1085} -> (fun (V1377, V1378) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1086, E1087} -> (fun (V1379, V1380) -> ('case--getMatch-1088'(V1378, V1377, V1380, V1379, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1378, V1380)))) end(E1086, E1087)); _ -> fun (V1381) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1381)) end end end(E1084, E1085)); _ -> fun (V1382) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1382)) end end end end end end end end(E1078, E1079, E1080, E1081)); {'Idris.TTImp.TTImp.IWithApp', E1259, E1260, E1261} -> (fun (V1383, V1384, V1385) -> case V2 of {'Idris.TTImp.TTImp.IWithApp', E1435, E1436, E1437} -> (fun (V1386, V1387, V1388) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V1384, V1387} | [{'Idris.Builtin.MkPair', V1385, V1388} | []]])) end(E1435, E1436, E1437)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1368, E1369, E1370, E1371} -> (fun (V1389, V1390, V1391, V1392) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1390, V2} | [{'Idris.Builtin.MkPair', V1392, V1392} | []]])) end(E1368, E1369, E1370, E1371)); {'Idris.TTImp.TTImp.IAutoApp', E1372, E1373, E1374} -> (fun (V1393, V1394, V1395) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1394, V2} | [{'Idris.Builtin.MkPair', V1395, V1395} | []]])) end(E1372, E1373, E1374)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1361, E1362, E1363, E1364} -> (fun (V1396, V1397, V1398, V1399) -> fun (V1400) -> ('un--matchFail'('erased', V1396, V1400)) end end(E1361, E1362, E1363, E1364)); {'Idris.TTImp.TTImp.IAutoApp', E1365, E1366, E1367} -> (fun (V1401, V1402, V1403) -> fun (V1404) -> ('un--matchFail'('erased', V1401, V1404)) end end(E1365, E1366, E1367)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1326, E1327, E1328} -> (fun (V1405, V1406, V1407) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1340, E1341, E1342} -> (fun (V1408, V1409, V1410) -> ('un--matchAny'(V1405, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1407, V1410)))) end(E1340, E1341, E1342)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1335, E1336, E1337, E1338, E1339} -> (fun (V1411, V1412, V1413, V1414, V1415) -> ('un--getMatch'(V0, V1, V1415)) end(E1335, E1336, E1337, E1338, E1339)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1329} -> (fun (V1416) -> case V2 of {'Idris.TTImp.TTImp.IType', E1330} -> (fun (V1417) -> fun (V1418) -> {'Idris.Prelude.Types.Right', []} end end(E1330)); _ -> fun (V1419) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1419)) end end end(E1329)); {'Idris.TTImp.TTImp.IPrimVal', E1331, E1332} -> (fun (V1420, V1421) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1333, E1334} -> (fun (V1422, V1423) -> ('case--getMatch-1088'(V1421, V1420, V1423, V1422, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1421, V1423)))) end(E1333, E1334)); _ -> fun (V1424) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1424)) end end end(E1331, E1332)); _ -> fun (V1425) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1425)) end end end end end(E1326, E1327, E1328)); {'Idris.TTImp.TTImp.IAs', E1343, E1344, E1345, E1346, E1347} -> (fun (V1426, V1427, V1428, V1429, V1430) -> case V1429 of {'Idris.Core.Name.UN', E1348} -> (fun (V1431) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1351, E1352, E1353, E1354, E1355} -> (fun (V1432, V1433, V1434, V1435, V1436) -> case V1435 of {'Idris.Core.Name.UN', E1358} -> (fun (V1437) -> fun (V1438) -> begin (V1439 = (('un--getMatch'(V0, V1430, V1436))(V1438))), case V1439 of {'Idris.Prelude.Types.Left', E1359} -> (fun (V1440) -> {'Idris.Prelude.Types.Left', V1440} end(E1359)); {'Idris.Prelude.Types.Right', E1360} -> (fun (V1441) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1431, {'Idris.TTImp.TTImp.IBindVar', V1432, V1437}} | V1441]))(V1438)) end(E1360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1358)); _ -> fun (V1442) -> begin (V1443 = (('un--getMatch'(V0, V1430, V2))(V1442))), case V1443 of {'Idris.Prelude.Types.Left', E1356} -> (fun (V1444) -> {'Idris.Prelude.Types.Left', V1444} end(E1356)); {'Idris.Prelude.Types.Right', E1357} -> (fun (V1445) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1431, V2} | V1445]))(V1442)) end(E1357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1351, E1352, E1353, E1354, E1355)); _ -> fun (V1446) -> begin (V1447 = (('un--getMatch'(V0, V1430, V2))(V1446))), case V1447 of {'Idris.Prelude.Types.Left', E1349} -> (fun (V1448) -> {'Idris.Prelude.Types.Left', V1448} end(E1349)); {'Idris.Prelude.Types.Right', E1350} -> (fun (V1449) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1431, V2} | V1449]))(V1446)) end(E1350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1348)); _ -> ('un--getMatch'(V0, V1430, V2)) end end(E1343, E1344, E1345, E1346, E1347)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1321, E1322, E1323, E1324, E1325} -> (fun (V1450, V1451, V1452, V1453, V1454) -> ('un--getMatch'(V0, V1, V1454)) end(E1321, E1322, E1323, E1324, E1325)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1315} -> (fun (V1455) -> case V2 of {'Idris.TTImp.TTImp.IType', E1316} -> (fun (V1456) -> fun (V1457) -> {'Idris.Prelude.Types.Right', []} end end(E1316)); _ -> fun (V1458) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1458)) end end end(E1315)); {'Idris.TTImp.TTImp.IPrimVal', E1317, E1318} -> (fun (V1459, V1460) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1319, E1320} -> (fun (V1461, V1462) -> ('case--getMatch-1088'(V1460, V1459, V1462, V1461, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1460, V1462)))) end(E1319, E1320)); _ -> fun (V1463) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1463)) end end end(E1317, E1318)); _ -> fun (V1464) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1464)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E1428, E1429, E1430, E1431} -> (fun (V1465, V1466, V1467, V1468) -> ('un--getMatch'(1, V1466, V1466)) end(E1428, E1429, E1430, E1431)); {'Idris.TTImp.TTImp.IAutoApp', E1432, E1433, E1434} -> (fun (V1469, V1470, V1471) -> ('un--getMatch'(1, V1470, V1470)) end(E1432, E1433, E1434)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1421, E1422, E1423, E1424} -> (fun (V1472, V1473, V1474, V1475) -> fun (V1476) -> ('un--matchFail'('erased', V1472, V1476)) end end(E1421, E1422, E1423, E1424)); {'Idris.TTImp.TTImp.IAutoApp', E1425, E1426, E1427} -> (fun (V1477, V1478, V1479) -> fun (V1480) -> ('un--matchFail'('erased', V1477, V1480)) end end(E1425, E1426, E1427)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1386, E1387, E1388} -> (fun (V1481, V1482, V1483) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1400, E1401, E1402} -> (fun (V1484, V1485, V1486) -> ('un--matchAny'(V1481, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1483, V1486)))) end(E1400, E1401, E1402)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1395, E1396, E1397, E1398, E1399} -> (fun (V1487, V1488, V1489, V1490, V1491) -> ('un--getMatch'(V0, V1, V1491)) end(E1395, E1396, E1397, E1398, E1399)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1389} -> (fun (V1492) -> case V2 of {'Idris.TTImp.TTImp.IType', E1390} -> (fun (V1493) -> fun (V1494) -> {'Idris.Prelude.Types.Right', []} end end(E1390)); _ -> fun (V1495) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1495)) end end end(E1389)); {'Idris.TTImp.TTImp.IPrimVal', E1391, E1392} -> (fun (V1496, V1497) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1393, E1394} -> (fun (V1498, V1499) -> ('case--getMatch-1088'(V1497, V1496, V1499, V1498, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1497, V1499)))) end(E1393, E1394)); _ -> fun (V1500) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1500)) end end end(E1391, E1392)); _ -> fun (V1501) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1501)) end end end end end(E1386, E1387, E1388)); {'Idris.TTImp.TTImp.IAs', E1403, E1404, E1405, E1406, E1407} -> (fun (V1502, V1503, V1504, V1505, V1506) -> case V1505 of {'Idris.Core.Name.UN', E1408} -> (fun (V1507) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1411, E1412, E1413, E1414, E1415} -> (fun (V1508, V1509, V1510, V1511, V1512) -> case V1511 of {'Idris.Core.Name.UN', E1418} -> (fun (V1513) -> fun (V1514) -> begin (V1515 = (('un--getMatch'(V0, V1506, V1512))(V1514))), case V1515 of {'Idris.Prelude.Types.Left', E1419} -> (fun (V1516) -> {'Idris.Prelude.Types.Left', V1516} end(E1419)); {'Idris.Prelude.Types.Right', E1420} -> (fun (V1517) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1507, {'Idris.TTImp.TTImp.IBindVar', V1508, V1513}} | V1517]))(V1514)) end(E1420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1418)); _ -> fun (V1518) -> begin (V1519 = (('un--getMatch'(V0, V1506, V2))(V1518))), case V1519 of {'Idris.Prelude.Types.Left', E1416} -> (fun (V1520) -> {'Idris.Prelude.Types.Left', V1520} end(E1416)); {'Idris.Prelude.Types.Right', E1417} -> (fun (V1521) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1507, V2} | V1521]))(V1518)) end(E1417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1411, E1412, E1413, E1414, E1415)); _ -> fun (V1522) -> begin (V1523 = (('un--getMatch'(V0, V1506, V2))(V1522))), case V1523 of {'Idris.Prelude.Types.Left', E1409} -> (fun (V1524) -> {'Idris.Prelude.Types.Left', V1524} end(E1409)); {'Idris.Prelude.Types.Right', E1410} -> (fun (V1525) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1507, V2} | V1525]))(V1522)) end(E1410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1408)); _ -> ('un--getMatch'(V0, V1506, V2)) end end(E1403, E1404, E1405, E1406, E1407)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1381, E1382, E1383, E1384, E1385} -> (fun (V1526, V1527, V1528, V1529, V1530) -> ('un--getMatch'(V0, V1, V1530)) end(E1381, E1382, E1383, E1384, E1385)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1375} -> (fun (V1531) -> case V2 of {'Idris.TTImp.TTImp.IType', E1376} -> (fun (V1532) -> fun (V1533) -> {'Idris.Prelude.Types.Right', []} end end(E1376)); _ -> fun (V1534) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1534)) end end end(E1375)); {'Idris.TTImp.TTImp.IPrimVal', E1377, E1378} -> (fun (V1535, V1536) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1379, E1380} -> (fun (V1537, V1538) -> ('case--getMatch-1088'(V1536, V1535, V1538, V1537, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1536, V1538)))) end(E1379, E1380)); _ -> fun (V1539) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1539)) end end end(E1377, E1378)); _ -> fun (V1540) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1540)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E1308, E1309, E1310, E1311} -> (fun (V1541, V1542, V1543, V1544) -> fun (V1545) -> ('un--matchFail'('erased', V1541, V1545)) end end(E1308, E1309, E1310, E1311)); {'Idris.TTImp.TTImp.IAutoApp', E1312, E1313, E1314} -> (fun (V1546, V1547, V1548) -> fun (V1549) -> ('un--matchFail'('erased', V1546, V1549)) end end(E1312, E1313, E1314)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1273, E1274, E1275} -> (fun (V1550, V1551, V1552) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1287, E1288, E1289} -> (fun (V1553, V1554, V1555) -> ('un--matchAny'(V1550, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1552, V1555)))) end(E1287, E1288, E1289)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1282, E1283, E1284, E1285, E1286} -> (fun (V1556, V1557, V1558, V1559, V1560) -> ('un--getMatch'(V0, V1, V1560)) end(E1282, E1283, E1284, E1285, E1286)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1276} -> (fun (V1561) -> case V2 of {'Idris.TTImp.TTImp.IType', E1277} -> (fun (V1562) -> fun (V1563) -> {'Idris.Prelude.Types.Right', []} end end(E1277)); _ -> fun (V1564) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1564)) end end end(E1276)); {'Idris.TTImp.TTImp.IPrimVal', E1278, E1279} -> (fun (V1565, V1566) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1280, E1281} -> (fun (V1567, V1568) -> ('case--getMatch-1088'(V1566, V1565, V1568, V1567, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1566, V1568)))) end(E1280, E1281)); _ -> fun (V1569) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1569)) end end end(E1278, E1279)); _ -> fun (V1570) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1570)) end end end end end(E1273, E1274, E1275)); {'Idris.TTImp.TTImp.IAs', E1290, E1291, E1292, E1293, E1294} -> (fun (V1571, V1572, V1573, V1574, V1575) -> case V1574 of {'Idris.Core.Name.UN', E1295} -> (fun (V1576) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1298, E1299, E1300, E1301, E1302} -> (fun (V1577, V1578, V1579, V1580, V1581) -> case V1580 of {'Idris.Core.Name.UN', E1305} -> (fun (V1582) -> fun (V1583) -> begin (V1584 = (('un--getMatch'(V0, V1575, V1581))(V1583))), case V1584 of {'Idris.Prelude.Types.Left', E1306} -> (fun (V1585) -> {'Idris.Prelude.Types.Left', V1585} end(E1306)); {'Idris.Prelude.Types.Right', E1307} -> (fun (V1586) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1576, {'Idris.TTImp.TTImp.IBindVar', V1577, V1582}} | V1586]))(V1583)) end(E1307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1305)); _ -> fun (V1587) -> begin (V1588 = (('un--getMatch'(V0, V1575, V2))(V1587))), case V1588 of {'Idris.Prelude.Types.Left', E1303} -> (fun (V1589) -> {'Idris.Prelude.Types.Left', V1589} end(E1303)); {'Idris.Prelude.Types.Right', E1304} -> (fun (V1590) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1576, V2} | V1590]))(V1587)) end(E1304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1298, E1299, E1300, E1301, E1302)); _ -> fun (V1591) -> begin (V1592 = (('un--getMatch'(V0, V1575, V2))(V1591))), case V1592 of {'Idris.Prelude.Types.Left', E1296} -> (fun (V1593) -> {'Idris.Prelude.Types.Left', V1593} end(E1296)); {'Idris.Prelude.Types.Right', E1297} -> (fun (V1594) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1576, V2} | V1594]))(V1591)) end(E1297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1295)); _ -> ('un--getMatch'(V0, V1575, V2)) end end(E1290, E1291, E1292, E1293, E1294)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1268, E1269, E1270, E1271, E1272} -> (fun (V1595, V1596, V1597, V1598, V1599) -> ('un--getMatch'(V0, V1, V1599)) end(E1268, E1269, E1270, E1271, E1272)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1262} -> (fun (V1600) -> case V2 of {'Idris.TTImp.TTImp.IType', E1263} -> (fun (V1601) -> fun (V1602) -> {'Idris.Prelude.Types.Right', []} end end(E1263)); _ -> fun (V1603) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1603)) end end end(E1262)); {'Idris.TTImp.TTImp.IPrimVal', E1264, E1265} -> (fun (V1604, V1605) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1266, E1267} -> (fun (V1606, V1607) -> ('case--getMatch-1088'(V1605, V1604, V1607, V1606, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1605, V1607)))) end(E1266, E1267)); _ -> fun (V1608) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1608)) end end end(E1264, E1265)); _ -> fun (V1609) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1609)) end end end end end end end end(E1259, E1260, E1261)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E106, E107, E108, E109} -> (fun (V1610, V1611, V1612, V1613) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1611, V2} | [{'Idris.Builtin.MkPair', V1613, V1613} | []]])) end(E106, E107, E108, E109)); {'Idris.TTImp.TTImp.IAutoApp', E110, E111, E112} -> (fun (V1614, V1615, V1616) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1615, V2} | [{'Idris.Builtin.MkPair', V1616, V1616} | []]])) end(E110, E111, E112)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E99, E100, E101, E102} -> (fun (V1617, V1618, V1619, V1620) -> fun (V1621) -> ('un--matchFail'('erased', V1617, V1621)) end end(E99, E100, E101, E102)); {'Idris.TTImp.TTImp.IAutoApp', E103, E104, E105} -> (fun (V1622, V1623, V1624) -> fun (V1625) -> ('un--matchFail'('erased', V1622, V1625)) end end(E103, E104, E105)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E64, E65, E66} -> (fun (V1626, V1627, V1628) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E78, E79, E80} -> (fun (V1629, V1630, V1631) -> ('un--matchAny'(V1626, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1628, V1631)))) end(E78, E79, E80)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E73, E74, E75, E76, E77} -> (fun (V1632, V1633, V1634, V1635, V1636) -> ('un--getMatch'(V0, V1, V1636)) end(E73, E74, E75, E76, E77)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E67} -> (fun (V1637) -> case V2 of {'Idris.TTImp.TTImp.IType', E68} -> (fun (V1638) -> fun (V1639) -> {'Idris.Prelude.Types.Right', []} end end(E68)); _ -> fun (V1640) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1640)) end end end(E67)); {'Idris.TTImp.TTImp.IPrimVal', E69, E70} -> (fun (V1641, V1642) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E71, E72} -> (fun (V1643, V1644) -> ('case--getMatch-1088'(V1642, V1641, V1644, V1643, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1642, V1644)))) end(E71, E72)); _ -> fun (V1645) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1645)) end end end(E69, E70)); _ -> fun (V1646) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1646)) end end end end end(E64, E65, E66)); {'Idris.TTImp.TTImp.IAs', E81, E82, E83, E84, E85} -> (fun (V1647, V1648, V1649, V1650, V1651) -> case V1650 of {'Idris.Core.Name.UN', E86} -> (fun (V1652) -> case V2 of {'Idris.TTImp.TTImp.IAs', E89, E90, E91, E92, E93} -> (fun (V1653, V1654, V1655, V1656, V1657) -> case V1656 of {'Idris.Core.Name.UN', E96} -> (fun (V1658) -> fun (V1659) -> begin (V1660 = (('un--getMatch'(V0, V1651, V1657))(V1659))), case V1660 of {'Idris.Prelude.Types.Left', E97} -> (fun (V1661) -> {'Idris.Prelude.Types.Left', V1661} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V1662) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1652, {'Idris.TTImp.TTImp.IBindVar', V1653, V1658}} | V1662]))(V1659)) end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E96)); _ -> fun (V1663) -> begin (V1664 = (('un--getMatch'(V0, V1651, V2))(V1663))), case V1664 of {'Idris.Prelude.Types.Left', E94} -> (fun (V1665) -> {'Idris.Prelude.Types.Left', V1665} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V1666) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1652, V2} | V1666]))(V1663)) end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E89, E90, E91, E92, E93)); _ -> fun (V1667) -> begin (V1668 = (('un--getMatch'(V0, V1651, V2))(V1667))), case V1668 of {'Idris.Prelude.Types.Left', E87} -> (fun (V1669) -> {'Idris.Prelude.Types.Left', V1669} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V1670) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1652, V2} | V1670]))(V1667)) end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E86)); _ -> ('un--getMatch'(V0, V1651, V2)) end end(E81, E82, E83, E84, E85)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E59, E60, E61, E62, E63} -> (fun (V1671, V1672, V1673, V1674, V1675) -> ('un--getMatch'(V0, V1, V1675)) end(E59, E60, E61, E62, E63)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E53} -> (fun (V1676) -> case V2 of {'Idris.TTImp.TTImp.IType', E54} -> (fun (V1677) -> fun (V1678) -> {'Idris.Prelude.Types.Right', []} end end(E54)); _ -> fun (V1679) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1679)) end end end(E53)); {'Idris.TTImp.TTImp.IPrimVal', E55, E56} -> (fun (V1680, V1681) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E57, E58} -> (fun (V1682, V1683) -> ('case--getMatch-1088'(V1681, V1680, V1683, V1682, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1681, V1683)))) end(E57, E58)); _ -> fun (V1684) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1684)) end end end(E55, E56)); _ -> fun (V1685) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1685)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.INamedApp', E166, E167, E168, E169} -> (fun (V1686, V1687, V1688, V1689) -> ('un--getMatch'(1, V1687, V1687)) end(E166, E167, E168, E169)); {'Idris.TTImp.TTImp.IAutoApp', E170, E171, E172} -> (fun (V1690, V1691, V1692) -> ('un--getMatch'(1, V1691, V1691)) end(E170, E171, E172)); _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E159, E160, E161, E162} -> (fun (V1693, V1694, V1695, V1696) -> fun (V1697) -> ('un--matchFail'('erased', V1693, V1697)) end end(E159, E160, E161, E162)); {'Idris.TTImp.TTImp.IAutoApp', E163, E164, E165} -> (fun (V1698, V1699, V1700) -> fun (V1701) -> ('un--matchFail'('erased', V1698, V1701)) end end(E163, E164, E165)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E124, E125, E126} -> (fun (V1702, V1703, V1704) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E138, E139, E140} -> (fun (V1705, V1706, V1707) -> ('un--matchAny'(V1702, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1704, V1707)))) end(E138, E139, E140)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E133, E134, E135, E136, E137} -> (fun (V1708, V1709, V1710, V1711, V1712) -> ('un--getMatch'(V0, V1, V1712)) end(E133, E134, E135, E136, E137)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E127} -> (fun (V1713) -> case V2 of {'Idris.TTImp.TTImp.IType', E128} -> (fun (V1714) -> fun (V1715) -> {'Idris.Prelude.Types.Right', []} end end(E128)); _ -> fun (V1716) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1716)) end end end(E127)); {'Idris.TTImp.TTImp.IPrimVal', E129, E130} -> (fun (V1717, V1718) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E131, E132} -> (fun (V1719, V1720) -> ('case--getMatch-1088'(V1718, V1717, V1720, V1719, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1718, V1720)))) end(E131, E132)); _ -> fun (V1721) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1721)) end end end(E129, E130)); _ -> fun (V1722) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1722)) end end end end end(E124, E125, E126)); {'Idris.TTImp.TTImp.IAs', E141, E142, E143, E144, E145} -> (fun (V1723, V1724, V1725, V1726, V1727) -> case V1726 of {'Idris.Core.Name.UN', E146} -> (fun (V1728) -> case V2 of {'Idris.TTImp.TTImp.IAs', E149, E150, E151, E152, E153} -> (fun (V1729, V1730, V1731, V1732, V1733) -> case V1732 of {'Idris.Core.Name.UN', E156} -> (fun (V1734) -> fun (V1735) -> begin (V1736 = (('un--getMatch'(V0, V1727, V1733))(V1735))), case V1736 of {'Idris.Prelude.Types.Left', E157} -> (fun (V1737) -> {'Idris.Prelude.Types.Left', V1737} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V1738) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1728, {'Idris.TTImp.TTImp.IBindVar', V1729, V1734}} | V1738]))(V1735)) end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E156)); _ -> fun (V1739) -> begin (V1740 = (('un--getMatch'(V0, V1727, V2))(V1739))), case V1740 of {'Idris.Prelude.Types.Left', E154} -> (fun (V1741) -> {'Idris.Prelude.Types.Left', V1741} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V1742) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1728, V2} | V1742]))(V1739)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E149, E150, E151, E152, E153)); _ -> fun (V1743) -> begin (V1744 = (('un--getMatch'(V0, V1727, V2))(V1743))), case V1744 of {'Idris.Prelude.Types.Left', E147} -> (fun (V1745) -> {'Idris.Prelude.Types.Left', V1745} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V1746) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1728, V2} | V1746]))(V1743)) end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E146)); _ -> ('un--getMatch'(V0, V1727, V2)) end end(E141, E142, E143, E144, E145)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E119, E120, E121, E122, E123} -> (fun (V1747, V1748, V1749, V1750, V1751) -> ('un--getMatch'(V0, V1, V1751)) end(E119, E120, E121, E122, E123)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E113} -> (fun (V1752) -> case V2 of {'Idris.TTImp.TTImp.IType', E114} -> (fun (V1753) -> fun (V1754) -> {'Idris.Prelude.Types.Right', []} end end(E114)); _ -> fun (V1755) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1755)) end end end(E113)); {'Idris.TTImp.TTImp.IPrimVal', E115, E116} -> (fun (V1756, V1757) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E117, E118} -> (fun (V1758, V1759) -> ('case--getMatch-1088'(V1757, V1756, V1759, V1758, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1757, V1759)))) end(E117, E118)); _ -> fun (V1760) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1760)) end end end(E115, E116)); _ -> fun (V1761) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1761)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.INamedApp', E46, E47, E48, E49} -> (fun (V1762, V1763, V1764, V1765) -> fun (V1766) -> ('un--matchFail'('erased', V1762, V1766)) end end(E46, E47, E48, E49)); {'Idris.TTImp.TTImp.IAutoApp', E50, E51, E52} -> (fun (V1767, V1768, V1769) -> fun (V1770) -> ('un--matchFail'('erased', V1767, V1770)) end end(E50, E51, E52)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E11, E12, E13} -> (fun (V1771, V1772, V1773) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E25, E26, E27} -> (fun (V1774, V1775, V1776) -> ('un--matchAny'(V1771, V0, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'('erased', 'erased', V1773, V1776)))) end(E25, E26, E27)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E20, E21, E22, E23, E24} -> (fun (V1777, V1778, V1779, V1780, V1781) -> ('un--getMatch'(V0, V1, V1781)) end(E20, E21, E22, E23, E24)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E14} -> (fun (V1782) -> case V2 of {'Idris.TTImp.TTImp.IType', E15} -> (fun (V1783) -> fun (V1784) -> {'Idris.Prelude.Types.Right', []} end end(E15)); _ -> fun (V1785) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1785)) end end end(E14)); {'Idris.TTImp.TTImp.IPrimVal', E16, E17} -> (fun (V1786, V1787) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E18, E19} -> (fun (V1788, V1789) -> ('case--getMatch-1088'(V1787, V1786, V1789, V1788, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1787, V1789)))) end(E18, E19)); _ -> fun (V1790) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1790)) end end end(E16, E17)); _ -> fun (V1791) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1791)) end end end end end(E11, E12, E13)); {'Idris.TTImp.TTImp.IAs', E28, E29, E30, E31, E32} -> (fun (V1792, V1793, V1794, V1795, V1796) -> case V1795 of {'Idris.Core.Name.UN', E33} -> (fun (V1797) -> case V2 of {'Idris.TTImp.TTImp.IAs', E36, E37, E38, E39, E40} -> (fun (V1798, V1799, V1800, V1801, V1802) -> case V1801 of {'Idris.Core.Name.UN', E43} -> (fun (V1803) -> fun (V1804) -> begin (V1805 = (('un--getMatch'(V0, V1796, V1802))(V1804))), case V1805 of {'Idris.Prelude.Types.Left', E44} -> (fun (V1806) -> {'Idris.Prelude.Types.Left', V1806} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V1807) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1797, {'Idris.TTImp.TTImp.IBindVar', V1798, V1803}} | V1807]))(V1804)) end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43)); _ -> fun (V1808) -> begin (V1809 = (('un--getMatch'(V0, V1796, V2))(V1808))), case V1809 of {'Idris.Prelude.Types.Left', E41} -> (fun (V1810) -> {'Idris.Prelude.Types.Left', V1810} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V1811) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1797, V2} | V1811]))(V1808)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E36, E37, E38, E39, E40)); _ -> fun (V1812) -> begin (V1813 = (('un--getMatch'(V0, V1796, V2))(V1812))), case V1813 of {'Idris.Prelude.Types.Left', E34} -> (fun (V1814) -> {'Idris.Prelude.Types.Left', V1814} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V1815) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1797, V2} | V1815]))(V1812)) end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33)); _ -> ('un--getMatch'(V0, V1796, V2)) end end(E28, E29, E30, E31, E32)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E6, E7, E8, E9, E10} -> (fun (V1816, V1817, V1818, V1819, V1820) -> ('un--getMatch'(V0, V1, V1820)) end(E6, E7, E8, E9, E10)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E0} -> (fun (V1821) -> case V2 of {'Idris.TTImp.TTImp.IType', E1} -> (fun (V1822) -> fun (V1823) -> {'Idris.Prelude.Types.Right', []} end end(E1)); _ -> fun (V1824) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1824)) end end end(E0)); {'Idris.TTImp.TTImp.IPrimVal', E2, E3} -> (fun (V1825, V1826) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E4, E5} -> (fun (V1827, V1828) -> ('case--getMatch-1088'(V1826, V1825, V1828, V1827, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1826, V1828)))) end(E4, E5)); _ -> fun (V1829) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1829)) end end end(E2, E3)); _ -> fun (V1830) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1830)) end end end end end end end.
'un--getArgMatch'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V3 end()); _ -> case V2 of 0 -> case V5 of {'Idris.Prelude.Types.Just', E6} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V7, V8) -> case V7 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> ('case--getArgMatch-1243'(V8, V4, V3, V1, V0, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('Idris.Idris2.Core.Name':'un--isUN'(V8)), fun (V9) -> ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V12, V13)) end end}, V9, V4)) end)))) end()); _ -> case V5 of {'Idris.Prelude.Types.Just', E12} -> (fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V15, V16) -> ('case--getArgMatch-1324'(V15, V16, V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('Idris.Idris2.Core.Name':'un--isUN'(V16)), fun (V17) -> ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V18, V19)) end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V20, V21)) end end}, V17, V4)) end)))) end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> case V5 of {'Idris.Prelude.Types.Just', E7} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V23, V24) -> ('case--getArgMatch-1324'(V23, V24, V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('Idris.Idris2.Core.Name':'un--isUN'(V24)), fun (V25) -> ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V26, V27)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V28, V29)) end end}, V25, V4)) end)))) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> case V5 of {'Idris.Prelude.Types.Just', E3} -> (fun (V30) -> case V30 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V31, V32) -> ('case--getArgMatch-1324'(V31, V32, V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('Idris.Idris2.Core.Name':'un--isUN'(V32)), fun (V33) -> ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V36, V37)) end end}, V33, V4)) end)))) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V38) -> case V38 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V39, V40) -> ('case--getArgMatch-1324'(V39, V40, V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('Idris.Idris2.Core.Name':'un--isUN'(V40)), fun (V41) -> ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V42, V43)) end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V44, V45)) end end}, V41, V4)) end)))) end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
