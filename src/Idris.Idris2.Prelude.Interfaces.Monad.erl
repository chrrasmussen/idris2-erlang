-module('Idris.Idris2.Prelude.Interfaces.Monad').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--join_Monad_Compose((. $m) $t)'/5,
  'dn--un-->>=_Monad_Compose((. $m) $t)'/7,
  'un--Compose'/3
]).
'dn--un--join_Monad_Compose((. $m) $t)'(V0, V1, V2, V3, V4) -> ('dn--un-->>=_Monad_Compose((. $m) $t)'('erased', 'erased', 'erased', 'erased', V3, V4, fun (V5) -> V5 end)).
'dn--un-->>=_Monad_Compose((. $m) $t)'(V0, V1, V2, V3, V4, V5, V6) -> case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V4)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E0, E1, E2} -> (fun (V7, V8, V9) -> ((((V8('erased'))('erased'))(V5))(fun (V10) -> case case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V4)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V11, V12, V13) -> V11 end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E3, E4, E5} -> (fun (V14, V15, V16) -> ((((V14('erased'))('erased'))(case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4)))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V23, V24, V25) -> fun (V26) -> ((V25('erased'))(V26)) end end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V4)))) of {'Idris.Prelude.Interfaces.dn--un--__mkTraversable', E9, E10, E11} -> (fun (V17, V18, V19) -> ((((((V19('erased'))('erased'))('erased'))(case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V4)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E12, E13, E14} -> (fun (V20, V21, V22) -> V20 end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))(V10)) end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--Compose'(V0, V1, V2) -> {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Interfaces.Functor':'dn--un--map_Functor_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E3, E4, E5} -> (fun (V7, V8, V9) -> V7 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2)))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E6, E7, E8} -> (fun (V10, V11, V12) -> V10 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E0, E1, E2} -> (fun (V13, V14, V15) -> V13 end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E12, E13, E14} -> (fun (V16, V17, V18) -> V16 end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2)))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E15, E16, E17} -> (fun (V19, V20, V21) -> V19 end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end})) of {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', E9, E10, E11} -> (fun (V22, V23, V24) -> V22 end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V5, V6)) end end end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--pure_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E18, E19, E20} -> (fun (V27, V28, V29) -> V27 end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2)))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E21, E22, E23} -> (fun (V30, V31, V32) -> V30 end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V26)) end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Interfaces.Applicative':'dn--un--<*>_Applicative_Compose((. $f) $g)'('erased', 'erased', 'erased', 'erased', {'Idris.Builtin.MkPair', case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V2)) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E24, E25, E26} -> (fun (V37, V38, V39) -> V37 end(E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V2)))) of {'Idris.Prelude.Interfaces.dn--un--__mkMonad', E27, E28, E29} -> (fun (V40, V41, V42) -> V40 end(E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V35, V36)) end end end end}, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('dn--un-->>=_Monad_Compose((. $m) $t)'('erased', 'erased', 'erased', 'erased', V2, V45, V46)) end end end end, fun (V47) -> fun (V48) -> ('dn--un--join_Monad_Compose((. $m) $t)'('erased', 'erased', 'erased', V2, V48)) end end}.
