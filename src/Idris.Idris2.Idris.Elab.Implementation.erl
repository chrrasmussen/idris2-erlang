-module('Idris.Idris2.Idris.Elab.Implementation').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in case block in elabImplementation-8753'/45,
  'case--elabImplementation-8202'/25,
  'case--elabImplementation,topMethType-6815'/32,
  'nested--9993-6286--in--un--vfc'/19,
  'nested--9993-6303--in--un--updateClause'/22,
  'nested--9993-6304--in--un--updateBody'/22,
  'nested--9993-6302--in--un--updateApp'/22,
  'nested--9993-6298--in--un--topMethTypes'/28,
  'nested--9993-6297--in--un--topMethType'/28,
  'nested--9688-5981--in--un--toForward'/1,
  'nested--9781-6077--in--un--specialiseMeth'/7,
  'nested--9993-6299--in--un--mkTopMethDecl'/20,
  'nested--9993-6293--in--un--mkMethField'/22,
  'nested--9993-6291--in--un--mkLam'/21,
  'nested--9993-6300--in--un--methNameUpdate'/20,
  'nested--9993-6294--in--un--methName'/20,
  'nested--9993-6289--in--un--impsApply'/21,
  'nested--9993-6288--in--un--getFieldArgs'/20,
  'nested--10028-6359--in--un--getArgs'/27,
  'nested--9993-6301--in--un--findMethName'/23,
  'nested--9781-6078--in--un--extendBody'/9,
  'nested--9781-6079--in--un--dropGot'/8,
  'nested--9993-6296--in--un--bindImps'/21,
  'nested--9993-6290--in--un--autoImpsApply'/21,
  'nested--10033-6538--in--un--applyUpdate'/28,
  'nested--9993-6292--in--un--applyTo'/21,
  'nested--9993-6287--in--un--applyEnv'/21,
  'nested--9993-6295--in--un--applyCon'/22,
  'nested--9993-6305--in--un--addTransform'/23,
  'un--replaceSep'/1,
  'un--mkImplName'/3,
  'un--getMethImps'/4,
  'un--elabImplementation'/19,
  'un--bindImpls'/3,
  'un--bindConstraints'/4,
  'un--addDefaults'/6
]).
'case--case block in case block in case block in case block in elabImplementation-8753'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> case V43 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V45, V46) -> begin (V50 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Added defaults: body is "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpDecl'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpDecl'(V48, V49)) end end}, V45)))) end, V44))), case V50 of {'Idris.Prelude.Types.Left', E2} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V52) -> begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Missing methods: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V54, V55)) end end}, V46)))) end, V44))), case V56 of {'Idris.Prelude.Types.Left', E4} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V58) -> begin (V60 = begin (V59 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V59} end), case V60 of {'Idris.Prelude.Types.Left', E6} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V62) -> begin (V91 = case V62 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90) -> V72 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V95 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Open hints: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V92)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V93, V94)) end end}, [V20 | V1])))) end, V44))), case V95 of {'Idris.Prelude.Types.Left', E36} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V97) -> begin (V103 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V98) -> fun (V99) -> begin (V100 = ('Idris.Idris2.Core.Context':'un--checkUnambig'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V98, V99))), case V100 of {'Idris.Prelude.Types.Left', E38} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V102) -> ('Idris.Idris2.Core.Context':'un--addOpenHint'(V18, V102, V99)) end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V1, V44))), case V103 of {'Idris.Prelude.Types.Left', E40} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V105) -> begin (V107 = begin (V106 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V106} end), case V107 of {'Idris.Prelude.Types.Left', E42} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V109) -> begin (V139 = ('nested--9993-6298--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, [], V20, V42, V31, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E44, E45, E46, E47, E48, E49} -> (fun (V110, V111, V112, V113, V114, V115) -> V111 end(E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E50, E51, E52, E53, E54, E55} -> (fun (V116, V117, V118, V119, V120, V121) -> V118 end(E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V122) -> case V122 of {'Idris.Idris.Syntax.MkMethod', E56, E57, E58, E59} -> (fun (V123, V124, V125, V126) -> V123 end(E56, E57, E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E60, E61, E62, E63, E64, E65} -> (fun (V127, V128, V129, V130, V131, V132) -> V131 end(E60, E61, E62, E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E66, E67, E68, E69, E70, E71} -> (fun (V133, V134, V135, V136, V137, V138) -> V137 end(E66, E67, E68, E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V44))), case V139 of {'Idris.Prelude.Types.Left', E72} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V141) -> begin (V144 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V142) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V9, V10, V142)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V143) -> ('nested--9993-6299--in--un--mkTopMethDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V143)) end, V141)), V44))), case V144 of {'Idris.Prelude.Types.Left', E74} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V146) -> begin (V148 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V147) -> ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Builtin':'un--snd'(V147)))) end, V141))), begin (V155 = case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E76, E77, E78, E79, E80, E81} -> (fun (V149, V150, V151, V152, V153, V154) -> V149 end(E76, E77, E78, E79, E80, E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V158 = ('nested--9993-6289--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V20}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V156) -> {'Idris.Builtin.MkPair', V156, {'Idris.TTImp.TTImp.IBindVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V156))}} end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V157) -> ('Idris.Idris2.Builtin':'un--fst'(V157)) end, V42))))))), begin (V160 = begin (V159 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V159} end), case V160 of {'Idris.Prelude.Types.Left', E82} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V162) -> begin (V163 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V18, [], V162, {'Idris.Core.Env.Nil'}, V29, V44))), case V163 of {'Idris.Prelude.Types.Left', E84} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V165) -> begin (V166 = ('nested--9993-6288--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V165))), begin (V434 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Field types "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V167) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V168) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V168)) end, fun (V169) -> fun (V170) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V169, V170)) end end}, {'Idris.Prelude.Show.MkShow', fun (V171) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V172) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V173) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V173)) end, fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V174, V175)) end end}, {'Idris.Prelude.Show.MkShow', fun (V176) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V177) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V177)) end, fun (V178) -> fun (V179) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V178, V179)) end end}, {'Idris.Prelude.Show.MkShow', fun (V180) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V181) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V181)) end, fun (V182) -> fun (V183) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V182, V183)) end end}, V180)) end, fun (V184) -> fun (V185) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V186) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V186)) end, fun (V187) -> fun (V188) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V187, V188)) end end}, V184, V185)) end end}}, V176)) end, fun (V189) -> fun (V190) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V191) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V191)) end, fun (V192) -> fun (V193) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V192, V193)) end end}, {'Idris.Prelude.Show.MkShow', fun (V194) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V195) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V195)) end, fun (V196) -> fun (V197) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V196, V197)) end end}, V194)) end, fun (V198) -> fun (V199) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V200) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V200)) end, fun (V201) -> fun (V202) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V201, V202)) end end}, V198, V199)) end end}}, V189, V190)) end end}}, V172)) end, fun (V203) -> fun (V204) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V205) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V205)) end, fun (V206) -> fun (V207) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V206, V207)) end end}, {'Idris.Prelude.Show.MkShow', fun (V208) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V209) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V209)) end, fun (V210) -> fun (V211) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V210, V211)) end end}, {'Idris.Prelude.Show.MkShow', fun (V212) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V213) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V213)) end, fun (V214) -> fun (V215) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V214, V215)) end end}, V212)) end, fun (V216) -> fun (V217) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V218) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V218)) end, fun (V219) -> fun (V220) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V219, V220)) end end}, V216, V217)) end end}}, V208)) end, fun (V221) -> fun (V222) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V223) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V223)) end, fun (V224) -> fun (V225) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V224, V225)) end end}, {'Idris.Prelude.Show.MkShow', fun (V226) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V227) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V227)) end, fun (V228) -> fun (V229) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V228, V229)) end end}, V226)) end, fun (V230) -> fun (V231) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V232) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V232)) end, fun (V233) -> fun (V234) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V233, V234)) end end}, V230, V231)) end end}}, V221, V222)) end end}}, V203, V204)) end end}, V171)) end, fun (V235) -> fun (V236) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V237) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V238) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V238)) end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V239, V240)) end end}, {'Idris.Prelude.Show.MkShow', fun (V241) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V242) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V242)) end, fun (V243) -> fun (V244) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V243, V244)) end end}, {'Idris.Prelude.Show.MkShow', fun (V245) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V246) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V246)) end, fun (V247) -> fun (V248) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V247, V248)) end end}, V245)) end, fun (V249) -> fun (V250) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V251) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V251)) end, fun (V252) -> fun (V253) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V252, V253)) end end}, V249, V250)) end end}}, V241)) end, fun (V254) -> fun (V255) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V256) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V256)) end, fun (V257) -> fun (V258) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V257, V258)) end end}, {'Idris.Prelude.Show.MkShow', fun (V259) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V260) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V260)) end, fun (V261) -> fun (V262) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V261, V262)) end end}, V259)) end, fun (V263) -> fun (V264) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V265) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V265)) end, fun (V266) -> fun (V267) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V266, V267)) end end}, V263, V264)) end end}}, V254, V255)) end end}}, V237)) end, fun (V268) -> fun (V269) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V270) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V270)) end, fun (V271) -> fun (V272) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V271, V272)) end end}, {'Idris.Prelude.Show.MkShow', fun (V273) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V274) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V274)) end, fun (V275) -> fun (V276) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V275, V276)) end end}, {'Idris.Prelude.Show.MkShow', fun (V277) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V278) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V278)) end, fun (V279) -> fun (V280) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V279, V280)) end end}, V277)) end, fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V283) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V283)) end, fun (V284) -> fun (V285) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V284, V285)) end end}, V281, V282)) end end}}, V273)) end, fun (V286) -> fun (V287) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V288) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V288)) end, fun (V289) -> fun (V290) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V289, V290)) end end}, {'Idris.Prelude.Show.MkShow', fun (V291) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V292) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V292)) end, fun (V293) -> fun (V294) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V293, V294)) end end}, V291)) end, fun (V295) -> fun (V296) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V297) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V297)) end, fun (V298) -> fun (V299) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V298, V299)) end end}, V295, V296)) end end}}, V286, V287)) end end}}, V268, V269)) end end}, V235, V236)) end end}}, V167)) end, fun (V300) -> fun (V301) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V302) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V302)) end, fun (V303) -> fun (V304) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V303, V304)) end end}, {'Idris.Prelude.Show.MkShow', fun (V305) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V306) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V307) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V307)) end, fun (V308) -> fun (V309) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V308, V309)) end end}, {'Idris.Prelude.Show.MkShow', fun (V310) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V311) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V311)) end, fun (V312) -> fun (V313) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V312, V313)) end end}, {'Idris.Prelude.Show.MkShow', fun (V314) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V315) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V315)) end, fun (V316) -> fun (V317) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V316, V317)) end end}, V314)) end, fun (V318) -> fun (V319) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V320) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V320)) end, fun (V321) -> fun (V322) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V321, V322)) end end}, V318, V319)) end end}}, V310)) end, fun (V323) -> fun (V324) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V325) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V325)) end, fun (V326) -> fun (V327) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V326, V327)) end end}, {'Idris.Prelude.Show.MkShow', fun (V328) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V329) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V329)) end, fun (V330) -> fun (V331) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V330, V331)) end end}, V328)) end, fun (V332) -> fun (V333) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V334) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V334)) end, fun (V335) -> fun (V336) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V335, V336)) end end}, V332, V333)) end end}}, V323, V324)) end end}}, V306)) end, fun (V337) -> fun (V338) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V339) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V339)) end, fun (V340) -> fun (V341) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V340, V341)) end end}, {'Idris.Prelude.Show.MkShow', fun (V342) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V343) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V343)) end, fun (V344) -> fun (V345) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V344, V345)) end end}, {'Idris.Prelude.Show.MkShow', fun (V346) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V347) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V347)) end, fun (V348) -> fun (V349) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V348, V349)) end end}, V346)) end, fun (V350) -> fun (V351) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V352) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V352)) end, fun (V353) -> fun (V354) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V353, V354)) end end}, V350, V351)) end end}}, V342)) end, fun (V355) -> fun (V356) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V357) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V357)) end, fun (V358) -> fun (V359) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V358, V359)) end end}, {'Idris.Prelude.Show.MkShow', fun (V360) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V361) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V361)) end, fun (V362) -> fun (V363) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V362, V363)) end end}, V360)) end, fun (V364) -> fun (V365) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V366) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V366)) end, fun (V367) -> fun (V368) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V367, V368)) end end}, V364, V365)) end end}}, V355, V356)) end end}}, V337, V338)) end end}, V305)) end, fun (V369) -> fun (V370) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V371) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V372) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V372)) end, fun (V373) -> fun (V374) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V373, V374)) end end}, {'Idris.Prelude.Show.MkShow', fun (V375) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V376) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V376)) end, fun (V377) -> fun (V378) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V377, V378)) end end}, {'Idris.Prelude.Show.MkShow', fun (V379) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V380) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V380)) end, fun (V381) -> fun (V382) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V381, V382)) end end}, V379)) end, fun (V383) -> fun (V384) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V385) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V385)) end, fun (V386) -> fun (V387) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V386, V387)) end end}, V383, V384)) end end}}, V375)) end, fun (V388) -> fun (V389) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V390) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V390)) end, fun (V391) -> fun (V392) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V391, V392)) end end}, {'Idris.Prelude.Show.MkShow', fun (V393) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V394) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V394)) end, fun (V395) -> fun (V396) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V395, V396)) end end}, V393)) end, fun (V397) -> fun (V398) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V399) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V399)) end, fun (V400) -> fun (V401) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V400, V401)) end end}, V397, V398)) end end}}, V388, V389)) end end}}, V371)) end, fun (V402) -> fun (V403) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V404) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V404)) end, fun (V405) -> fun (V406) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V405, V406)) end end}, {'Idris.Prelude.Show.MkShow', fun (V407) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V408) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V408)) end, fun (V409) -> fun (V410) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V409, V410)) end end}, {'Idris.Prelude.Show.MkShow', fun (V411) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V412) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V412)) end, fun (V413) -> fun (V414) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V413, V414)) end end}, V411)) end, fun (V415) -> fun (V416) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V417) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V417)) end, fun (V418) -> fun (V419) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V418, V419)) end end}, V415, V416)) end end}}, V407)) end, fun (V420) -> fun (V421) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V422) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V422)) end, fun (V423) -> fun (V424) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V423, V424)) end end}, {'Idris.Prelude.Show.MkShow', fun (V425) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V426) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V426)) end, fun (V427) -> fun (V428) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V427, V428)) end end}, V425)) end, fun (V429) -> fun (V430) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V431) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V431)) end, fun (V432) -> fun (V433) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V432, V433)) end end}, V429, V430)) end end}}, V420, V421)) end end}}, V402, V403)) end end}, V369, V370)) end end}}, V300, V301)) end end}, V166)))) end, V44))), case V434 of {'Idris.Prelude.Types.Left', E86} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V436) -> begin (V445 = ('Idris.Idris2.TTImp.TTImp':'un--apply'(('nested--9993-6290--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V155}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V437) -> {'Idris.TTImp.TTImp.ISearch', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(500))} end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E88, E89, E90, E91, E92, E93} -> (fun (V438, V439, V440, V441, V442, V443) -> V441 end(E88, E89, E90, E91, E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V444) -> ('nested--9993-6293--in--un--mkMethField'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V42, V166, V444)) end, V141))))), begin (V446 = {'Idris.TTImp.TTImp.IDef', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, [{'Idris.TTImp.TTImp.PatClause', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V158, V445} | []]}), begin (V447 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Implementation record: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpDecl'(V446)))) end, V44))), case V447 of {'Idris.Prelude.Types.Left', E94} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V449) -> begin (V450 = case V3 of 1 -> ('Idris.Idris2.Core.Context':'un--addOpenHint'(V18, V20, V44)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V450 of {'Idris.Prelude.Types.Left', E96} -> (fun (V451) -> {'Idris.Prelude.Types.Left', V451} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V452) -> begin (V453 = ('Idris.Idris2.Core.Context':'un--setFlag'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.BlockedHint'}, V44))), case V453 of {'Idris.Prelude.Types.Left', E98} -> (fun (V454) -> {'Idris.Prelude.Types.Left', V454} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V455) -> begin (V458 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V456) -> fun (V457) -> ('nested--9993-6287--in--un--applyEnv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V456, V457)) end end, [V20 | V148], [], V44))), case V458 of {'Idris.Prelude.Types.Left', E100} -> (fun (V459) -> {'Idris.Prelude.Types.Left', V459} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V460) -> begin (V461 = ('Idris.Idris2.Prelude.Types.List':'un--++'(V460, V9))), begin (V463 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V462) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V461, V10, V462)) end, [V446 | []], V44))), case V463 of {'Idris.Prelude.Types.Left', E102} -> (fun (V464) -> {'Idris.Prelude.Types.Left', V464} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V465) -> begin (V466 = ('Idris.Idris2.Core.Context':'un--unsetFlag'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.BlockedHint'}, V44))), case V466 of {'Idris.Prelude.Types.Left', E104} -> (fun (V467) -> {'Idris.Prelude.Types.Left', V467} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V468) -> begin (V469 = ('Idris.Idris2.Core.Context':'un--setFlag'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.TCInline'}, V44))), case V469 of {'Idris.Prelude.Types.Left', E106} -> (fun (V470) -> {'Idris.Prelude.Types.Left', V470} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V471) -> begin (V472 = ('Idris.Idris2.Core.Context':'un--setFlag'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.SetTotal', 2}, V44))), case V472 of {'Idris.Prelude.Types.Left', E108} -> (fun (V473) -> {'Idris.Prelude.Types.Left', V473} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V474) -> begin (V476 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V475) -> ('nested--9993-6300--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V475)) end, V141))), begin (V479 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V477) -> fun (V478) -> ('nested--9993-6304--in--un--updateBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V476, V477, V478)) end end, V45, [], V44))), case V479 of {'Idris.Prelude.Types.Left', E110} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V481) -> begin (V485 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Implementation body: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V482) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpDecl'(V482)) end, fun (V483) -> fun (V484) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpDecl'(V483, V484)) end end}, V481)))) end, V44))), case V485 of {'Idris.Prelude.Types.Left', E112} -> (fun (V486) -> {'Idris.Prelude.Types.Left', V486} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V487) -> begin (V489 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V488) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V461, V10, V488)) end, V481, V44))), case V489 of {'Idris.Prelude.Types.Left', E114} -> (fun (V490) -> {'Idris.Prelude.Types.Left', V490} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V491) -> begin (V500 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V492) -> fun (V493) -> ('nested--9993-6305--in--un--addTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V476, V492, V493)) end end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E116, E117, E118, E119, E120, E121} -> (fun (V494, V495, V496, V497, V498, V499) -> V498 end(E116, E117, E118, E119, E120, E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V44))), case V500 of {'Idris.Prelude.Types.Left', E122} -> (fun (V501) -> {'Idris.Prelude.Types.Left', V501} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V502) -> begin (V503 = ('Idris.Idris2.Core.Context':'un--unsetFlag'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.TCInline'}, V44))), case V503 of {'Idris.Prelude.Types.Left', E124} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V505) -> ('Idris.Idris2.Core.Context':'un--setOpenHints'(V18, V91, V44)) end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabImplementation-8202'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of [E0 | E1] -> (fun (V25, V26) -> case V26 of [] -> begin (V27 = ('Idris.Idris2.Builtin':'un--fst'(V25))), begin (V28 = ('Idris.Idris2.Builtin':'un--snd'(V25))), fun (V29) -> begin (V58 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V27, case V22 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57) -> V30 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29))), case V58 of {'Idris.Prelude.Types.Left', E30} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V60) -> case V60 of {'Idris.Prelude.Types.Just', E32} -> (fun (V61) -> begin (V96 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E33, E34, E35, E36, E37, E38} -> (fun (V62, V63, V64, V65, V66, V67) -> V62 end(E33, E34, E35, E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V22 of {'Idris.Core.Context.MkDefs', E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66} -> (fun (V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95) -> V68 end(E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29))), case V96 of {'Idris.Prelude.Types.Left', E67} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V98) -> begin (V99 = {'Idris.Prelude.Types.Just', V61}), case V98 of {'Idris.Prelude.Types.Just', E69} -> (fun (V100) -> begin (V164 = ('Idris.Idris2.Data.List':'un--nub'({'Idris.Prelude.EqOrd.MkEq', fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V101, V102)) end end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V103, V104)) end end}, ('Idris.Idris2.Prelude.Types.List':'un--++'(('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V107, V108, V109)) end end end end end, fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V112, V113, V114)) end end end end end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V116)) end end, fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V120, V121, V122, V123)) end end end end end end end, fun (V124) -> fun (V125) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V125)) end end, fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V128, V129, V130)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V131) -> fun (V132) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V131, V132)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V133) -> ('Idris.Idris2.TTImp.TTImp':'un--findIBinds'(V133)) end, V4)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V136, V137, V138)) end end end end end, fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V141, V142, V143)) end end end end end, fun (V144) -> fun (V145) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V145)) end end, fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V149, V150, V151, V152)) end end end end end end end, fun (V153) -> fun (V154) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V154)) end end, fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V157, V158, V159)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V160) -> fun (V161) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V160, V161)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V162) -> ('Idris.Idris2.TTImp.TTImp':'un--findIBinds'(V162)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V163) -> ('Idris.Idris2.Builtin':'un--snd'(V163)) end, V6))))))))), begin (V165 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Found interface "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)))) end, V61, V29))), case V165 of {'Idris.Prelude.Types.Left', E70} -> (fun (V166) -> {'Idris.Prelude.Types.Left', V166} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V167) -> begin (V207 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  with params: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V168) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V168)) end, fun (V169) -> fun (V170) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V169, V170)) end end}, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E72, E73, E74, E75, E76, E77} -> (fun (V171, V172, V173, V174, V175, V176) -> V173 end(E72, E73, E74, E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  specialised to: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V177) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V177)) end, fun (V178) -> fun (V179) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V178, V179)) end end}, V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  and parents: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V180) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V180)) end, fun (V181) -> fun (V182) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V181, V182)) end end}, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E78, E79, E80, E81, E82, E83} -> (fun (V183, V184, V185, V186, V187, V188) -> V186 end(E78, E79, E80, E81, E82, E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  using implicits: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V189) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V189)) end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V190, V191)) end end}, V164)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  and methods: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V192) -> ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_Method'(V192)) end, fun (V193) -> fun (V194) -> ('Idris.Idris2.Idris.Syntax':'dn--un--showPrec_Show_Method'(V193, V194)) end end}, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E84, E85, E86, E87, E88, E89} -> (fun (V195, V196, V197, V198, V199, V200) -> V199 end(E84, E85, E86, E87, E88, E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}Constructor: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E90, E91, E92, E93, E94, E95} -> (fun (V201, V202, V203, V204, V205, V206) -> V201 end(E90, E91, E92, E93, E94, E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>)))))))))))))))))))))))))) end, V29))), case V207 of {'Idris.Prelude.Types.Left', E96} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V209) -> begin (V210 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> <<"Constructor type: "/utf8>> end, V100, V29))), case V210 of {'Idris.Prelude.Types.Left', E98} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V212) -> begin (V213 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Making implementation "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20)))) end, V29))), case V213 of {'Idris.Prelude.Types.Left', E100} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V215) -> begin (V216 = case V3 of 1 -> [{'Idris.TTImp.TTImp.Inline'} | []]; 0 -> [{'Idris.TTImp.TTImp.Inline'} | [{'Idris.TTImp.TTImp.Hint', 1} | []]]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V217 = ('un--bindImpls'(('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V7, ('un--bindConstraints'(('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.TT.AutoImplicit'}, V6, ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V5}, V4))))))), begin (V218 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V18, V29))), case V218 of {'Idris.Prelude.Types.Left', E102} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V220) -> begin (V221 = case V220 of 1 -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(1, V8, [], V217)); 0 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V222 = ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V221, V217))), begin (V223 = {'Idris.TTImp.TTImp.IClaim', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V13, V216, {'Idris.TTImp.TTImp.MkImpTy', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.FC.EmptyFC'}, V20, V222}}), begin (V224 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Implementation type: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V222)))) end, V29))), case V224 of {'Idris.Prelude.Types.Left', E104} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V226) -> begin (V227 = case ('Idris.Idris2.Idris.Syntax':'un--typePass'(V11)) of 1 -> (('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V9, V10, V223))(V29)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V227 of {'Idris.Prelude.Types.Left', E106} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V229) -> case ('Idris.Idris2.Idris.Syntax':'un--defPass'(V11)) of 1 -> case V0 of {'Idris.Prelude.Types.Just', E108} -> (fun (V230) -> begin (V232 = begin (V231 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V231} end), case V232 of {'Idris.Prelude.Types.Left', E109} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V234) -> begin (V263 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V20, case V234 of {'Idris.Core.Context.MkDefs', E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138} -> (fun (V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262) -> V235 end(E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29))), case V263 of {'Idris.Prelude.Types.Left', E139} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V265) -> begin (V266 = {'Idris.Prelude.Types.Just', V100}), case V265 of {'Idris.Prelude.Types.Just', E141} -> (fun (V267) -> begin (V268 = (('un--getMethImps'([], V18, {'Idris.Core.Env.Nil'}, V267))(V29))), case V268 of {'Idris.Prelude.Types.Left', E142} -> (fun (V269) -> {'Idris.Prelude.Types.Left', V269} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V270) -> begin (V310 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Bind implicits to each method: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V271) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V272) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V272)) end, fun (V273) -> fun (V274) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V273, V274)) end end}, {'Idris.Prelude.Show.MkShow', fun (V275) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V276) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V276)) end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V277, V278)) end end}, {'Idris.Prelude.Show.MkShow', fun (V279) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V279)) end, fun (V280) -> fun (V281) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V280, V281)) end end}}, V275)) end, fun (V282) -> fun (V283) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V284) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V284)) end, fun (V285) -> fun (V286) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V285, V286)) end end}, {'Idris.Prelude.Show.MkShow', fun (V287) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V287)) end, fun (V288) -> fun (V289) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V288, V289)) end end}}, V282, V283)) end end}}, V271)) end, fun (V290) -> fun (V291) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V292) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V292)) end, fun (V293) -> fun (V294) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V293, V294)) end end}, {'Idris.Prelude.Show.MkShow', fun (V295) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V296) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V296)) end, fun (V297) -> fun (V298) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V297, V298)) end end}, {'Idris.Prelude.Show.MkShow', fun (V299) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V299)) end, fun (V300) -> fun (V301) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V300, V301)) end end}}, V295)) end, fun (V302) -> fun (V303) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V304) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V304)) end, fun (V305) -> fun (V306) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V305, V306)) end end}, {'Idris.Prelude.Show.MkShow', fun (V307) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V307)) end, fun (V308) -> fun (V309) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V308, V309)) end end}}, V302, V303)) end end}}, V290, V291)) end end}, V270)))) end, V29))), case V310 of {'Idris.Prelude.Types.Left', E144} -> (fun (V311) -> {'Idris.Prelude.Types.Left', V311} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V312) -> begin (V313 = {'Idris.Prelude.Types.Just', V267}), ('case--case block in case block in case block in case block in elabImplementation-8753'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V25, V27, V28, V61, V99, V100, V266, V164, V216, V217, V220, V221, V222, V223, V230, V234, V267, V313, V270, ('un--addDefaults'(('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E146, E147, E148, E149, E150, E151} -> (fun (V314, V315, V316, V317, V318, V319) -> V316 end(E146, E147, E148, E149, E150, E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V320) -> ('Idris.Idris2.Core.Name':'un--dropNS'(case V320 of {'Idris.Idris.Syntax.MkMethod', E152, E153, E154, E155} -> (fun (V321, V322, V323, V324) -> V321 end(E152, E153, E154, E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E156, E157, E158, E159, E160, E161} -> (fun (V325, V326, V327, V328, V329, V330) -> V329 end(E156, E157, E158, E159, E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E162, E163, E164, E165, E166, E167} -> (fun (V331, V332, V333, V334, V335, V336) -> V336 end(E162, E163, E164, E165, E166, E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V230)), V29)) end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t happen, can\x{27}t find type of "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20))))}, V29)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E69)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E168, E169, E170, E171, E172, E173} -> (fun (V337, V338, V339, V340, V341, V342) -> V337 end(E168, E169, E170, E171, E172, E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V27, V29)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V343) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V344) -> ('Idris.Idris2.Builtin':'un--fst'(V344)) end, V24))}, V343)) end end end(E0, E1)); [] -> fun (V345) -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V18, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V5, V345)) end; _ -> fun (V346) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V347) -> ('Idris.Idris2.Builtin':'un--fst'(V347)) end, V24))}, V346)) end end.
'case--elabImplementation,topMethType-6815'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> case V31 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V32, V33) -> begin (V34 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, V26, V33))), begin (V36 = ('Idris.Idris2.TTImp.Utils':'un--substBindVars'(V8, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V35) -> {'Idris.Builtin.MkPair', V35, {'Idris.TTImp.TTImp.Implicit', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), 0}} end, V22)), V34))), begin (V37 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V21, V4)), V36))), fun (V38) -> begin (V57 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Substitute implicits "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V40, V41)) end end}, V22)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" parameters "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, {'Idris.Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V47, V48)) end end}}, V42)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V51) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V52, V53)) end end}, {'Idris.Prelude.Show.MkShow', fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V55, V56)) end end}}, V49, V50)) end end}, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V21, V4)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V34)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V37)))))))))))))))) end, V38))), case V57 of {'Idris.Prelude.Types.Left', E2} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V59) -> begin (V60 = ('nested--9993-6296--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V24, ('un--bindConstraints'(('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.TT.AutoImplicit'}, V6, V37))))), begin (V61 = ('Idris.Idris2.TTImp.TTImp':'un--findImplicits'(V60))), begin (V62 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNamesUsed'(V18, V14, V61, V8, V60, V38))), case V62 of {'Idris.Prelude.Types.Left', E4} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V64) -> begin (V69 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Method "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V19 of {'Idris.Idris.Syntax.MkMethod', E6, E7, E8, E9} -> (fun (V65, V66, V67, V68) -> V65 end(E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V64)))))))))))) end, V38))), case V69 of {'Idris.Prelude.Types.Left', E10} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V71) -> begin (V72 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"    (initially "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V34)), <<")"/utf8>>)))) end, V38))), case V72 of {'Idris.Prelude.Types.Left', E12} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V74) -> begin (V90 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Updates "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V75) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V76)) end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V77, V78)) end end}, {'Idris.Prelude.Show.MkShow', fun (V79) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V79)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V80, V81)) end end}}, V75)) end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V84)) end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V85, V86)) end end}, {'Idris.Prelude.Show.MkShow', fun (V87) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V87)) end, fun (V88) -> fun (V89) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V88, V89)) end end}}, V82, V83)) end end}, V26)))) end, V38))), case V90 of {'Idris.Prelude.Types.Left', E14} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V92) -> begin (V93 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"From "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V60)))) end, V38))), case V93 of {'Idris.Prelude.Types.Left', E16} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V95) -> begin (V111 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Name updates "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V96) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V97) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V97)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V98, V99)) end end}, {'Idris.Prelude.Show.MkShow', fun (V100) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V100)) end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V101, V102)) end end}}, V96)) end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V105) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V105)) end, fun (V106) -> fun (V107) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V106, V107)) end end}, {'Idris.Prelude.Show.MkShow', fun (V108) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V108)) end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V109, V110)) end end}}, V103, V104)) end end}, V32)))) end, V38))), case V111 of {'Idris.Prelude.Types.Left', E18} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V113) -> begin (V117 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Param names: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V114) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V114)) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V115, V116)) end end}, V21)))) end, V38))), case V117 of {'Idris.Prelude.Types.Left', E20} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V119) -> begin (V123 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Used names "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V120)) end, fun (V121) -> fun (V122) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V121, V122)) end end}, V61)))) end, V38))), case V123 of {'Idris.Prelude.Types.Left', E22} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V125) -> begin (V127 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V126) -> ('Idris.Idris2.Builtin':'un--fst'(V126)) end, V24))), begin (V129 = case ('Idris.Idris2.Data.List':'un--isNil'(V127)) of 1 -> []; 0 -> [{'Idris.Builtin.MkPair', V27, ('nested--9993-6289--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V27}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V128) -> {'Idris.Builtin.MkPair', V128, {'Idris.TTImp.TTImp.IBindVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V128))}} end, V127))))} | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Builtin.MkPair', case V19 of {'Idris.Idris.Syntax.MkMethod', E24, E25, E26, E27} -> (fun (V130, V131, V132, V133) -> V130 end(E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', V27, {'Idris.Builtin.MkPair', V32, {'Idris.Builtin.MkPair', case V19 of {'Idris.Idris.Syntax.MkMethod', E28, E29, E30, E31} -> (fun (V134, V135, V136, V137) -> V135 end(E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', case V19 of {'Idris.Idris.Syntax.MkMethod', E32, E33, E34, E35} -> (fun (V138, V139, V140, V141) -> V140 end(E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V64}}}}}, V129}} end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V14)).
'nested--9993-6303--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V22, V23, V24) -> begin (V25 = ('nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, V21))), case V25 of {'Idris.Prelude.Types.Left', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V22, V27, V24}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E5, E6, E7, E8, E9, E10} -> (fun (V28, V29, V30, V31, V32, V33) -> begin (V34 = ('nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V29, V21))), case V34 of {'Idris.Prelude.Types.Left', E11} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V36) -> begin (V39 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V37) -> fun (V38) -> ('nested--9993-6303--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V37, V38)) end end, V33, [], V21))), case V39 of {'Idris.Prelude.Types.Left', E13} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V28, V36, V30, V31, V32, V41}} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5, E6, E7, E8, E9, E10)); {'Idris.TTImp.TTImp.ImpossibleClause', E15, E16} -> (fun (V42, V43) -> begin (V44 = ('nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V43, V21))), case V44 of {'Idris.Prelude.Types.Left', E17} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V42, V46}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6304--in--un--updateBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.TTImp.TTImp.IDef', E0, E1, E2} -> (fun (V22, V23, V24) -> begin (V27 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V25) -> fun (V26) -> ('nested--9993-6303--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V25, V26)) end end, V24, [], V21))), case V27 of {'Idris.Prelude.Types.Left', E3} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V29) -> begin (V30 = ('nested--9993-6301--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V22, V23, V21))), case V30 of {'Idris.Prelude.Types.Left', E5} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V32) -> begin (V51 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"ide-mode.highlight"/utf8>>, (1 + 0), fun () -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V34, V35)) end end}, {'Idris.Prelude.Show.MkShow', fun (V36) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V38, V39)) end end}, {'Idris.Prelude.Show.MkShow', fun (V40) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_FC'(V41, V42)) end end}}, V36)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V46, V47)) end end}, {'Idris.Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_FC'(V49, V50)) end end}}, V43, V44)) end end}}, {'Idris.Builtin.MkPair', V23, {'Idris.Builtin.MkPair', V32, V22}})) end, V21))), case V51 of {'Idris.Prelude.Types.Left', E7} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V22, V32, V29}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp.ImpDecl':'un--getFC'(V20)), <<"Implementation body can only contain definitions"/utf8>>}, V21)) end.
'nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V22, V23) -> begin (V24 = ('nested--9993-6301--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V22, V23, V21))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V22, V26}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.IApp', E4, E5, E6} -> (fun (V27, V28, V29) -> begin (V30 = ('nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V28, V21))), case V30 of {'Idris.Prelude.Types.Left', E7} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V27, V32, V29}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6)); {'Idris.TTImp.TTImp.IAutoApp', E9, E10, E11} -> (fun (V33, V34, V35) -> begin (V36 = ('nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V34, V21))), case V36 of {'Idris.Prelude.Types.Left', E12} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V33, V38, V35}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10, E11)); {'Idris.TTImp.TTImp.INamedApp', E14, E15, E16, E17} -> (fun (V39, V40, V41, V42) -> begin (V43 = ('nested--9993-6302--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V40, V21))), case V43 of {'Idris.Prelude.Types.Left', E18} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V39, V45, V41, V42}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15, E16, E17)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V20)), <<"Invalid method definition"/utf8>>}, V21)) end.
'nested--9993-6298--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V26 of [] -> {'Idris.Prelude.Types.Right', []}; [E0 | E1] -> (fun (V28, V29) -> begin (V30 = ('nested--9993-6297--in--un--topMethType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V28, V27))), case V30 of {'Idris.Prelude.Types.Left', E2} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V32) -> case V32 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V33, V34) -> begin (V35 = ('nested--9993-6298--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, ('Idris.Idris2.Prelude.Types.List':'un--++'(V34, V19)), V20, V21, V22, V23, V24, V25, V29, V27))), case V35 of {'Idris.Prelude.Types.Left', E6} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V37) -> {'Idris.Prelude.Types.Right', [V33 | V37]} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6297--in--un--topMethType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> begin (V32 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V18, ('nested--9993-6294--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, case V26 of {'Idris.Idris.Syntax.MkMethod', E0, E1, E2, E3} -> (fun (V28, V29, V30, V31) -> V28 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V27))), case V32 of {'Idris.Prelude.Types.Left', E4} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V34) -> begin (V37 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> fun (V36) -> ('nested--9993-6295--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V35, V36)) end end, V25, [], V27))), case V37 of {'Idris.Prelude.Types.Left', E6} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V39) -> begin (V40 = V39), begin (V45 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, V40, case V26 of {'Idris.Idris.Syntax.MkMethod', E8, E9, E10, E11} -> (fun (V41, V42, V43, V44) -> V44 end(E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), (('case--elabImplementation,topMethType-6815'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V26, V25, V24, V23, V22, V21, V20, V19, V34, V39, V40, V45, (('Idris.Idris2.TTImp.BindImplicits':'un--renameIBinds'(V22, ('Idris.Idris2.TTImp.TTImp':'un--findImplicits'(V45)), V45))([]))))(V27)) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--9688-5981--in--un--toForward'(V0) -> case V0 of $\x{5c} -> $/; _ -> V0 end.
'nested--9781-6077--in--un--specialiseMeth'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Builtin.MkPair', V6, {'Idris.TTImp.TTImp.INamedApp', V5, {'Idris.TTImp.TTImp.IVar', V5, V6}, {'Idris.Core.Name.UN', <<"__con"/utf8>>}, {'Idris.TTImp.TTImp.IVar', V5, V4}}}.
'nested--9993-6299--in--un--mkTopMethDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V20, V21) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V26, V27) -> case V27 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V28, V29) -> begin (V31 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V12 end, fun () -> fun (V30) -> [{'Idris.TTImp.TTImp.Totality', V30} | V12] end end, V28))), {'Idris.TTImp.TTImp.IClaim', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V26, V13, V31, {'Idris.TTImp.TTImp.MkImpTy', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.FC.EmptyFC'}, V22, V29}} end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6293--in--un--mkMethField'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V26, V27) -> case V27 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V28, V29) -> case V29 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V30, V31) -> begin (V38 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V32) -> ('nested--10033-6538--in--un--applyUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V22, V24, V26, V28, V30, V31, V20, V19, V32)) end, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V33) -> V33 end end, ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V36, V37)) end end}, ('Idris.Idris2.Core.Name':'un--dropNS'(V22)), V20))))))), begin (V40 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V39) -> ('Idris.Idris2.Builtin':'un--fst'(V39)) end, V19))), ('nested--9993-6291--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V38, ('nested--9993-6289--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, ('nested--9993-6292--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V24}, V38)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V41) -> {'Idris.Builtin.MkPair', V41, {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.Name.UN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V41))}}} end, V40)))))) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6291--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V19 of [] -> V20; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V25, V26, {'Idris.Prelude.Types.Just', V23}, {'Idris.TTImp.TTImp.Implicit', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), 0}, ('nested--9993-6291--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V22, V20))} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6300--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V20, V21) -> case V20 of {'Idris.Core.Name.UN', E4} -> (fun (V22) -> case V21 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V23, V24) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', V22}, V23} end(E7, E8)); _ -> case V21 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V25, V26) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}, V25} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); {'Idris.Core.Name.RF', E9} -> (fun (V27) -> case V21 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V28, V29) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.RF', V27}, V28} end(E12, E13)); _ -> case V21 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V30, V31) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}, V30} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); {'Idris.Core.Name.NS', E14, E15} -> (fun (V32, V33) -> case V21 of {'Idris.Builtin.MkPair', E18, E19} -> (fun (V34, V35) -> ('nested--9993-6300--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.Builtin.MkPair', V33, {'Idris.Builtin.MkPair', V34, V35}})) end(E18, E19)); _ -> case V21 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V36, V37) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}, V36} end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V38, V39) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}, V38} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6294--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V20, V21) -> ('nested--9993-6294--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V21)) end(E0, E1)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)), {'Idris.Core.Name.UN', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(case V3 of 1 -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)); 0 -> <<""/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V22) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V22)) end, V4))))))))))))))}} end.
'nested--9993-6289--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [] -> V19; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> ('nested--9993-6289--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V19, V23, V24}, V22)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6288--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V20, V21, V22, V23) -> case V22 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V24, V25, V26, V27) -> [{'Idris.Builtin.MkPair', V21, ('nested--10028-6359--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V24, V25, V26, V27, V21, V23, V27))} | ('nested--9993-6288--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V23))] end(E4, E5, E6, E7)); _ -> [] end end(E0, E1, E2, E3)); _ -> [] end.
'nested--10028-6359--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V27, V28, V29, V30) -> case V29 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V31, V32, V33, V34) -> [{'Idris.Builtin.MkPair', V28, {'Idris.Builtin.MkPair', V32, ('Idris.Idris2.Core.TT':'un--forgetDef'(V33))}} | ('nested--10028-6359--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V30))] end(E4, E5, E6, E7)); _ -> [] end end(E0, E1, E2, E3)); _ -> [] end.
'nested--9993-6301--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V25, V26)) end end}, V21, V19)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V20, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V21)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is not a method of "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))))))}, V22)) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V27) -> {'Idris.Prelude.Types.Right', V27} end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9781-6078--in--un--extendBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of [] -> {'Idris.Builtin.MkPair', V8, V6}; [E0 | E1] -> (fun (V9, V10) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V14)) end end}, V9, V1)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--9781-6078--in--un--extendBody'(V0, V1, V2, V3, V4, V5, [V9 | V6], V10, V8)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V15) -> begin (V17 = ('Idris.Idris2.Prelude.Types.List':'un--++'(V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V16) -> ('nested--9781-6077--in--un--specialiseMeth'(V0, V1, V2, V3, V4, V5, V16)) end, V2))))), begin (V19 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V18) -> ('Idris.Idris2.TTImp.Utils':'un--substNamesClause'([], V17, V18)) end, V15))), ('nested--9781-6078--in--un--extendBody'(V0, V1, V2, V3, V4, V5, V6, V10, [{'Idris.TTImp.TTImp.IDef', V5, V9, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V20) -> ('Idris.Idris2.TTImp.Utils':'un--substLocClause'(V5, V20)) end, V19))} | V8])) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9781-6079--in--un--dropGot'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> V6; [E0 | E1] -> (fun (V8, V9) -> case V8 of {'Idris.TTImp.TTImp.IDef', E2, E3, E4} -> (fun (V10, V11, V12) -> ('nested--9781-6079--in--un--dropGot'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Data.List':'un--filter'(fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V11)) end, V6)), V9)) end(E2, E3, E4)); _ -> ('nested--9781-6079--in--un--dropGot'(V0, V1, V2, V3, V4, V5, V6, V9)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6296--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V19 of [] -> V20; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> {'Idris.TTImp.TTImp.IPi', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V25, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V23}, V26, ('nested--9993-6296--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V22, V20))} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6290--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [] -> V19; [E0 | E1] -> (fun (V21, V22) -> ('nested--9993-6290--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IAutoApp', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V19)), V19, V21}, V22)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10033-6538--in--un--applyUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V27 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V28, V29) -> case V28 of {'Idris.Core.Name.UN', E2} -> (fun (V30) -> case V29 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V31, V32) -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', V30}, {'Idris.Builtin.MkPair', V31, V32}} end, fun () -> fun (V33) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', V33}, {'Idris.Builtin.MkPair', V31, V32}} end end, ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V36, V37)) end end}, V30, V21)))) end(E3, E4)); _ -> V27 end end(E2)); _ -> V27 end end(E0, E1)); _ -> V27 end.
'nested--9993-6292--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [] -> V19; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> case V26 of {'Idris.Core.TT.Explicit'} -> (fun () -> ('nested--9993-6292--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IApp', {'Idris.Core.FC.EmptyFC'}, V19, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> ('nested--9993-6292--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', {'Idris.Core.FC.EmptyFC'}, V19, V23, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end()); {'Idris.Core.TT.Implicit'} -> (fun () -> ('nested--9993-6292--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', {'Idris.Core.FC.EmptyFC'}, V19, V23, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end()); {'Idris.Core.TT.DefImplicit', E6} -> (fun (V27) -> ('nested--9993-6292--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', {'Idris.Core.FC.EmptyFC'}, V19, V23, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9993-6287--in--un--applyEnv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--resolveName'(V18, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E0} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.Name.Resolved', V23}, {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, {'Idris.Builtin.MkPair', ('Idris.Idris2.Data.List':'un--reverse'(('Idris.Idris2.Core.Env':'un--allVars'(V8, V10)))), fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.UnifyState':'un--applyToFull'(V8, ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.TT.Ref', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V25, {'Idris.Core.Name.Resolved', V23}}, V10)) end end}}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--9993-6295--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> begin (V22 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V18, ('nested--9993-6294--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20)), V21))), case V22 of {'Idris.Prelude.Types.Left', E0} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Name':'un--dropNS'(V20)), {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V24}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--9993-6305--in--un--addTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> begin (V46 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Adding transform for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V21 of {'Idris.Idris.Syntax.MkMethod', E0, E1, E2, E3} -> (fun (V23, V24, V25, V26) -> V23 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(case V21 of {'Idris.Idris.Syntax.MkMethod', E4, E5, E6, E7} -> (fun (V27, V28, V29, V30) -> V30 end(E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" in "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V31) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V32) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V32)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V33, V34)) end end}, {'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V36, V37)) end end}}, V31)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V41, V42)) end end}, {'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}}, V38, V39)) end end}, V20)))))))))))))))) end, V22))), case V46 of {'Idris.Prelude.Types.Left', E8} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V48) -> begin (V53 = {'Idris.TTImp.TTImp.INamedApp', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), case V21 of {'Idris.Idris.Syntax.MkMethod', E10, E11, E12, E13} -> (fun (V49, V50, V51, V52) -> V49 end(E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, {'Idris.Core.Name.UN', <<"__con"/utf8>>}, {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V19}}), case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V56, V57)) end end}, ('Idris.Idris2.Core.Name':'un--dropNS'(case V21 of {'Idris.Idris.Syntax.MkMethod', E21, E22, E23, E24} -> (fun (V58, V59, V60, V61) -> V58 end(E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V20)) of {'Idris.Prelude.Types.Just', E14} -> (fun (V62) -> begin (V63 = {'Idris.TTImp.TTImp.IVar', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V62}), begin (V64 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V53)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V63)))))) end, V22))), case V64 of {'Idris.Prelude.Types.Left', E15} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V66) -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V18, V17, ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V9, V10, {'Idris.TTImp.TTImp.ITransform', ('nested--9993-6286--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.Name.UN', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V21 of {'Idris.Idris.Syntax.MkMethod', E17, E18, E19, E20} -> (fun (V67, V68, V69, V70) -> V67 end(E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19))))))}, V53, V63})), fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t add transform "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V53)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V63)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V71)))))))))))) end, V72)) end end, V22)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--replaceSep'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1) -> ('nested--9688-5981--in--un--toForward'(V1)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V0)))))).
'un--mkImplName'(V0, V1, V2) -> {'Idris.Core.Name.DN', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" implementation at "/utf8>>, ('un--replaceSep'(('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V0)))))))), {'Idris.Core.Name.UN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__Impl_"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"_"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V3)) end, V2))))))))))}}.
'un--getMethImps'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> fun (V8) -> case V6 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V9, V10, V11, V12) -> case V11 of {'Idris.Core.TT.Implicit'} -> (fun () -> begin (V13 = ('Idris.Idris2.TTImp.Unelab':'un--unelabNoSugar'(V0, V1, V2, V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E8} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V15) -> begin (V16 = (('un--getMethImps'([V5 | V0], V1, {'Idris.Core.Env.::', {'Idris.Core.TT.Pi', V9, V10, {'Idris.Core.TT.Implicit'}, V12}, V2}, V7))(V8))), case V16 of {'Idris.Prelude.Types.Left', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V5, {'Idris.Builtin.MkPair', V10, V15}} | V18]} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> {'Idris.Prelude.Types.Right', []} end end(E4, E5, E6, E7)); _ -> {'Idris.Prelude.Types.Right', []} end end end(E0, E1, E2, E3)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', []} end end.
'un--elabImplementation'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> begin (V27 = case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V21, V22)) end end}, V16, V10)) of {'Idris.Prelude.Types.Just', E0} -> (fun (V23) -> case V23 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V24, V25) -> case V24 of {'Idris.Prelude.Types.Just', E3} -> (fun (V26) -> V26 end(E3)); _ -> V16 end end(E1, E2)); _ -> V16 end end(E0)); _ -> V16 end), fun (V28) -> begin (V29 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, V27, V28))), case V29 of {'Idris.Prelude.Types.Left', E4} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E6} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V35) -> begin (V37 = begin (V36 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V36} end), case V37 of {'Idris.Prelude.Types.Left', E8} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V39) -> begin (V68 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V13, case V39 of {'Idris.Core.Context.MkDefs', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> V40 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V28))), case V68 of {'Idris.Prelude.Types.Left', E38} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V70) -> (('case--elabImplementation-8202'(V18, V17, V16, V15, V14, V13, V12, V11, V0, V10, V9, V8, V7, V6, V5, V4, V3, V2, V1, V27, V31, V35, V39, V70, ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V73, V74, V75)) end end end end end, fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V82)) end end, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V86, V87, V88, V89)) end end end end end end end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V91)) end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V94, V95, V96)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V97, V98)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V99) -> ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V99, case V35 of {'Idris.Idris.Syntax.MkSyntax', E40, E41, E42, E43, E44, E45, E46, E47, E48} -> (fun (V100, V101, V102, V103, V104, V105, V106, V107, V108) -> V102 end(E40, E41, E42, E43, E44, E45, E46, E47, E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V109) -> ('Idris.Idris2.Builtin':'un--fst'(V109)) end, V70))))))(V28)) end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--bindImpls'(V0, V1, V2) -> case V1 of [] -> V2; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V7, V8) -> {'Idris.TTImp.TTImp.IPi', V0, V7, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V5}, V8, ('un--bindImpls'(V0, V4, V2))} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--bindConstraints'(V0, V1, V2, V3) -> case V2 of [] -> V3; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> {'Idris.TTImp.TTImp.IPi', V0, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V1, V6, V7, ('un--bindConstraints'(V0, V1, V5, V3))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addDefaults'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('nested--9781-6079--in--un--dropGot'(V5, V4, V3, V2, V1, V0, V3, V5))), ('nested--9781-6078--in--un--extendBody'(V5, V4, V3, V2, V1, V0, [], V6, V5)) end.
