-module('Idris.Idris2.Compiler.Inline').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--compileAndInlineAll,nonErased-4945'/4,
  'case--case block in mergeLamDef-4883'/6,
  'case--mergeLamDef-4871'/4,
  'case--case block in fixArityDef-4810'/6,
  'case--fixArityDef-4798'/4,
  'case--case block in inlineDef-4737'/6,
  'case--inlineDef-4725'/4,
  'case--mergeLam-4691'/4,
  'case--mergeLambdas-4548'/5,
  'case--case block in fixArityTm-3996'/9,
  'case--fixArityTm-3978'/7,
  'case--pickConstAlt-3872'/14,
  'case--case block in pickAlt-3683'/18,
  'case--pickAlt-3642'/18,
  'case--evalAlt-3512'/13,
  'case--extendLoc-3467'/9,
  'case--eval-3315'/13,
  'case--eval-3204'/13,
  'case--eval-3097'/11,
  'case--eval-2859'/13,
  'case--case block in case block in case block in eval-2592'/17,
  'case--case block in case block in eval-2549'/15,
  'case--case block in eval-2519'/13,
  'case--eval-2389'/10,
  'case--tryApply-2266'/10,
  'case--evalLocal-2178'/11,
  'case--usedCon-2034'/9,
  'case--used-1710'/10,
  'case--used-1617'/9,
  'case--largest-1564'/6,
  'case--takeFromStack-1454'/8,
  'nested--10787-4165--in--un--traverseArgs'/9,
  'nested--11838-4927--in--un--nonErased'/3,
  'nested--8737-3605--in--un--matches'/21,
  'nested--10787-4339--in--un--fixArityConstAlt'/8,
  'nested--10787-4281--in--un--fixArityAlt'/8,
  'un--usedConst'/5,
  'un--usedCon'/5,
  'un--used'/5,
  'un--unloadApp'/4,
  'un--unload'/3,
  'un--tryApply'/8,
  'un--takeFromStack'/5,
  'un--refToLocal'/4,
  'un--pickConstAlt'/10,
  'un--pickAlt'/10,
  'un--mkBounds'/1,
  'un--mergeLambdas'/2,
  'un--mergeLamDef'/3,
  'un--mergeLam'/2,
  'un--largest'/4,
  'un--inlineDef'/3,
  'un--inline'/3,
  'un--getNewArgs'/3,
  'un--getLams'/5,
  'un--getArity'/1,
  'un--genName'/3,
  'un--fixArityTm'/4,
  'un--fixArityExp'/3,
  'un--fixArityDef'/3,
  'un--fixArity'/2,
  'un--extendLoc'/6,
  'un--extend'/6,
  'un--evalLocal'/11,
  'un--evalConstAlt'/8,
  'un--evalAlt'/9,
  'un--eval'/8,
  'un--doEval'/5,
  'un--compileAndInlineAll'/2,
  'un--Stack'/1
]).
'case--compileAndInlineAll,nonErased-4945'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V13 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V27) -> fun (V28) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V27, V28)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V29) -> fun (V30) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V29, V30)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())}))))} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V31) -> {'Idris.Prelude.Types.Right', 1} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in mergeLamDef-4883'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('un--mergeLam'(V1, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V10, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLamDef-4871'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in mergeLamDef-4883'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in fixArityDef-4810'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('un--fixArity'(V1, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V10, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fixArityDef-4798'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in fixArityDef-4810'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in inlineDef-4737'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('un--inline'(V1, V0, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V10, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--inlineDef-4725'(V0, V1, V2, V3) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = {'Idris.Prelude.Types.Just', V4}), ('case--case block in inlineDef-4737'(V0, V1, V2, V4, V5, case V4 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> V24 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLam-4691'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V4, V5) -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V4, V5}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLambdas-4548'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('Idris.Idris2.Core.CompileExpr':'un--substs'(V5, V1, V7, V8))), begin (V10 = ('Idris.Idris2.Data.List':'un--reverse'('erased', ('un--getNewArgs'('erased', V5, V7))))), begin (V11 = ('Idris.Idris2.Core.CompileExpr':'un--mkLocals'('erased', 'erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V1)), ('un--mkBounds'(V10)), V9))), {'Idris.Builtin.DPair.MkDPair', ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V1, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, [])))), V11} end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in fixArityTm-3996'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> begin (V10 = ('un--getArity'(V9))), fun (V11) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, V10, {'Idris.Core.CompileExpr.CApp', V2, {'Idris.Core.CompileExpr.CRef', V2, V1}, []}, V3))} end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V3, {'Idris.Core.CompileExpr.CRef', V2, V1}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fixArityTm-3978'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> begin (V8 = {'Idris.Prelude.Types.Just', V7}), ('case--case block in fixArityTm-3996'(V0, V1, V2, V3, V4, V5, V7, V8, case V7 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V27 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V30) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V3, {'Idris.Core.CompileExpr.CRef', V2, V1}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--pickConstAlt-3872'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E0} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V4, V3, V0, V12, V11, V10, V9, V5)), V14)) end; 1 -> ('un--pickConstAlt'(V4, V3, V0, V12, V11, V10, V9, {'Idris.Core.CompileExpr.CPrimVal', V2, V1}, V7, V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in pickAlt-3683'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V19) -> begin (V20 = ('un--extend'('erased', 'erased', V13, V1, V5, V19))), fun (V21) -> begin (V22 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V5, V6)), V0, V16, V15, V14, V20, V12, V7))(V21))), case V22 of {'Idris.Prelude.Types.Left', E1} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V24}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--pickAlt-3642'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> ('case--case block in pickAlt-3683'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, ('Idris.Idris2.Libraries.Data.LengthMatch':'un--checkLengthMatch'('erased', 'erased', V1, V5)))); 1 -> ('un--pickAlt'(V6, V0, V16, V15, V14, V13, V12, {'Idris.Core.CompileExpr.CCon', V4, V3, V2, V1}, V10, V11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--evalAlt-3512'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> begin (V16 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V2)), V1, V11, V10, V8, V14, V6, V3))(V15))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V5, V4, V0, ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'('erased', 'erased', V13, V18))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--extendLoc-3467'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.Add', V2, V7, V9}, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V5, V7}, V10}}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-3315'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> begin (V18 = case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V10, V9, V8, V7, V6, V14)), V13)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('un--evalConstAlt'(V0, V1, V10, V9, V8, V7, V6, V21)) end, V3, []))(V13))), case V22 of {'Idris.Prelude.Types.Left', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V5, V11, V24, V20}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E7} -> (fun (V25) -> fun (V26) -> {'Idris.Prelude.Types.Right', V25} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-3204'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> begin (V18 = case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V10, V9, V8, V7, V6, V14)), V13)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('un--evalAlt'(V0, V1, V10, V9, V5, V8, V7, V6, V21)) end, V3, []))(V13))), case V22 of {'Idris.Prelude.Types.Left', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V5, V11, V24, V20}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E7} -> (fun (V25) -> fun (V26) -> {'Idris.Prelude.Types.Right', V25} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-3097'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Core.CompileExpr.CDelay', E0, E1, E2} -> (fun (V11, V12, V13) -> ('un--eval'([], V1, V9, V8, V7, {'Idris.Compiler.Inline.Nil'}, V5, V13)) end(E0, E1, E2)); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V5, {'Idris.Core.CompileExpr.CForce', V4, V3, V10}))} end end.
'case--eval-2859'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of 0 -> fun (V13) -> begin (V14 = (('un--eval'(V2, V1, V10, V9, V8, V7, [], V4))(V13))), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> (('un--eval'([V0 | V2], V1, V10, V9, V8, {'Idris.Compiler.Inline.::', V16, V7}, V6, V3))(V13)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V17) -> begin (V18 = ('un--genName'(V9, <<"letv"/utf8>>, V17))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V21 = (('un--eval'([V0 | V2], V1, V10, V9, V8, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V5, V20}, V7}, V6, V3))(V17))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> begin (V24 = (('un--eval'(V2, V1, V10, V9, V8, V7, [], V4))(V17))), case V24 of {'Idris.Prelude.Types.Left', E6} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V5, V0, 0, V26, ('un--refToLocal'('erased', V20, V0, V23))}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in eval-2592'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of 0 -> fun (V17) -> begin (V18 = (('un--tryApply'(V0, V1, V8, V7, [V2 | V6], V4, V5, V14))(V17))), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'('erased', fun () -> ('un--unloadApp'('erased', V15, V4, {'Idris.Core.CompileExpr.CRef', V3, V2})) end, V20))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V21) -> {'Idris.Prelude.Types.Right', ('un--unloadApp'('erased', V15, V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Just', E0} -> (fun (V15) -> begin (V16 = ('un--getArity'(V15))), ('case--case block in case block in case block in eval-2592'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V16, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Context':'dn--un--==_Eq_DefFlag'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Context':'dn--un--/=_Eq_DefFlag'(V19, V20)) end end}, {'Idris.Core.Context.Inline'}, case V12 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V32 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--not'(('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V42, V43)) end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V44, V45)) end end}, V2, V6)))) end)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V46) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in eval-2519'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> begin (V14 = {'Idris.Prelude.Types.Just', V13}), ('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V13, V14, case V13 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V33 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V36) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-2389'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> case V10 of 0 -> case V11 of [E108 | E109] -> (fun (V12, V13) -> case V13 of [E163 | E164] -> (fun (V14, V15) -> case V15 of [E218 | E219] -> (fun (V16, V17) -> case V17 of [E273 | E274] -> (fun (V18, V19) -> case V19 of [E328 | E329] -> (fun (V20, V21) -> fun (V22) -> begin (V23 = ('un--genName'(V7, <<"act"/utf8>>, V22))), case V23 of {'Idris.Prelude.Types.Left', E330} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E330)); {'Idris.Prelude.Types.Right', E331} -> (fun (V25) -> begin (V26 = (('un--eval'([], V1, V8, V7, V6, {'Idris.Compiler.Inline.Nil'}, [], {'Idris.Core.CompileExpr.CApp', V3, V18, [{'Idris.Core.CompileExpr.CRef', V3, V25} | [V20 | []]]}))(V22))), case V26 of {'Idris.Prelude.Types.Left', E332} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E332)); {'Idris.Prelude.Types.Right', E333} -> (fun (V28) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V21, {'Idris.Core.CompileExpr.CLet', V3, V25, 1, {'Idris.Core.CompileExpr.CApp', V3, V16, [V20 | []]}, ('un--refToLocal'('erased', V25, V25, V28))}))} end(E333)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E328, E329)); _ -> fun (V29) -> begin (V31 = begin (V30 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V30} end), case V31 of {'Idris.Prelude.Types.Left', E275} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V33) -> begin (V61 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V33 of {'Idris.Core.Context.MkDefs', E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303} -> (fun (V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V34 end(E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V29))), case V61 of {'Idris.Prelude.Types.Left', E304} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E304)); {'Idris.Prelude.Types.Right', E305} -> (fun (V63) -> case V63 of {'Idris.Prelude.Types.Just', E306} -> (fun (V64) -> begin (V65 = {'Idris.Prelude.Types.Just', V64}), (('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V33, V64, V65, case V64 of {'Idris.Core.Context.MkGlobalDef', E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327} -> (fun (V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86) -> V84 end(E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V29)) end end(E306)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E273, E274)); _ -> fun (V87) -> begin (V89 = begin (V88 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V88} end), case V89 of {'Idris.Prelude.Types.Left', E220} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V91) -> begin (V119 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V91 of {'Idris.Core.Context.MkDefs', E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248} -> (fun (V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118) -> V92 end(E222, E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V87))), case V119 of {'Idris.Prelude.Types.Left', E249} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V121) -> case V121 of {'Idris.Prelude.Types.Just', E251} -> (fun (V122) -> begin (V123 = {'Idris.Prelude.Types.Just', V122}), (('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V91, V122, V123, case V122 of {'Idris.Core.Context.MkGlobalDef', E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272} -> (fun (V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144) -> V142 end(E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V87)) end end(E251)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E218, E219)); _ -> fun (V145) -> begin (V147 = begin (V146 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V146} end), case V147 of {'Idris.Prelude.Types.Left', E165} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V149) -> begin (V177 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V149 of {'Idris.Core.Context.MkDefs', E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193} -> (fun (V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176) -> V150 end(E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V145))), case V177 of {'Idris.Prelude.Types.Left', E194} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V179) -> case V179 of {'Idris.Prelude.Types.Just', E196} -> (fun (V180) -> begin (V181 = {'Idris.Prelude.Types.Just', V180}), (('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V149, V180, V181, case V180 of {'Idris.Core.Context.MkGlobalDef', E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217} -> (fun (V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202) -> V200 end(E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V145)) end end(E196)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E163, E164)); _ -> fun (V203) -> begin (V205 = begin (V204 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V204} end), case V205 of {'Idris.Prelude.Types.Left', E110} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V207) -> begin (V235 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V207 of {'Idris.Core.Context.MkDefs', E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138} -> (fun (V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234) -> V208 end(E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V203))), case V235 of {'Idris.Prelude.Types.Left', E139} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V237) -> case V237 of {'Idris.Prelude.Types.Just', E141} -> (fun (V238) -> begin (V239 = {'Idris.Prelude.Types.Just', V238}), (('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V207, V238, V239, case V238 of {'Idris.Core.Context.MkGlobalDef', E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162} -> (fun (V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260) -> V258 end(E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V203)) end end(E141)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E108, E109)); _ -> fun (V261) -> begin (V263 = begin (V262 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V262} end), case V263 of {'Idris.Prelude.Types.Left', E55} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V265) -> begin (V293 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V265 of {'Idris.Core.Context.MkDefs', E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83} -> (fun (V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292) -> V266 end(E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V261))), case V293 of {'Idris.Prelude.Types.Left', E84} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V295) -> case V295 of {'Idris.Prelude.Types.Just', E86} -> (fun (V296) -> begin (V297 = {'Idris.Prelude.Types.Just', V296}), (('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V265, V296, V297, case V296 of {'Idris.Core.Context.MkGlobalDef', E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107} -> (fun (V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318) -> V316 end(E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V261)) end end(E86)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V319) -> begin (V321 = begin (V320 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V320} end), case V321 of {'Idris.Prelude.Types.Left', E2} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V323) -> begin (V351 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V323 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350) -> V324 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V319))), case V351 of {'Idris.Prelude.Types.Left', E31} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V353) -> case V353 of {'Idris.Prelude.Types.Just', E33} -> (fun (V354) -> begin (V355 = {'Idris.Prelude.Types.Just', V354}), (('case--case block in case block in eval-2549'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V323, V354, V355, case V354 of {'Idris.Core.Context.MkGlobalDef', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376) -> V374 end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V319)) end end(E33)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--tryApply-2266'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> case V10 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V3)), V2, V8, V7, V6, V11, V12, ('Idris.Idris2.Core.CompileExpr':'un--embed'('erased', 'erased', V1))))(V13))), case V14 of {'Idris.Prelude.Types.Left', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V16}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--evalLocal-2178'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', V4} end; _ -> ('un--eval'(V2, V0, V10, V9, V7, V3, V6, ('Idris.Idris2.Core.CompileExpr':'dn--un--weakenNs_Weaken_CExp'('erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V2)), V4)))) end.
'case--usedCon-2034'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> ('un--used'('erased', ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V5, V1)), V8, 'erased', V6)).
'case--used-1710'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> 1000; 1 -> V8; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--used-1617'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of 0 -> 1; 1 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--largest-1564'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--largest'('erased', V1, V2, V3)); 1 -> ('un--largest'('erased', V1, V4, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--takeFromStack-1454'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', {'Idris.Builtin.MkPair', {'Idris.Compiler.Inline.::', V2, V8}, V9})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10787-4165--in--un--traverseArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Data.Vect.Nil'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Data.Vect.Nil'}} end end()); {'Idris.Data.Vect.::', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = (('un--fixArityTm'(V7, V5, V10, []))(V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = (('nested--10787-4165--in--un--traverseArgs'(V0, V1, V2, V3, V4, V5, 'erased', V7, V11))(V12))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Data.Vect.::', V15, V18}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11838-4927--in--un--nonErased'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Just', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(case V37 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> V45 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V59) -> fun (V60) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V59, V60)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V61) -> fun (V62) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V61, V62)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())}))))} end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 1} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--8737-3605--in--un--matches'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V18 of {'Idris.Prelude.Types.Just', E0} -> (fun (V21) -> case V20 of {'Idris.Prelude.Types.Just', E1} -> (fun (V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V21, V22)) end(E1)); _ -> 1 end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V20 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V17, V19)) end()); _ -> 1 end end()); _ -> 1 end.
'nested--10787-4339--in--un--fixArityConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = (('un--fixArityTm'(V0, V6, V9, []))(V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConstAlt', V8, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10787-4281--in--un--fixArityAlt'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> fun (V12) -> begin (V13 = (('un--fixArityTm'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V10, V0)), V6, V11, []))(V12))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V8, V9, V10, V15}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedConst'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V5, V6) -> ('un--used'('erased', V1, V2, 'erased', V6)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedCon'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> ('case--usedCon-2034'('erased', V1, V2, V5, V6, V7, V8, 'erased', ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken_Var'('erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V7)), V2)))) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--used'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.CLocal', E0, E1} -> (fun (V5, V6) -> ('case--used-1617'('erased', V1, 'erased', V6, V5, 'erased', V2, 'erased', ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2, V5)))) end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E2, E3, E4} -> (fun (V7, V8, V9) -> ('un--used'('erased', [V8 | V1], (1 + V2), 'erased', V9)) end(E2, E3, E4)); {'Idris.Core.CompileExpr.CLet', E5, E6, E7, E8, E9} -> (fun (V10, V11, V12, V13, V14) -> case V12 of 1 -> begin (V15 = ((('un--used'('erased', V1, V2, 'erased', V13)) + ('un--used'('erased', [V11 | V1], (1 + V2), 'erased', V14))) rem 9223372036854775808)), ('case--used-1710'('erased', V1, V2, V10, V11, V14, V13, 'erased', V15, ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V15, 0)))) end; 0 -> ((('un--used'('erased', V1, V2, 'erased', V13)) + ('un--used'('erased', [V11 | V1], (1 + V2), 'erased', V14))) rem 9223372036854775808); _ -> 0 end end(E5, E6, E7, E8, E9)); {'Idris.Core.CompileExpr.CApp', E10, E11, E12} -> (fun (V16, V17, V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', fun (V19) -> fun (V20) -> ((V19 + V20) rem 9223372036854775808) end end, ('un--used'('erased', V1, V2, 'erased', V17)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V21) -> ('un--used'('erased', V1, V2, 'erased', V21)) end, V18)))) end(E10, E11, E12)); {'Idris.Core.CompileExpr.CCon', E13, E14, E15, E16} -> (fun (V22, V23, V24, V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', fun (V26) -> fun (V27) -> ((V26 + V27) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V28) -> ('un--used'('erased', V1, V2, 'erased', V28)) end, V25)))) end(E13, E14, E15, E16)); {'Idris.Core.CompileExpr.COp', E17, E18, E19, E20} -> (fun (V29, V30, V31, V32) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'('erased', 'erased', 'erased', fun (V33) -> fun (V34) -> ((V33 + V34) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'('erased', 'erased', 'erased', fun (V35) -> ('un--used'('erased', V1, V2, 'erased', V35)) end, V32)))) end(E17, E18, E19, E20)); {'Idris.Core.CompileExpr.CExtPrim', E21, E22, E23} -> (fun (V36, V37, V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', fun (V39) -> fun (V40) -> ((V39 + V40) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V41) -> ('un--used'('erased', V1, V2, 'erased', V41)) end, V38)))) end(E21, E22, E23)); {'Idris.Core.CompileExpr.CForce', E24, E25, E26} -> (fun (V42, V43, V44) -> ('un--used'('erased', V1, V2, 'erased', V44)) end(E24, E25, E26)); {'Idris.Core.CompileExpr.CDelay', E27, E28, E29} -> (fun (V45, V46, V47) -> ('un--used'('erased', V1, V2, 'erased', V47)) end(E27, E28, E29)); {'Idris.Core.CompileExpr.CConCase', E30, E31, E32, E33} -> (fun (V48, V49, V50, V51) -> ((('un--used'('erased', V1, V2, 'erased', V49)) + ('un--largest'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkOrd', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V54, V55)) end end}, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V62, V63)) end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V64, V65)) end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V68, V69)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> 0 end, fun () -> fun (V70) -> ('un--used'('erased', V1, V2, 'erased', V70)) end end, V51)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V71) -> ('un--usedCon'('erased', V1, V2, 'erased', V71)) end, V50))))) rem 9223372036854775808) end(E30, E31, E32, E33)); {'Idris.Core.CompileExpr.CConstCase', E34, E35, E36, E37} -> (fun (V72, V73, V74, V75) -> ((('un--used'('erased', V1, V2, 'erased', V73)) + ('un--largest'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkOrd', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V76, V77)) end end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V78, V79)) end end}, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V80, V81)) end end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V82, V83)) end end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V84, V85)) end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V86, V87)) end end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V88, V89)) end end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V90, V91)) end end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V92, V93)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> 0 end, fun () -> fun (V94) -> ('un--used'('erased', V1, V2, 'erased', V94)) end end, V75)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V95) -> ('un--usedConst'('erased', V1, V2, 'erased', V95)) end, V74))))) rem 9223372036854775808) end(E34, E35, E36, E37)); _ -> 0 end.
'un--unloadApp'(V0, V1, V2, V3) -> ('un--unload'('erased', ('Idris.Idris2.Data.List':'un--drop'('erased', V1, V2)), {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V3)), V3, ('Idris.Idris2.Data.List':'un--take'('erased', V1, V2))})).
'un--unload'(V0, V1, V2) -> case V1 of [] -> V2; [E0 | E1] -> (fun (V3, V4) -> ('un--unload'('erased', V4, {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'('erased', V2)), V2, [V3 | []]})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--tryApply'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V8, V9) -> ('case--tryApply-2266'(V8, V9, V1, V0, V6, V5, V4, V3, V2, ('un--takeFromStack'('erased', 'erased', V6, V5, V8)))) end(E0, E1)); _ -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--takeFromStack'(V0, V1, V2, V3, V4) -> case V3 of [E0 | E1] -> (fun (V5, V6) -> case V4 of [E2 | E3] -> (fun (V7, V8) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('un--takeFromStack'('erased', 'erased', V2, V6, V8)), fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', {'Idris.Builtin.MkPair', {'Idris.Compiler.Inline.::', V5, V10}, V11})) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E2, E3)); _ -> case V4 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', {'Idris.Builtin.MkPair', V2, V3})); _ -> case V3 of [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> case V4 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', {'Idris.Builtin.MkPair', V2, V3})); _ -> case V3 of [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--refToLocal'(V0, V1, V2, V3) -> ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'('erased', 'erased', {'Idris.Core.TT.Bounds.Add', V2, V1, {'Idris.Core.TT.Bounds.None'}}, V3)).
'un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of {'Idris.Core.CompileExpr.CPrimVal', E0, E1} -> (fun (V10, V11) -> case V8 of [] -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V15) -> case V15 of {'Idris.Prelude.Types.Left', E3} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V17}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V13)), V14)) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E5 | E6] -> (fun (V18, V19) -> case V18 of {'Idris.Core.CompileExpr.MkConstAlt', E7, E8} -> (fun (V20, V21) -> ('case--pickConstAlt-3872'(V2, V11, V10, V1, V0, V21, V20, V19, V9, V6, V5, V4, V3, ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V11, V20)))) end(E7, E8)); _ -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E5, E6)); _ -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0, E1)); _ -> fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of {'Idris.Core.CompileExpr.CCon', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> case V8 of [] -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E4} -> (fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V17) -> case V17 of {'Idris.Prelude.Types.Left', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V19}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V15)), V16)) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E7 | E8] -> (fun (V20, V21) -> case V20 of {'Idris.Core.CompileExpr.MkConAlt', E9, E10, E11, E12} -> (fun (V22, V23, V24, V25) -> ('case--pickAlt-3642'(V1, V13, V12, V11, V10, V24, V0, V25, V23, V22, V21, V9, V6, V5, V4, V3, V2, ('nested--8737-3605--in--un--matches'(V1, V13, V12, V11, V10, V24, V0, V25, V23, V22, V21, V9, V6, V5, V4, V3, V2, V11, V12, V22, V23)))) end(E9, E10, E11, E12)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E7, E8)); _ -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0, E1, E2, E3)); _ -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--mkBounds'(V0) -> case V0 of [] -> {'Idris.Core.TT.Bounds.None'}; [E0 | E1] -> (fun (V1, V2) -> {'Idris.Core.TT.Bounds.Add', V1, V1, ('un--mkBounds'(V2))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mergeLambdas'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> ('case--mergeLambdas-4548'(V3, V0, V4, V2, ('un--getLams'('erased', [], 0, {'Idris.Core.CompileExpr.SubstCEnv.Nil'}, {'Idris.Core.CompileExpr.CLam', V2, V3, V4})))) end(E0, E1, E2)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, V1} end.
'un--mergeLamDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Just', E31} -> (fun (V37) -> begin (V38 = {'Idris.Prelude.Types.Just', V37}), (('case--case block in mergeLamDef-4883'(V1, V0, V6, V37, V38, case V37 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V57 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mergeLam'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V2, V3) -> ('case--mergeLam-4691'(V2, V3, V0, ('un--mergeLambdas'(V2, V3)))) end(E0, E1)); _ -> fun (V4) -> {'Idris.Prelude.Types.Right', V1} end end.
'un--largest'(V0, V1, V2, V3) -> case V3 of [] -> V2; [E0 | E1] -> (fun (V4, V5) -> ('case--largest-1564'('erased', V1, V4, V5, V2, case V1 of {'Idris.Prelude.EqOrd.dn--un--__mkOrd', E2, E3, E4, E5, E6, E7, E8, E9} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13) -> ((V9(V4))(V2)) end(E2, E3, E4, E5, E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--inlineDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Just', E31} -> (fun (V37) -> begin (V38 = {'Idris.Prelude.Types.Just', V37}), (('case--case block in inlineDef-4737'(V1, V0, V6, V37, V38, case V37 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V57 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inline'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V3, V4) -> fun (V5) -> begin (V6 = ('un--doEval'(V3, V0, V1, V4, V5))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V3, V8}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V9) -> {'Idris.Prelude.Types.Right', V2} end end.
'un--getNewArgs'(V0, V1, V2) -> case V1 of [] -> case V2 of {'Idris.Core.CompileExpr.SubstCEnv.Nil'} -> (fun () -> [] end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V3, V4) -> case V2 of {'Idris.Core.CompileExpr.SubstCEnv.::', E2, E3} -> (fun (V5, V6) -> case V5 of {'Idris.Core.CompileExpr.CRef', E4, E5} -> (fun (V7, V8) -> [V8 | ('un--getNewArgs'('erased', V4, V6))] end(E4, E5)); _ -> [V3 | ('un--getNewArgs'('erased', V4, V6))] end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getLams'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V5, V6, V7) -> ('un--getLams'('erased', [V6 | V1], ((V2 + 1) rem 9223372036854775808), {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CRef', V5, {'Idris.Core.Name.MN', <<"ext"/utf8>>, V2}}, V3}, V7)) end(E0, E1, E2)); _ -> {'Idris.Builtin.DPair.MkDPair', V1, {'Idris.Builtin.MkPair', V3, V4}} end.
'un--getArity'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V1)) end(E0, E1)); {'Idris.Core.CompileExpr.MkCon', E2, E3, E4} -> (fun (V3, V4, V5) -> V4 end(E2, E3, E4)); {'Idris.Core.CompileExpr.MkForeign', E5, E6, E7} -> (fun (V6, V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V7)) end(E5, E6, E7)); {'Idris.Core.CompileExpr.MkError', E8} -> (fun (V9) -> 0 end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--genName'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V8 = begin (V7 = ('erlang':'put'(V0, ((V6 + 1) rem 9223372036854775808)))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.MN', V1, V6}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--fixArityTm'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.CRef', E0, E1} -> (fun (V4, V5) -> fun (V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V38 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V10 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V11 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))), case V38 of {'Idris.Prelude.Types.Left', E31} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V40) -> case V40 of {'Idris.Prelude.Types.Just', E33} -> (fun (V41) -> begin (V42 = {'Idris.Prelude.Types.Just', V41}), (('case--case block in fixArityTm-3996'(V0, V5, V4, V3, V1, V10, V41, V42, case V41 of {'Idris.Core.Context.MkGlobalDef', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V61 end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6)) end end(E33)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V3, {'Idris.Core.CompileExpr.CRef', V4, V5}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E55, E56, E57} -> (fun (V64, V65, V66) -> fun (V67) -> begin (V68 = (('un--fixArityTm'([V65 | V0], V1, V66, []))(V67))), case V68 of {'Idris.Prelude.Types.Left', E58} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V70) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CLam', V64, V65, V70}, V3))} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55, E56, E57)); {'Idris.Core.CompileExpr.CLet', E60, E61, E62, E63, E64} -> (fun (V71, V72, V73, V74, V75) -> fun (V76) -> begin (V77 = (('un--fixArityTm'(V0, V1, V74, []))(V76))), case V77 of {'Idris.Prelude.Types.Left', E65} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V79) -> begin (V80 = (('un--fixArityTm'([V72 | V0], V1, V75, []))(V76))), case V80 of {'Idris.Prelude.Types.Left', E67} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V82) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CLet', V71, V72, V73, V79, V82}, V3))} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E60, E61, E62, E63, E64)); {'Idris.Core.CompileExpr.CApp', E69, E70, E71} -> (fun (V83, V84, V85) -> fun (V86) -> begin (V88 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V87) -> ('un--fixArityTm'(V0, V1, V87, [])) end, V85, []))(V86))), case V88 of {'Idris.Prelude.Types.Left', E72} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V90) -> (('un--fixArityTm'(V0, V1, V84, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V90, V3))))(V86)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E69, E70, E71)); {'Idris.Core.CompileExpr.CCon', E74, E75, E76, E77} -> (fun (V91, V92, V93, V94) -> case V3 of [] -> fun (V95) -> begin (V97 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V96) -> ('un--fixArityTm'(V0, V1, V96, [])) end, V94, []))(V95))), case V97 of {'Idris.Prelude.Types.Left', E78} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V91, V92, V93, V99}} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V3 of [] -> fun (V100) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V101) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E74, E75, E76, E77)); {'Idris.Core.CompileExpr.COp', E80, E81, E82, E83} -> (fun (V102, V103, V104, V105) -> case V3 of [] -> fun (V106) -> begin (V107 = (('nested--10787-4165--in--un--traverseArgs'(V0, V102, V105, V104, V103, V1, 'erased', V0, V105))(V106))), case V107 of {'Idris.Prelude.Types.Left', E84} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V109) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.COp', V102, V103, V104, V109}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V3 of [] -> fun (V110) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V111) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E80, E81, E82, E83)); {'Idris.Core.CompileExpr.CExtPrim', E86, E87, E88} -> (fun (V112, V113, V114) -> case V3 of [] -> fun (V115) -> begin (V117 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V116) -> ('un--fixArityTm'(V0, V1, V116, [])) end, V114, []))(V115))), case V117 of {'Idris.Prelude.Types.Left', E89} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CExtPrim', V112, V113, V119}} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V3 of [] -> fun (V120) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V121) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E86, E87, E88)); {'Idris.Core.CompileExpr.CForce', E91, E92, E93} -> (fun (V122, V123, V124) -> fun (V125) -> begin (V126 = (('un--fixArityTm'(V0, V1, V124, []))(V125))), case V126 of {'Idris.Prelude.Types.Left', E94} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V128) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CForce', V122, V123, V128}, V3))} end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E91, E92, E93)); {'Idris.Core.CompileExpr.CDelay', E96, E97, E98} -> (fun (V129, V130, V131) -> fun (V132) -> begin (V133 = (('un--fixArityTm'(V0, V1, V131, []))(V132))), case V133 of {'Idris.Prelude.Types.Left', E99} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V135) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CDelay', V129, V130, V135}, V3))} end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E96, E97, E98)); {'Idris.Core.CompileExpr.CConCase', E101, E102, E103, E104} -> (fun (V136, V137, V138, V139) -> fun (V140) -> begin (V141 = (('un--fixArityTm'(V0, V1, V137, []))(V140))), case V141 of {'Idris.Prelude.Types.Left', E105} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V143) -> begin (V145 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V144) -> ('nested--10787-4281--in--un--fixArityAlt'(V0, V139, V138, V137, V136, V3, V1, V144)) end, V138, []))(V140))), case V145 of {'Idris.Prelude.Types.Left', E107} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V147) -> begin (V152 = case V139 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E109} -> (fun (V148) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V149) -> case V149 of {'Idris.Prelude.Types.Left', E110} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V151) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V151}} end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--fixArityTm'(V0, V1, V148, [])), V140)) end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V152 of {'Idris.Prelude.Types.Left', E112} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V154) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CConCase', V136, V143, V147, V154}, V3))} end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E101, E102, E103, E104)); {'Idris.Core.CompileExpr.CConstCase', E114, E115, E116, E117} -> (fun (V155, V156, V157, V158) -> fun (V159) -> begin (V160 = (('un--fixArityTm'(V0, V1, V156, []))(V159))), case V160 of {'Idris.Prelude.Types.Left', E118} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V162) -> begin (V164 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V163) -> ('nested--10787-4339--in--un--fixArityConstAlt'(V0, V158, V157, V156, V155, V3, V1, V163)) end, V157, []))(V159))), case V164 of {'Idris.Prelude.Types.Left', E120} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V166) -> begin (V171 = case V158 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E122} -> (fun (V167) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V168) -> case V168 of {'Idris.Prelude.Types.Left', E123} -> (fun (V169) -> {'Idris.Prelude.Types.Left', V169} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V170) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V170}} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--fixArityTm'(V0, V1, V167, [])), V159)) end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V171 of {'Idris.Prelude.Types.Left', E125} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V173) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CConstCase', V155, V162, V166, V173}, V3))} end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E114, E115, E116, E117)); _ -> case V3 of [] -> fun (V174) -> {'Idris.Prelude.Types.Right', V2} end; _ -> fun (V175) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end.
'un--fixArityExp'(V0, V1, V2) -> ('un--fixArityTm'(V0, V1, V2, [])).
'un--fixArityDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V34 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Just', E31} -> (fun (V37) -> begin (V38 = {'Idris.Prelude.Types.Just', V37}), (('case--case block in fixArityDef-4810'(V1, V0, V6, V37, V38, case V37 of {'Idris.Core.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V57 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E31)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--fixArity'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V2, V3) -> fun (V4) -> begin (V5 = (('un--fixArityTm'(V2, V0, V3, []))(V4))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V2, V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Core.CompileExpr.MkError', E4} -> (fun (V8) -> fun (V9) -> begin (V10 = (('un--fixArityTm'([], V0, V8, []))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', V1} end end.
'un--extendLoc'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.None'}, V4}} end; [E0 | E1] -> (fun (V7, V8) -> fun (V9) -> begin (V10 = ('un--genName'(V2, <<"cv"/utf8>>, V9))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = (('un--extendLoc'('erased', 'erased', V2, V3, V4, V8))(V9))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> case V15 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V16, V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.Add', V7, V12, V16}, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V3, V12}, V17}}} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--extend'(V0, V1, V2, V3, V4, V5) -> case V3 of [] -> case V4 of [] -> case V5 of {'Idris.Libraries.Data.LengthMatch.NilMatch'} -> (fun () -> V2 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V6, V7) -> case V4 of [E2 | E3] -> (fun (V8, V9) -> case V5 of {'Idris.Libraries.Data.LengthMatch.ConsMatch', E4} -> (fun (V10) -> {'Idris.Compiler.Inline.::', V6, ('un--extend'('erased', 'erased', V2, V7, V9, V10))} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V1 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V7, {'Idris.Core.CompileExpr.CLocal', V9, V5}))} end; [E0 | E1] -> (fun (V12, V13) -> case V8 of {'Idris.Compiler.Inline.::', E2, E3} -> (fun (V14, V15) -> case V9 of 0 -> case V7 of [] -> fun (V16) -> {'Idris.Prelude.Types.Right', V14} end; _ -> ('un--eval'(V13, V2, V3, V4, V6, V15, V7, ('Idris.Idris2.Core.CompileExpr':'dn--un--weakenNs_Weaken_CExp'('erased', 'erased', ('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'('erased', V13)), V14)))) end; _ -> begin (V17 = (V9 - 1)), ('un--evalLocal'('erased', V13, V2, V3, V4, V5, V6, V7, V15, V17, 'erased')) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V8, V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V11) -> case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConstAlt', V8, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V9)), V10)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3} -> (fun (V9, V10, V11, V12) -> fun (V13) -> begin (V14 = (('un--extendLoc'('erased', 'erased', V3, V4, V6, V11))(V13))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V17, V18) -> begin (V19 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V11, V0)), V1, V2, V3, V5, V18, V7, V12))(V13))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V9, V10, V11, ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'('erased', 'erased', V17, V21))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--eval'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.CLocal', E261, E262} -> (fun (V8, V9) -> ('un--evalLocal'('erased', V0, V1, V2, V3, V9, V4, V6, V5, V8, 'erased')) end(E261, E262)); {'Idris.Core.CompileExpr.CRef', E263, E264} -> (fun (V10, V11) -> ('case--eval-2389'(V0, V1, V11, V10, V6, V5, V4, V3, V2, {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', <<"io_bind"/utf8>>}})), V6})) end(E263, E264)); _ -> case V6 of [] -> case V7 of {'Idris.Core.CompileExpr.CLam', E166, E167, E168} -> (fun (V12, V13, V14) -> fun (V15) -> begin (V16 = ('un--genName'(V3, <<"lamv"/utf8>>, V15))), case V16 of {'Idris.Prelude.Types.Left', E169} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V18) -> begin (V19 = (('un--eval'([V13 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V12, V18}, V5}, [], V14))(V15))), case V19 of {'Idris.Prelude.Types.Left', E171} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V12, V13, ('un--refToLocal'('erased', V18, V13, V21))}} end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E166, E167, E168)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E83, E84, E85, E86, E87} -> (fun (V22, V23, V24, V25, V26) -> case V24 of 1 -> fun (V27) -> begin (V28 = ('un--genName'(V3, <<"letv"/utf8>>, V27))), case V28 of {'Idris.Prelude.Types.Left', E88} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V30) -> begin (V31 = (('un--eval'([V23 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V22, V30}, V5}, [], V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E90} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V33) -> begin (V34 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V25))(V27))), case V34 of {'Idris.Prelude.Types.Left', E92} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CLet', V22, V23, 1, V36, ('un--refToLocal'('erased', V30, V23, V33))}))} end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> begin (V37 = ('un--used'('erased', [V23 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1))], 0, 'erased', V26))), ('case--eval-2859'(V23, V1, V0, V26, V25, V22, V6, V5, V4, V3, V2, V37, ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V37, 1)))) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E83, E84, E85, E86, E87)); {'Idris.Core.CompileExpr.CApp', E94, E95, E96} -> (fun (V38, V39, V40) -> fun (V41) -> begin (V43 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V42) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V42)) end, V40, []))(V41))), case V43 of {'Idris.Prelude.Types.Left', E97} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V45) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V45, V6)), V39))(V41)) end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E94, E95, E96)); {'Idris.Core.CompileExpr.CCon', E99, E100, E101, E102} -> (fun (V46, V47, V48, V49) -> fun (V50) -> begin (V52 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V51) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V51)) end, V49, []))(V50))), case V52 of {'Idris.Prelude.Types.Left', E103} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V54) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCon', V46, V47, V48, V54}))} end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E99, E100, E101, E102)); {'Idris.Core.CompileExpr.COp', E105, E106, E107, E108} -> (fun (V55, V56, V57, V58) -> fun (V59) -> begin (V61 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V60) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V60)) end, V58))(V59))), case V61 of {'Idris.Prelude.Types.Left', E109} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V63) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.COp', V55, V56, V57, V63}))} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E105, E106, E107, E108)); {'Idris.Core.CompileExpr.CExtPrim', E111, E112, E113} -> (fun (V64, V65, V66) -> fun (V67) -> begin (V69 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V68) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V68)) end, V66, []))(V67))), case V69 of {'Idris.Prelude.Types.Left', E114} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V71) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CExtPrim', V64, V65, V71}))} end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E111, E112, E113)); {'Idris.Core.CompileExpr.CForce', E116, E117, E118} -> (fun (V72, V73, V74) -> fun (V75) -> begin (V76 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V74))(V75))), case V76 of {'Idris.Prelude.Types.Left', E119} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V78) -> case V78 of {'Idris.Core.CompileExpr.CDelay', E121, E122, E123} -> (fun (V79, V80, V81) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V81))(V75)) end(E121, E122, E123)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CForce', V72, V73, V78}))} end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E116, E117, E118)); {'Idris.Core.CompileExpr.CDelay', E124, E125, E126} -> (fun (V82, V83, V84) -> fun (V85) -> begin (V86 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V84))(V85))), case V86 of {'Idris.Prelude.Types.Left', E127} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V88) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CDelay', V82, V83, V88}))} end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E124, E125, E126)); {'Idris.Core.CompileExpr.CConCase', E129, E130, E131, E132} -> (fun (V89, V90, V91, V92) -> fun (V93) -> begin (V94 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V90))(V93))), case V94 of {'Idris.Prelude.Types.Left', E133} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V96) -> begin (V97 = (('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V96, V91, V92))(V93))), case V97 of {'Idris.Prelude.Types.Left', E135} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V99) -> case V99 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V104 = case V92 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E137} -> (fun (V100) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V101) -> case V101 of {'Idris.Prelude.Types.Left', E138} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V103) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V103}} end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V100)), V93)) end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V104 of {'Idris.Prelude.Types.Left', E140} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V106) -> begin (V108 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V107) -> ('un--evalAlt'(V0, V1, V2, V3, V89, V4, V5, V6, V107)) end, V91, []))(V93))), case V108 of {'Idris.Prelude.Types.Left', E142} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V110) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V89, V96, V110, V106}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E144} -> (fun (V111) -> {'Idris.Prelude.Types.Right', V111} end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E129, E130, E131, E132)); {'Idris.Core.CompileExpr.CConstCase', E145, E146, E147, E148} -> (fun (V112, V113, V114, V115) -> fun (V116) -> begin (V117 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V113))(V116))), case V117 of {'Idris.Prelude.Types.Left', E149} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V119) -> begin (V120 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V119, V114, V115))(V116))), case V120 of {'Idris.Prelude.Types.Left', E151} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V122) -> case V122 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V127 = case V115 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E153} -> (fun (V123) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V124) -> case V124 of {'Idris.Prelude.Types.Left', E154} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V126) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V126}} end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V123)), V116)) end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V127 of {'Idris.Prelude.Types.Left', E156} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V129) -> begin (V131 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V130) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V130)) end, V114, []))(V116))), case V131 of {'Idris.Prelude.Types.Left', E158} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V133) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V112, V119, V133, V129}} end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E160} -> (fun (V134) -> {'Idris.Prelude.Types.Right', V134} end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E145, E146, E147, E148)); {'Idris.Core.CompileExpr.CPrimVal', E161, E162} -> (fun (V135, V136) -> fun (V137) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CPrimVal', V135, V136}))} end end(E161, E162)); {'Idris.Core.CompileExpr.CErased', E163} -> (fun (V138) -> fun (V139) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CErased', V138}))} end end(E163)); {'Idris.Core.CompileExpr.CCrash', E164, E165} -> (fun (V140, V141) -> fun (V142) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCrash', V140, V141}))} end end(E164, E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; [E173 | E174] -> (fun (V143, V144) -> case V7 of {'Idris.Core.CompileExpr.CLam', E258, E259, E260} -> (fun (V145, V146, V147) -> ('un--eval'([V146 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', V143, V5}, V144, V147)) end(E258, E259, E260)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E175, E176, E177, E178, E179} -> (fun (V148, V149, V150, V151, V152) -> case V150 of 1 -> fun (V153) -> begin (V154 = ('un--genName'(V3, <<"letv"/utf8>>, V153))), case V154 of {'Idris.Prelude.Types.Left', E180} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V156) -> begin (V157 = (('un--eval'([V149 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V148, V156}, V5}, [], V152))(V153))), case V157 of {'Idris.Prelude.Types.Left', E182} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V159) -> begin (V160 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V151))(V153))), case V160 of {'Idris.Prelude.Types.Left', E184} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V162) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CLet', V148, V149, 1, V162, ('un--refToLocal'('erased', V156, V149, V159))}))} end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> begin (V163 = ('un--used'('erased', [V149 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1))], 0, 'erased', V152))), ('case--eval-2859'(V149, V1, V0, V152, V151, V148, V6, V5, V4, V3, V2, V163, ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V163, 1)))) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E175, E176, E177, E178, E179)); {'Idris.Core.CompileExpr.CApp', E186, E187, E188} -> (fun (V164, V165, V166) -> fun (V167) -> begin (V169 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V168) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V168)) end, V166, []))(V167))), case V169 of {'Idris.Prelude.Types.Left', E189} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V171) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V171, V6)), V165))(V167)) end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E186, E187, E188)); {'Idris.Core.CompileExpr.CCon', E191, E192, E193, E194} -> (fun (V172, V173, V174, V175) -> fun (V176) -> begin (V178 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V177) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V177)) end, V175, []))(V176))), case V178 of {'Idris.Prelude.Types.Left', E195} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V180) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCon', V172, V173, V174, V180}))} end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E191, E192, E193, E194)); {'Idris.Core.CompileExpr.COp', E197, E198, E199, E200} -> (fun (V181, V182, V183, V184) -> fun (V185) -> begin (V187 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V186) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V186)) end, V184))(V185))), case V187 of {'Idris.Prelude.Types.Left', E201} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V189) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.COp', V181, V182, V183, V189}))} end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E197, E198, E199, E200)); {'Idris.Core.CompileExpr.CExtPrim', E203, E204, E205} -> (fun (V190, V191, V192) -> fun (V193) -> begin (V195 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V194) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V194)) end, V192, []))(V193))), case V195 of {'Idris.Prelude.Types.Left', E206} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V197) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CExtPrim', V190, V191, V197}))} end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E203, E204, E205)); {'Idris.Core.CompileExpr.CForce', E208, E209, E210} -> (fun (V198, V199, V200) -> fun (V201) -> begin (V202 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V200))(V201))), case V202 of {'Idris.Prelude.Types.Left', E211} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V204) -> case V204 of {'Idris.Core.CompileExpr.CDelay', E213, E214, E215} -> (fun (V205, V206, V207) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V207))(V201)) end(E213, E214, E215)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CForce', V198, V199, V204}))} end end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E208, E209, E210)); {'Idris.Core.CompileExpr.CDelay', E216, E217, E218} -> (fun (V208, V209, V210) -> fun (V211) -> begin (V212 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V210))(V211))), case V212 of {'Idris.Prelude.Types.Left', E219} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V214) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CDelay', V208, V209, V214}))} end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E216, E217, E218)); {'Idris.Core.CompileExpr.CConCase', E221, E222, E223, E224} -> (fun (V215, V216, V217, V218) -> fun (V219) -> begin (V220 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V216))(V219))), case V220 of {'Idris.Prelude.Types.Left', E225} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V222) -> begin (V223 = (('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V222, V217, V218))(V219))), case V223 of {'Idris.Prelude.Types.Left', E227} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V225) -> case V225 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V230 = case V218 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E229} -> (fun (V226) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V227) -> case V227 of {'Idris.Prelude.Types.Left', E230} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V229) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V229}} end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V226)), V219)) end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V230 of {'Idris.Prelude.Types.Left', E232} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V232) -> begin (V234 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V233) -> ('un--evalAlt'(V0, V1, V2, V3, V215, V4, V5, V6, V233)) end, V217, []))(V219))), case V234 of {'Idris.Prelude.Types.Left', E234} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V236) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V215, V222, V236, V232}} end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E236} -> (fun (V237) -> {'Idris.Prelude.Types.Right', V237} end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E221, E222, E223, E224)); {'Idris.Core.CompileExpr.CConstCase', E237, E238, E239, E240} -> (fun (V238, V239, V240, V241) -> fun (V242) -> begin (V243 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V239))(V242))), case V243 of {'Idris.Prelude.Types.Left', E241} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V245) -> begin (V246 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V245, V240, V241))(V242))), case V246 of {'Idris.Prelude.Types.Left', E243} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V248) -> case V248 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V253 = case V241 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E245} -> (fun (V249) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V250) -> case V250 of {'Idris.Prelude.Types.Left', E246} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V252) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V252}} end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V249)), V242)) end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V253 of {'Idris.Prelude.Types.Left', E248} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V255) -> begin (V257 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V256) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V256)) end, V240, []))(V242))), case V257 of {'Idris.Prelude.Types.Left', E250} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V259) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V238, V245, V259, V255}} end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E252} -> (fun (V260) -> {'Idris.Prelude.Types.Right', V260} end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E237, E238, E239, E240)); {'Idris.Core.CompileExpr.CPrimVal', E253, E254} -> (fun (V261, V262) -> fun (V263) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CPrimVal', V261, V262}))} end end(E253, E254)); {'Idris.Core.CompileExpr.CErased', E255} -> (fun (V264) -> fun (V265) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CErased', V264}))} end end(E255)); {'Idris.Core.CompileExpr.CCrash', E256, E257} -> (fun (V266, V267) -> fun (V268) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCrash', V266, V267}))} end end(E256, E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E173, E174)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E0, E1, E2, E3, E4} -> (fun (V269, V270, V271, V272, V273) -> case V271 of 1 -> fun (V274) -> begin (V275 = ('un--genName'(V3, <<"letv"/utf8>>, V274))), case V275 of {'Idris.Prelude.Types.Left', E5} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V277) -> begin (V278 = (('un--eval'([V270 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V269, V277}, V5}, [], V273))(V274))), case V278 of {'Idris.Prelude.Types.Left', E7} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V280) -> begin (V281 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V272))(V274))), case V281 of {'Idris.Prelude.Types.Left', E9} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V283) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CLet', V269, V270, 1, V283, ('un--refToLocal'('erased', V277, V270, V280))}))} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> begin (V284 = ('un--used'('erased', [V270 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V0, V1))], 0, 'erased', V273))), ('case--eval-2859'(V270, V1, V0, V273, V272, V269, V6, V5, V4, V3, V2, V284, ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V284, 1)))) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3, E4)); {'Idris.Core.CompileExpr.CApp', E11, E12, E13} -> (fun (V285, V286, V287) -> fun (V288) -> begin (V290 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V289) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V289)) end, V287, []))(V288))), case V290 of {'Idris.Prelude.Types.Left', E14} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V292) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V292, V6)), V286))(V288)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E11, E12, E13)); {'Idris.Core.CompileExpr.CCon', E16, E17, E18, E19} -> (fun (V293, V294, V295, V296) -> fun (V297) -> begin (V299 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V298) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V298)) end, V296, []))(V297))), case V299 of {'Idris.Prelude.Types.Left', E20} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V301) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCon', V293, V294, V295, V301}))} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E16, E17, E18, E19)); {'Idris.Core.CompileExpr.COp', E22, E23, E24, E25} -> (fun (V302, V303, V304, V305) -> fun (V306) -> begin (V308 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V307) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V307)) end, V305))(V306))), case V308 of {'Idris.Prelude.Types.Left', E26} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V310) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.COp', V302, V303, V304, V310}))} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24, E25)); {'Idris.Core.CompileExpr.CExtPrim', E28, E29, E30} -> (fun (V311, V312, V313) -> fun (V314) -> begin (V316 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V315) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V315)) end, V313, []))(V314))), case V316 of {'Idris.Prelude.Types.Left', E31} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V318) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CExtPrim', V311, V312, V318}))} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E28, E29, E30)); {'Idris.Core.CompileExpr.CForce', E33, E34, E35} -> (fun (V319, V320, V321) -> fun (V322) -> begin (V323 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V321))(V322))), case V323 of {'Idris.Prelude.Types.Left', E36} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V325) -> case V325 of {'Idris.Core.CompileExpr.CDelay', E38, E39, E40} -> (fun (V326, V327, V328) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V328))(V322)) end(E38, E39, E40)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CForce', V319, V320, V325}))} end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35)); {'Idris.Core.CompileExpr.CDelay', E41, E42, E43} -> (fun (V329, V330, V331) -> fun (V332) -> begin (V333 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V331))(V332))), case V333 of {'Idris.Prelude.Types.Left', E44} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V335) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CDelay', V329, V330, V335}))} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E41, E42, E43)); {'Idris.Core.CompileExpr.CConCase', E46, E47, E48, E49} -> (fun (V336, V337, V338, V339) -> fun (V340) -> begin (V341 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V337))(V340))), case V341 of {'Idris.Prelude.Types.Left', E50} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V343) -> begin (V344 = (('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V343, V338, V339))(V340))), case V344 of {'Idris.Prelude.Types.Left', E52} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V346) -> case V346 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V351 = case V339 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E54} -> (fun (V347) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V348) -> case V348 of {'Idris.Prelude.Types.Left', E55} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V350) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V350}} end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V347)), V340)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V351 of {'Idris.Prelude.Types.Left', E57} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V353) -> begin (V355 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V354) -> ('un--evalAlt'(V0, V1, V2, V3, V336, V4, V5, V6, V354)) end, V338, []))(V340))), case V355 of {'Idris.Prelude.Types.Left', E59} -> (fun (V356) -> {'Idris.Prelude.Types.Left', V356} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V357) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConCase', V336, V343, V357, V353}} end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E61} -> (fun (V358) -> {'Idris.Prelude.Types.Right', V358} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E46, E47, E48, E49)); {'Idris.Core.CompileExpr.CConstCase', E62, E63, E64, E65} -> (fun (V359, V360, V361, V362) -> fun (V363) -> begin (V364 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V360))(V363))), case V364 of {'Idris.Prelude.Types.Left', E66} -> (fun (V365) -> {'Idris.Prelude.Types.Left', V365} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V366) -> begin (V367 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V366, V361, V362))(V363))), case V367 of {'Idris.Prelude.Types.Left', E68} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V369) -> case V369 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V374 = case V362 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E70} -> (fun (V370) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V371) -> case V371 of {'Idris.Prelude.Types.Left', E71} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V373) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V373}} end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V370)), V363)) end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V374 of {'Idris.Prelude.Types.Left', E73} -> (fun (V375) -> {'Idris.Prelude.Types.Left', V375} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V376) -> begin (V378 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V377) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V377)) end, V361, []))(V363))), case V378 of {'Idris.Prelude.Types.Left', E75} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V380) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V359, V366, V380, V376}} end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E77} -> (fun (V381) -> {'Idris.Prelude.Types.Right', V381} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E62, E63, E64, E65)); {'Idris.Core.CompileExpr.CPrimVal', E78, E79} -> (fun (V382, V383) -> fun (V384) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CPrimVal', V382, V383}))} end end(E78, E79)); {'Idris.Core.CompileExpr.CErased', E80} -> (fun (V385) -> fun (V386) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CErased', V385}))} end end(E80)); {'Idris.Core.CompileExpr.CCrash', E81, E82} -> (fun (V387, V388) -> fun (V389) -> {'Idris.Prelude.Types.Right', ('un--unload'('erased', V6, {'Idris.Core.CompileExpr.CCrash', V387, V388}))} end end(E81, E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--doEval'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Compiler.Inline.LVar'}, 0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"compiler.inline.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_(CExp $vars)'(V0, V3)))))) end))(V4))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V11 = (('un--eval'([], V0, V1, V7, [], {'Idris.Compiler.Inline.Nil'}, [], V3))(V4))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"compiler.inline.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Inlined: "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_(CExp $vars)'(V0, V13)))) end))(V4))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', V13} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileAndInlineAll'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V33 = ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'('erased', case V5 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V28 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V36 = (('Idris.Idris2.Core.Core':'un--filterM'('erased', fun (V34) -> fun (V35) -> ('nested--11838-4927--in--un--nonErased'(V0, V34, V35)) end end, V33))(V1))), case V36 of {'Idris.Prelude.Types.Left', E29} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V38) -> begin (V41 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V39) -> fun (V40) -> ('Idris.Idris2.Compiler.CompileExpr':'un--compileDef'(V0, V39, V40)) end end, V38))(V1))), case V41 of {'Idris.Prelude.Types.Left', E31} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V43) -> begin (V46 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V44) -> fun (V45) -> ('un--inlineDef'(V0, V44, V45)) end end, V38))(V1))), case V46 of {'Idris.Prelude.Types.Left', E33} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V48) -> begin (V51 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V49) -> fun (V50) -> ('un--mergeLamDef'(V0, V49, V50)) end end, V38))(V1))), case V51 of {'Idris.Prelude.Types.Left', E35} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V53) -> begin (V56 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V54) -> fun (V55) -> ('un--fixArityDef'(V0, V54, V55)) end end, V38))(V1))), case V56 of {'Idris.Prelude.Types.Left', E37} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V58) -> begin (V61 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V59) -> fun (V60) -> ('un--inlineDef'(V0, V59, V60)) end end, V38))(V1))), case V61 of {'Idris.Prelude.Types.Left', E39} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V63) -> begin (V66 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V64) -> fun (V65) -> ('un--mergeLamDef'(V0, V64, V65)) end end, V38))(V1))), case V66 of {'Idris.Prelude.Types.Left', E41} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V68) -> (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V69) -> fun (V70) -> ('un--fixArityDef'(V0, V69, V70)) end end, V38))(V1)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--Stack'(V0) -> {'Idris.Prelude.Types.List', {'Idris.Core.CompileExpr.CExp', V0}}.
