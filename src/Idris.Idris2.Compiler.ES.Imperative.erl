-module('Idris.Idris2.Compiler.ES.Imperative').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--pairToReturn'/2,
  'un--memoExp'/3,
  'un--isNameUsedConstAlt'/2,
  'un--isNameUsedConAlt'/2,
  'un--isNameUsed'/2,
  'un--impVectExp'/3,
  'un--impTag'/2,
  'un--impListExp'/3,
  'un--impExp'/3,
  'un--impConstAltTrue'/3,
  'un--impConstAltFalse'/4,
  'un--impConAltTrue'/4,
  'un--impConAltFalse'/5,
  'un--getImp'/2,
  'un--genName'/2,
  'un--expToReturn'/2,
  'un--compileToImperative'/3
]).
'un--pairToReturn'(V0, V1) -> case V0 of 0 -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> {'Idris.Builtin.MkPair', V2, V3} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 1 -> case V1 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V4, {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V5})) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--memoExp'(V0, V1, V2) -> case V1 of {'Idris.Compiler.ES.ImperativeAst.IEVar', E2} -> (fun (V3) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'()), V1}} end(E2)); {'Idris.Compiler.ES.ImperativeAst.IEConstant', E3} -> (fun (V4) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'()), V1}} end(E3)); {'Idris.Compiler.ES.ImperativeAst.IENull'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'()), {'Idris.Compiler.ES.ImperativeAst.IENull'}}} end()); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V5) -> case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.LetDecl', V7, {'Idris.Prelude.Types.Just', V1}}, {'Idris.Compiler.ES.ImperativeAst.IEVar', V7}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V8) -> ('un--genName'(V0, V8)) end, V2)) end.
'un--isNameUsedConstAlt'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkNConstAlt', E0, E1} -> (fun (V2, V3) -> ('un--isNameUsed'(V0, V3)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isNameUsedConAlt'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkNConAlt', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> ('un--isNameUsed'(V0, V6)) end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isNameUsed'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.NmLocal', E0, E1} -> (fun (V2, V3) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3, V0)) end(E0, E1)); {'Idris.Core.CompileExpr.NmRef', E2, E3} -> (fun (V4, V5) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5, V0)) end(E2, E3)); {'Idris.Core.CompileExpr.NmLam', E4, E5, E6} -> (fun (V6, V7, V8) -> ('un--isNameUsed'(V0, V8)) end(E4, E5, E6)); {'Idris.Core.CompileExpr.NmApp', E7, E8, E9} -> (fun (V9, V10, V11) -> case ('un--isNameUsed'(V0, V10)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V23)) end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V27, V28, V29, V30)) end end end end end end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V32)) end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V35, V36, V37)) end end end end end}, fun (V38) -> ('un--isNameUsed'(V0, V38)) end, V11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7, E8, E9)); {'Idris.Core.CompileExpr.NmPrimVal', E10, E11} -> (fun (V39, V40) -> 0 end(E10, E11)); {'Idris.Core.CompileExpr.NmOp', E12, E13, E14, E15} -> (fun (V41, V42, V43, V44) -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'(V47, V48, V49)) end end end end end, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Data.Vect':'dn--un--foldl_Foldable_(Vect $n)'(V52, V53, V54)) end end end end end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Data.Vect':'dn--un--null_Foldable_(Vect $n)'(V56)) end end, fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Data.Vect':'dn--un--foldlM_Foldable_(Vect $n)'(V60, V61, V62, V63)) end end end end end end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Data.Vect':'dn--un--toList_Foldable_(Vect $n)'(V65)) end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Data.Vect':'dn--un--foldMap_Foldable_(Vect $n)'(V68, V69, V70)) end end end end end}, fun (V71) -> ('un--isNameUsed'(V0, V71)) end, V44)) end(E12, E13, E14, E15)); {'Idris.Core.CompileExpr.NmConCase', E16, E17, E18, E19} -> (fun (V72, V73, V74, V75) -> case ('un--isNameUsed'(V0, V73)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V83, V84, V85)) end end end end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V87)) end end, fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V91, V92, V93, V94)) end end end end end end end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V96)) end end, fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V99, V100, V101)) end end end end end}, fun (V102) -> ('un--isNameUsedConAlt'(V0, V102)) end, V74)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> 0 end, fun () -> fun (V103) -> ('un--isNameUsed'(V0, V103)) end end, V75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16, E17, E18, E19)); {'Idris.Core.CompileExpr.NmConstCase', E20, E21, E22, E23} -> (fun (V104, V105, V106, V107) -> case ('un--isNameUsed'(V0, V105)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V110, V111, V112)) end end end end end, fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V115, V116, V117)) end end end end end, fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V119)) end end, fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V123, V124, V125, V126)) end end end end end end end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V128)) end end, fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V131, V132, V133)) end end end end end}, fun (V134) -> ('un--isNameUsedConstAlt'(V0, V134)) end, V106)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> 0 end, fun () -> fun (V135) -> ('un--isNameUsed'(V0, V135)) end end, V107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E20, E21, E22, E23)); {'Idris.Core.CompileExpr.NmExtPrim', E24, E25, E26} -> (fun (V136, V137, V138) -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V141, V142, V143)) end end end end end, fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V146, V147, V148)) end end end end end, fun (V149) -> fun (V150) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V150)) end end, fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V154, V155, V156, V157)) end end end end end end end, fun (V158) -> fun (V159) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V159)) end end, fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V162, V163, V164)) end end end end end}, fun (V165) -> ('un--isNameUsed'(V0, V165)) end, V138)) end(E24, E25, E26)); {'Idris.Core.CompileExpr.NmCon', E27, E28, E29, E30, E31} -> (fun (V166, V167, V168, V169, V170) -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V173, V174, V175)) end end end end end, fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V178, V179, V180)) end end end end end, fun (V181) -> fun (V182) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V182)) end end, fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V186, V187, V188, V189)) end end end end end end end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V191)) end end, fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V194, V195, V196)) end end end end end}, fun (V197) -> ('un--isNameUsed'(V0, V197)) end, V170)) end(E27, E28, E29, E30, E31)); {'Idris.Core.CompileExpr.NmDelay', E32, E33, E34} -> (fun (V198, V199, V200) -> ('un--isNameUsed'(V0, V200)) end(E32, E33, E34)); {'Idris.Core.CompileExpr.NmForce', E35, E36, E37} -> (fun (V201, V202, V203) -> ('un--isNameUsed'(V0, V203)) end(E35, E36, E37)); {'Idris.Core.CompileExpr.NmLet', E38, E39, E40, E41} -> (fun (V204, V205, V206, V207) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V205, V0)) of 1 -> ('un--isNameUsed'(V0, V206)); 0 -> case ('un--isNameUsed'(V0, V206)) of 1 -> 1; 0 -> ('un--isNameUsed'(V0, V207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E38, E39, E40, E41)); {'Idris.Core.CompileExpr.NmErased', E42} -> (fun (V208) -> 0 end(E42)); {'Idris.Core.CompileExpr.NmCrash', E43, E44} -> (fun (V209, V210) -> 0 end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impVectExp'(V0, V1, V2) -> begin (V4 = ('Idris.Idris2.Core.Core':'un--traverseVect'(fun (V3) -> ('un--impExp'(V0, 0, V3)) end, V1, V2))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'(V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Data.Vect':'dn--un--foldl_Foldable_(Vect $n)'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Data.Vect':'dn--un--null_Foldable_(Vect $n)'(V18)) end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Data.Vect':'dn--un--foldlM_Foldable_(Vect $n)'(V22, V23, V24, V25)) end end end end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Data.Vect':'dn--un--toList_Foldable_(Vect $n)'(V27)) end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Data.Vect':'dn--un--foldMap_Foldable_(Vect $n)'(V30, V31, V32)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V33) -> fun (V34) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V33, V34)) end end, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'())}}, fun (V35) -> ('Idris.Idris2.Builtin':'un--fst'(V35)) end, V6)), ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V36) -> ('Idris.Idris2.Builtin':'un--snd'(V36)) end, V6))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--impTag'(V0, V1) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> {'Idris.Prelude.Types.Left', V2} end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impListExp'(V0, V1, V2) -> begin (V4 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3) -> ('un--impExp'(V0, 0, V3)) end, V1, [], V2))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V18)) end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V22, V23, V24, V25)) end end end end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V27)) end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V30, V31, V32)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V33) -> fun (V34) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V33, V34)) end end, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'())}}, fun (V35) -> ('Idris.Idris2.Builtin':'un--fst'(V35)) end, V6)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V36) -> ('Idris.Idris2.Builtin':'un--snd'(V36)) end, V6))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--impExp'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.NmLocal', E213, E214} -> (fun (V3, V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IEVar', V4}))} end end(E213, E214)); {'Idris.Core.CompileExpr.NmRef', E215, E216} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IEVar', V7}))} end end(E215, E216)); {'Idris.Core.CompileExpr.NmLam', E217, E218, E219} -> (fun (V9, V10, V11) -> fun (V12) -> begin (V13 = (('un--impExp'(V0, 1, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E220} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V15) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IELambda', [V10 | []], V15}))} end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E217, E218, E219)); {'Idris.Core.CompileExpr.NmApp', E222, E223, E224} -> (fun (V16, V17, V18) -> fun (V19) -> begin (V20 = (('un--impExp'(V0, 0, V17))(V19))), case V20 of {'Idris.Prelude.Types.Left', E225} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E227, E228} -> (fun (V23, V24) -> begin (V25 = ('un--impListExp'(V0, V18, V19))), case V25 of {'Idris.Prelude.Types.Left', E229} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V27) -> case V27 of {'Idris.Builtin.MkPair', E231, E232} -> (fun (V28, V29) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V23, V28)), {'Idris.Compiler.ES.ImperativeAst.IEApp', V24, V29}}))} end(E231, E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E227, E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E222, E223, E224)); {'Idris.Core.CompileExpr.NmPrimVal', E233, E234} -> (fun (V30, V31) -> fun (V32) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IEConstant', V31}))} end end(E233, E234)); {'Idris.Core.CompileExpr.NmOp', E235, E236, E237, E238} -> (fun (V33, V34, V35, V36) -> fun (V37) -> begin (V38 = ('un--impVectExp'(V0, V36, V37))), case V38 of {'Idris.Prelude.Types.Left', E239} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E241, E242} -> (fun (V41, V42) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V41, {'Idris.Compiler.ES.ImperativeAst.IEPrimFn', V35, V42}}))} end(E241, E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E235, E236, E237, E238)); _ -> case V1 of 0 -> fun (V43) -> case V2 of {'Idris.Core.CompileExpr.NmConCase', E94, E95, E96, E97} -> (fun (V44, V45, V46, V47) -> begin (V48 = (('un--impExp'(V0, 0, V45))(V43))), case V48 of {'Idris.Prelude.Types.Left', E98} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V50) -> case V50 of {'Idris.Builtin.MkPair', E100, E101} -> (fun (V51, V52) -> begin (V53 = ('un--memoExp'(V0, V52, V43))), case V53 of {'Idris.Prelude.Types.Left', E102} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V55) -> case V55 of {'Idris.Builtin.MkPair', E104, E105} -> (fun (V56, V57) -> begin (V58 = ('un--genName'(V0, V43))), case V58 of {'Idris.Prelude.Types.Left', E106} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V60) -> begin (V63 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V61) -> fun (V62) -> ('un--impConAltFalse'(V0, V60, V57, V61, V62)) end end, V46, [], V43))), case V63 of {'Idris.Prelude.Types.Left', E108} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V65) -> begin (V72 = case V47 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V44))))}} end()); {'Idris.Prelude.Types.Just', E110} -> (fun (V66) -> begin (V67 = (('un--impExp'(V0, 0, V66))(V43))), case V67 of {'Idris.Prelude.Types.Left', E111} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V69) -> case V69 of {'Idris.Builtin.MkPair', E113, E114} -> (fun (V70, V71) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V70, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V60, V71}))} end(E113, E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V72 of {'Idris.Prelude.Types.Left', E115} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V74) -> begin (V75 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', {'Idris.Compiler.ES.ImperativeAst.IEConstructorHead', V57}, V65, {'Idris.Prelude.Types.Just', V74}}), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V51, V56)), {'Idris.Compiler.ES.ImperativeAst.LetDecl', V60, {'Idris.Prelude.Types.Nothing'}})), V75)), {'Idris.Compiler.ES.ImperativeAst.IEVar', V60}}} end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104, E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94, E95, E96, E97)); {'Idris.Core.CompileExpr.NmConstCase', E117, E118, E119, E120} -> (fun (V76, V77, V78, V79) -> begin (V80 = (('un--impExp'(V0, 0, V77))(V43))), case V80 of {'Idris.Prelude.Types.Left', E121} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V82) -> case V82 of {'Idris.Builtin.MkPair', E123, E124} -> (fun (V83, V84) -> begin (V85 = ('un--genName'(V0, V43))), case V85 of {'Idris.Prelude.Types.Left', E125} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V87) -> begin (V90 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V88) -> fun (V89) -> ('un--impConstAltFalse'(V0, V87, V88, V89)) end end, V78, [], V43))), case V90 of {'Idris.Prelude.Types.Left', E127} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V92) -> begin (V99 = case V79 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V76))))}} end()); {'Idris.Prelude.Types.Just', E129} -> (fun (V93) -> begin (V94 = (('un--impExp'(V0, 0, V93))(V43))), case V94 of {'Idris.Prelude.Types.Left', E130} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V96) -> case V96 of {'Idris.Builtin.MkPair', E132, E133} -> (fun (V97, V98) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V97, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V87, V98}))} end(E132, E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V99 of {'Idris.Prelude.Types.Left', E134} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V101) -> begin (V102 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', V84, V92, {'Idris.Prelude.Types.Just', V101}}), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V83, {'Idris.Compiler.ES.ImperativeAst.LetDecl', V87, {'Idris.Prelude.Types.Nothing'}})), V102)), {'Idris.Compiler.ES.ImperativeAst.IEVar', V87}}} end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123, E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117, E118, E119, E120)); _ -> case V2 of {'Idris.Core.CompileExpr.NmExtPrim', E47, E48, E49} -> (fun (V103, V104, V105) -> begin (V106 = ('un--impListExp'(V0, V105, V43))), case V106 of {'Idris.Prelude.Types.Left', E50} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V108) -> case V108 of {'Idris.Builtin.MkPair', E52, E53} -> (fun (V109, V110) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V109, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V104, V110}}))} end(E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47, E48, E49)); {'Idris.Core.CompileExpr.NmCon', E54, E55, E56, E57, E58} -> (fun (V111, V112, V113, V114, V115) -> begin (V116 = ('un--impListExp'(V0, V115, V43))), case V116 of {'Idris.Prelude.Types.Left', E59} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V118) -> case V118 of {'Idris.Builtin.MkPair', E61, E62} -> (fun (V119, V120) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V119, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V112, V114)), V120}}))} end(E61, E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54, E55, E56, E57, E58)); {'Idris.Core.CompileExpr.NmDelay', E63, E64, E65} -> (fun (V121, V122, V123) -> begin (V124 = (('un--impExp'(V0, 0, V123))(V43))), case V124 of {'Idris.Prelude.Types.Left', E66} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V126) -> case V126 of {'Idris.Builtin.MkPair', E68, E69} -> (fun (V127, V128) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V127, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V128}}))} end(E68, E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63, E64, E65)); {'Idris.Core.CompileExpr.NmForce', E70, E71, E72} -> (fun (V129, V130, V131) -> begin (V132 = (('un--impExp'(V0, 0, V131))(V43))), case V132 of {'Idris.Prelude.Types.Left', E73} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V134) -> case V134 of {'Idris.Builtin.MkPair', E75, E76} -> (fun (V135, V136) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V135, {'Idris.Compiler.ES.ImperativeAst.IEForce', V136}}))} end(E75, E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70, E71, E72)); {'Idris.Core.CompileExpr.NmLet', E77, E78, E79, E80} -> (fun (V137, V138, V139, V140) -> begin (V141 = (('un--impExp'(V0, 0, V139))(V43))), case V141 of {'Idris.Prelude.Types.Left', E81} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V143) -> case V143 of {'Idris.Builtin.MkPair', E83, E84} -> (fun (V144, V145) -> begin (V146 = (('un--impExp'(V0, 0, V140))(V43))), case V146 of {'Idris.Prelude.Types.Left', E85} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V148) -> case V148 of {'Idris.Builtin.MkPair', E87, E88} -> (fun (V149, V150) -> case ('un--isNameUsed'(V138, V140)) of 1 -> begin (V151 = ('un--genName'(V0, V43))), case V151 of {'Idris.Prelude.Types.Left', E89} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V153) -> begin (V154 = [{'Idris.Builtin.MkPair', V138, {'Idris.Compiler.ES.ImperativeAst.IEVar', V153}} | []]), begin (V155 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V154, V149))), begin (V156 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExp'(V154, V150))), begin (V157 = {'Idris.Compiler.ES.ImperativeAst.ConstDecl', V153, V145}), {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V144, V157)), V155)), V156}))} end end end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V158 = {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V145}), {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V144, V158)), V149)), V150}))} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83, E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77, E78, E79, E80)); {'Idris.Core.CompileExpr.NmErased', E91} -> (fun (V159) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IENull'}))} end(E91)); {'Idris.Core.CompileExpr.NmCrash', E92, E93} -> (fun (V160, V161) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', V161}, {'Idris.Compiler.ES.ImperativeAst.IENull'}}))} end(E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V162) -> case V2 of {'Idris.Core.CompileExpr.NmConCase', E183, E184, E185, E186} -> (fun (V163, V164, V165, V166) -> begin (V167 = (('un--impExp'(V0, 0, V164))(V162))), case V167 of {'Idris.Prelude.Types.Left', E187} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V169) -> case V169 of {'Idris.Builtin.MkPair', E189, E190} -> (fun (V170, V171) -> begin (V172 = ('un--memoExp'(V0, V171, V162))), case V172 of {'Idris.Prelude.Types.Left', E191} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V174) -> case V174 of {'Idris.Builtin.MkPair', E193, E194} -> (fun (V175, V176) -> begin (V179 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V177) -> fun (V178) -> ('un--impConAltTrue'(V0, V176, V177, V178)) end end, V165, [], V162))), case V179 of {'Idris.Prelude.Types.Left', E195} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V181) -> begin (V183 = case V166 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V163))))}} end()); {'Idris.Prelude.Types.Just', E197} -> (fun (V182) -> (('un--impExp'(V0, 1, V182))(V162)) end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V183 of {'Idris.Prelude.Types.Left', E198} -> (fun (V184) -> {'Idris.Prelude.Types.Left', V184} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V185) -> begin (V186 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', {'Idris.Compiler.ES.ImperativeAst.IEConstructorHead', V176}, V181, {'Idris.Prelude.Types.Just', V185}}), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V170, V175)), V186))} end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E193, E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189, E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183, E184, E185, E186)); {'Idris.Core.CompileExpr.NmConstCase', E200, E201, E202, E203} -> (fun (V187, V188, V189, V190) -> begin (V191 = (('un--impExp'(V0, 0, V188))(V162))), case V191 of {'Idris.Prelude.Types.Left', E204} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V193) -> case V193 of {'Idris.Builtin.MkPair', E206, E207} -> (fun (V194, V195) -> begin (V198 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V196) -> fun (V197) -> ('un--impConstAltTrue'(V0, V196, V197)) end end, V189, [], V162))), case V198 of {'Idris.Prelude.Types.Left', E208} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V200) -> begin (V202 = case V190 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V187))))}} end()); {'Idris.Prelude.Types.Just', E210} -> (fun (V201) -> (('un--impExp'(V0, 1, V201))(V162)) end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V202 of {'Idris.Prelude.Types.Left', E211} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V204) -> begin (V205 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', V195, V200, {'Idris.Prelude.Types.Just', V204}}), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V194, V205))} end end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E206, E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200, E201, E202, E203)); _ -> case V2 of {'Idris.Core.CompileExpr.NmExtPrim', E136, E137, E138} -> (fun (V206, V207, V208) -> begin (V209 = ('un--impListExp'(V0, V208, V162))), case V209 of {'Idris.Prelude.Types.Left', E139} -> (fun (V210) -> {'Idris.Prelude.Types.Left', V210} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V211) -> case V211 of {'Idris.Builtin.MkPair', E141, E142} -> (fun (V212, V213) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V212, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V207, V213}}))} end(E141, E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136, E137, E138)); {'Idris.Core.CompileExpr.NmCon', E143, E144, E145, E146, E147} -> (fun (V214, V215, V216, V217, V218) -> begin (V219 = ('un--impListExp'(V0, V218, V162))), case V219 of {'Idris.Prelude.Types.Left', E148} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V221) -> case V221 of {'Idris.Builtin.MkPair', E150, E151} -> (fun (V222, V223) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V222, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V215, V217)), V223}}))} end(E150, E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143, E144, E145, E146, E147)); {'Idris.Core.CompileExpr.NmDelay', E152, E153, E154} -> (fun (V224, V225, V226) -> begin (V227 = (('un--impExp'(V0, 0, V226))(V162))), case V227 of {'Idris.Prelude.Types.Left', E155} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V229) -> case V229 of {'Idris.Builtin.MkPair', E157, E158} -> (fun (V230, V231) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V230, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V231}}))} end(E157, E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152, E153, E154)); {'Idris.Core.CompileExpr.NmForce', E159, E160, E161} -> (fun (V232, V233, V234) -> begin (V235 = (('un--impExp'(V0, 0, V234))(V162))), case V235 of {'Idris.Prelude.Types.Left', E162} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V237) -> case V237 of {'Idris.Builtin.MkPair', E164, E165} -> (fun (V238, V239) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V238, {'Idris.Compiler.ES.ImperativeAst.IEForce', V239}}))} end(E164, E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159, E160, E161)); {'Idris.Core.CompileExpr.NmLet', E166, E167, E168, E169} -> (fun (V240, V241, V242, V243) -> begin (V244 = (('un--impExp'(V0, 0, V242))(V162))), case V244 of {'Idris.Prelude.Types.Left', E170} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V246) -> case V246 of {'Idris.Builtin.MkPair', E172, E173} -> (fun (V247, V248) -> begin (V249 = (('un--impExp'(V0, 0, V243))(V162))), case V249 of {'Idris.Prelude.Types.Left', E174} -> (fun (V250) -> {'Idris.Prelude.Types.Left', V250} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V251) -> case V251 of {'Idris.Builtin.MkPair', E176, E177} -> (fun (V252, V253) -> case ('un--isNameUsed'(V241, V243)) of 1 -> begin (V254 = ('un--genName'(V0, V162))), case V254 of {'Idris.Prelude.Types.Left', E178} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V256) -> begin (V257 = [{'Idris.Builtin.MkPair', V241, {'Idris.Compiler.ES.ImperativeAst.IEVar', V256}} | []]), begin (V258 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V257, V252))), begin (V259 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExp'(V257, V253))), begin (V260 = {'Idris.Compiler.ES.ImperativeAst.ConstDecl', V256, V248}), {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V247, V260)), V258)), V259}))} end end end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V261 = {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V248}), {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V247, V261)), V252)), V253}))} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E176, E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172, E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166, E167, E168, E169)); {'Idris.Core.CompileExpr.NmErased', E180} -> (fun (V262) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IENull'}))} end(E180)); {'Idris.Core.CompileExpr.NmCrash', E181, E182} -> (fun (V263, V264) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', V264}, {'Idris.Compiler.ES.ImperativeAst.IENull'}}))} end(E181, E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V265) -> case V2 of {'Idris.Core.CompileExpr.NmExtPrim', E0, E1, E2} -> (fun (V266, V267, V268) -> begin (V269 = ('un--impListExp'(V0, V268, V265))), case V269 of {'Idris.Prelude.Types.Left', E3} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V271) -> case V271 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V272, V273) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V272, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V267, V273}}))} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.Core.CompileExpr.NmCon', E7, E8, E9, E10, E11} -> (fun (V274, V275, V276, V277, V278) -> begin (V279 = ('un--impListExp'(V0, V278, V265))), case V279 of {'Idris.Prelude.Types.Left', E12} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V281) -> case V281 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V282, V283) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V282, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V275, V277)), V283}}))} end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8, E9, E10, E11)); {'Idris.Core.CompileExpr.NmDelay', E16, E17, E18} -> (fun (V284, V285, V286) -> begin (V287 = (('un--impExp'(V0, 0, V286))(V265))), case V287 of {'Idris.Prelude.Types.Left', E19} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V289) -> case V289 of {'Idris.Builtin.MkPair', E21, E22} -> (fun (V290, V291) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V290, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V291}}))} end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17, E18)); {'Idris.Core.CompileExpr.NmForce', E23, E24, E25} -> (fun (V292, V293, V294) -> begin (V295 = (('un--impExp'(V0, 0, V294))(V265))), case V295 of {'Idris.Prelude.Types.Left', E26} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V297) -> case V297 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V298, V299) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V298, {'Idris.Compiler.ES.ImperativeAst.IEForce', V299}}))} end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23, E24, E25)); {'Idris.Core.CompileExpr.NmLet', E30, E31, E32, E33} -> (fun (V300, V301, V302, V303) -> begin (V304 = (('un--impExp'(V0, 0, V302))(V265))), case V304 of {'Idris.Prelude.Types.Left', E34} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V306) -> case V306 of {'Idris.Builtin.MkPair', E36, E37} -> (fun (V307, V308) -> begin (V309 = (('un--impExp'(V0, 0, V303))(V265))), case V309 of {'Idris.Prelude.Types.Left', E38} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V311) -> case V311 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V312, V313) -> case ('un--isNameUsed'(V301, V303)) of 1 -> begin (V314 = ('un--genName'(V0, V265))), case V314 of {'Idris.Prelude.Types.Left', E42} -> (fun (V315) -> {'Idris.Prelude.Types.Left', V315} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V316) -> begin (V317 = [{'Idris.Builtin.MkPair', V301, {'Idris.Compiler.ES.ImperativeAst.IEVar', V316}} | []]), begin (V318 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V317, V312))), begin (V319 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExp'(V317, V313))), begin (V320 = {'Idris.Compiler.ES.ImperativeAst.ConstDecl', V316, V308}), {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V307, V320)), V318)), V319}))} end end end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V321 = {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V308}), {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V307, V321)), V312)), V313}))} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30, E31, E32, E33)); {'Idris.Core.CompileExpr.NmErased', E44} -> (fun (V322) -> {'Idris.Prelude.Types.Right', ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IENull'}))} end(E44)); {'Idris.Core.CompileExpr.NmCrash', E45, E46} -> (fun (V323, V324) -> {'Idris.Prelude.Types.Right', ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', V324}, {'Idris.Compiler.ES.ImperativeAst.IENull'}}))} end(E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--impConstAltTrue'(V0, V1, V2) -> case V1 of {'Idris.Core.CompileExpr.MkNConstAlt', E0, E1} -> (fun (V3, V4) -> begin (V5 = (('un--impExp'(V0, 1, V4))(V2))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstant', V3}, V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impConstAltFalse'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.MkNConstAlt', E0, E1} -> (fun (V4, V5) -> begin (V6 = (('un--impExp'(V0, 0, V5))(V3))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstant', V4}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V9, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V1, V10}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impConAltTrue'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.MkNConAlt', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> begin (V9 = (('un--impExp'(V0, 1, V8))(V3))), case V9 of {'Idris.Prelude.Types.Left', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V11) -> begin (V12 = ('un--memoExp'(V0, V1, V3))), case V12 of {'Idris.Prelude.Types.Left', E7} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E9, E10} -> (fun (V15, V16) -> begin (V17 = ('Idris.Idris2.Prelude.Types.List':'un--length'(V7))), begin (V20 = ('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'(fun (V18) -> fun (V19) -> {'Idris.Builtin.MkPair', V19, {'Idris.Compiler.ES.ImperativeAst.IEConstructorArg', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V18)), V16}} end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'((1 + 0), V17)), V7))), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstructorTag', ('un--impTag'(V4, V6))}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V15, ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V20, V11))))}} end end end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impConAltFalse'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.CompileExpr.MkNConAlt', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V10 = (('un--impExp'(V0, 0, V9))(V4))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V13, V14) -> begin (V15 = ('un--memoExp'(V0, V2, V4))), case V15 of {'Idris.Prelude.Types.Left', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E11, E12} -> (fun (V18, V19) -> begin (V20 = ('Idris.Idris2.Prelude.Types.List':'un--length'(V8))), begin (V23 = ('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'(fun (V21) -> fun (V22) -> {'Idris.Builtin.MkPair', V22, {'Idris.Compiler.ES.ImperativeAst.IEConstructorArg', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V21)), V19}} end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'((1 + 0), V20)), V8))), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstructorTag', ('un--impTag'(V5, V7))}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V18, ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V23, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V13, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V1, V14}))))))}} end end end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getImp'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> fun (V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> case V6 of {'Idris.Core.CompileExpr.MkNmFun', E4, E5} -> (fun (V7, V8) -> begin (V9 = (('un--impExp'(V0, 1, V8))(V4))), case V9 of {'Idris.Prelude.Types.Left', E6} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.FunDecl', V5, V2, V7, V11}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); {'Idris.Core.CompileExpr.MkNmError', E8} -> (fun (V12) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_NamedCExp'(V12))}, V4)) end(E8)); {'Idris.Core.CompileExpr.MkNmForeign', E9, E10, E11} -> (fun (V13, V14, V15) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ForeignDecl', V5, V2, V13, V14, V15}} end(E9, E10, E11)); {'Idris.Core.CompileExpr.MkNmCon', E12, E13, E14} -> (fun (V16, V17, V18) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.DoNothing'}} end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--genName'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = V5), begin (V8 = begin (V7 = ('erlang':'put'(V0, ((V6 + 1) rem 9223372036854775808)))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.MN', <<"imp_gen"/utf8>>, V6}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expToReturn'(V0, V1) -> case V0 of 0 -> {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.DoNothing'}, V1}; 1 -> {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileToImperative'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Compiler.Common':'un--getCompileData'(V0, 0, 0, V1, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V11 = case V5 of {'Idris.Compiler.Common.MkCompileData', E2, E3, E4, E5, E6} -> (fun (V6, V7, V8, V9, V10) -> V7 end(E2, E3, E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V17 = ('Idris.Idris2.Core.CompileExpr':'un--forget'([], case V5 of {'Idris.Compiler.Common.MkCompileData', E7, E8, E9, E10, E11} -> (fun (V12, V13, V14, V15, V16) -> V12 end(E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V18 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Compiler.ES.Imperative.Imps'}, 0, V2))), case V18 of {'Idris.Prelude.Types.Left', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V20) -> begin (V22 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V21) -> ('un--getImp'(V20, V21)) end, ('Idris.Idris2.Compiler.ES.RemoveUnused':'un--defsUsedByNamedCExp'(V17, V11)), [], V2))), case V22 of {'Idris.Prelude.Types.Left', E14} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V24) -> begin (V53 = ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V36)) end end, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V40, V41, V42, V43)) end end end end end end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V45)) end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V48, V49, V50)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V51) -> fun (V52) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V51, V52)) end end, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'())}}, V24))), begin (V54 = ('Idris.Idris2.Compiler.ES.TailRec':'un--tailRecOptim'(V53, V2))), case V54 of {'Idris.Prelude.Types.Left', E16} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V56) -> begin (V57 = (('un--impExp'(V20, 0, V17))(V2))), case V57 of {'Idris.Prelude.Types.Left', E18} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V59) -> case V59 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V60, V61) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V56, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V60, {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V61}))}} end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
