-module('Idris.Idris2.Compiler.ES.Imperative').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--compileToImperative-3336'/10,
  'case--impConstAlt-3203'/4,
  'case--impConstAlt-3168'/5,
  'case--impConAlt-3096'/7,
  'case--impConAlt-3025'/8,
  'case--case block in case block in impExp-2901'/13,
  'case--case block in impExp-2876'/10,
  'case--impExp-2850'/7,
  'case--impExp-2820'/6,
  'case--impExp-2788'/6,
  'case--impExp-2754'/7,
  'case--impExp-2724'/6,
  'case--case block in impExp-2669'/9,
  'case--impExp-2629'/6,
  'case--case block in case block in impExp-2587'/12,
  'case--case block in impExp-2530'/10,
  'case--impExp-2473'/6,
  'case--case block in impExp-2417'/9,
  'case--impExp-2377'/6,
  'case--case block in case block in impExp-2335'/12,
  'case--case block in impExp-2278'/10,
  'case--impExp-2221'/6,
  'case--impExp-2187'/7,
  'case--case block in impExp-2143'/9,
  'case--impExp-2119'/6,
  'case--genName-1938'/3,
  'case--isNameUsed-1883'/6,
  'un--pairToReturn'/2,
  'un--isNameUsedConstAlt'/2,
  'un--isNameUsedConAlt'/2,
  'un--isNameUsed'/2,
  'un--impVectExp'/4,
  'un--impTag'/2,
  'un--impListExp'/3,
  'un--impExp'/3,
  'un--impConstAlt'/3,
  'un--impConAlt'/4,
  'un--getImp'/2,
  'un--genName'/2,
  'un--expToReturn'/2,
  'un--compileToImperative'/3
]).
'case--compileToImperative-3336'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V10, {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V11}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impConstAlt-3203'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstant', V2}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V4, {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V5}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impConstAlt-3168'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstant', V3}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V5, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V1, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impConAlt-3096'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> begin (V9 = ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V1))), begin (V12 = ('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'('erased', 'erased', 'erased', fun (V10) -> fun (V11) -> {'Idris.Builtin.MkPair', V11, {'Idris.Compiler.ES.ImperativeAst.IEConstructorArg', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V10)), V4}} end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'((1 + 0), V9)), V1))), fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstructorTag', ('un--impTag'(V3, V2))}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V12, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V7, {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V8}))))}} end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impConAlt-3025'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> begin (V10 = ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V2))), begin (V13 = ('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'('erased', 'erased', 'erased', fun (V11) -> fun (V12) -> {'Idris.Builtin.MkPair', V12, {'Idris.Compiler.ES.ImperativeAst.IEConstructorArg', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V11)), V5}} end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'((1 + 0), V10)), V2))), fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstructorTag', ('un--impTag'(V4, V3))}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V13, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V8, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V0, V9}))))}} end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in impExp-2901'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of 0 -> fun (V13) -> begin (V14 = ('un--genName'(V5, V13))), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = [{'Idris.Builtin.MkPair', V2, {'Idris.Compiler.ES.ImperativeAst.IEVar', V16}} | []]), begin (V18 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V17, V9))), begin (V19 = ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExp'(V17, V10))), begin (V20 = {'Idris.Compiler.ES.ImperativeAst.ConstDecl', V16, V7}), (('un--pairToReturn'(V4, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, V20)), V18)), V19}))(V13)) end end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> begin (V21 = {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V7}), ('un--pairToReturn'(V4, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, V21)), V9)), V10})) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in impExp-2876'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> begin (V12 = {'Idris.Builtin.MkPair', V10, V11}), ('case--case block in case block in impExp-2901'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V10, V11, V12, ('un--isNameUsed'(V2, V0)))) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2850'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> fun (V9) -> begin (V10 = (('un--impExp'(V5, 1, V0))(V9))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = {'Idris.Builtin.MkPair', V7, V8}), case V12 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V14, V15) -> begin (V16 = {'Idris.Builtin.MkPair', V14, V15}), (('case--case block in case block in impExp-2901'(V0, V1, V2, V3, V4, V5, V7, V8, V13, V14, V15, V16, ('un--isNameUsed'(V2, V0))))(V9)) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2820'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> ('un--pairToReturn'(V3, {'Idris.Builtin.MkPair', V6, {'Idris.Compiler.ES.ImperativeAst.IEForce', V7}})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2788'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> ('un--pairToReturn'(V3, {'Idris.Builtin.MkPair', V6, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V7}})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2754'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('un--pairToReturn'(V4, {'Idris.Builtin.MkPair', V7, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V2, V1)), V8}})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2724'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> ('un--pairToReturn'(V3, {'Idris.Builtin.MkPair', V6, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V1, V7}})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in impExp-2669'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> ('un--impExp'(V4, 0, V10)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2629'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V10 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V9) -> ('un--impConstAlt'(V4, {'Idris.Prelude.Types.Nothing'}, V9)) end, V1, []))(V8))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V14 = case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end()); {'Idris.Prelude.Types.Just', E4} -> (fun (V13) -> (('un--impExp'(V4, 0, V13))(V8)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> begin (V17 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', V7, V12, {'Idris.Prelude.Types.Just', V16}}), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, V17))} end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in impExp-2587'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> fun (V14) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V12, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V7, V13}))} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in impExp-2530'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> begin (V13 = (('un--impExp'(V4, 1, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V15) -> case V15 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V16, V17) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V16, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V8, V17}))} end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2473'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = ('un--genName'(V4, V8))), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V13 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V12) -> ('un--impConstAlt'(V4, {'Idris.Prelude.Types.Just', V11}, V12)) end, V1, []))(V8))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V22 = case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V16) -> begin (V17 = (('un--impExp'(V4, 1, V16))(V8))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E9, E10} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V20, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V11, V21}))} end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V22 of {'Idris.Prelude.Types.Left', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V24) -> begin (V25 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', V7, V15, {'Idris.Prelude.Types.Just', V24}}), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, {'Idris.Compiler.ES.ImperativeAst.LetDecl', V11, {'Idris.Prelude.Types.Nothing'}})), V25)), {'Idris.Compiler.ES.ImperativeAst.IEVar', V11}}} end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in impExp-2417'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> ('un--impExp'(V4, 0, V10)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2377'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V10 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V9) -> ('un--impConAlt'(V4, {'Idris.Prelude.Types.Nothing'}, V7, V9)) end, V1, []))(V8))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V14 = case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end()); {'Idris.Prelude.Types.Just', E4} -> (fun (V13) -> (('un--impExp'(V4, 0, V13))(V8)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> begin (V17 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', {'Idris.Compiler.ES.ImperativeAst.IEConstructorHead', V7}, V12, {'Idris.Prelude.Types.Just', V16}}), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, V17))} end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in impExp-2335'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> fun (V14) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V12, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V7, V13}))} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in impExp-2278'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> begin (V13 = (('un--impExp'(V4, 1, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V15) -> case V15 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V16, V17) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V16, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V8, V17}))} end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2221'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = ('un--genName'(V4, V8))), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V13 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V12) -> ('un--impConAlt'(V4, {'Idris.Prelude.Types.Just', V11}, V7, V12)) end, V1, []))(V8))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V22 = case V0 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))))}} end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V16) -> begin (V17 = (('un--impExp'(V4, 1, V16))(V8))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E9, E10} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V20, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V11, V21}))} end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V22 of {'Idris.Prelude.Types.Left', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V24) -> begin (V25 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', {'Idris.Compiler.ES.ImperativeAst.IEConstructorHead', V7}, V15, {'Idris.Prelude.Types.Just', V24}}), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, {'Idris.Compiler.ES.ImperativeAst.LetDecl', V11, {'Idris.Prelude.Types.Nothing'}})), V25)), {'Idris.Compiler.ES.ImperativeAst.IEVar', V11}}} end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2187'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('un--pairToReturn'(V4, {'Idris.Builtin.MkPair', V7, {'Idris.Compiler.ES.ImperativeAst.IEPrimFn', V2, V8}})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in impExp-2143'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> ('un--pairToReturn'(V3, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V5, V9)), {'Idris.Compiler.ES.ImperativeAst.IEApp', V6, V10}})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--impExp-2119'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = ('un--impListExp'(V4, V0, V8))), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> case V11 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V12, V13) -> (('un--pairToReturn'(V3, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V6, V12)), {'Idris.Compiler.ES.ImperativeAst.IEApp', V7, V13}}))(V8)) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--genName-1938'(V0, V1, V2) -> ((V2 + 1) rem 9223372036854775808).
'case--isNameUsed-1883'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('un--isNameUsed'(V4, V1)); 1 -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--isNameUsed'(V4, V1)), fun () -> ('un--isNameUsed'(V4, V0)) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--pairToReturn'(V0, V1) -> case V0 of 1 -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> fun (V4) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> case V1 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V5, {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V6}))} end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isNameUsedConstAlt'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkNConstAlt', E0, E1} -> (fun (V2, V3) -> ('un--isNameUsed'(V0, V3)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isNameUsedConAlt'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkNConAlt', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> ('un--isNameUsed'(V0, V5)) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isNameUsed'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.NmLocal', E0, E1} -> (fun (V2, V3) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3, V0)) end(E0, E1)); {'Idris.Core.CompileExpr.NmRef', E2, E3} -> (fun (V4, V5) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5, V0)) end(E2, E3)); {'Idris.Core.CompileExpr.NmLam', E4, E5, E6} -> (fun (V6, V7, V8) -> ('un--isNameUsed'(V0, V8)) end(E4, E5, E6)); {'Idris.Core.CompileExpr.NmApp', E7, E8, E9} -> (fun (V9, V10, V11) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--isNameUsed'(V0, V10)), fun () -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V23)) end end}, fun (V24) -> ('un--isNameUsed'(V0, V24)) end))(V11)) end)) end(E7, E8, E9)); {'Idris.Core.CompileExpr.NmPrimVal', E10, E11} -> (fun (V25, V26) -> 1 end(E10, E11)); {'Idris.Core.CompileExpr.NmOp', E12, E13, E14, E15} -> (fun (V27, V28, V29, V30) -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'('erased', 'erased', 'erased', V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Data.Vect':'dn--un--foldl_Foldable_(Vect $n)'('erased', 'erased', 'erased', V38, V39, V40)) end end end end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Data.Vect':'dn--un--null_Foldable_(Vect $n)'('erased', 'erased', V42)) end end}, fun (V43) -> ('un--isNameUsed'(V0, V43)) end))(V30)) end(E12, E13, E14, E15)); {'Idris.Core.CompileExpr.NmConCase', E16, E17, E18, E19} -> (fun (V44, V45, V46, V47) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--isNameUsed'(V0, V45)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--||'((('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V55, V56, V57)) end end end end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V59)) end end}, fun (V60) -> ('un--isNameUsedConAlt'(V0, V60)) end))(V46)), fun () -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> 1 end, fun () -> fun (V61) -> ('un--isNameUsed'(V0, V61)) end end, V47)) end)) end)) end(E16, E17, E18, E19)); {'Idris.Core.CompileExpr.NmConstCase', E20, E21, E22, E23} -> (fun (V62, V63, V64, V65) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--isNameUsed'(V0, V63)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--||'((('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V68, V69, V70)) end end end end end, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V73, V74, V75)) end end end end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V77)) end end}, fun (V78) -> ('un--isNameUsedConstAlt'(V0, V78)) end))(V64)), fun () -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> 1 end, fun () -> fun (V79) -> ('un--isNameUsed'(V0, V79)) end end, V65)) end)) end)) end(E20, E21, E22, E23)); {'Idris.Core.CompileExpr.NmExtPrim', E24, E25, E26} -> (fun (V80, V81, V82) -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V85, V86, V87)) end end end end end, fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V90, V91, V92)) end end end end end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V94)) end end}, fun (V95) -> ('un--isNameUsed'(V0, V95)) end))(V82)) end(E24, E25, E26)); {'Idris.Core.CompileExpr.NmCon', E27, E28, E29, E30} -> (fun (V96, V97, V98, V99) -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V102, V103, V104)) end end end end end, fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V107, V108, V109)) end end end end end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V111)) end end}, fun (V112) -> ('un--isNameUsed'(V0, V112)) end))(V99)) end(E27, E28, E29, E30)); {'Idris.Core.CompileExpr.NmDelay', E31, E32, E33} -> (fun (V113, V114, V115) -> ('un--isNameUsed'(V0, V115)) end(E31, E32, E33)); {'Idris.Core.CompileExpr.NmForce', E34, E35, E36} -> (fun (V116, V117, V118) -> ('un--isNameUsed'(V0, V118)) end(E34, E35, E36)); {'Idris.Core.CompileExpr.NmLet', E37, E38, E39, E40} -> (fun (V119, V120, V121, V122) -> ('case--isNameUsed-1883'(V122, V121, V120, V119, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V120, V0)))) end(E37, E38, E39, E40)); {'Idris.Core.CompileExpr.NmErased', E41} -> (fun (V123) -> 1 end(E41)); {'Idris.Core.CompileExpr.NmCrash', E42, E43} -> (fun (V124, V125) -> 1 end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impVectExp'(V0, V1, V2, V3) -> begin (V5 = (('Idris.Idris2.Core.Core':'un--traverseVect'('erased', 'erased', 'erased', fun (V4) -> ('un--impExp'(V1, 1, V4)) end, V2))(V3))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'('erased', 'erased', 'erased', V11, V12, V13)) end end end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Data.Vect':'dn--un--foldl_Foldable_(Vect $n)'('erased', 'erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Data.Vect':'dn--un--null_Foldable_(Vect $n)'('erased', 'erased', V20)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V21) -> fun (V22) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V21, V22)) end end, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'())}}))(('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'('erased', 'erased', 'erased', fun (V8) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V8)) end, V7)))), ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'('erased', 'erased', 'erased', fun (V23) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V23)) end, V7))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--impTag'(V0, V1) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> {'Idris.Prelude.Types.Left', V2} end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impListExp'(V0, V1, V2) -> begin (V4 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V3) -> ('un--impExp'(V0, 1, V3)) end, V1, []))(V2))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V15, V16, V17)) end end end end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V19)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V20) -> fun (V21) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V20, V21)) end end, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'())}}))(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V7) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7)) end, V6)))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V22) -> ('Idris.Idris2.Builtin':'un--snd'('erased', 'erased', V22)) end, V6))}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--impExp'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.NmLocal', E196, E197} -> (fun (V3, V4) -> ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IEVar', V4})) end(E196, E197)); {'Idris.Core.CompileExpr.NmRef', E198, E199} -> (fun (V5, V6) -> ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IEVar', V6})) end(E198, E199)); {'Idris.Core.CompileExpr.NmLam', E200, E201, E202} -> (fun (V7, V8, V9) -> fun (V10) -> begin (V11 = (('un--impExp'(V0, 0, V9))(V10))), case V11 of {'Idris.Prelude.Types.Left', E203} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V13) -> (('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IELambda', [V8 | []], V13}))(V10)) end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E200, E201, E202)); {'Idris.Core.CompileExpr.NmApp', E205, E206, E207} -> (fun (V14, V15, V16) -> fun (V17) -> begin (V18 = (('un--impExp'(V0, 1, V15))(V17))), case V18 of {'Idris.Prelude.Types.Left', E208} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V20) -> case V20 of {'Idris.Builtin.MkPair', E210, E211} -> (fun (V21, V22) -> begin (V23 = ('un--impListExp'(V0, V16, V17))), case V23 of {'Idris.Prelude.Types.Left', E212} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E212)); {'Idris.Prelude.Types.Right', E213} -> (fun (V25) -> case V25 of {'Idris.Builtin.MkPair', E214, E215} -> (fun (V26, V27) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V21, V26)), {'Idris.Compiler.ES.ImperativeAst.IEApp', V22, V27}}))(V17)) end(E214, E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E210, E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E205, E206, E207)); {'Idris.Core.CompileExpr.NmPrimVal', E216, E217} -> (fun (V28, V29) -> ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IEConstant', V29})) end(E216, E217)); {'Idris.Core.CompileExpr.NmOp', E218, E219, E220, E221} -> (fun (V30, V31, V32, V33) -> fun (V34) -> begin (V35 = ('un--impVectExp'('erased', V0, V33, V34))), case V35 of {'Idris.Prelude.Types.Left', E222} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V37) -> case V37 of {'Idris.Builtin.MkPair', E224, E225} -> (fun (V38, V39) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V38, {'Idris.Compiler.ES.ImperativeAst.IEPrimFn', V32, V39}}))(V34)) end(E224, E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E218, E219, E220, E221)); _ -> case V1 of 1 -> case V2 of {'Idris.Core.CompileExpr.NmConCase', E88, E89, E90, E91} -> (fun (V40, V41, V42, V43) -> fun (V44) -> begin (V45 = (('un--impExp'(V0, 1, V41))(V44))), case V45 of {'Idris.Prelude.Types.Left', E92} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V47) -> case V47 of {'Idris.Builtin.MkPair', E94, E95} -> (fun (V48, V49) -> begin (V50 = ('un--genName'(V0, V44))), case V50 of {'Idris.Prelude.Types.Left', E96} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V52) -> begin (V54 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V53) -> ('un--impConAlt'(V0, {'Idris.Prelude.Types.Just', V52}, V49, V53)) end, V42, []))(V44))), case V54 of {'Idris.Prelude.Types.Left', E98} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V56) -> begin (V63 = case V43 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V40))))}} end()); {'Idris.Prelude.Types.Just', E100} -> (fun (V57) -> begin (V58 = (('un--impExp'(V0, 1, V57))(V44))), case V58 of {'Idris.Prelude.Types.Left', E101} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V60) -> case V60 of {'Idris.Builtin.MkPair', E103, E104} -> (fun (V61, V62) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V61, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V52, V62}))} end(E103, E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V63 of {'Idris.Prelude.Types.Left', E105} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V65) -> begin (V66 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', {'Idris.Compiler.ES.ImperativeAst.IEConstructorHead', V49}, V56, {'Idris.Prelude.Types.Just', V65}}), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V48, {'Idris.Compiler.ES.ImperativeAst.LetDecl', V52, {'Idris.Prelude.Types.Nothing'}})), V66)), {'Idris.Compiler.ES.ImperativeAst.IEVar', V52}}} end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94, E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E88, E89, E90, E91)); {'Idris.Core.CompileExpr.NmConstCase', E107, E108, E109, E110} -> (fun (V67, V68, V69, V70) -> fun (V71) -> begin (V72 = (('un--impExp'(V0, 1, V68))(V71))), case V72 of {'Idris.Prelude.Types.Left', E111} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V74) -> case V74 of {'Idris.Builtin.MkPair', E113, E114} -> (fun (V75, V76) -> begin (V77 = ('un--genName'(V0, V71))), case V77 of {'Idris.Prelude.Types.Left', E115} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V79) -> begin (V81 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V80) -> ('un--impConstAlt'(V0, {'Idris.Prelude.Types.Just', V79}, V80)) end, V69, []))(V71))), case V81 of {'Idris.Prelude.Types.Left', E117} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V83) -> begin (V90 = case V70 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V67))))}} end()); {'Idris.Prelude.Types.Just', E119} -> (fun (V84) -> begin (V85 = (('un--impExp'(V0, 1, V84))(V71))), case V85 of {'Idris.Prelude.Types.Left', E120} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V87) -> case V87 of {'Idris.Builtin.MkPair', E122, E123} -> (fun (V88, V89) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V88, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V79, V89}))} end(E122, E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V90 of {'Idris.Prelude.Types.Left', E124} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V92) -> begin (V93 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', V76, V83, {'Idris.Prelude.Types.Just', V92}}), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V75, {'Idris.Compiler.ES.ImperativeAst.LetDecl', V79, {'Idris.Prelude.Types.Nothing'}})), V93)), {'Idris.Compiler.ES.ImperativeAst.IEVar', V79}}} end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113, E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E107, E108, E109, E110)); _ -> case V2 of {'Idris.Core.CompileExpr.NmExtPrim', E44, E45, E46} -> (fun (V94, V95, V96) -> fun (V97) -> begin (V98 = ('un--impListExp'(V0, V96, V97))), case V98 of {'Idris.Prelude.Types.Left', E47} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V100) -> case V100 of {'Idris.Builtin.MkPair', E49, E50} -> (fun (V101, V102) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V101, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V95, V102}}))(V97)) end(E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E44, E45, E46)); {'Idris.Core.CompileExpr.NmCon', E51, E52, E53, E54} -> (fun (V103, V104, V105, V106) -> fun (V107) -> begin (V108 = ('un--impListExp'(V0, V106, V107))), case V108 of {'Idris.Prelude.Types.Left', E55} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V110) -> case V110 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V111, V112) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V111, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V104, V105)), V112}}))(V107)) end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E51, E52, E53, E54)); {'Idris.Core.CompileExpr.NmDelay', E59, E60, E61} -> (fun (V113, V114, V115) -> fun (V116) -> begin (V117 = (('un--impExp'(V0, 1, V115))(V116))), case V117 of {'Idris.Prelude.Types.Left', E62} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V119) -> case V119 of {'Idris.Builtin.MkPair', E64, E65} -> (fun (V120, V121) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V120, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V121}}))(V116)) end(E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59, E60, E61)); {'Idris.Core.CompileExpr.NmForce', E66, E67, E68} -> (fun (V122, V123, V124) -> fun (V125) -> begin (V126 = (('un--impExp'(V0, 1, V124))(V125))), case V126 of {'Idris.Prelude.Types.Left', E69} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V128) -> case V128 of {'Idris.Builtin.MkPair', E71, E72} -> (fun (V129, V130) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V129, {'Idris.Compiler.ES.ImperativeAst.IEForce', V130}}))(V125)) end(E71, E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E66, E67, E68)); {'Idris.Core.CompileExpr.NmLet', E73, E74, E75, E76} -> (fun (V131, V132, V133, V134) -> fun (V135) -> begin (V136 = (('un--impExp'(V0, 1, V133))(V135))), case V136 of {'Idris.Prelude.Types.Left', E77} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V138) -> case V138 of {'Idris.Builtin.MkPair', E79, E80} -> (fun (V139, V140) -> begin (V141 = (('un--impExp'(V0, 1, V134))(V135))), case V141 of {'Idris.Prelude.Types.Left', E81} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V143) -> begin (V144 = {'Idris.Builtin.MkPair', V139, V140}), case V143 of {'Idris.Builtin.MkPair', E83, E84} -> (fun (V145, V146) -> begin (V147 = {'Idris.Builtin.MkPair', V145, V146}), (('case--case block in case block in impExp-2901'(V134, V133, V132, V131, V1, V0, V139, V140, V144, V145, V146, V147, ('un--isNameUsed'(V132, V134))))(V135)) end end(E83, E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79, E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E73, E74, E75, E76)); {'Idris.Core.CompileExpr.NmErased', E85} -> (fun (V148) -> ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IENull'})) end(E85)); {'Idris.Core.CompileExpr.NmCrash', E86, E87} -> (fun (V149, V150) -> ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', V150}, {'Idris.Compiler.ES.ImperativeAst.IENull'}})) end(E86, E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> case V2 of {'Idris.Core.CompileExpr.NmConCase', E170, E171, E172, E173} -> (fun (V151, V152, V153, V154) -> fun (V155) -> begin (V156 = (('un--impExp'(V0, 1, V152))(V155))), case V156 of {'Idris.Prelude.Types.Left', E174} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V158) -> case V158 of {'Idris.Builtin.MkPair', E176, E177} -> (fun (V159, V160) -> begin (V162 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V161) -> ('un--impConAlt'(V0, {'Idris.Prelude.Types.Nothing'}, V160, V161)) end, V153, []))(V155))), case V162 of {'Idris.Prelude.Types.Left', E178} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V164) -> begin (V166 = case V154 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled con case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V151))))}} end()); {'Idris.Prelude.Types.Just', E180} -> (fun (V165) -> (('un--impExp'(V0, 0, V165))(V155)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V166 of {'Idris.Prelude.Types.Left', E181} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V168) -> begin (V169 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', {'Idris.Compiler.ES.ImperativeAst.IEConstructorHead', V160}, V164, {'Idris.Prelude.Types.Just', V168}}), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V159, V169))} end end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176, E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E170, E171, E172, E173)); {'Idris.Core.CompileExpr.NmConstCase', E183, E184, E185, E186} -> (fun (V170, V171, V172, V173) -> fun (V174) -> begin (V175 = (('un--impExp'(V0, 1, V171))(V174))), case V175 of {'Idris.Prelude.Types.Left', E187} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V177) -> case V177 of {'Idris.Builtin.MkPair', E189, E190} -> (fun (V178, V179) -> begin (V181 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V180) -> ('un--impConstAlt'(V0, {'Idris.Prelude.Types.Nothing'}, V180)) end, V172, []))(V174))), case V181 of {'Idris.Prelude.Types.Left', E191} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V183) -> begin (V185 = case V173 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"unhandled const case on "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V170))))}} end()); {'Idris.Prelude.Types.Just', E193} -> (fun (V184) -> (('un--impExp'(V0, 0, V184))(V174)) end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V185 of {'Idris.Prelude.Types.Left', E194} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V187) -> begin (V188 = {'Idris.Compiler.ES.ImperativeAst.SwitchStatement', V179, V183, {'Idris.Prelude.Types.Just', V187}}), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V178, V188))} end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189, E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E183, E184, E185, E186)); _ -> case V2 of {'Idris.Core.CompileExpr.NmExtPrim', E126, E127, E128} -> (fun (V189, V190, V191) -> fun (V192) -> begin (V193 = ('un--impListExp'(V0, V191, V192))), case V193 of {'Idris.Prelude.Types.Left', E129} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V195) -> case V195 of {'Idris.Builtin.MkPair', E131, E132} -> (fun (V196, V197) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V196, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V190, V197}}))(V192)) end(E131, E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E126, E127, E128)); {'Idris.Core.CompileExpr.NmCon', E133, E134, E135, E136} -> (fun (V198, V199, V200, V201) -> fun (V202) -> begin (V203 = ('un--impListExp'(V0, V201, V202))), case V203 of {'Idris.Prelude.Types.Left', E137} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V205) -> case V205 of {'Idris.Builtin.MkPair', E139, E140} -> (fun (V206, V207) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V206, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V199, V200)), V207}}))(V202)) end(E139, E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E133, E134, E135, E136)); {'Idris.Core.CompileExpr.NmDelay', E141, E142, E143} -> (fun (V208, V209, V210) -> fun (V211) -> begin (V212 = (('un--impExp'(V0, 1, V210))(V211))), case V212 of {'Idris.Prelude.Types.Left', E144} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V214) -> case V214 of {'Idris.Builtin.MkPair', E146, E147} -> (fun (V215, V216) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V215, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V216}}))(V211)) end(E146, E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E141, E142, E143)); {'Idris.Core.CompileExpr.NmForce', E148, E149, E150} -> (fun (V217, V218, V219) -> fun (V220) -> begin (V221 = (('un--impExp'(V0, 1, V219))(V220))), case V221 of {'Idris.Prelude.Types.Left', E151} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V223) -> case V223 of {'Idris.Builtin.MkPair', E153, E154} -> (fun (V224, V225) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V224, {'Idris.Compiler.ES.ImperativeAst.IEForce', V225}}))(V220)) end(E153, E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E148, E149, E150)); {'Idris.Core.CompileExpr.NmLet', E155, E156, E157, E158} -> (fun (V226, V227, V228, V229) -> fun (V230) -> begin (V231 = (('un--impExp'(V0, 1, V228))(V230))), case V231 of {'Idris.Prelude.Types.Left', E159} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V233) -> case V233 of {'Idris.Builtin.MkPair', E161, E162} -> (fun (V234, V235) -> begin (V236 = (('un--impExp'(V0, 1, V229))(V230))), case V236 of {'Idris.Prelude.Types.Left', E163} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V238) -> begin (V239 = {'Idris.Builtin.MkPair', V234, V235}), case V238 of {'Idris.Builtin.MkPair', E165, E166} -> (fun (V240, V241) -> begin (V242 = {'Idris.Builtin.MkPair', V240, V241}), (('case--case block in case block in impExp-2901'(V229, V228, V227, V226, V1, V0, V234, V235, V239, V240, V241, V242, ('un--isNameUsed'(V227, V229))))(V230)) end end(E165, E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161, E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E155, E156, E157, E158)); {'Idris.Core.CompileExpr.NmErased', E167} -> (fun (V243) -> ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IENull'})) end(E167)); {'Idris.Core.CompileExpr.NmCrash', E168, E169} -> (fun (V244, V245) -> ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', V245}, {'Idris.Compiler.ES.ImperativeAst.IENull'}})) end(E168, E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V2 of {'Idris.Core.CompileExpr.NmExtPrim', E0, E1, E2} -> (fun (V246, V247, V248) -> fun (V249) -> begin (V250 = ('un--impListExp'(V0, V248, V249))), case V250 of {'Idris.Prelude.Types.Left', E3} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V252) -> case V252 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V253, V254) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V253, {'Idris.Compiler.ES.ImperativeAst.IEPrimFnExt', V247, V254}}))(V249)) end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.Core.CompileExpr.NmCon', E7, E8, E9, E10} -> (fun (V255, V256, V257, V258) -> fun (V259) -> begin (V260 = ('un--impListExp'(V0, V258, V259))), case V260 of {'Idris.Prelude.Types.Left', E11} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V262) -> case V262 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V263, V264) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V263, {'Idris.Compiler.ES.ImperativeAst.IEConstructor', ('un--impTag'(V256, V257)), V264}}))(V259)) end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8, E9, E10)); {'Idris.Core.CompileExpr.NmDelay', E15, E16, E17} -> (fun (V265, V266, V267) -> fun (V268) -> begin (V269 = (('un--impExp'(V0, 1, V267))(V268))), case V269 of {'Idris.Prelude.Types.Left', E18} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V271) -> case V271 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V272, V273) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V272, {'Idris.Compiler.ES.ImperativeAst.IEDelay', V273}}))(V268)) end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); {'Idris.Core.CompileExpr.NmForce', E22, E23, E24} -> (fun (V274, V275, V276) -> fun (V277) -> begin (V278 = (('un--impExp'(V0, 1, V276))(V277))), case V278 of {'Idris.Prelude.Types.Left', E25} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V280) -> case V280 of {'Idris.Builtin.MkPair', E27, E28} -> (fun (V281, V282) -> (('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', V281, {'Idris.Compiler.ES.ImperativeAst.IEForce', V282}}))(V277)) end(E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24)); {'Idris.Core.CompileExpr.NmLet', E29, E30, E31, E32} -> (fun (V283, V284, V285, V286) -> fun (V287) -> begin (V288 = (('un--impExp'(V0, 1, V285))(V287))), case V288 of {'Idris.Prelude.Types.Left', E33} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V290) -> case V290 of {'Idris.Builtin.MkPair', E35, E36} -> (fun (V291, V292) -> begin (V293 = (('un--impExp'(V0, 1, V286))(V287))), case V293 of {'Idris.Prelude.Types.Left', E37} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V295) -> begin (V296 = {'Idris.Builtin.MkPair', V291, V292}), case V295 of {'Idris.Builtin.MkPair', E39, E40} -> (fun (V297, V298) -> begin (V299 = {'Idris.Builtin.MkPair', V297, V298}), (('case--case block in case block in impExp-2901'(V286, V285, V284, V283, V1, V0, V291, V292, V296, V297, V298, V299, ('un--isNameUsed'(V284, V286))))(V287)) end end(E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E29, E30, E31, E32)); {'Idris.Core.CompileExpr.NmErased', E41} -> (fun (V300) -> ('un--expToReturn'(V1, {'Idris.Compiler.ES.ImperativeAst.IENull'})) end(E41)); {'Idris.Core.CompileExpr.NmCrash', E42, E43} -> (fun (V301, V302) -> ('un--pairToReturn'(V1, {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.ErrorStatement', V302}, {'Idris.Compiler.ES.ImperativeAst.IENull'}})) end(E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--impConstAlt'(V0, V1, V2) -> case V1 of {'Idris.Prelude.Types.Just', E0} -> (fun (V3) -> case V2 of {'Idris.Core.CompileExpr.MkNConstAlt', E1, E2} -> (fun (V4, V5) -> fun (V6) -> begin (V7 = (('un--impExp'(V0, 1, V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V10, V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstant', V4}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V10, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V3, V11}))}} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.Core.CompileExpr.MkNConstAlt', E7, E8} -> (fun (V12, V13) -> fun (V14) -> begin (V15 = (('un--impExp'(V0, 1, V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E11, E12} -> (fun (V18, V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstant', V12}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V18, {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V19}))}} end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--impConAlt'(V0, V1, V2, V3) -> case V1 of {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> case V3 of {'Idris.Core.CompileExpr.MkNConAlt', E1, E2, E3, E4} -> (fun (V5, V6, V7, V8) -> fun (V9) -> begin (V10 = (('un--impExp'(V0, 1, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V7))), begin (V18 = ('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'('erased', 'erased', 'erased', fun (V16) -> fun (V17) -> {'Idris.Builtin.MkPair', V17, {'Idris.Compiler.ES.ImperativeAst.IEConstructorArg', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V16)), V2}} end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'((1 + 0), V15)), V7))), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstructorTag', ('un--impTag'(V5, V6))}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V18, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V13, {'Idris.Compiler.ES.ImperativeAst.MutateStatement', V4, V14}))))}} end end end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V3 of {'Idris.Core.CompileExpr.MkNConAlt', E9, E10, E11, E12} -> (fun (V19, V20, V21, V22) -> fun (V23) -> begin (V24 = (('un--impExp'(V0, 1, V22))(V23))), case V24 of {'Idris.Prelude.Types.Left', E13} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V26) -> case V26 of {'Idris.Builtin.MkPair', E15, E16} -> (fun (V27, V28) -> begin (V29 = ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V21))), begin (V32 = ('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'('erased', 'erased', 'erased', fun (V30) -> fun (V31) -> {'Idris.Builtin.MkPair', V31, {'Idris.Compiler.ES.ImperativeAst.IEConstructorArg', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V30)), V2}} end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'((1 + 0), V29)), V21))), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.IEConstructorTag', ('un--impTag'(V19, V20))}, ('Idris.Idris2.Compiler.ES.ImperativeAst':'un--replaceNamesExpS'(V32, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V27, {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V28}))))}} end end end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getImp'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> case V5 of {'Idris.Core.CompileExpr.MkNmFun', E4, E5} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = (('un--impExp'(V0, 0, V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E6} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.FunDecl', V4, V2, V6, V11}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); {'Idris.Core.CompileExpr.MkNmError', E8} -> (fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_NamedCExp'(V12))}, V13)) end end(E8)); {'Idris.Core.CompileExpr.MkNmForeign', E9, E10, E11} -> (fun (V14, V15, V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ForeignDecl', V4, V2, V14, V15, V16}} end end(E9, E10, E11)); {'Idris.Core.CompileExpr.MkNmCon', E12, E13, E14} -> (fun (V18, V19, V20) -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.DoNothing'}} end end(E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--genName'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = V5), begin (V8 = begin (V7 = ('erlang':'put'(V0, ((V6 + 1) rem 9223372036854775808)))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.MN', <<"imp_gen"/utf8>>, V6}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expToReturn'(V0, V1) -> case V0 of 1 -> fun (V2) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Compiler.ES.ImperativeAst.DoNothing'}, V1}} end; 0 -> fun (V3) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.ES.ImperativeAst.ReturnStatement', V1}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileToImperative'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Compiler.Common':'un--getCompileData'(V0, 1, {'Idris.Compiler.Common.Cases'}, V1, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V11 = case V5 of {'Idris.Compiler.Common.MkCompileData', E2, E3, E4, E5, E6} -> (fun (V6, V7, V8, V9, V10) -> V7 end(E2, E3, E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V17 = ('Idris.Idris2.Core.CompileExpr':'un--forget'([], case V5 of {'Idris.Compiler.Common.MkCompileData', E7, E8, E9, E10, E11} -> (fun (V12, V13, V14, V15, V16) -> V12 end(E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V18 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Compiler.ES.Imperative.Imps'}, 0, V2))), case V18 of {'Idris.Prelude.Types.Left', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V20) -> begin (V22 = (('Idris.Idris2.Core.Core':'un--traverse\x{27}'('erased', 'erased', fun (V21) -> ('un--getImp'(V20, V21)) end, ('Idris.Idris2.Compiler.ES.RemoveUnused':'un--defsUsedByNamedCExp'(V17, V11)), []))(V2))), case V22 of {'Idris.Prelude.Types.Left', E14} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V24) -> begin (V39 = (('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V36)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V37) -> fun (V38) -> ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V37, V38)) end end, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--neutral_Monoid_ImperativeStatement'())}}))(V24))), begin (V40 = ('Idris.Idris2.Compiler.ES.TailRec':'un--tailRecOptim'(V39, V2))), case V40 of {'Idris.Prelude.Types.Left', E16} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V42) -> begin (V43 = (('un--impExp'(V20, 1, V17))(V2))), case V43 of {'Idris.Prelude.Types.Left', E18} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V45) -> case V45 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V46, V47) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V42, ('Idris.Idris2.Compiler.ES.ImperativeAst':'dn--un--<+>_Semigroup_ImperativeStatement'(V46, {'Idris.Compiler.ES.ImperativeAst.EvalExpStatement', V47}))}} end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
