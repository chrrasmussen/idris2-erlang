-module('Idris.Idris2.TTImp.TTImp').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--logRaw-6819'/8,
  'case--fromBuf-6533'/2,
  'case--fromBuf-6181'/2,
  'case--fromBuf-5809'/2,
  'case--fromBuf-5683'/2,
  'case--fromBuf-5537'/2,
  'case--fromBuf-5353'/2,
  'case--fromBuf-5277'/2,
  'case--fromBuf-5186'/2,
  'case--fromBuf-4321'/2,
  'case--case block in definedInBlock,expandNS-3278'/4,
  'case--definedInBlock,expandNS-3257'/5,
  'case--implicitsAs,setAs-3067'/10,
  'case--implicitsAs,setAs,findImps-2897'/20,
  'case--implicitsAs,setAs,findImps-2767'/19,
  'case--case block in implicitsAs,setAs,findImps-2654'/19,
  'case--implicitsAs,setAs,findImps-2567'/18,
  'case--implicitsAs,setAs,updateNs-2438'/13,
  'case--lhsInCurrentNS-2187'/6,
  'case--show-2059'/2,
  'case--weakenNs-595'/5,
  'nested--9408-628--in--un--wknName'/4,
  'nested--11304-2414--in--un--updateNs'/11,
  'nested--12255-3418--in--un--toRF'/12,
  'nested--11297-2359--in--un--setAs'/8,
  'nested--11304-2416--in--un--impAs'/12,
  'nested--12249-3227--in--un--getName'/3,
  'nested--12249-3228--in--un--getFieldName'/3,
  'nested--12255-3419--in--un--fnsUN'/11,
  'nested--12255-3420--in--un--fnsRF'/11,
  'nested--12255-3417--in--un--fldns\x{27}'/11,
  'nested--11304-2415--in--un--findImps'/13,
  'nested--12249-3229--in--un--expandNS'/4,
  'nested--12249-3230--in--un--defName'/4,
  'nested--12684-3659--in--un--app'/6,
  'nested--12255-3421--in--un--all'/11,
  'dn--un--weaken_Weaken_NestedNames'/3,
  'dn--un--weakenNs_Weaken_NestedNames'/4,
  'dn--un--toBuf_TTC_RawImp'/2,
  'dn--un--toBuf_TTC_ImpTy'/2,
  'dn--un--toBuf_TTC_ImpRecord'/2,
  'dn--un--toBuf_TTC_ImpDecl'/2,
  'dn--un--toBuf_TTC_ImpData'/2,
  'dn--un--toBuf_TTC_ImpClause'/2,
  'dn--un--toBuf_TTC_IFieldUpdate'/2,
  'dn--un--toBuf_TTC_IField'/2,
  'dn--un--toBuf_TTC_FnOpt'/2,
  'dn--un--toBuf_TTC_DataOpt'/2,
  'dn--un--toBuf_TTC_BindMode'/2,
  'dn--un--toBuf_TTC_AltType'/2,
  'dn--un--show_Show_RawImp'/1,
  'dn--un--show_Show_ImpTy'/1,
  'dn--un--show_Show_ImpRecord'/1,
  'dn--un--show_Show_ImpDecl'/1,
  'dn--un--show_Show_ImpData'/1,
  'dn--un--show_Show_ImpClause'/1,
  'dn--un--show_Show_IFieldUpdate'/1,
  'dn--un--show_Show_IField'/1,
  'dn--un--show_Show_FnOpt'/1,
  'dn--un--showPrec_Show_RawImp'/2,
  'dn--un--showPrec_Show_ImpTy'/2,
  'dn--un--showPrec_Show_ImpRecord'/2,
  'dn--un--showPrec_Show_ImpDecl'/2,
  'dn--un--showPrec_Show_ImpData'/2,
  'dn--un--showPrec_Show_ImpClause'/2,
  'dn--un--showPrec_Show_IFieldUpdate'/2,
  'dn--un--showPrec_Show_IField'/2,
  'dn--un--showPrec_Show_FnOpt'/2,
  'dn--un--fromBuf_TTC_RawImp'/2,
  'dn--un--fromBuf_TTC_ImpTy'/2,
  'dn--un--fromBuf_TTC_ImpRecord'/2,
  'dn--un--fromBuf_TTC_ImpDecl'/2,
  'dn--un--fromBuf_TTC_ImpData'/2,
  'dn--un--fromBuf_TTC_ImpClause'/2,
  'dn--un--fromBuf_TTC_IFieldUpdate'/2,
  'dn--un--fromBuf_TTC_IField'/2,
  'dn--un--fromBuf_TTC_FnOpt'/2,
  'dn--un--fromBuf_TTC_DataOpt'/2,
  'dn--un--fromBuf_TTC_BindMode'/2,
  'dn--un--fromBuf_TTC_AltType'/2,
  'dn--un--__Impl_Weaken_NestedNames'/0,
  'dn--un--__Impl_TTC_RawImp'/0,
  'dn--un--__Impl_TTC_ImpTy'/0,
  'dn--un--__Impl_TTC_ImpRecord'/0,
  'dn--un--__Impl_TTC_ImpDecl'/0,
  'dn--un--__Impl_TTC_ImpData'/0,
  'dn--un--__Impl_TTC_ImpClause'/0,
  'dn--un--__Impl_TTC_IFieldUpdate'/0,
  'dn--un--__Impl_TTC_IField'/0,
  'dn--un--__Impl_TTC_FnOpt'/0,
  'dn--un--__Impl_TTC_DataOpt'/0,
  'dn--un--__Impl_TTC_BindMode'/0,
  'dn--un--__Impl_TTC_AltType'/0,
  'dn--un--__Impl_Show_RawImp'/0,
  'dn--un--__Impl_Show_ImpTy'/0,
  'dn--un--__Impl_Show_ImpRecord'/0,
  'dn--un--__Impl_Show_ImpDecl'/0,
  'dn--un--__Impl_Show_ImpData'/0,
  'dn--un--__Impl_Show_ImpClause'/0,
  'dn--un--__Impl_Show_IFieldUpdate'/0,
  'dn--un--__Impl_Show_IField'/0,
  'dn--un--__Impl_Show_FnOpt'/0,
  'dn--un--__Impl_Eq_WithFlag'/0,
  'dn--un--__Impl_Eq_FnOpt'/0,
  'dn--un--__Impl_Eq_DataOpt'/0,
  'dn--un--==_Eq_WithFlag'/2,
  'dn--un--==_Eq_FnOpt'/2,
  'dn--un--==_Eq_DataOpt'/2,
  'dn--un--/=_Eq_WithFlag'/2,
  'dn--un--/=_Eq_FnOpt'/2,
  'dn--un--/=_Eq_DataOpt'/2,
  'un--mapAltType'/2,
  'un--logRaw'/6,
  'un--lhsInCurrentNS'/4,
  'un--isTotalityReq'/1,
  'un--isIPrimVal'/1,
  'un--implicitsAs'/5,
  'un--getFn'/1,
  'un--getFC'/1,
  'un--gapply'/2,
  'un--findImplicits'/1,
  'un--findIBinds'/1,
  'un--definedInBlock'/2,
  'un--apply'/2
]).
'case--logRaw-6819'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> fun (V8) -> begin (V36 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V11, V12, V13)) end end end end end, fun (V14) -> fun (V15) -> fun (V16) -> V15 end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> begin (V22 = (V19(V21))), begin (V23 = (V20(V21))), (V22(V23)) end end end end end end end}, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), ((V27(V29))(V28)) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V31(V32))), (V33(V32)) end end end end}, fun (V34) -> fun (V35) -> V35 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"LOG "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Options.Log':'dn--un--show_Show_LogLevel'(V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'((V1()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('dn--un--show_Show_RawImp'(V0))))))))))))))(V8))), {'Idris.Prelude.Types.Right', V36} end end; 1 -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--fromBuf-6533'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V3 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V2))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> begin (V9 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Visibility'(V0, V2))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> begin (V16 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V12) -> fun (V13) -> ('dn--un--toBuf_TTC_FnOpt'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('dn--un--fromBuf_TTC_FnOpt'(V14, V15)) end end}, V0, V2))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V19 = ('dn--un--fromBuf_TTC_ImpTy'(V0, V2))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V5, V8, V11, V18, V21}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V22) -> begin (V23 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V22))), case V23 of {'Idris.Prelude.Types.Left', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Visibility'(V0, V22))), case V26 of {'Idris.Prelude.Types.Left', E12} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V28) -> begin (V29 = ('dn--un--fromBuf_TTC_ImpData'(V0, V22))), case V29 of {'Idris.Prelude.Types.Left', E14} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V25, V28, V31}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 2 -> fun (V32) -> begin (V33 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V32))), case V33 of {'Idris.Prelude.Types.Left', E16} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V35) -> begin (V36 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V32))), case V36 of {'Idris.Prelude.Types.Left', E18} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V38) -> begin (V43 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('dn--un--toBuf_TTC_ImpClause'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('dn--un--fromBuf_TTC_ImpClause'(V41, V42)) end end}, V0, V32))), case V43 of {'Idris.Prelude.Types.Left', E20} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V35, V38, V45}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 3 -> fun (V46) -> begin (V47 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V46))), case V47 of {'Idris.Prelude.Types.Left', E22} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V49) -> begin (V70 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V54, V55)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V56) -> fun (V57) -> ('dn--un--toBuf_TTC_RawImp'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('dn--un--fromBuf_TTC_RawImp'(V58, V59)) end end}}, V50, V51)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V62, V63)) end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V64, V65)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V66) -> fun (V67) -> ('dn--un--toBuf_TTC_RawImp'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('dn--un--fromBuf_TTC_RawImp'(V68, V69)) end end}}, V60, V61)) end end}, V0, V46))), case V70 of {'Idris.Prelude.Types.Left', E24} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V72) -> begin (V77 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V73) -> fun (V74) -> ('dn--un--toBuf_TTC_ImpDecl'(V73, V74)) end end, fun (V75) -> fun (V76) -> ('dn--un--fromBuf_TTC_ImpDecl'(V75, V76)) end end}, V0, V46))), case V77 of {'Idris.Prelude.Types.Left', E26} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V49, V72, V79}} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 4 -> fun (V80) -> begin (V81 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V80))), case V81 of {'Idris.Prelude.Types.Left', E28} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V83) -> begin (V88 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V84) -> fun (V85) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V84, V85)) end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V86, V87)) end end}, V0, V80))), case V88 of {'Idris.Prelude.Types.Left', E30} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V90) -> begin (V91 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Visibility'(V0, V80))), case V91 of {'Idris.Prelude.Types.Left', E32} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V93) -> begin (V94 = ('dn--un--fromBuf_TTC_ImpRecord'(V0, V80))), case V94 of {'Idris.Prelude.Types.Left', E34} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V96) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V83, V90, V93, V96}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 5 -> fun (V97) -> begin (V98 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V97))), case V98 of {'Idris.Prelude.Types.Left', E36} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V100) -> begin (V101 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V0, V97))), case V101 of {'Idris.Prelude.Types.Left', E38} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V103) -> begin (V108 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V104) -> fun (V105) -> ('dn--un--toBuf_TTC_ImpDecl'(V104, V105)) end end, fun (V106) -> fun (V107) -> ('dn--un--fromBuf_TTC_ImpDecl'(V106, V107)) end end}, V0, V97))), case V108 of {'Idris.Prelude.Types.Left', E40} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V110) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V100, V103, V110}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 6 -> fun (V111) -> begin (V112 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V111))), case V112 of {'Idris.Prelude.Types.Left', E42} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V114) -> begin (V115 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V111))), case V115 of {'Idris.Prelude.Types.Left', E44} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V117) -> begin (V118 = ('dn--un--fromBuf_TTC_RawImp'(V0, V111))), case V118 of {'Idris.Prelude.Types.Left', E46} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V120) -> begin (V121 = ('dn--un--fromBuf_TTC_RawImp'(V0, V111))), case V121 of {'Idris.Prelude.Types.Left', E48} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V123) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V114, V117, V120, V123}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 7 -> fun (V124) -> begin (V125 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V124))), case V125 of {'Idris.Prelude.Types.Left', E50} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V127) -> begin (V128 = ('dn--un--fromBuf_TTC_RawImp'(V0, V124))), case V128 of {'Idris.Prelude.Types.Left', E52} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V130) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElabDecl', V127, V130}} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 8 -> fun (V131) -> begin (V170 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V132) -> fun (V133) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V134) -> fun (V135) -> fun (V136) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V137) -> fun (V138) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V137, V138)) end end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V139, V140)) end end}, V134, V135, V136)) end end end, fun (V141) -> fun (V142) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V143) -> fun (V144) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V143, V144)) end end, fun (V145) -> fun (V146) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V145, V146)) end end}, V141, V142)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V147) -> fun (V148) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V147, V148)) end end, fun (V149) -> fun (V150) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V149, V150)) end end}}, V132, V133)) end end, fun (V151) -> fun (V152) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V153) -> fun (V154) -> fun (V155) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V156) -> fun (V157) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V156, V157)) end end, fun (V158) -> fun (V159) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V158, V159)) end end}, V153, V154, V155)) end end end, fun (V160) -> fun (V161) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V162) -> fun (V163) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V162, V163)) end end, fun (V164) -> fun (V165) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V164, V165)) end end}, V160, V161)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V166) -> fun (V167) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V166, V167)) end end, fun (V168) -> fun (V169) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V168, V169)) end end}}, V151, V152)) end end}, V0, V131))), case V170 of {'Idris.Prelude.Types.Left', E54} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V172) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILog', V172}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V173) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"ImpDecl"/utf8>>, V173)) end end.
'case--fromBuf-6181'(V0, V1) -> case V1 of 0 -> fun (V2) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Inline'}} end; 1 -> fun (V3) -> begin (V4 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Bool'(V0, V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Hint', V6}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 2 -> fun (V7) -> begin (V8 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Bool'(V0, V7))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.GlobalHint', V10}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 3 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ExternFn'}} end; 4 -> fun (V12) -> begin (V17 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('dn--un--toBuf_TTC_RawImp'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('dn--un--fromBuf_TTC_RawImp'(V15, V16)) end end}, V0, V12))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V19}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 5 -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Invertible'}} end; 6 -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', {'Idris.Core.TT.Total'}}} end; 7 -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', {'Idris.Core.TT.CoveringOnly'}}} end; 8 -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', {'Idris.Core.TT.PartialOK'}}} end; 9 -> fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Macro'}} end; 10 -> fun (V25) -> begin (V30 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V26, V27)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V28, V29)) end end}, V0, V25))), case V30 of {'Idris.Prelude.Types.Left', E6} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SpecArgs', V32}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 11 -> fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.TCInline'}} end; _ -> fun (V34) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"FnOpt"/utf8>>, V34)) end end.
'case--fromBuf-5809'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V3 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V2))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> begin (V9 = ('dn--un--fromBuf_TTC_RawImp'(V0, V2))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> begin (V16 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V12) -> fun (V13) -> ('dn--un--toBuf_TTC_DataOpt'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('dn--un--fromBuf_TTC_DataOpt'(V14, V15)) end end}, V0, V2))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V23 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V19) -> fun (V20) -> ('dn--un--toBuf_TTC_ImpTy'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('dn--un--fromBuf_TTC_ImpTy'(V21, V22)) end end}, V0, V2))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V5, V8, V11, V18, V25}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V26) -> begin (V27 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V26))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V26))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> begin (V33 = ('dn--un--fromBuf_TTC_RawImp'(V0, V26))), case V33 of {'Idris.Prelude.Types.Left', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V29, V32, V35}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V36) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"ImpData"/utf8>>, V36)) end end.
'case--fromBuf-5683'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V7 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V5, V6)) end end}, V0, V2))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SearchBy', V9}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoHints'}} end; 2 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueSearch'}} end; 3 -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.External'}} end; 4 -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoNewtype'}} end; _ -> fun (V14) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"DataOpt"/utf8>>, V14)) end end.
'case--fromBuf-5537'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V3 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = ('dn--un--fromBuf_TTC_RawImp'(V0, V2))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> begin (V9 = ('dn--un--fromBuf_TTC_RawImp'(V0, V2))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V5, V8, V11}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V16 = ('dn--un--fromBuf_TTC_RawImp'(V0, V12))), case V16 of {'Idris.Prelude.Types.Left', E8} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V15, V18}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 2 -> fun (V19) -> begin (V20 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V19))), case V20 of {'Idris.Prelude.Types.Left', E10} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V22) -> begin (V23 = ('dn--un--fromBuf_TTC_RawImp'(V0, V19))), case V23 of {'Idris.Prelude.Types.Left', E12} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V25) -> begin (V26 = ('dn--un--fromBuf_TTC_RawImp'(V0, V19))), case V26 of {'Idris.Prelude.Types.Left', E14} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V28) -> begin (V33 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V31, V32)) end end}, V0, V19))), case V33 of {'Idris.Prelude.Types.Left', E16} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V35) -> begin (V40 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('dn--un--toBuf_TTC_ImpClause'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('dn--un--fromBuf_TTC_ImpClause'(V38, V39)) end end}, V0, V19))), case V40 of {'Idris.Prelude.Types.Left', E18} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V42) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V22, V25, V28, V35, [], V42}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V43) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"ImpClause"/utf8>>, V43)) end end.
'case--fromBuf-5353'(V0, V1) -> case V1 of 0 -> fun (V2) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.FirstSuccess'}} end; 1 -> fun (V3) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Unique'}} end; 2 -> fun (V4) -> begin (V5 = ('dn--un--fromBuf_TTC_RawImp'(V0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueDefault', V7}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V8) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"AltType"/utf8>>, V8)) end end.
'case--fromBuf-5277'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V3 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PI', V5}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PATTERN'}} end; 2 -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NONE'}} end; _ -> fun (V8) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"BindMode"/utf8>>, V8)) end end.
'case--fromBuf-5186'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V7 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V3) -> fun (V4) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V5, V6)) end end}, V0, V2))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('dn--un--fromBuf_TTC_RawImp'(V0, V2))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V9, V12}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V13) -> begin (V18 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V16, V17)) end end}, V0, V13))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V21 = ('dn--un--fromBuf_TTC_RawImp'(V0, V13))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V20, V23}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V24) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"IFieldUpdate"/utf8>>, V24)) end end.
'case--fromBuf-4321'(V0, V1) -> case V1 of 0 -> fun (V2) -> begin (V3 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V2))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V5, V8}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V9) -> begin (V10 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V9))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V9))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V20 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('dn--un--toBuf_TTC_RawImp'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('dn--un--fromBuf_TTC_RawImp'(V18, V19)) end end}, V0, V9))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> begin (V27 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V25, V26)) end end}, V0, V9))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = ('dn--un--fromBuf_TTC_RawImp'(V0, V9))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> begin (V33 = ('dn--un--fromBuf_TTC_RawImp'(V0, V9))), case V33 of {'Idris.Prelude.Types.Left', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V12, V15, V22, V29, V32, V35}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 2 -> fun (V36) -> begin (V37 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V36))), case V37 of {'Idris.Prelude.Types.Left', E16} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V39) -> begin (V40 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V36))), case V40 of {'Idris.Prelude.Types.Left', E18} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V42) -> begin (V47 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('dn--un--toBuf_TTC_RawImp'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('dn--un--fromBuf_TTC_RawImp'(V45, V46)) end end}, V0, V36))), case V47 of {'Idris.Prelude.Types.Left', E20} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V49) -> begin (V54 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V52, V53)) end end}, V0, V36))), case V54 of {'Idris.Prelude.Types.Left', E22} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V56) -> begin (V57 = ('dn--un--fromBuf_TTC_RawImp'(V0, V36))), case V57 of {'Idris.Prelude.Types.Left', E24} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V59) -> begin (V60 = ('dn--un--fromBuf_TTC_RawImp'(V0, V36))), case V60 of {'Idris.Prelude.Types.Left', E26} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V62) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V39, V42, V49, V56, V59, V62}} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 3 -> fun (V63) -> begin (V64 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V63))), case V64 of {'Idris.Prelude.Types.Left', E28} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V66) -> begin (V67 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V63))), case V67 of {'Idris.Prelude.Types.Left', E30} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V69) -> begin (V70 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V63))), case V70 of {'Idris.Prelude.Types.Left', E32} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V72) -> begin (V73 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V63))), case V73 of {'Idris.Prelude.Types.Left', E34} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V75) -> begin (V76 = ('dn--un--fromBuf_TTC_RawImp'(V0, V63))), case V76 of {'Idris.Prelude.Types.Left', E36} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V78) -> begin (V79 = ('dn--un--fromBuf_TTC_RawImp'(V0, V63))), case V79 of {'Idris.Prelude.Types.Left', E38} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V81) -> begin (V82 = ('dn--un--fromBuf_TTC_RawImp'(V0, V63))), case V82 of {'Idris.Prelude.Types.Left', E40} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V84) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V66, V69, V72, V75, V78, V81, V84}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 4 -> fun (V85) -> begin (V86 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V85))), case V86 of {'Idris.Prelude.Types.Left', E42} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V88) -> begin (V89 = ('dn--un--fromBuf_TTC_RawImp'(V0, V85))), case V89 of {'Idris.Prelude.Types.Left', E44} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V91) -> begin (V92 = ('dn--un--fromBuf_TTC_RawImp'(V0, V85))), case V92 of {'Idris.Prelude.Types.Left', E46} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V94) -> begin (V99 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V95) -> fun (V96) -> ('dn--un--toBuf_TTC_ImpClause'(V95, V96)) end end, fun (V97) -> fun (V98) -> ('dn--un--fromBuf_TTC_ImpClause'(V97, V98)) end end}, V0, V85))), case V99 of {'Idris.Prelude.Types.Left', E48} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V101) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V88, V91, V94, V101}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 5 -> fun (V102) -> begin (V103 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V102))), case V103 of {'Idris.Prelude.Types.Left', E50} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V105) -> begin (V110 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V106) -> fun (V107) -> ('dn--un--toBuf_TTC_ImpDecl'(V106, V107)) end end, fun (V108) -> fun (V109) -> ('dn--un--fromBuf_TTC_ImpDecl'(V108, V109)) end end}, V0, V102))), case V110 of {'Idris.Prelude.Types.Left', E52} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V112) -> begin (V113 = ('dn--un--fromBuf_TTC_RawImp'(V0, V102))), case V113 of {'Idris.Prelude.Types.Left', E54} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V115) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V105, V112, V115}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 6 -> fun (V116) -> begin (V117 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V116))), case V117 of {'Idris.Prelude.Types.Left', E56} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V119) -> begin (V124 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V120) -> fun (V121) -> ('dn--un--toBuf_TTC_IFieldUpdate'(V120, V121)) end end, fun (V122) -> fun (V123) -> ('dn--un--fromBuf_TTC_IFieldUpdate'(V122, V123)) end end}, V0, V116))), case V124 of {'Idris.Prelude.Types.Left', E58} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V126) -> begin (V127 = ('dn--un--fromBuf_TTC_RawImp'(V0, V116))), case V127 of {'Idris.Prelude.Types.Left', E60} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V129) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V119, V126, V129}} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 7 -> fun (V130) -> begin (V131 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V130))), case V131 of {'Idris.Prelude.Types.Left', E62} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V133) -> begin (V134 = ('dn--un--fromBuf_TTC_RawImp'(V0, V130))), case V134 of {'Idris.Prelude.Types.Left', E64} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V136) -> begin (V137 = ('dn--un--fromBuf_TTC_RawImp'(V0, V130))), case V137 of {'Idris.Prelude.Types.Left', E66} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V139) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V133, V136, V139}} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 8 -> fun (V140) -> begin (V141 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V140))), case V141 of {'Idris.Prelude.Types.Left', E68} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V143) -> begin (V144 = ('dn--un--fromBuf_TTC_RawImp'(V0, V140))), case V144 of {'Idris.Prelude.Types.Left', E70} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V146) -> begin (V147 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V140))), case V147 of {'Idris.Prelude.Types.Left', E72} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V149) -> begin (V150 = ('dn--un--fromBuf_TTC_RawImp'(V0, V140))), case V150 of {'Idris.Prelude.Types.Left', E74} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V152) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V143, V146, V149, V152}} end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 9 -> fun (V153) -> begin (V154 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V153))), case V154 of {'Idris.Prelude.Types.Left', E76} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V156) -> begin (V157 = ('dn--un--fromBuf_TTC_RawImp'(V0, V153))), case V157 of {'Idris.Prelude.Types.Left', E78} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V159) -> begin (V160 = ('dn--un--fromBuf_TTC_RawImp'(V0, V153))), case V160 of {'Idris.Prelude.Types.Left', E80} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V162) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V156, V159, V162}} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 10 -> fun (V163) -> begin (V164 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V163))), case V164 of {'Idris.Prelude.Types.Left', E82} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V166) -> begin (V167 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V0, V163))), case V167 of {'Idris.Prelude.Types.Left', E84} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V169) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V166, V169}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 11 -> fun (V170) -> begin (V171 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V170))), case V171 of {'Idris.Prelude.Types.Left', E86} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V173) -> begin (V174 = ('dn--un--fromBuf_TTC_AltType'(V0, V170))), case V174 of {'Idris.Prelude.Types.Left', E88} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V176) -> begin (V181 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V177) -> fun (V178) -> ('dn--un--toBuf_TTC_RawImp'(V177, V178)) end end, fun (V179) -> fun (V180) -> ('dn--un--fromBuf_TTC_RawImp'(V179, V180)) end end}, V0, V170))), case V181 of {'Idris.Prelude.Types.Left', E90} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V183) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V173, V176, V183}} end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 12 -> fun (V184) -> begin (V185 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V184))), case V185 of {'Idris.Prelude.Types.Left', E92} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V187) -> begin (V188 = ('dn--un--fromBuf_TTC_RawImp'(V0, V184))), case V188 of {'Idris.Prelude.Types.Left', E94} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V190) -> begin (V191 = ('dn--un--fromBuf_TTC_RawImp'(V0, V184))), case V191 of {'Idris.Prelude.Types.Left', E96} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V193) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V187, V190, V193}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 13 -> fun (V194) -> begin (V195 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V194))), case V195 of {'Idris.Prelude.Types.Left', E98} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V197) -> begin (V198 = ('dn--un--fromBuf_TTC_RawImp'(V0, V194))), case V198 of {'Idris.Prelude.Types.Left', E100} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V200) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICoerced', V197, V200}} end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 14 -> fun (V201) -> begin (V202 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V201))), case V202 of {'Idris.Prelude.Types.Left', E102} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V204) -> begin (V205 = ('dn--un--fromBuf_TTC_BindMode'(V0, V201))), case V205 of {'Idris.Prelude.Types.Left', E104} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V207) -> begin (V208 = ('dn--un--fromBuf_TTC_RawImp'(V0, V201))), case V208 of {'Idris.Prelude.Types.Left', E106} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V210) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V204, V207, V210}} end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 15 -> fun (V211) -> begin (V212 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V211))), case V212 of {'Idris.Prelude.Types.Left', E108} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V214) -> begin (V215 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V0, V211))), case V215 of {'Idris.Prelude.Types.Left', E110} -> (fun (V216) -> {'Idris.Prelude.Types.Left', V216} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V217) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindVar', V214, V217}} end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 16 -> fun (V218) -> begin (V219 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V218))), case V219 of {'Idris.Prelude.Types.Left', E112} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V221) -> begin (V222 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V218))), case V222 of {'Idris.Prelude.Types.Left', E114} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V224) -> begin (V225 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_UseSide'(V0, V218))), case V225 of {'Idris.Prelude.Types.Left', E116} -> (fun (V226) -> {'Idris.Prelude.Types.Left', V226} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V227) -> begin (V228 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V218))), case V228 of {'Idris.Prelude.Types.Left', E118} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V230) -> begin (V231 = ('dn--un--fromBuf_TTC_RawImp'(V0, V218))), case V231 of {'Idris.Prelude.Types.Left', E120} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V233) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V221, V224, V227, V230, V233}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 17 -> fun (V234) -> begin (V235 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V234))), case V235 of {'Idris.Prelude.Types.Left', E122} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V237) -> begin (V238 = ('dn--un--fromBuf_TTC_RawImp'(V0, V234))), case V238 of {'Idris.Prelude.Types.Left', E124} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V240) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V237, {'Idris.Core.Core.UnknownDot'}, V240}} end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 18 -> fun (V241) -> begin (V242 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V241))), case V242 of {'Idris.Prelude.Types.Left', E126} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V244) -> begin (V245 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_LazyReason'(V0, V241))), case V245 of {'Idris.Prelude.Types.Left', E128} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V247) -> begin (V248 = ('dn--un--fromBuf_TTC_RawImp'(V0, V241))), case V248 of {'Idris.Prelude.Types.Left', E130} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V250) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V244, V247, V250}} end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 19 -> fun (V251) -> begin (V252 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V251))), case V252 of {'Idris.Prelude.Types.Left', E132} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V254) -> begin (V255 = ('dn--un--fromBuf_TTC_RawImp'(V0, V251))), case V255 of {'Idris.Prelude.Types.Left', E134} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V257) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V254, V257}} end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 20 -> fun (V258) -> begin (V259 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V258))), case V259 of {'Idris.Prelude.Types.Left', E136} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V261) -> begin (V262 = ('dn--un--fromBuf_TTC_RawImp'(V0, V258))), case V262 of {'Idris.Prelude.Types.Left', E138} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V264) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V261, V264}} end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 21 -> fun (V265) -> begin (V266 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V265))), case V266 of {'Idris.Prelude.Types.Left', E140} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V268) -> begin (V269 = ('dn--un--fromBuf_TTC_RawImp'(V0, V265))), case V269 of {'Idris.Prelude.Types.Left', E142} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V271) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V268, V271}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 22 -> fun (V272) -> begin (V273 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V272))), case V273 of {'Idris.Prelude.Types.Left', E144} -> (fun (V274) -> {'Idris.Prelude.Types.Left', V274} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V275) -> begin (V276 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V272))), case V276 of {'Idris.Prelude.Types.Left', E146} -> (fun (V277) -> {'Idris.Prelude.Types.Left', V277} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V278) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V275, V278}} end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 23 -> fun (V279) -> begin (V280 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V279))), case V280 of {'Idris.Prelude.Types.Left', E148} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V282) -> begin (V287 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V283) -> fun (V284) -> ('dn--un--toBuf_TTC_ImpDecl'(V283, V284)) end end, fun (V285) -> fun (V286) -> ('dn--un--fromBuf_TTC_ImpDecl'(V285, V286)) end end}, V0, V279))), case V287 of {'Idris.Prelude.Types.Left', E150} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V289) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V282, V289}} end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 24 -> fun (V290) -> begin (V291 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V290))), case V291 of {'Idris.Prelude.Types.Left', E152} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V293) -> begin (V294 = ('dn--un--fromBuf_TTC_RawImp'(V0, V290))), case V294 of {'Idris.Prelude.Types.Left', E154} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V296) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V293, V296}} end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 25 -> fun (V297) -> begin (V298 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V297))), case V298 of {'Idris.Prelude.Types.Left', E156} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V300) -> begin (V301 = ('dn--un--fromBuf_TTC_RawImp'(V0, V297))), case V301 of {'Idris.Prelude.Types.Left', E158} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V303) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElab', V300, V303}} end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 26 -> fun (V304) -> begin (V305 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V304))), case V305 of {'Idris.Prelude.Types.Left', E160} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V307) -> begin (V308 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Constant'(V0, V304))), case V308 of {'Idris.Prelude.Types.Left', E162} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V310) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V307, V310}} end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 27 -> fun (V311) -> begin (V312 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V311))), case V312 of {'Idris.Prelude.Types.Left', E164} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V314) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V314}} end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 28 -> fun (V315) -> begin (V316 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V315))), case V316 of {'Idris.Prelude.Types.Left', E166} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V318) -> begin (V319 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V0, V315))), case V319 of {'Idris.Prelude.Types.Left', E168} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V321) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V318, V321}} end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 29 -> fun (V322) -> begin (V323 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V322))), case V323 of {'Idris.Prelude.Types.Left', E170} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V325) -> begin (V326 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Bool'(V0, V322))), case V326 of {'Idris.Prelude.Types.Left', E172} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V328) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V325, V328}} end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 30 -> fun (V329) -> begin (V330 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V329))), case V330 of {'Idris.Prelude.Types.Left', E174} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V332) -> begin (V337 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V333) -> fun (V334) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V333, V334)) end end, fun (V335) -> fun (V336) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V335, V336)) end end}, V0, V329))), case V337 of {'Idris.Prelude.Types.Left', E176} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V339) -> begin (V340 = ('dn--un--fromBuf_TTC_RawImp'(V0, V329))), case V340 of {'Idris.Prelude.Types.Left', E178} -> (fun (V341) -> {'Idris.Prelude.Types.Left', V341} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V342) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V332, V339, V342}} end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 31 -> fun (V343) -> begin (V344 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V343))), case V344 of {'Idris.Prelude.Types.Left', E180} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V346) -> begin (V347 = ('dn--un--fromBuf_TTC_RawImp'(V0, V343))), case V347 of {'Idris.Prelude.Types.Left', E182} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V349) -> begin (V350 = ('dn--un--fromBuf_TTC_RawImp'(V0, V343))), case V350 of {'Idris.Prelude.Types.Left', E184} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V352) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V346, V349, V352}} end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V353) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"RawImp"/utf8>>, V353)) end end.
'case--case block in definedInBlock,expandNS-3278'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Name.UN', E0} -> (fun (V4) -> {'Idris.Core.Name.NS', V3, V2} end(E0)); {'Idris.Core.Name.MN', E1, E2} -> (fun (V5, V6) -> {'Idris.Core.Name.NS', V3, V2} end(E1, E2)); {'Idris.Core.Name.DN', E3, E4} -> (fun (V7, V8) -> {'Idris.Core.Name.NS', V3, V2} end(E3, E4)); {'Idris.Core.Name.RF', E5} -> (fun (V9) -> {'Idris.Core.Name.NS', V3, V2} end(E5)); _ -> V2 end.
'case--definedInBlock,expandNS-3257'(V0, V1, V2, V3, V4) -> case V4 of 0 -> V2; 1 -> case V2 of {'Idris.Core.Name.UN', E0} -> (fun (V5) -> {'Idris.Core.Name.NS', V3, V2} end(E0)); {'Idris.Core.Name.MN', E1, E2} -> (fun (V6, V7) -> {'Idris.Core.Name.NS', V3, V2} end(E1, E2)); {'Idris.Core.Name.DN', E3, E4} -> (fun (V8, V9) -> {'Idris.Core.Name.NS', V3, V2} end(E3, E4)); {'Idris.Core.Name.RF', E5} -> (fun (V10) -> {'Idris.Core.Name.NS', V3, V2} end(E5)); _ -> V2 end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--implicitsAs,setAs-3067'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> begin (V11 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Could not find variable "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V3)))) end))(V10))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V6, V5}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V14) -> fun (V15) -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--nf'(V4, [], V2, {'Idris.Core.Env.Nil'}, V14))(V15))), case V16 of {'Idris.Prelude.Types.Left', E3} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V18) -> begin (V19 = (('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V8, V7, V1, V18))(V15))), case V19 of {'Idris.Prelude.Types.Left', E5} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V21) -> begin (V52 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  In the type of "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V14)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  Using locals: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V22)) end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V23, V24)) end end}, V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  Found implicits: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V25) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V26)) end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V27, V28)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V29) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V30) -> ('dn--un--show_Show_RawImp'(V30)) end, fun (V31) -> fun (V32) -> ('dn--un--showPrec_Show_RawImp'(V31, V32)) end end}, V29)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('dn--un--show_Show_RawImp'(V35)) end, fun (V36) -> fun (V37) -> ('dn--un--showPrec_Show_RawImp'(V36, V37)) end end}, V33, V34)) end end}}, V25)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V41, V42)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V44) -> ('dn--un--show_Show_RawImp'(V44)) end, fun (V45) -> fun (V46) -> ('dn--un--showPrec_Show_RawImp'(V45, V46)) end end}, V43)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V49) -> ('dn--un--show_Show_RawImp'(V49)) end, fun (V50) -> fun (V51) -> ('dn--un--showPrec_Show_RawImp'(V50, V51)) end end}, V47, V48)) end end}}, V38, V39)) end end}, V21)))))))))))))))) end))(V15))), case V52 of {'Idris.Prelude.Types.Left', E7} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V54) -> {'Idris.Prelude.Types.Right', ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V6, V21, {'Idris.TTImp.TTImp.IVar', V6, V5}))} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--implicitsAs,setAs,findImps-2897'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of 0 -> ('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V17, V16, [], V18)); 1 -> fun (V20) -> begin (V21 = (('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V17, V16, [], V18))(V20))), case V21 of {'Idris.Prelude.Types.Left', E0} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V23) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V14, ('Idris.Idris2.Core.TT':'un--forgetDef'('erased', 'erased', V12))} | V23]} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--implicitsAs,setAs,findImps-2767'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V19) -> begin (V20 = (('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V16, V15, [], V17))(V19))), case V20 of {'Idris.Prelude.Types.Left', E0} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V22) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V13, {'Idris.Core.TT.AutoImplicit'}} | V22]} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V23) -> ('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V23, V15, [], V17)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V19) -> {'Idris.Prelude.Types.Right', []} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V20) -> ('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V16, V20, [], V17)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--implicitsAs,setAs,findImps-2567'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V15 of [E0 | E1] -> (fun (V18, V19) -> case V18 of {'Idris.Prelude.Types.Just', E2} -> (fun (V20) -> case V20 of {'Idris.Core.Name.UN', E3} -> (fun (V21) -> case V21 of <<"_"/utf8>> -> ('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V16, V15, [], V17)); _ -> ('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V15)))) end end(E3)); _ -> ('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V15)))) end end(E2)); _ -> ('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V15)))) end end(E0, E1)); _ -> ('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V15)))) end.
'case--implicitsAs,setAs,updateNs-2438'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of 0 -> {'Idris.Prelude.Types.Just', V10}; 1 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'('erased', 'erased', ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10)), fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'('erased', [V9 | V13])) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--lhsInCurrentNS-2187'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V6) -> begin (V7 = (('Idris.Idris2.Core.Context':'un--inCurrentNS'(V4, V1))(V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V2, V9}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V10) -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V2, V1}} end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--show-2059'(V0, V1) -> case V0 of [] -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V1)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'((('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V4, V5, V6)) end end end end end, fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V13)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V14, V15)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}))(('Idris.Idris2.Data.List':'un--intersperse'('erased', <<"."/utf8>>, V0)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V1)))))) end.
'case--weakenNs-595'(V0, V1, V2, V3, V4) -> case V3 of 0 -> case V4 of {'Idris.Core.TT.SizedView.Z'} -> (fun () -> V2 end()); _ -> case V4 of {'Idris.Core.TT.SizedView.S', E1} -> (fun (V5) -> ('dn--un--weaken_Weaken_NestedNames'('erased', 'erased', ('dn--un--weakenNs_Weaken_NestedNames'('erased', 'erased', V5, V2)))) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V4 of {'Idris.Core.TT.SizedView.S', E0} -> (fun (V6) -> ('dn--un--weaken_Weaken_NestedNames'('erased', 'erased', ('dn--un--weakenNs_Weaken_NestedNames'('erased', 'erased', V6, V2)))) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--9408-628--in--un--wknName'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V8, V9) -> {'Idris.Builtin.MkPair', V4, {'Idris.Builtin.MkPair', V6, {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V10) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Var'('erased', 'erased', V10)) end, V8)), fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'('erased', 'erased', ((V9(V11))(V12)))) end end}}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of [E0 | E1] -> (fun (V11, V12) -> case V11 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Just', V12} end()); _ -> ('case--implicitsAs,setAs,updateNs-2438'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V12, V9, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V15, V16)) end end}, {'Idris.Prelude.Types.Just', V9}, V11)))) end end(E0, E1)); [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12255-3418--in--un--toRF'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Core.Name.UN', E0} -> (fun (V12) -> {'Idris.Core.Name.RF', V12} end(E0)); _ -> V11 end.
'nested--11297-2359--in--un--setAs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V8, V9, V10) -> fun (V11) -> begin (V12 = (('nested--11297-2359--in--un--setAs'(V0, V1, V2, V3, V4, V5, [{'Idris.Prelude.Types.Nothing'} | V6], V9))(V11))), case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, V14, V10}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.IAutoApp', E5, E6, E7} -> (fun (V15, V16, V17) -> fun (V18) -> begin (V19 = (('nested--11297-2359--in--un--setAs'(V0, V1, V2, V3, V4, [{'Idris.Prelude.Types.Nothing'} | V5], V6, V16))(V18))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V15, V21, V17}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6, E7)); {'Idris.TTImp.TTImp.INamedApp', E10, E11, E12, E13} -> (fun (V22, V23, V24, V25) -> fun (V26) -> begin (V27 = (('nested--11297-2359--in--un--setAs'(V0, V1, V2, V3, V4, [{'Idris.Prelude.Types.Just', V24} | V5], [{'Idris.Prelude.Types.Just', V24} | V6], V23))(V26))), case V27 of {'Idris.Prelude.Types.Left', E14} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V22, V29, V24, V25}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); {'Idris.TTImp.TTImp.IWithApp', E16, E17, E18} -> (fun (V30, V31, V32) -> fun (V33) -> begin (V34 = (('nested--11297-2359--in--un--setAs'(V0, V1, V2, V3, V4, V5, V6, V31))(V33))), case V34 of {'Idris.Prelude.Types.Left', E19} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V30, V36, V32}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E16, E17, E18)); {'Idris.TTImp.TTImp.IVar', E21, E22} -> (fun (V37, V38) -> fun (V39) -> begin (V67 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Idris.Core.Name.Resolved', V3}, case V2 of {'Idris.Core.Context.MkDefs', E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66) -> V40 end(E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V39))), case V67 of {'Idris.Prelude.Types.Left', E50} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V69) -> case V69 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V70 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Could not find variable "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V3)))) end))(V39))), case V70 of {'Idris.Prelude.Types.Left', E52} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V72) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V37, V38}} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E54} -> (fun (V73) -> begin (V74 = (('Idris.Idris2.Core.Normalise':'un--nf'(V4, [], V2, {'Idris.Core.Env.Nil'}, V73))(V39))), case V74 of {'Idris.Prelude.Types.Left', E55} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V76) -> begin (V77 = (('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V38, V37, V6, V5, V5, V6, V1, V76))(V39))), case V77 of {'Idris.Prelude.Types.Left', E57} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V79) -> begin (V110 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  In the type of "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V73)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  Using locals: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V80) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V80)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V81, V82)) end end}, V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  Found implicits: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V84)) end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V85, V86)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V87) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V88) -> ('dn--un--show_Show_RawImp'(V88)) end, fun (V89) -> fun (V90) -> ('dn--un--showPrec_Show_RawImp'(V89, V90)) end end}, V87)) end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V93) -> ('dn--un--show_Show_RawImp'(V93)) end, fun (V94) -> fun (V95) -> ('dn--un--showPrec_Show_RawImp'(V94, V95)) end end}, V91, V92)) end end}}, V83)) end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V98) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V98)) end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V99, V100)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V101) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V102) -> ('dn--un--show_Show_RawImp'(V102)) end, fun (V103) -> fun (V104) -> ('dn--un--showPrec_Show_RawImp'(V103, V104)) end end}, V101)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V107) -> ('dn--un--show_Show_RawImp'(V107)) end, fun (V108) -> fun (V109) -> ('dn--un--showPrec_Show_RawImp'(V108, V109)) end end}, V105, V106)) end end}}, V96, V97)) end end}, V79)))))))))))))))) end))(V39))), case V110 of {'Idris.Prelude.Types.Left', E59} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V112) -> {'Idris.Prelude.Types.Right', ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V38, V37, V6, V5, V37, V79, {'Idris.TTImp.TTImp.IVar', V37, V38}))} end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22)); _ -> fun (V113) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of [] -> V11; [E0 | E1] -> (fun (V12, V13) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V14, V15) -> case V14 of {'Idris.Core.Name.UN', E5} -> (fun (V16) -> case V15 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, {'Idris.TTImp.TTImp.INamedApp', V9, V11, {'Idris.Core.Name.UN', V16}, {'Idris.TTImp.TTImp.IBindVar', V9, V16}})) end()); _ -> case V15 of {'Idris.Core.TT.Implicit'} -> (fun () -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, {'Idris.TTImp.TTImp.INamedApp', V9, V11, V14, {'Idris.TTImp.TTImp.IAs', V9, {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.UseLeft'}, V14, {'Idris.TTImp.TTImp.Implicit', V9, 0}}})) end()); {'Idris.Core.TT.DefImplicit', E6} -> (fun (V17) -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, {'Idris.TTImp.TTImp.INamedApp', V9, V11, V14, {'Idris.TTImp.TTImp.IAs', V9, {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.UseLeft'}, V14, {'Idris.TTImp.TTImp.Implicit', V9, 0}}})) end(E6)); _ -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, V11)) end end end(E5)); _ -> case V15 of {'Idris.Core.TT.Implicit'} -> (fun () -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, {'Idris.TTImp.TTImp.INamedApp', V9, V11, V14, {'Idris.TTImp.TTImp.IAs', V9, {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.UseLeft'}, V14, {'Idris.TTImp.TTImp.Implicit', V9, 0}}})) end()); {'Idris.Core.TT.DefImplicit', E4} -> (fun (V18) -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, {'Idris.TTImp.TTImp.INamedApp', V9, V11, V14, {'Idris.TTImp.TTImp.IAs', V9, {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.UseLeft'}, V14, {'Idris.TTImp.TTImp.Implicit', V9, 0}}})) end(E4)); _ -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, V11)) end end end(E2, E3)); _ -> ('nested--11304-2416--in--un--impAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, V11)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12249-3227--in--un--getName'(V0, V1, V2) -> case V2 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V3, V4, V5, V6) -> V5 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12249-3228--in--un--getFieldName'(V0, V1, V2) -> case V2 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V3, V4, V5, V6, V7) -> V6 end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12255-3419--in--un--fnsUN'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V11) -> ('nested--12249-3228--in--un--getFieldName'(V0, V1, V11)) end, V6)).
'nested--12255-3420--in--un--fnsRF'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V11) -> ('nested--12255-3418--in--un--toRF'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11)) end, ('nested--12255-3419--in--un--fnsUN'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10)))).
'nested--12255-3417--in--un--fldns\x{27}'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> V10 end, fun () -> fun (V11) -> ('Idris.Idris2.Core.Name.Namespace':'un--<.>'(V10, ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V11)))) end end, V9)).
'nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V11 of [E2 | E3] -> (fun (V13, V14) -> case V12 of {'Idris.Core.Value.NBind', E6, E7, E8, E9} -> (fun (V15, V16, V17, V18) -> case V17 of {'Idris.Core.TT.Pi', E12, E13, E14, E15} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V23) -> begin (V24 = (((V18(V2))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V15, 1}))))(V23))), case V24 of {'Idris.Prelude.Types.Left', E18} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V26) -> (('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V14, V26))(V23)) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V27) -> begin (V31 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Giving up with the following locals left: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V28) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V28)) end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V29, V30)) end end}, V11)))) end))(V27))), case V31 of {'Idris.Prelude.Types.Left', E16} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V33) -> {'Idris.Prelude.Types.Right', []} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E12, E13, E14, E15)); _ -> fun (V34) -> begin (V38 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Giving up with the following locals left: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V36, V37)) end end}, V11)))) end))(V34))), case V38 of {'Idris.Prelude.Types.Left', E10} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V40) -> {'Idris.Prelude.Types.Right', []} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8, E9)); _ -> fun (V41) -> begin (V45 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Giving up with the following locals left: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V42)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V43, V44)) end end}, V11)))) end))(V41))), case V45 of {'Idris.Prelude.Types.Left', E4} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V47) -> {'Idris.Prelude.Types.Right', []} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3)); [] -> case V12 of {'Idris.Core.Value.NBind', E22, E23, E24, E25} -> (fun (V48, V49, V50, V51) -> case V50 of {'Idris.Core.TT.Pi', E28, E29, E30, E31} -> (fun (V52, V53, V54, V55) -> case V54 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V56) -> begin (V57 = (((V51(V2))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V48, 1}))))(V56))), case V57 of {'Idris.Prelude.Types.Left', E34} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V59) -> case V10 of [E36 | E37] -> (fun (V60, V61) -> case V60 of {'Idris.Prelude.Types.Just', E38} -> (fun (V62) -> case V62 of {'Idris.Core.Name.UN', E39} -> (fun (V63) -> case V63 of <<"_"/utf8>> -> (('nested--11304-2415--in--un--findImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, [], V59))(V56)); _ -> (('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V55, V51, V49, V48, V10, V9, V59, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V49, V10))))(V56)) end end(E39)); _ -> (('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V55, V51, V49, V48, V10, V9, V59, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V49, V10))))(V56)) end end(E38)); _ -> (('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V55, V51, V49, V48, V10, V9, V59, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V49, V10))))(V56)) end end(E36, E37)); _ -> (('case--case block in implicitsAs,setAs,findImps-2654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V55, V51, V49, V48, V10, V9, V59, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V49, V10))))(V56)) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V64) -> begin (V65 = (((V51(V2))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V48, 1}))))(V64))), case V65 of {'Idris.Prelude.Types.Left', E40} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V67) -> (('case--implicitsAs,setAs,findImps-2767'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V55, V51, V49, V48, V10, V9, V67, ('nested--11304-2414--in--un--updateNs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V49, V9))))(V64)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V68) -> begin (V69 = (((V51(V2))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V48, 1}))))(V68))), case V69 of {'Idris.Prelude.Types.Left', E32} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V71) -> (('case--implicitsAs,setAs,findImps-2897'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V55, V54, V51, V49, V48, V10, V9, V71, ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V76, V77)) end end}, V72, V73)) end end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V80, V81)) end end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V82, V83)) end end}, V78, V79)) end end}, {'Idris.Prelude.Types.Just', V49}, V9))))(V68)) end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E28, E29, E30, E31)); _ -> fun (V84) -> begin (V88 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Giving up with the following locals left: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V85)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V86, V87)) end end}, V11)))) end))(V84))), case V88 of {'Idris.Prelude.Types.Left', E26} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V90) -> {'Idris.Prelude.Types.Right', []} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E22, E23, E24, E25)); _ -> fun (V91) -> begin (V95 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Giving up with the following locals left: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V92) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V92)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V93, V94)) end end}, V11)))) end))(V91))), case V95 of {'Idris.Prelude.Types.Left', E20} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V97) -> {'Idris.Prelude.Types.Right', []} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V98) -> begin (V102 = (('Idris.Idris2.Core.Context.Log':'un--log'(V4, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Giving up with the following locals left: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V99)) end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V100, V101)) end end}, V11)))) end))(V98))), case V102 of {'Idris.Prelude.Types.Left', E0} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V104) -> {'Idris.Prelude.Types.Right', []} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--12249-3229--in--un--expandNS'(V0, V1, V2, V3) -> ('case--definedInBlock,expandNS-3257'(V0, V1, V3, V2, ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V2, ('Idris.Idris2.Core.Name.Namespace':'un--emptyNS'()))))).
'nested--12249-3230--in--un--defName'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> [('nested--12249-3229--in--un--expandNS'(V0, V1, V2, ('nested--12249-3227--in--un--getName'(V0, V1, V8)))) | []] end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E5, E6, E7} -> (fun (V9, V10, V11) -> case V11 of {'Idris.TTImp.TTImp.MkImpData', E8, E9, E10, E11, E12} -> (fun (V12, V13, V14, V15, V16) -> [('nested--12249-3229--in--un--expandNS'(V0, V1, V2, V13)) | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V17) -> ('nested--12249-3229--in--un--expandNS'(V0, V1, V2, V17)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V18) -> ('nested--12249-3227--in--un--getName'(V0, V1, V18)) end, V16))))] end(E8, E9, E10, E11, E12)); {'Idris.TTImp.TTImp.MkImpLater', E13, E14, E15} -> (fun (V19, V20, V21) -> [('nested--12249-3229--in--un--expandNS'(V0, V1, V2, V20)) | []] end(E13, E14, E15)); _ -> [] end end(E5, E6, E7)); {'Idris.TTImp.TTImp.IParameters', E16, E17, E18} -> (fun (V22, V23, V24) -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V36)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'('erased', V37, V38)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'('erased'))}}, fun (V39) -> ('nested--12249-3230--in--un--defName'(V0, V1, V2, V39)) end))(V24)) end(E16, E17, E18)); {'Idris.TTImp.TTImp.INamespace', E19, E20, E21} -> (fun (V40, V41, V42) -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V54)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'('erased', V55, V56)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'('erased'))}}, fun (V57) -> ('nested--12249-3230--in--un--defName'(V0, V1, ('Idris.Idris2.Core.Name.Namespace':'un--<.>'(V2, V41)), V57)) end))(V42)) end(E19, E20, E21)); {'Idris.TTImp.TTImp.IRecord', E22, E23, E24, E25} -> (fun (V58, V59, V60, V61) -> case V61 of {'Idris.TTImp.TTImp.MkImpRecord', E26, E27, E28, E29, E30} -> (fun (V62, V63, V64, V65, V66) -> [('nested--12249-3229--in--un--expandNS'(V0, V1, V2, V65)) | ('nested--12255-3421--in--un--all'(V0, V1, V58, V60, V62, V64, V66, V65, V63, V59, V2))] end(E26, E27, E28, E29, E30)); _ -> [] end end(E22, E23, E24, E25)); {'Idris.TTImp.TTImp.IPragma', E31, E32} -> (fun (V67, V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V69) -> ('nested--12249-3229--in--un--expandNS'(V0, V1, V2, V69)) end, V67)) end(E31, E32)); _ -> [] end.
'nested--12684-3659--in--un--app'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.TTImp.TTImp.IApp', ('un--getFC'(V3)), V3, V5} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> {'Idris.TTImp.TTImp.INamedApp', ('un--getFC'(V3)), V3, V6, V5} end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12255-3421--in--un--all'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> [('nested--12249-3229--in--un--expandNS'(V0, V1, V10, V8)) | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V11) -> ('nested--12249-3229--in--un--expandNS'(V0, V1, ('nested--12255-3417--in--un--fldns\x{27}'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10)), V11)) end, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('nested--12255-3420--in--un--fnsRF'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10)), ('nested--12255-3419--in--un--fnsUN'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10))))))].
'dn--un--weaken_Weaken_NestedNames'(V0, V1, V2) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V3) -> ('nested--9408-628--in--un--wknName'('erased', 'erased', V2, V3)) end, V2)).
'dn--un--weakenNs_Weaken_NestedNames'(V0, V1, V2, V3) -> ('case--weakenNs-595'('erased', 'erased', V3, V2, ('Idris.Idris2.Core.TT':'un--sizedView'('erased', 'erased', V2)))).
'dn--un--toBuf_TTC_RawImp'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V2, V3) -> fun (V4) -> begin (V5 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V4))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V4))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V3))(V4)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.IPi', E6, E7, E8, E9, E10, E11} -> (fun (V11, V12, V13, V14, V15, V16) -> fun (V17) -> begin (V18 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V17))), case V18 of {'Idris.Prelude.Types.Left', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V11))(V17))), case V21 of {'Idris.Prelude.Types.Left', E14} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V23) -> begin (V24 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V12))(V17))), case V24 of {'Idris.Prelude.Types.Left', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V26) -> begin (V31 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('dn--un--toBuf_TTC_RawImp'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('dn--un--fromBuf_TTC_RawImp'(V29, V30)) end end}, V0, V13))(V17))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> begin (V38 = (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V36, V37)) end end}, V0, V14))(V17))), case V38 of {'Idris.Prelude.Types.Left', E20} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V40) -> begin (V41 = (('dn--un--toBuf_TTC_RawImp'(V0, V15))(V17))), case V41 of {'Idris.Prelude.Types.Left', E22} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V43) -> (('dn--un--toBuf_TTC_RawImp'(V0, V16))(V17)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8, E9, E10, E11)); {'Idris.TTImp.TTImp.ILam', E24, E25, E26, E27, E28, E29} -> (fun (V44, V45, V46, V47, V48, V49) -> fun (V50) -> begin (V51 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V50))), case V51 of {'Idris.Prelude.Types.Left', E30} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V53) -> begin (V54 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V44))(V50))), case V54 of {'Idris.Prelude.Types.Left', E32} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V56) -> begin (V57 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V45))(V50))), case V57 of {'Idris.Prelude.Types.Left', E34} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V59) -> begin (V64 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V60) -> fun (V61) -> ('dn--un--toBuf_TTC_RawImp'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('dn--un--fromBuf_TTC_RawImp'(V62, V63)) end end}, V0, V46))(V50))), case V64 of {'Idris.Prelude.Types.Left', E36} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V66) -> begin (V71 = (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V67, V68)) end end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V69, V70)) end end}, V0, V47))(V50))), case V71 of {'Idris.Prelude.Types.Left', E38} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V73) -> begin (V74 = (('dn--un--toBuf_TTC_RawImp'(V0, V48))(V50))), case V74 of {'Idris.Prelude.Types.Left', E40} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V76) -> (('dn--un--toBuf_TTC_RawImp'(V0, V49))(V50)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26, E27, E28, E29)); {'Idris.TTImp.TTImp.ILet', E42, E43, E44, E45, E46, E47, E48} -> (fun (V77, V78, V79, V80, V81, V82, V83) -> fun (V84) -> begin (V85 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 3, V84))), case V85 of {'Idris.Prelude.Types.Left', E49} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V87) -> begin (V88 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V77))(V84))), case V88 of {'Idris.Prelude.Types.Left', E51} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V90) -> begin (V91 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V78))(V84))), case V91 of {'Idris.Prelude.Types.Left', E53} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V93) -> begin (V94 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V79))(V84))), case V94 of {'Idris.Prelude.Types.Left', E55} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V96) -> begin (V97 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V80))(V84))), case V97 of {'Idris.Prelude.Types.Left', E57} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V99) -> begin (V100 = (('dn--un--toBuf_TTC_RawImp'(V0, V81))(V84))), case V100 of {'Idris.Prelude.Types.Left', E59} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V102) -> begin (V103 = (('dn--un--toBuf_TTC_RawImp'(V0, V82))(V84))), case V103 of {'Idris.Prelude.Types.Left', E61} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V105) -> (('dn--un--toBuf_TTC_RawImp'(V0, V83))(V84)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44, E45, E46, E47, E48)); {'Idris.TTImp.TTImp.ICase', E63, E64, E65, E66} -> (fun (V106, V107, V108, V109) -> fun (V110) -> begin (V111 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 4, V110))), case V111 of {'Idris.Prelude.Types.Left', E67} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V113) -> begin (V114 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V106))(V110))), case V114 of {'Idris.Prelude.Types.Left', E69} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V116) -> begin (V117 = (('dn--un--toBuf_TTC_RawImp'(V0, V107))(V110))), case V117 of {'Idris.Prelude.Types.Left', E71} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V119) -> begin (V120 = (('dn--un--toBuf_TTC_RawImp'(V0, V108))(V110))), case V120 of {'Idris.Prelude.Types.Left', E73} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V122) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V123) -> fun (V124) -> ('dn--un--toBuf_TTC_ImpClause'(V123, V124)) end end, fun (V125) -> fun (V126) -> ('dn--un--fromBuf_TTC_ImpClause'(V125, V126)) end end}, V0, V109, V110)) end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63, E64, E65, E66)); {'Idris.TTImp.TTImp.ILocal', E75, E76, E77} -> (fun (V127, V128, V129) -> fun (V130) -> begin (V131 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 5, V130))), case V131 of {'Idris.Prelude.Types.Left', E78} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V133) -> begin (V134 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V127))(V130))), case V134 of {'Idris.Prelude.Types.Left', E80} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V136) -> begin (V141 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V137) -> fun (V138) -> ('dn--un--toBuf_TTC_ImpDecl'(V137, V138)) end end, fun (V139) -> fun (V140) -> ('dn--un--fromBuf_TTC_ImpDecl'(V139, V140)) end end}, V0, V128, V130))), case V141 of {'Idris.Prelude.Types.Left', E82} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V143) -> (('dn--un--toBuf_TTC_RawImp'(V0, V129))(V130)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E75, E76, E77)); {'Idris.TTImp.TTImp.ICaseLocal', E84, E85, E86, E87, E88} -> (fun (V144, V145, V146, V147, V148) -> ('dn--un--toBuf_TTC_RawImp'(V0, V148)) end(E84, E85, E86, E87, E88)); {'Idris.TTImp.TTImp.IUpdate', E89, E90, E91} -> (fun (V149, V150, V151) -> fun (V152) -> begin (V153 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 6, V152))), case V153 of {'Idris.Prelude.Types.Left', E92} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V155) -> begin (V156 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V149))(V152))), case V156 of {'Idris.Prelude.Types.Left', E94} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V158) -> begin (V163 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V159) -> fun (V160) -> ('dn--un--toBuf_TTC_IFieldUpdate'(V159, V160)) end end, fun (V161) -> fun (V162) -> ('dn--un--fromBuf_TTC_IFieldUpdate'(V161, V162)) end end}, V0, V150, V152))), case V163 of {'Idris.Prelude.Types.Left', E96} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V165) -> (('dn--un--toBuf_TTC_RawImp'(V0, V151))(V152)) end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E89, E90, E91)); {'Idris.TTImp.TTImp.IApp', E98, E99, E100} -> (fun (V166, V167, V168) -> fun (V169) -> begin (V170 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 7, V169))), case V170 of {'Idris.Prelude.Types.Left', E101} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V172) -> begin (V173 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V166))(V169))), case V173 of {'Idris.Prelude.Types.Left', E103} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V175) -> begin (V176 = (('dn--un--toBuf_TTC_RawImp'(V0, V167))(V169))), case V176 of {'Idris.Prelude.Types.Left', E105} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V178) -> (('dn--un--toBuf_TTC_RawImp'(V0, V168))(V169)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E98, E99, E100)); {'Idris.TTImp.TTImp.INamedApp', E107, E108, E109, E110} -> (fun (V179, V180, V181, V182) -> fun (V183) -> begin (V184 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 8, V183))), case V184 of {'Idris.Prelude.Types.Left', E111} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V186) -> begin (V187 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V179))(V183))), case V187 of {'Idris.Prelude.Types.Left', E113} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V189) -> begin (V190 = (('dn--un--toBuf_TTC_RawImp'(V0, V180))(V183))), case V190 of {'Idris.Prelude.Types.Left', E115} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V192) -> begin (V193 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V181))(V183))), case V193 of {'Idris.Prelude.Types.Left', E117} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V195) -> (('dn--un--toBuf_TTC_RawImp'(V0, V182))(V183)) end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E107, E108, E109, E110)); {'Idris.TTImp.TTImp.IWithApp', E119, E120, E121} -> (fun (V196, V197, V198) -> fun (V199) -> begin (V200 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 9, V199))), case V200 of {'Idris.Prelude.Types.Left', E122} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V202) -> begin (V203 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V196))(V199))), case V203 of {'Idris.Prelude.Types.Left', E124} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V205) -> begin (V206 = (('dn--un--toBuf_TTC_RawImp'(V0, V197))(V199))), case V206 of {'Idris.Prelude.Types.Left', E126} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V208) -> (('dn--un--toBuf_TTC_RawImp'(V0, V198))(V199)) end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E119, E120, E121)); {'Idris.TTImp.TTImp.ISearch', E128, E129} -> (fun (V209, V210) -> fun (V211) -> begin (V212 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 10, V211))), case V212 of {'Idris.Prelude.Types.Left', E130} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V214) -> begin (V215 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V209))(V211))), case V215 of {'Idris.Prelude.Types.Left', E132} -> (fun (V216) -> {'Idris.Prelude.Types.Left', V216} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V217) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V0, V210))(V211)) end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E128, E129)); {'Idris.TTImp.TTImp.IAlternative', E134, E135, E136} -> (fun (V218, V219, V220) -> fun (V221) -> begin (V222 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 11, V221))), case V222 of {'Idris.Prelude.Types.Left', E137} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V224) -> begin (V225 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V218))(V221))), case V225 of {'Idris.Prelude.Types.Left', E139} -> (fun (V226) -> {'Idris.Prelude.Types.Left', V226} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V227) -> begin (V228 = (('dn--un--toBuf_TTC_AltType'(V0, V219))(V221))), case V228 of {'Idris.Prelude.Types.Left', E141} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V230) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V231) -> fun (V232) -> ('dn--un--toBuf_TTC_RawImp'(V231, V232)) end end, fun (V233) -> fun (V234) -> ('dn--un--fromBuf_TTC_RawImp'(V233, V234)) end end}, V0, V220, V221)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E134, E135, E136)); {'Idris.TTImp.TTImp.IRewrite', E143, E144, E145} -> (fun (V235, V236, V237) -> fun (V238) -> begin (V239 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 12, V238))), case V239 of {'Idris.Prelude.Types.Left', E146} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V241) -> begin (V242 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V235))(V238))), case V242 of {'Idris.Prelude.Types.Left', E148} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V244) -> begin (V245 = (('dn--un--toBuf_TTC_RawImp'(V0, V236))(V238))), case V245 of {'Idris.Prelude.Types.Left', E150} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V247) -> (('dn--un--toBuf_TTC_RawImp'(V0, V237))(V238)) end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E143, E144, E145)); {'Idris.TTImp.TTImp.ICoerced', E152, E153} -> (fun (V248, V249) -> fun (V250) -> begin (V251 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 13, V250))), case V251 of {'Idris.Prelude.Types.Left', E154} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V253) -> begin (V254 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V248))(V250))), case V254 of {'Idris.Prelude.Types.Left', E156} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V256) -> (('dn--un--toBuf_TTC_RawImp'(V0, V249))(V250)) end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152, E153)); {'Idris.TTImp.TTImp.IBindHere', E158, E159, E160} -> (fun (V257, V258, V259) -> fun (V260) -> begin (V261 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 14, V260))), case V261 of {'Idris.Prelude.Types.Left', E161} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V263) -> begin (V264 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V257))(V260))), case V264 of {'Idris.Prelude.Types.Left', E163} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V266) -> begin (V267 = (('dn--un--toBuf_TTC_BindMode'(V0, V258))(V260))), case V267 of {'Idris.Prelude.Types.Left', E165} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V269) -> (('dn--un--toBuf_TTC_RawImp'(V0, V259))(V260)) end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E158, E159, E160)); {'Idris.TTImp.TTImp.IBindVar', E167, E168} -> (fun (V270, V271) -> fun (V272) -> begin (V273 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 15, V272))), case V273 of {'Idris.Prelude.Types.Left', E169} -> (fun (V274) -> {'Idris.Prelude.Types.Left', V274} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V275) -> begin (V276 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V270))(V272))), case V276 of {'Idris.Prelude.Types.Left', E171} -> (fun (V277) -> {'Idris.Prelude.Types.Left', V277} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V278) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V0, V271))(V272)) end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E167, E168)); {'Idris.TTImp.TTImp.IAs', E173, E174, E175, E176, E177} -> (fun (V279, V280, V281, V282, V283) -> fun (V284) -> begin (V285 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 16, V284))), case V285 of {'Idris.Prelude.Types.Left', E178} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V287) -> begin (V288 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V279))(V284))), case V288 of {'Idris.Prelude.Types.Left', E180} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V290) -> begin (V291 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V280))(V284))), case V291 of {'Idris.Prelude.Types.Left', E182} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V293) -> begin (V294 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_UseSide'(V0, V281))(V284))), case V294 of {'Idris.Prelude.Types.Left', E184} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V296) -> begin (V297 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V282))(V284))), case V297 of {'Idris.Prelude.Types.Left', E186} -> (fun (V298) -> {'Idris.Prelude.Types.Left', V298} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V299) -> (('dn--un--toBuf_TTC_RawImp'(V0, V283))(V284)) end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E173, E174, E175, E176, E177)); {'Idris.TTImp.TTImp.IMustUnify', E188, E189, E190} -> (fun (V300, V301, V302) -> fun (V303) -> begin (V304 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 17, V303))), case V304 of {'Idris.Prelude.Types.Left', E191} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V306) -> begin (V307 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V300))(V303))), case V307 of {'Idris.Prelude.Types.Left', E193} -> (fun (V308) -> {'Idris.Prelude.Types.Left', V308} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V309) -> (('dn--un--toBuf_TTC_RawImp'(V0, V302))(V303)) end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E188, E189, E190)); {'Idris.TTImp.TTImp.IDelayed', E195, E196, E197} -> (fun (V310, V311, V312) -> fun (V313) -> begin (V314 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 18, V313))), case V314 of {'Idris.Prelude.Types.Left', E198} -> (fun (V315) -> {'Idris.Prelude.Types.Left', V315} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V316) -> begin (V317 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V310))(V313))), case V317 of {'Idris.Prelude.Types.Left', E200} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V319) -> begin (V320 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_LazyReason'(V0, V311))(V313))), case V320 of {'Idris.Prelude.Types.Left', E202} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V322) -> (('dn--un--toBuf_TTC_RawImp'(V0, V312))(V313)) end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E195, E196, E197)); {'Idris.TTImp.TTImp.IDelay', E204, E205} -> (fun (V323, V324) -> fun (V325) -> begin (V326 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 19, V325))), case V326 of {'Idris.Prelude.Types.Left', E206} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V328) -> begin (V329 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V323))(V325))), case V329 of {'Idris.Prelude.Types.Left', E208} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V331) -> (('dn--un--toBuf_TTC_RawImp'(V0, V324))(V325)) end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E204, E205)); {'Idris.TTImp.TTImp.IForce', E210, E211} -> (fun (V332, V333) -> fun (V334) -> begin (V335 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 20, V334))), case V335 of {'Idris.Prelude.Types.Left', E212} -> (fun (V336) -> {'Idris.Prelude.Types.Left', V336} end(E212)); {'Idris.Prelude.Types.Right', E213} -> (fun (V337) -> begin (V338 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V332))(V334))), case V338 of {'Idris.Prelude.Types.Left', E214} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V340) -> (('dn--un--toBuf_TTC_RawImp'(V0, V333))(V334)) end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211)); {'Idris.TTImp.TTImp.IQuote', E216, E217} -> (fun (V341, V342) -> fun (V343) -> begin (V344 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 21, V343))), case V344 of {'Idris.Prelude.Types.Left', E218} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V346) -> begin (V347 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V341))(V343))), case V347 of {'Idris.Prelude.Types.Left', E220} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V349) -> (('dn--un--toBuf_TTC_RawImp'(V0, V342))(V343)) end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E216, E217)); {'Idris.TTImp.TTImp.IQuoteName', E222, E223} -> (fun (V350, V351) -> fun (V352) -> begin (V353 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 22, V352))), case V353 of {'Idris.Prelude.Types.Left', E224} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V355) -> begin (V356 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V350))(V352))), case V356 of {'Idris.Prelude.Types.Left', E226} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V358) -> (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V351))(V352)) end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E222, E223)); {'Idris.TTImp.TTImp.IQuoteDecl', E228, E229} -> (fun (V359, V360) -> fun (V361) -> begin (V362 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 23, V361))), case V362 of {'Idris.Prelude.Types.Left', E230} -> (fun (V363) -> {'Idris.Prelude.Types.Left', V363} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V364) -> begin (V365 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V359))(V361))), case V365 of {'Idris.Prelude.Types.Left', E232} -> (fun (V366) -> {'Idris.Prelude.Types.Left', V366} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V367) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V368) -> fun (V369) -> ('dn--un--toBuf_TTC_ImpDecl'(V368, V369)) end end, fun (V370) -> fun (V371) -> ('dn--un--fromBuf_TTC_ImpDecl'(V370, V371)) end end}, V0, V360, V361)) end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E228, E229)); {'Idris.TTImp.TTImp.IUnquote', E234, E235} -> (fun (V372, V373) -> fun (V374) -> begin (V375 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 24, V374))), case V375 of {'Idris.Prelude.Types.Left', E236} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V377) -> begin (V378 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V372))(V374))), case V378 of {'Idris.Prelude.Types.Left', E238} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V380) -> (('dn--un--toBuf_TTC_RawImp'(V0, V373))(V374)) end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E234, E235)); {'Idris.TTImp.TTImp.IRunElab', E240, E241} -> (fun (V381, V382) -> fun (V383) -> begin (V384 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 25, V383))), case V384 of {'Idris.Prelude.Types.Left', E242} -> (fun (V385) -> {'Idris.Prelude.Types.Left', V385} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V386) -> begin (V387 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V381))(V383))), case V387 of {'Idris.Prelude.Types.Left', E244} -> (fun (V388) -> {'Idris.Prelude.Types.Left', V388} end(E244)); {'Idris.Prelude.Types.Right', E245} -> (fun (V389) -> (('dn--un--toBuf_TTC_RawImp'(V0, V382))(V383)) end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E240, E241)); {'Idris.TTImp.TTImp.IPrimVal', E246, E247} -> (fun (V390, V391) -> fun (V392) -> begin (V393 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 26, V392))), case V393 of {'Idris.Prelude.Types.Left', E248} -> (fun (V394) -> {'Idris.Prelude.Types.Left', V394} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V395) -> begin (V396 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V390))(V392))), case V396 of {'Idris.Prelude.Types.Left', E250} -> (fun (V397) -> {'Idris.Prelude.Types.Left', V397} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V398) -> (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Constant'(V0, V391))(V392)) end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E246, E247)); {'Idris.TTImp.TTImp.IType', E252} -> (fun (V399) -> fun (V400) -> begin (V401 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 27, V400))), case V401 of {'Idris.Prelude.Types.Left', E253} -> (fun (V402) -> {'Idris.Prelude.Types.Left', V402} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V403) -> (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V399))(V400)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E252)); {'Idris.TTImp.TTImp.IHole', E255, E256} -> (fun (V404, V405) -> fun (V406) -> begin (V407 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 28, V406))), case V407 of {'Idris.Prelude.Types.Left', E257} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V409) -> begin (V410 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V404))(V406))), case V410 of {'Idris.Prelude.Types.Left', E259} -> (fun (V411) -> {'Idris.Prelude.Types.Left', V411} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V412) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V0, V405))(V406)) end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E255, E256)); {'Idris.TTImp.TTImp.IUnifyLog', E261, E262, E263} -> (fun (V413, V414, V415) -> ('dn--un--toBuf_TTC_RawImp'(V0, V415)) end(E261, E262, E263)); {'Idris.TTImp.TTImp.Implicit', E264, E265} -> (fun (V416, V417) -> fun (V418) -> begin (V419 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 29, V418))), case V419 of {'Idris.Prelude.Types.Left', E266} -> (fun (V420) -> {'Idris.Prelude.Types.Left', V420} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V421) -> begin (V422 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V416))(V418))), case V422 of {'Idris.Prelude.Types.Left', E268} -> (fun (V423) -> {'Idris.Prelude.Types.Left', V423} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V424) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Bool'(V0, V417))(V418)) end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E264, E265)); {'Idris.TTImp.TTImp.IWithUnambigNames', E270, E271, E272} -> (fun (V425, V426, V427) -> fun (V428) -> begin (V429 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 30, V428))), case V429 of {'Idris.Prelude.Types.Left', E273} -> (fun (V430) -> {'Idris.Prelude.Types.Left', V430} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V431) -> begin (V436 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V432) -> fun (V433) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V432, V433)) end end, fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V434, V435)) end end}, V0, V426, V428))), case V436 of {'Idris.Prelude.Types.Left', E275} -> (fun (V437) -> {'Idris.Prelude.Types.Left', V437} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V438) -> (('dn--un--toBuf_TTC_RawImp'(V0, V427))(V428)) end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E270, E271, E272)); {'Idris.TTImp.TTImp.IAutoApp', E277, E278, E279} -> (fun (V439, V440, V441) -> fun (V442) -> begin (V443 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 31, V442))), case V443 of {'Idris.Prelude.Types.Left', E280} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V445) -> begin (V446 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V439))(V442))), case V446 of {'Idris.Prelude.Types.Left', E282} -> (fun (V447) -> {'Idris.Prelude.Types.Left', V447} end(E282)); {'Idris.Prelude.Types.Right', E283} -> (fun (V448) -> begin (V449 = (('dn--un--toBuf_TTC_RawImp'(V0, V440))(V442))), case V449 of {'Idris.Prelude.Types.Left', E284} -> (fun (V450) -> {'Idris.Prelude.Types.Left', V450} end(E284)); {'Idris.Prelude.Types.Right', E285} -> (fun (V451) -> (('dn--un--toBuf_TTC_RawImp'(V0, V441))(V442)) end(E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E277, E278, E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_ImpTy'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> fun (V6) -> begin (V7 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V6))), case V7 of {'Idris.Prelude.Types.Left', E4} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V9) -> begin (V10 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V3))(V6))), case V10 of {'Idris.Prelude.Types.Left', E6} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V12) -> begin (V13 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V4))(V6))), case V13 of {'Idris.Prelude.Types.Left', E8} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V15) -> (('dn--un--toBuf_TTC_RawImp'(V0, V5))(V6)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_ImpRecord'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> fun (V7) -> begin (V8 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V7))), case V8 of {'Idris.Prelude.Types.Left', E5} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V10) -> begin (V11 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V3))(V7))), case V11 of {'Idris.Prelude.Types.Left', E7} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V13) -> begin (V194 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V18, V19)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V22, V23)) end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V24, V25)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V30) -> fun (V31) -> ('dn--un--toBuf_TTC_RawImp'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('dn--un--fromBuf_TTC_RawImp'(V32, V33)) end end}, V28, V29)) end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('dn--un--toBuf_TTC_RawImp'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('dn--un--fromBuf_TTC_RawImp'(V38, V39)) end end}, V34, V35)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V40) -> fun (V41) -> ('dn--un--toBuf_TTC_RawImp'(V40, V41)) end end, fun (V42) -> fun (V43) -> ('dn--un--fromBuf_TTC_RawImp'(V42, V43)) end end}}, V26, V27)) end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V48) -> fun (V49) -> ('dn--un--toBuf_TTC_RawImp'(V48, V49)) end end, fun (V50) -> fun (V51) -> ('dn--un--fromBuf_TTC_RawImp'(V50, V51)) end end}, V46, V47)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('dn--un--toBuf_TTC_RawImp'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('dn--un--fromBuf_TTC_RawImp'(V56, V57)) end end}, V52, V53)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V58) -> fun (V59) -> ('dn--un--toBuf_TTC_RawImp'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('dn--un--fromBuf_TTC_RawImp'(V60, V61)) end end}}, V44, V45)) end end}}, V20, V21)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V64, V65)) end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V66, V67)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V68) -> fun (V69) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V72) -> fun (V73) -> ('dn--un--toBuf_TTC_RawImp'(V72, V73)) end end, fun (V74) -> fun (V75) -> ('dn--un--fromBuf_TTC_RawImp'(V74, V75)) end end}, V70, V71)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V78) -> fun (V79) -> ('dn--un--toBuf_TTC_RawImp'(V78, V79)) end end, fun (V80) -> fun (V81) -> ('dn--un--fromBuf_TTC_RawImp'(V80, V81)) end end}, V76, V77)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('dn--un--toBuf_TTC_RawImp'(V82, V83)) end end, fun (V84) -> fun (V85) -> ('dn--un--fromBuf_TTC_RawImp'(V84, V85)) end end}}, V68, V69)) end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V90) -> fun (V91) -> ('dn--un--toBuf_TTC_RawImp'(V90, V91)) end end, fun (V92) -> fun (V93) -> ('dn--un--fromBuf_TTC_RawImp'(V92, V93)) end end}, V88, V89)) end end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V96) -> fun (V97) -> ('dn--un--toBuf_TTC_RawImp'(V96, V97)) end end, fun (V98) -> fun (V99) -> ('dn--un--fromBuf_TTC_RawImp'(V98, V99)) end end}, V94, V95)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V100) -> fun (V101) -> ('dn--un--toBuf_TTC_RawImp'(V100, V101)) end end, fun (V102) -> fun (V103) -> ('dn--un--fromBuf_TTC_RawImp'(V102, V103)) end end}}, V86, V87)) end end}}, V62, V63)) end end}}, V14, V15)) end end, fun (V104) -> fun (V105) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V106, V107)) end end, fun (V108) -> fun (V109) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V108, V109)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V110) -> fun (V111) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V112) -> fun (V113) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V112, V113)) end end, fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V114, V115)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V116) -> fun (V117) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V120) -> fun (V121) -> ('dn--un--toBuf_TTC_RawImp'(V120, V121)) end end, fun (V122) -> fun (V123) -> ('dn--un--fromBuf_TTC_RawImp'(V122, V123)) end end}, V118, V119)) end end, fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V126) -> fun (V127) -> ('dn--un--toBuf_TTC_RawImp'(V126, V127)) end end, fun (V128) -> fun (V129) -> ('dn--un--fromBuf_TTC_RawImp'(V128, V129)) end end}, V124, V125)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V130) -> fun (V131) -> ('dn--un--toBuf_TTC_RawImp'(V130, V131)) end end, fun (V132) -> fun (V133) -> ('dn--un--fromBuf_TTC_RawImp'(V132, V133)) end end}}, V116, V117)) end end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V138) -> fun (V139) -> ('dn--un--toBuf_TTC_RawImp'(V138, V139)) end end, fun (V140) -> fun (V141) -> ('dn--un--fromBuf_TTC_RawImp'(V140, V141)) end end}, V136, V137)) end end, fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V144) -> fun (V145) -> ('dn--un--toBuf_TTC_RawImp'(V144, V145)) end end, fun (V146) -> fun (V147) -> ('dn--un--fromBuf_TTC_RawImp'(V146, V147)) end end}, V142, V143)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V148) -> fun (V149) -> ('dn--un--toBuf_TTC_RawImp'(V148, V149)) end end, fun (V150) -> fun (V151) -> ('dn--un--fromBuf_TTC_RawImp'(V150, V151)) end end}}, V134, V135)) end end}}, V110, V111)) end end, fun (V152) -> fun (V153) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V154, V155)) end end, fun (V156) -> fun (V157) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V156, V157)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V158) -> fun (V159) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V160) -> fun (V161) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V162) -> fun (V163) -> ('dn--un--toBuf_TTC_RawImp'(V162, V163)) end end, fun (V164) -> fun (V165) -> ('dn--un--fromBuf_TTC_RawImp'(V164, V165)) end end}, V160, V161)) end end, fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V168) -> fun (V169) -> ('dn--un--toBuf_TTC_RawImp'(V168, V169)) end end, fun (V170) -> fun (V171) -> ('dn--un--fromBuf_TTC_RawImp'(V170, V171)) end end}, V166, V167)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V172) -> fun (V173) -> ('dn--un--toBuf_TTC_RawImp'(V172, V173)) end end, fun (V174) -> fun (V175) -> ('dn--un--fromBuf_TTC_RawImp'(V174, V175)) end end}}, V158, V159)) end end, fun (V176) -> fun (V177) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V180) -> fun (V181) -> ('dn--un--toBuf_TTC_RawImp'(V180, V181)) end end, fun (V182) -> fun (V183) -> ('dn--un--fromBuf_TTC_RawImp'(V182, V183)) end end}, V178, V179)) end end, fun (V184) -> fun (V185) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V186) -> fun (V187) -> ('dn--un--toBuf_TTC_RawImp'(V186, V187)) end end, fun (V188) -> fun (V189) -> ('dn--un--fromBuf_TTC_RawImp'(V188, V189)) end end}, V184, V185)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V190) -> fun (V191) -> ('dn--un--toBuf_TTC_RawImp'(V190, V191)) end end, fun (V192) -> fun (V193) -> ('dn--un--fromBuf_TTC_RawImp'(V192, V193)) end end}}, V176, V177)) end end}}, V152, V153)) end end}}, V104, V105)) end end}, V0, V4, V7))), case V194 of {'Idris.Prelude.Types.Left', E9} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V196) -> begin (V197 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V5))(V7))), case V197 of {'Idris.Prelude.Types.Left', E11} -> (fun (V198) -> {'Idris.Prelude.Types.Left', V198} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V199) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V200) -> fun (V201) -> ('dn--un--toBuf_TTC_IField'(V200, V201)) end end, fun (V202) -> fun (V203) -> ('dn--un--fromBuf_TTC_IField'(V202, V203)) end end}, V0, V6, V7)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_ImpDecl'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> fun (V7) -> begin (V8 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V7))), case V8 of {'Idris.Prelude.Types.Left', E5} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V10) -> begin (V11 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V7))), case V11 of {'Idris.Prelude.Types.Left', E7} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V3))(V7))), case V14 of {'Idris.Prelude.Types.Left', E9} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V16) -> begin (V17 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Visibility'(V0, V4))(V7))), case V17 of {'Idris.Prelude.Types.Left', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V19) -> begin (V24 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_FnOpt'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('dn--un--fromBuf_TTC_FnOpt'(V22, V23)) end end}, V0, V5, V7))), case V24 of {'Idris.Prelude.Types.Left', E13} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V26) -> (('dn--un--toBuf_TTC_ImpTy'(V0, V6))(V7)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E15, E16, E17} -> (fun (V27, V28, V29) -> fun (V30) -> begin (V31 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V30))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> begin (V34 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V27))(V30))), case V34 of {'Idris.Prelude.Types.Left', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V36) -> begin (V37 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Visibility'(V0, V28))(V30))), case V37 of {'Idris.Prelude.Types.Left', E22} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V39) -> (('dn--un--toBuf_TTC_ImpData'(V0, V29))(V30)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); {'Idris.TTImp.TTImp.IDef', E24, E25, E26} -> (fun (V40, V41, V42) -> fun (V43) -> begin (V44 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V43))), case V44 of {'Idris.Prelude.Types.Left', E27} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V46) -> begin (V47 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V40))(V43))), case V47 of {'Idris.Prelude.Types.Left', E29} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V49) -> begin (V50 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V41))(V43))), case V50 of {'Idris.Prelude.Types.Left', E31} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V52) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V53) -> fun (V54) -> ('dn--un--toBuf_TTC_ImpClause'(V53, V54)) end end, fun (V55) -> fun (V56) -> ('dn--un--fromBuf_TTC_ImpClause'(V55, V56)) end end}, V0, V42, V43)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26)); {'Idris.TTImp.TTImp.IParameters', E33, E34, E35} -> (fun (V57, V58, V59) -> fun (V60) -> begin (V61 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 3, V60))), case V61 of {'Idris.Prelude.Types.Left', E36} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V63) -> begin (V64 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V57))(V60))), case V64 of {'Idris.Prelude.Types.Left', E38} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V66) -> begin (V87 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V67) -> fun (V68) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V69, V70)) end end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V71, V72)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V73) -> fun (V74) -> ('dn--un--toBuf_TTC_RawImp'(V73, V74)) end end, fun (V75) -> fun (V76) -> ('dn--un--fromBuf_TTC_RawImp'(V75, V76)) end end}}, V67, V68)) end end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V79, V80)) end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V81, V82)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V83) -> fun (V84) -> ('dn--un--toBuf_TTC_RawImp'(V83, V84)) end end, fun (V85) -> fun (V86) -> ('dn--un--fromBuf_TTC_RawImp'(V85, V86)) end end}}, V77, V78)) end end}, V0, V58, V60))), case V87 of {'Idris.Prelude.Types.Left', E40} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V89) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V90) -> fun (V91) -> ('dn--un--toBuf_TTC_ImpDecl'(V90, V91)) end end, fun (V92) -> fun (V93) -> ('dn--un--fromBuf_TTC_ImpDecl'(V92, V93)) end end}, V0, V59, V60)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35)); {'Idris.TTImp.TTImp.IRecord', E42, E43, E44, E45} -> (fun (V94, V95, V96, V97) -> fun (V98) -> begin (V99 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 4, V98))), case V99 of {'Idris.Prelude.Types.Left', E46} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V101) -> begin (V102 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V94))(V98))), case V102 of {'Idris.Prelude.Types.Left', E48} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V104) -> begin (V109 = (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V105) -> fun (V106) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V105, V106)) end end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V107, V108)) end end}, V0, V95))(V98))), case V109 of {'Idris.Prelude.Types.Left', E50} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V111) -> begin (V112 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Visibility'(V0, V96))(V98))), case V112 of {'Idris.Prelude.Types.Left', E52} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V114) -> (('dn--un--toBuf_TTC_ImpRecord'(V0, V97))(V98)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44, E45)); {'Idris.TTImp.TTImp.INamespace', E54, E55, E56} -> (fun (V115, V116, V117) -> fun (V118) -> begin (V119 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 5, V118))), case V119 of {'Idris.Prelude.Types.Left', E57} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V121) -> begin (V122 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V115))(V118))), case V122 of {'Idris.Prelude.Types.Left', E59} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V124) -> begin (V125 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V0, V116, V118))), case V125 of {'Idris.Prelude.Types.Left', E61} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V127) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V128) -> fun (V129) -> ('dn--un--toBuf_TTC_ImpDecl'(V128, V129)) end end, fun (V130) -> fun (V131) -> ('dn--un--fromBuf_TTC_ImpDecl'(V130, V131)) end end}, V0, V117, V118)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E54, E55, E56)); {'Idris.TTImp.TTImp.ITransform', E63, E64, E65, E66} -> (fun (V132, V133, V134, V135) -> fun (V136) -> begin (V137 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 6, V136))), case V137 of {'Idris.Prelude.Types.Left', E67} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V139) -> begin (V140 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V132))(V136))), case V140 of {'Idris.Prelude.Types.Left', E69} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V142) -> begin (V143 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V133))(V136))), case V143 of {'Idris.Prelude.Types.Left', E71} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V145) -> begin (V146 = (('dn--un--toBuf_TTC_RawImp'(V0, V134))(V136))), case V146 of {'Idris.Prelude.Types.Left', E73} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V148) -> (('dn--un--toBuf_TTC_RawImp'(V0, V135))(V136)) end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63, E64, E65, E66)); {'Idris.TTImp.TTImp.IRunElabDecl', E75, E76} -> (fun (V149, V150) -> fun (V151) -> begin (V152 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 7, V151))), case V152 of {'Idris.Prelude.Types.Left', E77} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V154) -> begin (V155 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V149))(V151))), case V155 of {'Idris.Prelude.Types.Left', E79} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V157) -> (('dn--un--toBuf_TTC_RawImp'(V0, V150))(V151)) end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E75, E76)); {'Idris.TTImp.TTImp.IPragma', E81, E82} -> (fun (V158, V159) -> fun (V160) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t write Pragma"/utf8>>}, V160)) end end(E81, E82)); {'Idris.TTImp.TTImp.ILog', E83} -> (fun (V161) -> fun (V162) -> begin (V163 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 8, V162))), case V163 of {'Idris.Prelude.Types.Left', E84} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V165) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V166) -> fun (V167) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V168) -> fun (V169) -> fun (V170) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V171) -> fun (V172) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V171, V172)) end end, fun (V173) -> fun (V174) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V173, V174)) end end}, V168, V169, V170)) end end end, fun (V175) -> fun (V176) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V177) -> fun (V178) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V177, V178)) end end, fun (V179) -> fun (V180) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V179, V180)) end end}, V175, V176)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V181) -> fun (V182) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V181, V182)) end end, fun (V183) -> fun (V184) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V183, V184)) end end}}, V166, V167)) end end, fun (V185) -> fun (V186) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V187) -> fun (V188) -> fun (V189) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V190) -> fun (V191) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V190, V191)) end end, fun (V192) -> fun (V193) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V192, V193)) end end}, V187, V188, V189)) end end end, fun (V194) -> fun (V195) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V196) -> fun (V197) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V196, V197)) end end, fun (V198) -> fun (V199) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V198, V199)) end end}, V194, V195)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V200) -> fun (V201) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V200, V201)) end end, fun (V202) -> fun (V203) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V202, V203)) end end}}, V185, V186)) end end}, V0, V161))(V162)) end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_ImpData'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> fun (V7) -> begin (V8 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V7))), case V8 of {'Idris.Prelude.Types.Left', E5} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V10) -> begin (V11 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V7))), case V11 of {'Idris.Prelude.Types.Left', E7} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V3))(V7))), case V14 of {'Idris.Prelude.Types.Left', E9} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V16) -> begin (V17 = (('dn--un--toBuf_TTC_RawImp'(V0, V4))(V7))), case V17 of {'Idris.Prelude.Types.Left', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V19) -> begin (V24 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_DataOpt'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('dn--un--fromBuf_TTC_DataOpt'(V22, V23)) end end}, V0, V5, V7))), case V24 of {'Idris.Prelude.Types.Left', E13} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V26) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('dn--un--toBuf_TTC_ImpTy'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('dn--un--fromBuf_TTC_ImpTy'(V29, V30)) end end}, V0, V6, V7)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E15, E16, E17} -> (fun (V31, V32, V33) -> fun (V34) -> begin (V35 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V34))), case V35 of {'Idris.Prelude.Types.Left', E18} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V37) -> begin (V38 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V31))(V34))), case V38 of {'Idris.Prelude.Types.Left', E20} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V40) -> begin (V41 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V32))(V34))), case V41 of {'Idris.Prelude.Types.Left', E22} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V43) -> (('dn--un--toBuf_TTC_RawImp'(V0, V33))(V34)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_ImpClause'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V2, V3, V4) -> fun (V5) -> begin (V6 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V5))), case V6 of {'Idris.Prelude.Types.Left', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V8) -> begin (V9 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V5))), case V9 of {'Idris.Prelude.Types.Left', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V11) -> begin (V12 = (('dn--un--toBuf_TTC_RawImp'(V0, V3))(V5))), case V12 of {'Idris.Prelude.Types.Left', E7} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V14) -> (('dn--un--toBuf_TTC_RawImp'(V0, V4))(V5)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.ImpossibleClause', E9, E10} -> (fun (V15, V16) -> fun (V17) -> begin (V18 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V17))), case V18 of {'Idris.Prelude.Types.Left', E11} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V15))(V17))), case V21 of {'Idris.Prelude.Types.Left', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V23) -> (('dn--un--toBuf_TTC_RawImp'(V0, V16))(V17)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10)); {'Idris.TTImp.TTImp.WithClause', E15, E16, E17, E18, E19, E20} -> (fun (V24, V25, V26, V27, V28, V29) -> fun (V30) -> begin (V31 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V30))), case V31 of {'Idris.Prelude.Types.Left', E21} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V33) -> begin (V34 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V24))(V30))), case V34 of {'Idris.Prelude.Types.Left', E23} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V36) -> begin (V37 = (('dn--un--toBuf_TTC_RawImp'(V0, V25))(V30))), case V37 of {'Idris.Prelude.Types.Left', E25} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V39) -> begin (V40 = (('dn--un--toBuf_TTC_RawImp'(V0, V26))(V30))), case V40 of {'Idris.Prelude.Types.Left', E27} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V42) -> begin (V47 = (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V45, V46)) end end}, V0, V27))(V30))), case V47 of {'Idris.Prelude.Types.Left', E29} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V49) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('dn--un--toBuf_TTC_ImpClause'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('dn--un--fromBuf_TTC_ImpClause'(V52, V53)) end end}, V0, V29, V30)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_IFieldUpdate'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V2, V3) -> fun (V4) -> begin (V5 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V4))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V12 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V10, V11)) end end}, V0, V2, V4))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> (('dn--un--toBuf_TTC_RawImp'(V0, V3))(V4)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E6, E7} -> (fun (V15, V16) -> fun (V17) -> begin (V18 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V17))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V25 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V21) -> fun (V22) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V23, V24)) end end}, V0, V15, V17))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> (('dn--un--toBuf_TTC_RawImp'(V0, V16))(V17)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_IField'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> fun (V7) -> begin (V8 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))(V7))), case V8 of {'Idris.Prelude.Types.Left', E5} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V10) -> begin (V11 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V3))(V7))), case V11 of {'Idris.Prelude.Types.Left', E7} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V13) -> begin (V18 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('dn--un--toBuf_TTC_RawImp'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('dn--un--fromBuf_TTC_RawImp'(V16, V17)) end end}, V0, V4))(V7))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V5))(V7))), case V21 of {'Idris.Prelude.Types.Left', E11} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V23) -> (('dn--un--toBuf_TTC_RawImp'(V0, V6))(V7)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_FnOpt'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> fun (V2) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V2)) end end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> fun (V3) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 11, V3)) end end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V4) -> fun (V5) -> begin (V6 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V5))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Bool'(V0, V4))(V5)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E3} -> (fun (V9) -> fun (V10) -> begin (V11 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V10))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> (('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Bool'(V0, V9))(V10)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> fun (V14) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 3, V14)) end end()); {'Idris.TTImp.TTImp.ForeignFn', E6} -> (fun (V15) -> fun (V16) -> begin (V17 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 4, V16))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_RawImp'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('dn--un--fromBuf_TTC_RawImp'(V22, V23)) end end}, V0, V15, V16)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> fun (V24) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 5, V24)) end end()); {'Idris.TTImp.TTImp.Totality', E9} -> (fun (V25) -> case V25 of {'Idris.Core.TT.Total'} -> (fun () -> fun (V26) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 6, V26)) end end()); {'Idris.Core.TT.CoveringOnly'} -> (fun () -> fun (V27) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 7, V27)) end end()); {'Idris.Core.TT.PartialOK'} -> (fun () -> fun (V28) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 8, V28)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> fun (V29) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 9, V29)) end end()); {'Idris.TTImp.TTImp.SpecArgs', E10} -> (fun (V30) -> fun (V31) -> begin (V32 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 10, V31))), case V32 of {'Idris.Prelude.Types.Left', E11} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V34) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V37, V38)) end end}, V0, V30, V31)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_DataOpt'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.SearchBy', E0} -> (fun (V2) -> fun (V3) -> begin (V4 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V3))), case V4 of {'Idris.Prelude.Types.Left', E1} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V6) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V9, V10)) end end}, V0, V2, V3)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> fun (V11) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V11)) end end()); {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> fun (V12) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V12)) end end()); {'Idris.TTImp.TTImp.External'} -> (fun () -> fun (V13) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 3, V13)) end end()); {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> fun (V14) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 4, V14)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_BindMode'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.PI', E0} -> (fun (V2) -> fun (V3) -> begin (V4 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V3))), case V4 of {'Idris.Prelude.Types.Left', E1} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V6) -> (('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V2))(V3)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.PATTERN'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V7)) end end()); {'Idris.TTImp.TTImp.NONE'} -> (fun () -> fun (V8) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V8)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--toBuf_TTC_AltType'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.FirstSuccess'} -> (fun () -> fun (V2) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 0, V2)) end end()); {'Idris.TTImp.TTImp.Unique'} -> (fun () -> fun (V3) -> ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 1, V3)) end end()); {'Idris.TTImp.TTImp.UniqueDefault', E0} -> (fun (V4) -> fun (V5) -> begin (V6 = ('Idris.Idris2.Libraries.Utils.Binary':'un--tag'(V0, 2, V5))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> (('dn--un--toBuf_TTC_RawImp'(V0, V4))(V5)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_RawImp'(V0) -> case V0 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)) end(E0, E1)); {'Idris.TTImp.TTImp.IPi', E2, E3, E4, E5, E6, E7} -> (fun (V3, V4, V5, V6, V7, V8) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%pi "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V9) -> ('dn--un--show_Show_RawImp'(V9)) end, fun (V10) -> fun (V11) -> ('dn--un--showPrec_Show_RawImp'(V10, V11)) end end}, V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)) end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V13, V14)) end end}, {'Idris.Prelude.Show.App'}, V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V8)), <<")"/utf8>>)))))))))))))))))))) end(E2, E3, E4, E5, E6, E7)); {'Idris.TTImp.TTImp.ILam', E8, E9, E10, E11, E12, E13} -> (fun (V15, V16, V17, V18, V19, V20) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%lam "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V16)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V21) -> ('dn--un--show_Show_RawImp'(V21)) end, fun (V22) -> fun (V23) -> ('dn--un--showPrec_Show_RawImp'(V22, V23)) end end}, V17)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V25, V26)) end end}, {'Idris.Prelude.Show.App'}, V18)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V19)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V20)), <<")"/utf8>>)))))))))))))))))))) end(E8, E9, E10, E11, E12, E13)); {'Idris.TTImp.TTImp.ILet', E14, E15, E16, E17, E18, E19, E20} -> (fun (V27, V28, V29, V30, V31, V32, V33) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%let "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V29)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V30)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V31)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V32)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V33)), <<")"/utf8>>)))))))))))))))))))))) end(E14, E15, E16, E17, E18, E19, E20)); {'Idris.TTImp.TTImp.ICase', E21, E22, E23, E24} -> (fun (V34, V35, V36, V37) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%case ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V35)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V36)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<") "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V38) -> ('dn--un--show_Show_ImpClause'(V38)) end, fun (V39) -> fun (V40) -> ('dn--un--showPrec_Show_ImpClause'(V39, V40)) end end}, V37)), <<")"/utf8>>)))))))))))) end(E21, E22, E23, E24)); {'Idris.TTImp.TTImp.ILocal', E25, E26, E27} -> (fun (V41, V42, V43) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%local ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V44) -> ('dn--un--show_Show_ImpDecl'(V44)) end, fun (V45) -> fun (V46) -> ('dn--un--showPrec_Show_ImpDecl'(V45, V46)) end end}, V42)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<") "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V43)), <<")"/utf8>>)))))))) end(E25, E26, E27)); {'Idris.TTImp.TTImp.ICaseLocal', E28, E29, E30, E31, E32} -> (fun (V47, V48, V49, V50, V51) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%caselocal ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V48)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V49)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V52) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V53, V54)) end end}, V50)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<") "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V51)), <<")"/utf8>>)))))))))))))))) end(E28, E29, E30, E31, E32)); {'Idris.TTImp.TTImp.IUpdate', E33, E34, E35} -> (fun (V55, V56, V57) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%record "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V58) -> ('dn--un--show_Show_IFieldUpdate'(V58)) end, V56)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V57)), <<")"/utf8>>)))))))) end(E33, E34, E35)); {'Idris.TTImp.TTImp.IApp', E36, E37, E38} -> (fun (V59, V60, V61) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V60)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V61)), <<")"/utf8>>)))))))) end(E36, E37, E38)); {'Idris.TTImp.TTImp.INamedApp', E39, E40, E41, E42} -> (fun (V62, V63, V64, V65) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V63)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ["/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V64)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V65)), <<"])"/utf8>>)))))))))))) end(E39, E40, E41, E42)); {'Idris.TTImp.TTImp.IAutoApp', E43, E44, E45} -> (fun (V66, V67, V68) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V67)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ["/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V68)), <<"])"/utf8>>)))))))) end(E43, E44, E45)); {'Idris.TTImp.TTImp.IWithApp', E46, E47, E48} -> (fun (V69, V70, V71) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V70)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" | "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V71)), <<")"/utf8>>)))))))) end(E46, E47, E48)); {'Idris.TTImp.TTImp.ISearch', E49, E50} -> (fun (V72, V73) -> <<"%search"/utf8>> end(E49, E50)); {'Idris.TTImp.TTImp.IAlternative', E51, E52, E53} -> (fun (V74, V75, V76) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(|"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<","/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V77) -> ('dn--un--show_Show_RawImp'(V77)) end, V76)))), <<"|)"/utf8>>)))) end(E51, E52, E53)); {'Idris.TTImp.TTImp.IRewrite', E54, E55, E56} -> (fun (V78, V79, V80) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%rewrite ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V79)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<") ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V80)), <<"))"/utf8>>)))))))) end(E54, E55, E56)); {'Idris.TTImp.TTImp.ICoerced', E57, E58} -> (fun (V81, V82) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%coerced "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V82)), <<")"/utf8>>)))) end(E57, E58)); {'Idris.TTImp.TTImp.IBindHere', E59, E60, E61} -> (fun (V83, V84, V85) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%bindhere "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V85)), <<")"/utf8>>)))) end(E59, E60, E61)); {'Idris.TTImp.TTImp.IBindVar', E62, E63} -> (fun (V86, V87) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"$"/utf8>>, V87)) end(E62, E63)); {'Idris.TTImp.TTImp.IAs', E64, E65, E66, E67, E68} -> (fun (V88, V89, V90, V91, V92) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V91)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"@("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V92)), <<")"/utf8>>)))))) end(E64, E65, E66, E67, E68)); {'Idris.TTImp.TTImp.IMustUnify', E69, E70, E71} -> (fun (V93, V94, V95) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<".("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V95)), <<")"/utf8>>)))) end(E69, E70, E71)); {'Idris.TTImp.TTImp.IDelayed', E72, E73, E74} -> (fun (V96, V97, V98) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%delayed "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V98)), <<")"/utf8>>)))) end(E72, E73, E74)); {'Idris.TTImp.TTImp.IDelay', E75, E76} -> (fun (V99, V100) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%delay "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V100)), <<")"/utf8>>)))) end(E75, E76)); {'Idris.TTImp.TTImp.IForce', E77, E78} -> (fun (V101, V102) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%force "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V102)), <<")"/utf8>>)))) end(E77, E78)); {'Idris.TTImp.TTImp.IQuote', E79, E80} -> (fun (V103, V104) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%quote "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V104)), <<")"/utf8>>)))) end(E79, E80)); {'Idris.TTImp.TTImp.IQuoteName', E81, E82} -> (fun (V105, V106) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%quotename "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V106)), <<")"/utf8>>)))) end(E81, E82)); {'Idris.TTImp.TTImp.IQuoteDecl', E83, E84} -> (fun (V107, V108) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%quotedecl "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V109) -> ('dn--un--show_Show_ImpDecl'(V109)) end, fun (V110) -> fun (V111) -> ('dn--un--showPrec_Show_ImpDecl'(V110, V111)) end end}, V108)), <<")"/utf8>>)))) end(E83, E84)); {'Idris.TTImp.TTImp.IUnquote', E85, E86} -> (fun (V112, V113) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%unquote "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V113)), <<")"/utf8>>)))) end(E85, E86)); {'Idris.TTImp.TTImp.IRunElab', E87, E88} -> (fun (V114, V115) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%runelab "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V115)), <<")"/utf8>>)))) end(E87, E88)); {'Idris.TTImp.TTImp.IPrimVal', E89, E90} -> (fun (V116, V117) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_Constant'(V117)) end(E89, E90)); {'Idris.TTImp.TTImp.IHole', E91, E92} -> (fun (V118, V119) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"?"/utf8>>, V119)) end(E91, E92)); {'Idris.TTImp.TTImp.IUnifyLog', E93, E94, E95} -> (fun (V120, V121, V122) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%logging "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Options.Log':'dn--un--show_Show_LogLevel'(V121)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V122)), <<")"/utf8>>)))))))) end(E93, E94, E95)); {'Idris.TTImp.TTImp.IType', E96} -> (fun (V123) -> <<"%type"/utf8>> end(E96)); {'Idris.TTImp.TTImp.Implicit', E97, E98} -> (fun (V124, V125) -> case V125 of 0 -> <<"_"/utf8>>; 1 -> <<"?"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E97, E98)); {'Idris.TTImp.TTImp.IWithUnambigNames', E99, E100, E101} -> (fun (V126, V127, V128) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%with "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V129) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V129)) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V130, V131)) end end}, V127)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V128)), <<")"/utf8>>)))))))) end(E99, E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_ImpTy'(V0) -> case V0 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V1, V2, V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%claim "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V4)), <<")"/utf8>>)))))))) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_ImpRecord'(V0) -> case V0 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"record "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V6) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V8, V9)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V10) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V11) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V11)) end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V12, V13)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V14) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V15) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V16) -> ('dn--un--show_Show_RawImp'(V16)) end, fun (V17) -> fun (V18) -> ('dn--un--showPrec_Show_RawImp'(V17, V18)) end end}, V15)) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V21) -> ('dn--un--show_Show_RawImp'(V21)) end, fun (V22) -> fun (V23) -> ('dn--un--showPrec_Show_RawImp'(V22, V23)) end end}, V19, V20)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V24) -> ('dn--un--show_Show_RawImp'(V24)) end, fun (V25) -> fun (V26) -> ('dn--un--showPrec_Show_RawImp'(V25, V26)) end end}}, V14)) end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V29) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V30) -> ('dn--un--show_Show_RawImp'(V30)) end, fun (V31) -> fun (V32) -> ('dn--un--showPrec_Show_RawImp'(V31, V32)) end end}, V29)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('dn--un--show_Show_RawImp'(V35)) end, fun (V36) -> fun (V37) -> ('dn--un--showPrec_Show_RawImp'(V36, V37)) end end}, V33, V34)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V38) -> ('dn--un--show_Show_RawImp'(V38)) end, fun (V39) -> fun (V40) -> ('dn--un--showPrec_Show_RawImp'(V39, V40)) end end}}, V27, V28)) end end}}, V10)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V44, V45)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V47) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V48) -> ('dn--un--show_Show_RawImp'(V48)) end, fun (V49) -> fun (V50) -> ('dn--un--showPrec_Show_RawImp'(V49, V50)) end end}, V47)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V53) -> ('dn--un--show_Show_RawImp'(V53)) end, fun (V54) -> fun (V55) -> ('dn--un--showPrec_Show_RawImp'(V54, V55)) end end}, V51, V52)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V56) -> ('dn--un--show_Show_RawImp'(V56)) end, fun (V57) -> fun (V58) -> ('dn--un--showPrec_Show_RawImp'(V57, V58)) end end}}, V46)) end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V61) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V62) -> ('dn--un--show_Show_RawImp'(V62)) end, fun (V63) -> fun (V64) -> ('dn--un--showPrec_Show_RawImp'(V63, V64)) end end}, V61)) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V67) -> ('dn--un--show_Show_RawImp'(V67)) end, fun (V68) -> fun (V69) -> ('dn--un--showPrec_Show_RawImp'(V68, V69)) end end}, V65, V66)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V70) -> ('dn--un--show_Show_RawImp'(V70)) end, fun (V71) -> fun (V72) -> ('dn--un--showPrec_Show_RawImp'(V71, V72)) end end}}, V59, V60)) end end}}, V41, V42)) end end}}, V6)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V75) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V76, V77)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V78) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V79) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V79)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V80, V81)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V82) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V84) -> ('dn--un--show_Show_RawImp'(V84)) end, fun (V85) -> fun (V86) -> ('dn--un--showPrec_Show_RawImp'(V85, V86)) end end}, V83)) end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V89) -> ('dn--un--show_Show_RawImp'(V89)) end, fun (V90) -> fun (V91) -> ('dn--un--showPrec_Show_RawImp'(V90, V91)) end end}, V87, V88)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V92) -> ('dn--un--show_Show_RawImp'(V92)) end, fun (V93) -> fun (V94) -> ('dn--un--showPrec_Show_RawImp'(V93, V94)) end end}}, V82)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V97) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V98) -> ('dn--un--show_Show_RawImp'(V98)) end, fun (V99) -> fun (V100) -> ('dn--un--showPrec_Show_RawImp'(V99, V100)) end end}, V97)) end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V103) -> ('dn--un--show_Show_RawImp'(V103)) end, fun (V104) -> fun (V105) -> ('dn--un--showPrec_Show_RawImp'(V104, V105)) end end}, V101, V102)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V106) -> ('dn--un--show_Show_RawImp'(V106)) end, fun (V107) -> fun (V108) -> ('dn--un--showPrec_Show_RawImp'(V107, V108)) end end}}, V95, V96)) end end}}, V78)) end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V111) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V111)) end, fun (V112) -> fun (V113) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V112, V113)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V114) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V115) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V116) -> ('dn--un--show_Show_RawImp'(V116)) end, fun (V117) -> fun (V118) -> ('dn--un--showPrec_Show_RawImp'(V117, V118)) end end}, V115)) end, fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V121) -> ('dn--un--show_Show_RawImp'(V121)) end, fun (V122) -> fun (V123) -> ('dn--un--showPrec_Show_RawImp'(V122, V123)) end end}, V119, V120)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V124) -> ('dn--un--show_Show_RawImp'(V124)) end, fun (V125) -> fun (V126) -> ('dn--un--showPrec_Show_RawImp'(V125, V126)) end end}}, V114)) end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V129) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V130) -> ('dn--un--show_Show_RawImp'(V130)) end, fun (V131) -> fun (V132) -> ('dn--un--showPrec_Show_RawImp'(V131, V132)) end end}, V129)) end, fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V135) -> ('dn--un--show_Show_RawImp'(V135)) end, fun (V136) -> fun (V137) -> ('dn--un--showPrec_Show_RawImp'(V136, V137)) end end}, V133, V134)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V138) -> ('dn--un--show_Show_RawImp'(V138)) end, fun (V139) -> fun (V140) -> ('dn--un--showPrec_Show_RawImp'(V139, V140)) end end}}, V127, V128)) end end}}, V109, V110)) end end}}, V73, V74)) end end}, V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V141) -> ('dn--un--show_Show_IField'(V141)) end, V5)))), <<"\x{a}"/utf8>>)))))))))))))))) end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_ImpDecl'(V0) -> case V0 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V6) -> ('dn--un--show_Show_FnOpt'(V6)) end, fun (V7) -> fun (V8) -> ('dn--un--showPrec_Show_FnOpt'(V7, V8)) end end}, V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('dn--un--show_Show_ImpTy'(V5)))))) end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E5, E6, E7} -> (fun (V9, V10, V11) -> ('dn--un--show_Show_ImpData'(V11)) end(E5, E6, E7)); {'Idris.TTImp.TTImp.IDef', E8, E9, E10} -> (fun (V12, V13, V14) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%def "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V13)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V15) -> ('dn--un--show_Show_ImpClause'(V15)) end, fun (V16) -> fun (V17) -> ('dn--un--showPrec_Show_ImpClause'(V16, V17)) end end}, V14)), <<")"/utf8>>)))))))) end(E8, E9, E10)); {'Idris.TTImp.TTImp.IParameters', E11, E12, E13} -> (fun (V18, V19, V20) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"parameters "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V21) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V22)) end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V23, V24)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V25) -> ('dn--un--show_Show_RawImp'(V25)) end, fun (V26) -> fun (V27) -> ('dn--un--showPrec_Show_RawImp'(V26, V27)) end end}}, V21)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V30) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V31, V32)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V33) -> ('dn--un--show_Show_RawImp'(V33)) end, fun (V34) -> fun (V35) -> ('dn--un--showPrec_Show_RawImp'(V34, V35)) end end}}, V28, V29)) end end}, V19)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V36) -> ('dn--un--show_Show_ImpDecl'(V36)) end, V20)))))))))) end(E11, E12, E13)); {'Idris.TTImp.TTImp.IRecord', E14, E15, E16, E17} -> (fun (V37, V38, V39, V40) -> ('dn--un--show_Show_ImpRecord'(V40)) end(E14, E15, E16, E17)); {'Idris.TTImp.TTImp.INamespace', E18, E19, E20} -> (fun (V41, V42, V43) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"namespace "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_Namespace'(V42)), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V44) -> ('dn--un--show_Show_ImpDecl'(V44)) end, V43)))))))) end(E18, E19, E20)); {'Idris.TTImp.TTImp.ITransform', E21, E22, E23, E24} -> (fun (V45, V46, V47, V48) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%transform "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V46)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V47)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('dn--un--show_Show_RawImp'(V48)))))))))))) end(E21, E22, E23, E24)); {'Idris.TTImp.TTImp.IRunElabDecl', E25, E26} -> (fun (V49, V50) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%runElab "/utf8>>, ('dn--un--show_Show_RawImp'(V50)))) end(E25, E26)); {'Idris.TTImp.TTImp.IPragma', E27, E28} -> (fun (V51, V52) -> <<"[externally defined pragma]"/utf8>> end(E27, E28)); {'Idris.TTImp.TTImp.ILog', E29} -> (fun (V53) -> case V53 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> <<"%logging off"/utf8>> end()); {'Idris.Prelude.Types.Just', E30} -> (fun (V54) -> case V54 of {'Idris.Builtin.MkPair', E31, E32} -> (fun (V55, V56) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%logging "/utf8>>, case V55 of [] -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V56)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'((('Idris.Idris2.Prelude.Interfaces':'un--concat'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V59, V60, V61)) end end end end end, fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V64, V65, V66)) end end end end end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V68)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V69, V70)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}))(('Idris.Idris2.Data.List':'un--intersperse'('erased', <<"."/utf8>>, V55)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V56)))))) end)) end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_ImpData'(V0) -> case V0 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%data "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V6) -> ('dn--un--show_Show_ImpTy'(V6)) end, fun (V7) -> fun (V8) -> ('dn--un--showPrec_Show_ImpTy'(V7, V8)) end end}, V5)), <<")"/utf8>>)))))))))))) end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E5, E6, E7} -> (fun (V9, V10, V11) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"(%datadecl "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V10)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V11)), <<")"/utf8>>)))))))) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_ImpClause'(V0) -> case V0 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V1, V2, V3) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = "/utf8>>, ('dn--un--show_Show_RawImp'(V3)))))) end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E3, E4, E5, E6, E7, E8} -> (fun (V4, V5, V6, V7, V8, V9) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" with "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> <<""/utf8>> end, fun () -> fun (V10) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" proof "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V10)))) end end, V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V11) -> ('dn--un--show_Show_ImpClause'(V11)) end, fun (V12) -> fun (V13) -> ('dn--un--showPrec_Show_ImpClause'(V12, V13)) end end}, V9)))))))))))) end(E3, E4, E5, E6, E7, E8)); {'Idris.TTImp.TTImp.ImpossibleClause', E9, E10} -> (fun (V14, V15) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V15)), <<" impossible"/utf8>>)) end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_IFieldUpdate'(V0) -> case V0 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"->"/utf8>>, V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = "/utf8>>, ('dn--un--show_Show_RawImp'(V2)))))) end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"->"/utf8>>, V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" $= "/utf8>>, ('dn--un--show_Show_RawImp'(V4)))))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_IField'(V0) -> case V0 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> case V3 of {'Idris.Core.TT.Explicit'} -> (fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('dn--un--show_Show_RawImp'(V5)))))) end()); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"{"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('dn--un--show_Show_RawImp'(V5)), <<"}"/utf8>>)))))))) end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_FnOpt'(V0) -> case V0 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> <<"%inline"/utf8>> end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> <<"%tcinline"/utf8>> end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V1) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%hint "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(V1)))) end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E1} -> (fun (V2) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%globalhint "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(V2)))) end(E1)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> <<"%extern"/utf8>> end()); {'Idris.TTImp.TTImp.ForeignFn', E2} -> (fun (V3) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%foreign "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V4) -> ('dn--un--show_Show_RawImp'(V4)) end, V3)))))) end(E2)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> <<"%invertible"/utf8>> end()); {'Idris.TTImp.TTImp.Totality', E3} -> (fun (V5) -> case V5 of {'Idris.Core.TT.Total'} -> (fun () -> <<"total"/utf8>> end()); {'Idris.Core.TT.CoveringOnly'} -> (fun () -> <<"covering"/utf8>> end()); {'Idris.Core.TT.PartialOK'} -> (fun () -> <<"partial"/utf8>> end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> <<"%macro"/utf8>> end()); {'Idris.TTImp.TTImp.SpecArgs', E4} -> (fun (V6) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"%spec "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)) end, V6)))))) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show_RawImp'(V0, V1) -> ('dn--un--show_Show_RawImp'(V1)).
'dn--un--showPrec_Show_ImpTy'(V0, V1) -> ('dn--un--show_Show_ImpTy'(V1)).
'dn--un--showPrec_Show_ImpRecord'(V0, V1) -> ('dn--un--show_Show_ImpRecord'(V1)).
'dn--un--showPrec_Show_ImpDecl'(V0, V1) -> ('dn--un--show_Show_ImpDecl'(V1)).
'dn--un--showPrec_Show_ImpData'(V0, V1) -> ('dn--un--show_Show_ImpData'(V1)).
'dn--un--showPrec_Show_ImpClause'(V0, V1) -> ('dn--un--show_Show_ImpClause'(V1)).
'dn--un--showPrec_Show_IFieldUpdate'(V0, V1) -> ('dn--un--show_Show_IFieldUpdate'(V1)).
'dn--un--showPrec_Show_IField'(V0, V1) -> ('dn--un--show_Show_IField'(V1)).
'dn--un--showPrec_Show_FnOpt'(V0, V1) -> ('dn--un--show_Show_FnOpt'(V1)).
'dn--un--fromBuf_TTC_RawImp'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V7, V10}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V11 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V1))), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> begin (V21 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_RawImp'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('dn--un--fromBuf_TTC_RawImp'(V19, V20)) end end}, V0, V1))), case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> begin (V28 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V24, V25)) end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V26, V27)) end end}, V0, V1))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> begin (V31 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V31 of {'Idris.Prelude.Types.Left', E14} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V33) -> begin (V34 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V34 of {'Idris.Prelude.Types.Left', E16} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V13, V16, V23, V30, V33, V36}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 2 -> begin (V37 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V1))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V47 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('dn--un--toBuf_TTC_RawImp'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('dn--un--fromBuf_TTC_RawImp'(V45, V46)) end end}, V0, V1))), case V47 of {'Idris.Prelude.Types.Left', E22} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V49) -> begin (V54 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V52, V53)) end end}, V0, V1))), case V54 of {'Idris.Prelude.Types.Left', E24} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V56) -> begin (V57 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V57 of {'Idris.Prelude.Types.Left', E26} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V59) -> begin (V60 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V60 of {'Idris.Prelude.Types.Left', E28} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V62) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V39, V42, V49, V56, V59, V62}} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 3 -> begin (V63 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V63 of {'Idris.Prelude.Types.Left', E30} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V65) -> begin (V66 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V66 of {'Idris.Prelude.Types.Left', E32} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V68) -> begin (V69 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V1))), case V69 of {'Idris.Prelude.Types.Left', E34} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V71) -> begin (V72 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V72 of {'Idris.Prelude.Types.Left', E36} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V74) -> begin (V75 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V75 of {'Idris.Prelude.Types.Left', E38} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V77) -> begin (V78 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V78 of {'Idris.Prelude.Types.Left', E40} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V80) -> begin (V81 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V81 of {'Idris.Prelude.Types.Left', E42} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V83) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V65, V68, V71, V74, V77, V80, V83}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 4 -> begin (V84 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V84 of {'Idris.Prelude.Types.Left', E44} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V86) -> begin (V87 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V87 of {'Idris.Prelude.Types.Left', E46} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V89) -> begin (V90 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V90 of {'Idris.Prelude.Types.Left', E48} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V92) -> begin (V97 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V93) -> fun (V94) -> ('dn--un--toBuf_TTC_ImpClause'(V93, V94)) end end, fun (V95) -> fun (V96) -> ('dn--un--fromBuf_TTC_ImpClause'(V95, V96)) end end}, V0, V1))), case V97 of {'Idris.Prelude.Types.Left', E50} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V86, V89, V92, V99}} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 5 -> begin (V100 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V100 of {'Idris.Prelude.Types.Left', E52} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V102) -> begin (V107 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V103) -> fun (V104) -> ('dn--un--toBuf_TTC_ImpDecl'(V103, V104)) end end, fun (V105) -> fun (V106) -> ('dn--un--fromBuf_TTC_ImpDecl'(V105, V106)) end end}, V0, V1))), case V107 of {'Idris.Prelude.Types.Left', E54} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V109) -> begin (V110 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V110 of {'Idris.Prelude.Types.Left', E56} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V112) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V102, V109, V112}} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 6 -> begin (V113 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V113 of {'Idris.Prelude.Types.Left', E58} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V115) -> begin (V120 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V116) -> fun (V117) -> ('dn--un--toBuf_TTC_IFieldUpdate'(V116, V117)) end end, fun (V118) -> fun (V119) -> ('dn--un--fromBuf_TTC_IFieldUpdate'(V118, V119)) end end}, V0, V1))), case V120 of {'Idris.Prelude.Types.Left', E60} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V122) -> begin (V123 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V123 of {'Idris.Prelude.Types.Left', E62} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V125) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V115, V122, V125}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 7 -> begin (V126 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V126 of {'Idris.Prelude.Types.Left', E64} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V128) -> begin (V129 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V129 of {'Idris.Prelude.Types.Left', E66} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V131) -> begin (V132 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V132 of {'Idris.Prelude.Types.Left', E68} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V134) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V128, V131, V134}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 8 -> begin (V135 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V135 of {'Idris.Prelude.Types.Left', E70} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V137) -> begin (V138 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V138 of {'Idris.Prelude.Types.Left', E72} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V140) -> begin (V141 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V141 of {'Idris.Prelude.Types.Left', E74} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V143) -> begin (V144 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V144 of {'Idris.Prelude.Types.Left', E76} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V146) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V137, V140, V143, V146}} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 9 -> begin (V147 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V147 of {'Idris.Prelude.Types.Left', E78} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V149) -> begin (V150 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V150 of {'Idris.Prelude.Types.Left', E80} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V152) -> begin (V153 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V153 of {'Idris.Prelude.Types.Left', E82} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V155) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V149, V152, V155}} end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 10 -> begin (V156 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V156 of {'Idris.Prelude.Types.Left', E84} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V158) -> begin (V159 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V0, V1))), case V159 of {'Idris.Prelude.Types.Left', E86} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V161) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V158, V161}} end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 11 -> begin (V162 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V162 of {'Idris.Prelude.Types.Left', E88} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V164) -> begin (V165 = ('dn--un--fromBuf_TTC_AltType'(V0, V1))), case V165 of {'Idris.Prelude.Types.Left', E90} -> (fun (V166) -> {'Idris.Prelude.Types.Left', V166} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V167) -> begin (V172 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V168) -> fun (V169) -> ('dn--un--toBuf_TTC_RawImp'(V168, V169)) end end, fun (V170) -> fun (V171) -> ('dn--un--fromBuf_TTC_RawImp'(V170, V171)) end end}, V0, V1))), case V172 of {'Idris.Prelude.Types.Left', E92} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V174) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V164, V167, V174}} end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 12 -> begin (V175 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V175 of {'Idris.Prelude.Types.Left', E94} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V177) -> begin (V178 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V178 of {'Idris.Prelude.Types.Left', E96} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V180) -> begin (V181 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V181 of {'Idris.Prelude.Types.Left', E98} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V183) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V177, V180, V183}} end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 13 -> begin (V184 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V184 of {'Idris.Prelude.Types.Left', E100} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V186) -> begin (V187 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V187 of {'Idris.Prelude.Types.Left', E102} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V189) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICoerced', V186, V189}} end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 14 -> begin (V190 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V190 of {'Idris.Prelude.Types.Left', E104} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V192) -> begin (V193 = ('dn--un--fromBuf_TTC_BindMode'(V0, V1))), case V193 of {'Idris.Prelude.Types.Left', E106} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V195) -> begin (V196 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V196 of {'Idris.Prelude.Types.Left', E108} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V198) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V192, V195, V198}} end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 15 -> begin (V199 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V199 of {'Idris.Prelude.Types.Left', E110} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V201) -> begin (V202 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V0, V1))), case V202 of {'Idris.Prelude.Types.Left', E112} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V204) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindVar', V201, V204}} end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 16 -> begin (V205 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V205 of {'Idris.Prelude.Types.Left', E114} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V207) -> begin (V208 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V208 of {'Idris.Prelude.Types.Left', E116} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V210) -> begin (V211 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_UseSide'(V0, V1))), case V211 of {'Idris.Prelude.Types.Left', E118} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V213) -> begin (V214 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V214 of {'Idris.Prelude.Types.Left', E120} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V216) -> begin (V217 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V217 of {'Idris.Prelude.Types.Left', E122} -> (fun (V218) -> {'Idris.Prelude.Types.Left', V218} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V219) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V207, V210, V213, V216, V219}} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 17 -> begin (V220 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V220 of {'Idris.Prelude.Types.Left', E124} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V222) -> begin (V223 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V223 of {'Idris.Prelude.Types.Left', E126} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V225) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V222, {'Idris.Core.Core.UnknownDot'}, V225}} end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 18 -> begin (V226 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V226 of {'Idris.Prelude.Types.Left', E128} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V228) -> begin (V229 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_LazyReason'(V0, V1))), case V229 of {'Idris.Prelude.Types.Left', E130} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V231) -> begin (V232 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V232 of {'Idris.Prelude.Types.Left', E132} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V234) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V228, V231, V234}} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 19 -> begin (V235 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V235 of {'Idris.Prelude.Types.Left', E134} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V237) -> begin (V238 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V238 of {'Idris.Prelude.Types.Left', E136} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V240) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V237, V240}} end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 20 -> begin (V241 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V241 of {'Idris.Prelude.Types.Left', E138} -> (fun (V242) -> {'Idris.Prelude.Types.Left', V242} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V243) -> begin (V244 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V244 of {'Idris.Prelude.Types.Left', E140} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V246) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V243, V246}} end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 21 -> begin (V247 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V247 of {'Idris.Prelude.Types.Left', E142} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V249) -> begin (V250 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V250 of {'Idris.Prelude.Types.Left', E144} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V252) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V249, V252}} end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 22 -> begin (V253 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V253 of {'Idris.Prelude.Types.Left', E146} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V255) -> begin (V256 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V256 of {'Idris.Prelude.Types.Left', E148} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V258) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V255, V258}} end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 23 -> begin (V259 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V259 of {'Idris.Prelude.Types.Left', E150} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V261) -> begin (V266 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V262) -> fun (V263) -> ('dn--un--toBuf_TTC_ImpDecl'(V262, V263)) end end, fun (V264) -> fun (V265) -> ('dn--un--fromBuf_TTC_ImpDecl'(V264, V265)) end end}, V0, V1))), case V266 of {'Idris.Prelude.Types.Left', E152} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V268) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V261, V268}} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 24 -> begin (V269 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V269 of {'Idris.Prelude.Types.Left', E154} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V271) -> begin (V272 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V272 of {'Idris.Prelude.Types.Left', E156} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V274) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V271, V274}} end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 25 -> begin (V275 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V275 of {'Idris.Prelude.Types.Left', E158} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V277) -> begin (V278 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V278 of {'Idris.Prelude.Types.Left', E160} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V280) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElab', V277, V280}} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 26 -> begin (V281 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V281 of {'Idris.Prelude.Types.Left', E162} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V283) -> begin (V284 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Constant'(V0, V1))), case V284 of {'Idris.Prelude.Types.Left', E164} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V286) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V283, V286}} end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 27 -> begin (V287 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V287 of {'Idris.Prelude.Types.Left', E166} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V289) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V289}} end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 28 -> begin (V290 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V290 of {'Idris.Prelude.Types.Left', E168} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V292) -> begin (V293 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V0, V1))), case V293 of {'Idris.Prelude.Types.Left', E170} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V295) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V292, V295}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 29 -> begin (V296 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V296 of {'Idris.Prelude.Types.Left', E172} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V298) -> begin (V299 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Bool'(V0, V1))), case V299 of {'Idris.Prelude.Types.Left', E174} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V301) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V298, V301}} end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 30 -> begin (V302 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V302 of {'Idris.Prelude.Types.Left', E176} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V304) -> begin (V309 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V305) -> fun (V306) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V305, V306)) end end, fun (V307) -> fun (V308) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V307, V308)) end end}, V0, V1))), case V309 of {'Idris.Prelude.Types.Left', E178} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V311) -> begin (V312 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V312 of {'Idris.Prelude.Types.Left', E180} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V314) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V304, V311, V314}} end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 31 -> begin (V315 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V315 of {'Idris.Prelude.Types.Left', E182} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V317) -> begin (V318 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V318 of {'Idris.Prelude.Types.Left', E184} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V320) -> begin (V321 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V321 of {'Idris.Prelude.Types.Left', E186} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V323) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V317, V320, V323}} end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"RawImp"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_ImpTy'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V4, V7, V10, V13}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_ImpRecord'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V188 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V12, V13)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V18, V19)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V24) -> fun (V25) -> ('dn--un--toBuf_TTC_RawImp'(V24, V25)) end end, fun (V26) -> fun (V27) -> ('dn--un--fromBuf_TTC_RawImp'(V26, V27)) end end}, V22, V23)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V30) -> fun (V31) -> ('dn--un--toBuf_TTC_RawImp'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('dn--un--fromBuf_TTC_RawImp'(V32, V33)) end end}, V28, V29)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V34) -> fun (V35) -> ('dn--un--toBuf_TTC_RawImp'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('dn--un--fromBuf_TTC_RawImp'(V36, V37)) end end}}, V20, V21)) end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V42) -> fun (V43) -> ('dn--un--toBuf_TTC_RawImp'(V42, V43)) end end, fun (V44) -> fun (V45) -> ('dn--un--fromBuf_TTC_RawImp'(V44, V45)) end end}, V40, V41)) end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V48) -> fun (V49) -> ('dn--un--toBuf_TTC_RawImp'(V48, V49)) end end, fun (V50) -> fun (V51) -> ('dn--un--fromBuf_TTC_RawImp'(V50, V51)) end end}, V46, V47)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V52) -> fun (V53) -> ('dn--un--toBuf_TTC_RawImp'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('dn--un--fromBuf_TTC_RawImp'(V54, V55)) end end}}, V38, V39)) end end}}, V14, V15)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V60, V61)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V66) -> fun (V67) -> ('dn--un--toBuf_TTC_RawImp'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('dn--un--fromBuf_TTC_RawImp'(V68, V69)) end end}, V64, V65)) end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V72) -> fun (V73) -> ('dn--un--toBuf_TTC_RawImp'(V72, V73)) end end, fun (V74) -> fun (V75) -> ('dn--un--fromBuf_TTC_RawImp'(V74, V75)) end end}, V70, V71)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V76) -> fun (V77) -> ('dn--un--toBuf_TTC_RawImp'(V76, V77)) end end, fun (V78) -> fun (V79) -> ('dn--un--fromBuf_TTC_RawImp'(V78, V79)) end end}}, V62, V63)) end end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V84) -> fun (V85) -> ('dn--un--toBuf_TTC_RawImp'(V84, V85)) end end, fun (V86) -> fun (V87) -> ('dn--un--fromBuf_TTC_RawImp'(V86, V87)) end end}, V82, V83)) end end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V90) -> fun (V91) -> ('dn--un--toBuf_TTC_RawImp'(V90, V91)) end end, fun (V92) -> fun (V93) -> ('dn--un--fromBuf_TTC_RawImp'(V92, V93)) end end}, V88, V89)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V94) -> fun (V95) -> ('dn--un--toBuf_TTC_RawImp'(V94, V95)) end end, fun (V96) -> fun (V97) -> ('dn--un--fromBuf_TTC_RawImp'(V96, V97)) end end}}, V80, V81)) end end}}, V56, V57)) end end}}, V8, V9)) end end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V100, V101)) end end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V102, V103)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V104) -> fun (V105) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V106, V107)) end end, fun (V108) -> fun (V109) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V108, V109)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V110) -> fun (V111) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V112) -> fun (V113) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V114) -> fun (V115) -> ('dn--un--toBuf_TTC_RawImp'(V114, V115)) end end, fun (V116) -> fun (V117) -> ('dn--un--fromBuf_TTC_RawImp'(V116, V117)) end end}, V112, V113)) end end, fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V120) -> fun (V121) -> ('dn--un--toBuf_TTC_RawImp'(V120, V121)) end end, fun (V122) -> fun (V123) -> ('dn--un--fromBuf_TTC_RawImp'(V122, V123)) end end}, V118, V119)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V124) -> fun (V125) -> ('dn--un--toBuf_TTC_RawImp'(V124, V125)) end end, fun (V126) -> fun (V127) -> ('dn--un--fromBuf_TTC_RawImp'(V126, V127)) end end}}, V110, V111)) end end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V132) -> fun (V133) -> ('dn--un--toBuf_TTC_RawImp'(V132, V133)) end end, fun (V134) -> fun (V135) -> ('dn--un--fromBuf_TTC_RawImp'(V134, V135)) end end}, V130, V131)) end end, fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V138) -> fun (V139) -> ('dn--un--toBuf_TTC_RawImp'(V138, V139)) end end, fun (V140) -> fun (V141) -> ('dn--un--fromBuf_TTC_RawImp'(V140, V141)) end end}, V136, V137)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V142) -> fun (V143) -> ('dn--un--toBuf_TTC_RawImp'(V142, V143)) end end, fun (V144) -> fun (V145) -> ('dn--un--fromBuf_TTC_RawImp'(V144, V145)) end end}}, V128, V129)) end end}}, V104, V105)) end end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V148, V149)) end end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V150, V151)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V152) -> fun (V153) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V156) -> fun (V157) -> ('dn--un--toBuf_TTC_RawImp'(V156, V157)) end end, fun (V158) -> fun (V159) -> ('dn--un--fromBuf_TTC_RawImp'(V158, V159)) end end}, V154, V155)) end end, fun (V160) -> fun (V161) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V162) -> fun (V163) -> ('dn--un--toBuf_TTC_RawImp'(V162, V163)) end end, fun (V164) -> fun (V165) -> ('dn--un--fromBuf_TTC_RawImp'(V164, V165)) end end}, V160, V161)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V166) -> fun (V167) -> ('dn--un--toBuf_TTC_RawImp'(V166, V167)) end end, fun (V168) -> fun (V169) -> ('dn--un--fromBuf_TTC_RawImp'(V168, V169)) end end}}, V152, V153)) end end, fun (V170) -> fun (V171) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V172) -> fun (V173) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V174) -> fun (V175) -> ('dn--un--toBuf_TTC_RawImp'(V174, V175)) end end, fun (V176) -> fun (V177) -> ('dn--un--fromBuf_TTC_RawImp'(V176, V177)) end end}, V172, V173)) end end, fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V180) -> fun (V181) -> ('dn--un--toBuf_TTC_RawImp'(V180, V181)) end end, fun (V182) -> fun (V183) -> ('dn--un--fromBuf_TTC_RawImp'(V182, V183)) end end}, V178, V179)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V184) -> fun (V185) -> ('dn--un--toBuf_TTC_RawImp'(V184, V185)) end end, fun (V186) -> fun (V187) -> ('dn--un--fromBuf_TTC_RawImp'(V186, V187)) end end}}, V170, V171)) end end}}, V146, V147)) end end}}, V98, V99)) end end}, V0, V1))), case V188 of {'Idris.Prelude.Types.Left', E4} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V190) -> begin (V191 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V191 of {'Idris.Prelude.Types.Left', E6} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V193) -> begin (V198 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V194) -> fun (V195) -> ('dn--un--toBuf_TTC_IField'(V194, V195)) end end, fun (V196) -> fun (V197) -> ('dn--un--fromBuf_TTC_IField'(V196, V197)) end end}, V0, V1))), case V198 of {'Idris.Prelude.Types.Left', E8} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V200) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V4, V7, V190, V193, V200}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_ImpDecl'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V1))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Visibility'(V0, V1))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> begin (V18 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('dn--un--toBuf_TTC_FnOpt'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('dn--un--fromBuf_TTC_FnOpt'(V16, V17)) end end}, V0, V1))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V21 = ('dn--un--fromBuf_TTC_ImpTy'(V0, V1))), case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V7, V10, V13, V20, V23}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V24 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V24 of {'Idris.Prelude.Types.Left', E12} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Visibility'(V0, V1))), case V27 of {'Idris.Prelude.Types.Left', E14} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V29) -> begin (V30 = ('dn--un--fromBuf_TTC_ImpData'(V0, V1))), case V30 of {'Idris.Prelude.Types.Left', E16} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V26, V29, V32}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 2 -> begin (V33 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V33 of {'Idris.Prelude.Types.Left', E18} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V35) -> begin (V36 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V36 of {'Idris.Prelude.Types.Left', E20} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V38) -> begin (V43 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('dn--un--toBuf_TTC_ImpClause'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('dn--un--fromBuf_TTC_ImpClause'(V41, V42)) end end}, V0, V1))), case V43 of {'Idris.Prelude.Types.Left', E22} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V35, V38, V45}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 3 -> begin (V46 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V46 of {'Idris.Prelude.Types.Left', E24} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V48) -> begin (V69 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V49) -> fun (V50) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V51, V52)) end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V53, V54)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V55) -> fun (V56) -> ('dn--un--toBuf_TTC_RawImp'(V55, V56)) end end, fun (V57) -> fun (V58) -> ('dn--un--fromBuf_TTC_RawImp'(V57, V58)) end end}}, V49, V50)) end end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V61, V62)) end end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V63, V64)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V65) -> fun (V66) -> ('dn--un--toBuf_TTC_RawImp'(V65, V66)) end end, fun (V67) -> fun (V68) -> ('dn--un--fromBuf_TTC_RawImp'(V67, V68)) end end}}, V59, V60)) end end}, V0, V1))), case V69 of {'Idris.Prelude.Types.Left', E26} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V71) -> begin (V76 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V72) -> fun (V73) -> ('dn--un--toBuf_TTC_ImpDecl'(V72, V73)) end end, fun (V74) -> fun (V75) -> ('dn--un--fromBuf_TTC_ImpDecl'(V74, V75)) end end}, V0, V1))), case V76 of {'Idris.Prelude.Types.Left', E28} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V78) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V48, V71, V78}} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 4 -> begin (V79 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V79 of {'Idris.Prelude.Types.Left', E30} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V81) -> begin (V86 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V82, V83)) end end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V84, V85)) end end}, V0, V1))), case V86 of {'Idris.Prelude.Types.Left', E32} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V88) -> begin (V89 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Visibility'(V0, V1))), case V89 of {'Idris.Prelude.Types.Left', E34} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V91) -> begin (V92 = ('dn--un--fromBuf_TTC_ImpRecord'(V0, V1))), case V92 of {'Idris.Prelude.Types.Left', E36} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V94) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V81, V88, V91, V94}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 5 -> begin (V95 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V95 of {'Idris.Prelude.Types.Left', E38} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V97) -> begin (V98 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V0, V1))), case V98 of {'Idris.Prelude.Types.Left', E40} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V100) -> begin (V105 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V101) -> fun (V102) -> ('dn--un--toBuf_TTC_ImpDecl'(V101, V102)) end end, fun (V103) -> fun (V104) -> ('dn--un--fromBuf_TTC_ImpDecl'(V103, V104)) end end}, V0, V1))), case V105 of {'Idris.Prelude.Types.Left', E42} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V97, V100, V107}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 6 -> begin (V108 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V108 of {'Idris.Prelude.Types.Left', E44} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V110) -> begin (V111 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V111 of {'Idris.Prelude.Types.Left', E46} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V113) -> begin (V114 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V114 of {'Idris.Prelude.Types.Left', E48} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V116) -> begin (V117 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V117 of {'Idris.Prelude.Types.Left', E50} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V110, V113, V116, V119}} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 7 -> begin (V120 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V120 of {'Idris.Prelude.Types.Left', E52} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V122) -> begin (V123 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V123 of {'Idris.Prelude.Types.Left', E54} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V125) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElabDecl', V122, V125}} end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 8 -> begin (V164 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V126) -> fun (V127) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V128) -> fun (V129) -> fun (V130) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V131) -> fun (V132) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V131, V132)) end end, fun (V133) -> fun (V134) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V133, V134)) end end}, V128, V129, V130)) end end end, fun (V135) -> fun (V136) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V137) -> fun (V138) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V137, V138)) end end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V139, V140)) end end}, V135, V136)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V141) -> fun (V142) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V141, V142)) end end, fun (V143) -> fun (V144) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V143, V144)) end end}}, V126, V127)) end end, fun (V145) -> fun (V146) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V147) -> fun (V148) -> fun (V149) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V150) -> fun (V151) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V150, V151)) end end, fun (V152) -> fun (V153) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V152, V153)) end end}, V147, V148, V149)) end end end, fun (V154) -> fun (V155) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V156) -> fun (V157) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V156, V157)) end end, fun (V158) -> fun (V159) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V158, V159)) end end}, V154, V155)) end end}, {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V160) -> fun (V161) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_Nat'(V160, V161)) end end, fun (V162) -> fun (V163) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Nat'(V162, V163)) end end}}, V145, V146)) end end}, V0, V1))), case V164 of {'Idris.Prelude.Types.Left', E56} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V166) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILog', V166}} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"ImpDecl"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_ImpData'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> begin (V18 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('dn--un--toBuf_TTC_DataOpt'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('dn--un--fromBuf_TTC_DataOpt'(V16, V17)) end end}, V0, V1))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> begin (V25 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V21) -> fun (V22) -> ('dn--un--toBuf_TTC_ImpTy'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('dn--un--fromBuf_TTC_ImpTy'(V23, V24)) end end}, V0, V1))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V7, V10, V13, V20, V27}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V28 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> begin (V31 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V31 of {'Idris.Prelude.Types.Left', E14} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V33) -> begin (V34 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V34 of {'Idris.Prelude.Types.Left', E16} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V30, V33, V36}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"ImpData"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_ImpClause'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V8 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V7, V10, V13}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V14 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> begin (V17 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V16, V19}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 2 -> begin (V20 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V20 of {'Idris.Prelude.Types.Left', E12} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V22) -> begin (V23 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V23 of {'Idris.Prelude.Types.Left', E14} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V25) -> begin (V26 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V26 of {'Idris.Prelude.Types.Left', E16} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V28) -> begin (V33 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(Maybe $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V31, V32)) end end}, V0, V1))), case V33 of {'Idris.Prelude.Types.Left', E18} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V35) -> begin (V40 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('dn--un--toBuf_TTC_ImpClause'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('dn--un--fromBuf_TTC_ImpClause'(V38, V39)) end end}, V0, V1))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V22, V25, V28, V35, [], V42}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"ImpClause"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_IFieldUpdate'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V9 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V5) -> fun (V6) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V7, V8)) end end}, V0, V1))), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V12 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V11, V14}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V19 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V15) -> fun (V16) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--toBuf_TTC_String'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_String'(V17, V18)) end end}, V0, V1))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V21, V24}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"IFieldUpdate"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_IField'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> begin (V12 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_(PiInfo $t)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('dn--un--toBuf_TTC_RawImp'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('dn--un--fromBuf_TTC_RawImp'(V10, V11)) end end}, V0, V1))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0, V1))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V4, V7, V14, V17, V20}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_FnOpt'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Inline'}}; 1 -> begin (V5 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Bool'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Hint', V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 2 -> begin (V8 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_Bool'(V0, V1))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.GlobalHint', V10}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 3 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ExternFn'}}; 4 -> begin (V15 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V11) -> fun (V12) -> ('dn--un--toBuf_TTC_RawImp'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('dn--un--fromBuf_TTC_RawImp'(V13, V14)) end end}, V0, V1))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V17}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 5 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Invertible'}}; 6 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', {'Idris.Core.TT.Total'}}}; 7 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', {'Idris.Core.TT.CoveringOnly'}}}; 8 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', {'Idris.Core.TT.PartialOK'}}}; 9 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Macro'}}; 10 -> begin (V22 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V18, V19)) end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V20, V21)) end end}, V0, V1))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SpecArgs', V24}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 11 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.TCInline'}}; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"FnOpt"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_DataOpt'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V9 = ('Idris.Idris2.Libraries.Utils.Binary':'dn--un--fromBuf_TTC_(List $a)'('erased', {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V7, V8)) end end}, V0, V1))), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SearchBy', V11}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoHints'}}; 2 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueSearch'}}; 3 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.External'}}; 4 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoNewtype'}}; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"DataOpt"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_BindMode'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> begin (V5 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PI', V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PATTERN'}}; 2 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NONE'}}; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"BindMode"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--fromBuf_TTC_AltType'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--getTag'(V0, V1))), case V2 of {'Idris.Prelude.Types.Left', E0} -> (fun (V3) -> {'Idris.Prelude.Types.Left', V3} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V4) -> case V4 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.FirstSuccess'}}; 1 -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Unique'}}; 2 -> begin (V5 = ('dn--un--fromBuf_TTC_RawImp'(V0, V1))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueDefault', V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Libraries.Utils.Binary':'un--corrupt'('erased', <<"AltType"/utf8>>, V1)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--__Impl_Weaken_NestedNames'() -> {'Idris.Core.TT.dn--un--__mkWeaken', fun (V0) -> fun (V1) -> fun (V2) -> ('dn--un--weaken_Weaken_NestedNames'('erased', 'erased', V2)) end end end, fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('dn--un--weakenNs_Weaken_NestedNames'('erased', 'erased', V5, V6)) end end end end}.
'dn--un--__Impl_TTC_RawImp'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_RawImp'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_RawImp'(V2, V3)) end end}.
'dn--un--__Impl_TTC_ImpTy'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ImpTy'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_ImpTy'(V2, V3)) end end}.
'dn--un--__Impl_TTC_ImpRecord'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ImpRecord'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_ImpRecord'(V2, V3)) end end}.
'dn--un--__Impl_TTC_ImpDecl'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ImpDecl'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_ImpDecl'(V2, V3)) end end}.
'dn--un--__Impl_TTC_ImpData'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ImpData'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_ImpData'(V2, V3)) end end}.
'dn--un--__Impl_TTC_ImpClause'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ImpClause'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_ImpClause'(V2, V3)) end end}.
'dn--un--__Impl_TTC_IFieldUpdate'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_IFieldUpdate'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_IFieldUpdate'(V2, V3)) end end}.
'dn--un--__Impl_TTC_IField'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_IField'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_IField'(V2, V3)) end end}.
'dn--un--__Impl_TTC_FnOpt'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_FnOpt'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_FnOpt'(V2, V3)) end end}.
'dn--un--__Impl_TTC_DataOpt'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_DataOpt'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_DataOpt'(V2, V3)) end end}.
'dn--un--__Impl_TTC_BindMode'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_BindMode'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_BindMode'(V2, V3)) end end}.
'dn--un--__Impl_TTC_AltType'() -> {'Idris.Libraries.Utils.Binary.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_AltType'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--fromBuf_TTC_AltType'(V2, V3)) end end}.
'dn--un--__Impl_Show_RawImp'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_RawImp'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_RawImp'(V1, V2)) end end}.
'dn--un--__Impl_Show_ImpTy'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_ImpTy'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_ImpTy'(V1, V2)) end end}.
'dn--un--__Impl_Show_ImpRecord'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_ImpRecord'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_ImpRecord'(V1, V2)) end end}.
'dn--un--__Impl_Show_ImpDecl'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_ImpDecl'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_ImpDecl'(V1, V2)) end end}.
'dn--un--__Impl_Show_ImpData'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_ImpData'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_ImpData'(V1, V2)) end end}.
'dn--un--__Impl_Show_ImpClause'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_ImpClause'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_ImpClause'(V1, V2)) end end}.
'dn--un--__Impl_Show_IFieldUpdate'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_IFieldUpdate'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_IFieldUpdate'(V1, V2)) end end}.
'dn--un--__Impl_Show_IField'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_IField'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_IField'(V1, V2)) end end}.
'dn--un--__Impl_Show_FnOpt'() -> {'Idris.Prelude.Show.dn--un--__mkShow', fun (V0) -> ('dn--un--show_Show_FnOpt'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_FnOpt'(V1, V2)) end end}.
'dn--un--__Impl_Eq_WithFlag'() -> {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_WithFlag'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_WithFlag'(V2, V3)) end end}.
'dn--un--__Impl_Eq_FnOpt'() -> {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_FnOpt'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_FnOpt'(V2, V3)) end end}.
'dn--un--__Impl_Eq_DataOpt'() -> {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_DataOpt'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_DataOpt'(V2, V3)) end end}.
'dn--un--==_Eq_WithFlag'(V0, V1) -> case V0 of {'Idris.TTImp.TTImp.Syntactic'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.Syntactic'} -> (fun () -> 0 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--==_Eq_FnOpt'(V0, V1) -> case V0 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V2) -> case V1 of {'Idris.TTImp.TTImp.Hint', E1} -> (fun (V3) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Bool'(V2, V3)) end(E1)); _ -> 1 end end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E2} -> (fun (V4) -> case V1 of {'Idris.TTImp.TTImp.GlobalHint', E3} -> (fun (V5) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Bool'(V4, V5)) end(E3)); _ -> 1 end end(E2)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.ForeignFn', E4} -> (fun (V6) -> case V1 of {'Idris.TTImp.TTImp.ForeignFn', E5} -> (fun (V7) -> 0 end(E5)); _ -> 1 end end(E4)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.Totality', E6} -> (fun (V8) -> case V1 of {'Idris.TTImp.TTImp.Totality', E7} -> (fun (V9) -> ('Idris.Idris2.Core.TT':'dn--un--==_Eq_TotalReq'(V8, V9)) end(E7)); _ -> 1 end end(E6)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.Macro'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.SpecArgs', E8} -> (fun (V10) -> case V1 of {'Idris.TTImp.TTImp.SpecArgs', E9} -> (fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(List $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V14, V15)) end end}, V10, V11)) end(E9)); _ -> 1 end end(E8)); _ -> 1 end.
'dn--un--==_Eq_DataOpt'(V0, V1) -> case V0 of {'Idris.TTImp.TTImp.SearchBy', E0} -> (fun (V2) -> case V1 of {'Idris.TTImp.TTImp.SearchBy', E1} -> (fun (V3) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(List $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4, V5)) end end, fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V6, V7)) end end}, V2, V3)) end(E1)); _ -> 1 end end(E0)); {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.External'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.External'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> case V1 of {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> 0 end()); _ -> 1 end end()); _ -> 1 end.
'dn--un--/=_Eq_WithFlag'(V0, V1) -> ('Idris.Idris2.Prelude.Basics':'un--not'(('dn--un--==_Eq_WithFlag'(V0, V1)))).
'dn--un--/=_Eq_FnOpt'(V0, V1) -> ('Idris.Idris2.Prelude.Basics':'un--not'(('dn--un--==_Eq_FnOpt'(V0, V1)))).
'dn--un--/=_Eq_DataOpt'(V0, V1) -> ('Idris.Idris2.Prelude.Basics':'un--not'(('dn--un--==_Eq_DataOpt'(V0, V1)))).
'un--mapAltType'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.UniqueDefault', E0} -> (fun (V2) -> {'Idris.TTImp.TTImp.UniqueDefault', (V0(V2))} end(E0)); _ -> V1 end.
'un--logRaw'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V9 = (('Idris.Idris2.Core.Options.Log':'un--mkLogLevel'(V1))(V2))), (('case--logRaw-6819'(V4, V3, V2, V1, V0, V8, V9, ('Idris.Idris2.Core.Options.Log':'un--keepLog'(V9, case V8 of {'Idris.Core.Options.MkSessionOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V17 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V5)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--lhsInCurrentNS'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V4, V5, V6) -> fun (V7) -> begin (V8 = (('un--lhsInCurrentNS'('erased', V1, V2, V5))(V7))), case V8 of {'Idris.Prelude.Types.Left', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V4, V10, V6}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.IAutoApp', E5, E6, E7} -> (fun (V11, V12, V13) -> fun (V14) -> begin (V15 = (('un--lhsInCurrentNS'('erased', V1, V2, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E8} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V11, V17, V13}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6, E7)); {'Idris.TTImp.TTImp.INamedApp', E10, E11, E12, E13} -> (fun (V18, V19, V20, V21) -> fun (V22) -> begin (V23 = (('un--lhsInCurrentNS'('erased', V1, V2, V19))(V22))), case V23 of {'Idris.Prelude.Types.Left', E14} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V18, V25, V20, V21}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); {'Idris.TTImp.TTImp.IWithApp', E16, E17, E18} -> (fun (V26, V27, V28) -> fun (V29) -> begin (V30 = (('un--lhsInCurrentNS'('erased', V1, V2, V27))(V29))), case V30 of {'Idris.Prelude.Types.Left', E19} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V26, V32, V28}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E16, E17, E18)); {'Idris.TTImp.TTImp.IVar', E21, E22} -> (fun (V33, V34) -> case V34 of {'Idris.Core.Name.NS', E23, E24} -> (fun (V35, V36) -> fun (V37) -> {'Idris.Prelude.Types.Right', V3} end end(E23, E24)); _ -> ('case--lhsInCurrentNS-2187'('erased', V34, V33, V2, V1, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V38, V39)) end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V40, V41)) end end}, V34, V2)))) end end(E21, E22)); _ -> fun (V42) -> {'Idris.Prelude.Types.Right', V3} end end.
'un--isTotalityReq'(V0) -> case V0 of {'Idris.TTImp.TTImp.Totality', E0} -> (fun (V1) -> 0 end(E0)); _ -> 1 end.
'un--isIPrimVal'(V0) -> case V0 of {'Idris.TTImp.TTImp.IPrimVal', E0, E1} -> (fun (V1, V2) -> {'Idris.Prelude.Types.Just', V2} end(E0, E1)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--implicitsAs'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--findIBinds'(V4))), fun (V6) -> begin (V10 = (('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"declare.def.lhs.implicits"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Found implicits: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V7) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V8, V9)) end end}, V5)))) end))(V6))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> (('nested--11297-2359--in--un--setAs'(V4, V3, V2, V1, V0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V13) -> {'Idris.Prelude.Types.Just', V13} end, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V14) -> {'Idris.Core.Name.UN', V14} end, V5)))))), [], V4))(V6)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--getFn'(V0) -> case V0 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V1, V2, V3) -> ('un--getFn'(V2)) end(E0, E1, E2)); {'Idris.TTImp.TTImp.IWithApp', E3, E4, E5} -> (fun (V4, V5, V6) -> ('un--getFn'(V5)) end(E3, E4, E5)); {'Idris.TTImp.TTImp.INamedApp', E6, E7, E8, E9} -> (fun (V7, V8, V9, V10) -> ('un--getFn'(V8)) end(E6, E7, E8, E9)); {'Idris.TTImp.TTImp.IAutoApp', E10, E11, E12} -> (fun (V11, V12, V13) -> ('un--getFn'(V12)) end(E10, E11, E12)); {'Idris.TTImp.TTImp.IAs', E13, E14, E15, E16, E17} -> (fun (V14, V15, V16, V17, V18) -> ('un--getFn'(V18)) end(E13, E14, E15, E16, E17)); {'Idris.TTImp.TTImp.IMustUnify', E18, E19, E20} -> (fun (V19, V20, V21) -> ('un--getFn'(V21)) end(E18, E19, E20)); _ -> V0 end.
'un--getFC'(V0) -> case V0 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V1, V2) -> V1 end(E0, E1)); {'Idris.TTImp.TTImp.IPi', E2, E3, E4, E5, E6, E7} -> (fun (V3, V4, V5, V6, V7, V8) -> V3 end(E2, E3, E4, E5, E6, E7)); {'Idris.TTImp.TTImp.ILam', E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14) -> V9 end(E8, E9, E10, E11, E12, E13)); {'Idris.TTImp.TTImp.ILet', E14, E15, E16, E17, E18, E19, E20} -> (fun (V15, V16, V17, V18, V19, V20, V21) -> V15 end(E14, E15, E16, E17, E18, E19, E20)); {'Idris.TTImp.TTImp.ICase', E21, E22, E23, E24} -> (fun (V22, V23, V24, V25) -> V22 end(E21, E22, E23, E24)); {'Idris.TTImp.TTImp.ILocal', E25, E26, E27} -> (fun (V26, V27, V28) -> V26 end(E25, E26, E27)); {'Idris.TTImp.TTImp.ICaseLocal', E28, E29, E30, E31, E32} -> (fun (V29, V30, V31, V32, V33) -> V29 end(E28, E29, E30, E31, E32)); {'Idris.TTImp.TTImp.IUpdate', E33, E34, E35} -> (fun (V34, V35, V36) -> V34 end(E33, E34, E35)); {'Idris.TTImp.TTImp.IApp', E36, E37, E38} -> (fun (V37, V38, V39) -> V37 end(E36, E37, E38)); {'Idris.TTImp.TTImp.INamedApp', E39, E40, E41, E42} -> (fun (V40, V41, V42, V43) -> V40 end(E39, E40, E41, E42)); {'Idris.TTImp.TTImp.IAutoApp', E43, E44, E45} -> (fun (V44, V45, V46) -> V44 end(E43, E44, E45)); {'Idris.TTImp.TTImp.IWithApp', E46, E47, E48} -> (fun (V47, V48, V49) -> V47 end(E46, E47, E48)); {'Idris.TTImp.TTImp.ISearch', E49, E50} -> (fun (V50, V51) -> V50 end(E49, E50)); {'Idris.TTImp.TTImp.IAlternative', E51, E52, E53} -> (fun (V52, V53, V54) -> V52 end(E51, E52, E53)); {'Idris.TTImp.TTImp.IRewrite', E54, E55, E56} -> (fun (V55, V56, V57) -> V55 end(E54, E55, E56)); {'Idris.TTImp.TTImp.ICoerced', E57, E58} -> (fun (V58, V59) -> V58 end(E57, E58)); {'Idris.TTImp.TTImp.IPrimVal', E59, E60} -> (fun (V60, V61) -> V60 end(E59, E60)); {'Idris.TTImp.TTImp.IHole', E61, E62} -> (fun (V62, V63) -> V62 end(E61, E62)); {'Idris.TTImp.TTImp.IUnifyLog', E63, E64, E65} -> (fun (V64, V65, V66) -> V64 end(E63, E64, E65)); {'Idris.TTImp.TTImp.IType', E66} -> (fun (V67) -> V67 end(E66)); {'Idris.TTImp.TTImp.IBindVar', E67, E68} -> (fun (V68, V69) -> V68 end(E67, E68)); {'Idris.TTImp.TTImp.IBindHere', E69, E70, E71} -> (fun (V70, V71, V72) -> V70 end(E69, E70, E71)); {'Idris.TTImp.TTImp.IMustUnify', E72, E73, E74} -> (fun (V73, V74, V75) -> V73 end(E72, E73, E74)); {'Idris.TTImp.TTImp.IDelayed', E75, E76, E77} -> (fun (V76, V77, V78) -> V76 end(E75, E76, E77)); {'Idris.TTImp.TTImp.IDelay', E78, E79} -> (fun (V79, V80) -> V79 end(E78, E79)); {'Idris.TTImp.TTImp.IForce', E80, E81} -> (fun (V81, V82) -> V81 end(E80, E81)); {'Idris.TTImp.TTImp.IQuote', E82, E83} -> (fun (V83, V84) -> V83 end(E82, E83)); {'Idris.TTImp.TTImp.IQuoteName', E84, E85} -> (fun (V85, V86) -> V85 end(E84, E85)); {'Idris.TTImp.TTImp.IQuoteDecl', E86, E87} -> (fun (V87, V88) -> V87 end(E86, E87)); {'Idris.TTImp.TTImp.IUnquote', E88, E89} -> (fun (V89, V90) -> V89 end(E88, E89)); {'Idris.TTImp.TTImp.IRunElab', E90, E91} -> (fun (V91, V92) -> V91 end(E90, E91)); {'Idris.TTImp.TTImp.IAs', E92, E93, E94, E95, E96} -> (fun (V93, V94, V95, V96, V97) -> V93 end(E92, E93, E94, E95, E96)); {'Idris.TTImp.TTImp.Implicit', E97, E98} -> (fun (V98, V99) -> V98 end(E97, E98)); {'Idris.TTImp.TTImp.IWithUnambigNames', E99, E100, E101} -> (fun (V100, V101, V102) -> V100 end(E99, E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--gapply'(V0, V1) -> case V1 of [] -> V0; [E0 | E1] -> (fun (V2, V3) -> ('un--gapply'(('Idris.Idris2.Prelude.Basics':'un--uncurry'('erased', 'erased', 'erased', fun (V4) -> fun (V5) -> ('nested--12684-3659--in--un--app'(V2, V3, V0, V0, V4, V5)) end end, V2)), V3)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--findImplicits'(V0) -> case V0 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V1, V2, V3, V4, V5, V6) -> case V4 of {'Idris.Prelude.Types.Just', E6} -> (fun (V7) -> case V7 of {'Idris.Core.Name.UN', E7} -> (fun (V8) -> [V8 | ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V5)), ('un--findImplicits'(V6))))] end(E7)); _ -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V5)), ('un--findImplicits'(V6)))) end end(E6)); _ -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V5)), ('un--findImplicits'(V6)))) end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V13)), ('un--findImplicits'(V14)))) end(E8, E9, E10, E11, E12, E13)); {'Idris.TTImp.TTImp.IApp', E14, E15, E16} -> (fun (V15, V16, V17) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V16)), ('un--findImplicits'(V17)))) end(E14, E15, E16)); {'Idris.TTImp.TTImp.IAutoApp', E17, E18, E19} -> (fun (V18, V19, V20) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V19)), ('un--findImplicits'(V20)))) end(E17, E18, E19)); {'Idris.TTImp.TTImp.INamedApp', E20, E21, E22, E23} -> (fun (V21, V22, V23, V24) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V22)), ('un--findImplicits'(V24)))) end(E20, E21, E22, E23)); {'Idris.TTImp.TTImp.IWithApp', E24, E25, E26} -> (fun (V25, V26, V27) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findImplicits'(V26)), ('un--findImplicits'(V27)))) end(E24, E25, E26)); {'Idris.TTImp.TTImp.IAs', E27, E28, E29, E30, E31} -> (fun (V28, V29, V30, V31, V32) -> ('un--findImplicits'(V32)) end(E27, E28, E29, E30, E31)); {'Idris.TTImp.TTImp.IMustUnify', E32, E33, E34} -> (fun (V33, V34, V35) -> ('un--findImplicits'(V35)) end(E32, E33, E34)); {'Idris.TTImp.TTImp.IAlternative', E35, E36, E37} -> (fun (V36, V37, V38) -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V46, V47, V48)) end end end end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V50)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'('erased', V51, V52)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'('erased'))}}, fun (V53) -> ('un--findImplicits'(V53)) end))(V38)) end(E35, E36, E37)); {'Idris.TTImp.TTImp.IDelayed', E38, E39, E40} -> (fun (V54, V55, V56) -> ('un--findImplicits'(V56)) end(E38, E39, E40)); {'Idris.TTImp.TTImp.IDelay', E41, E42} -> (fun (V57, V58) -> ('un--findImplicits'(V58)) end(E41, E42)); {'Idris.TTImp.TTImp.IForce', E43, E44} -> (fun (V59, V60) -> ('un--findImplicits'(V60)) end(E43, E44)); {'Idris.TTImp.TTImp.IQuote', E45, E46} -> (fun (V61, V62) -> ('un--findImplicits'(V62)) end(E45, E46)); {'Idris.TTImp.TTImp.IUnquote', E47, E48} -> (fun (V63, V64) -> ('un--findImplicits'(V64)) end(E47, E48)); {'Idris.TTImp.TTImp.IRunElab', E49, E50} -> (fun (V65, V66) -> ('un--findImplicits'(V66)) end(E49, E50)); {'Idris.TTImp.TTImp.IBindVar', E51, E52} -> (fun (V67, V68) -> [V68 | []] end(E51, E52)); _ -> [] end.
'un--findIBinds'(V0) -> case V0 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V1, V2, V3, V4, V5, V6) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findIBinds'(V5)), ('un--findIBinds'(V6)))) end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E6, E7, E8, E9, E10, E11} -> (fun (V7, V8, V9, V10, V11, V12) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findIBinds'(V11)), ('un--findIBinds'(V12)))) end(E6, E7, E8, E9, E10, E11)); {'Idris.TTImp.TTImp.IApp', E12, E13, E14} -> (fun (V13, V14, V15) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findIBinds'(V14)), ('un--findIBinds'(V15)))) end(E12, E13, E14)); {'Idris.TTImp.TTImp.IAutoApp', E15, E16, E17} -> (fun (V16, V17, V18) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findIBinds'(V17)), ('un--findIBinds'(V18)))) end(E15, E16, E17)); {'Idris.TTImp.TTImp.INamedApp', E18, E19, E20, E21} -> (fun (V19, V20, V21, V22) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findIBinds'(V20)), ('un--findIBinds'(V22)))) end(E18, E19, E20, E21)); {'Idris.TTImp.TTImp.IWithApp', E22, E23, E24} -> (fun (V23, V24, V25) -> ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('un--findIBinds'(V24)), ('un--findIBinds'(V25)))) end(E22, E23, E24)); {'Idris.TTImp.TTImp.IAs', E25, E26, E27, E28, E29} -> (fun (V26, V27, V28, V29, V30) -> case V29 of {'Idris.Core.Name.UN', E30} -> (fun (V31) -> [V31 | ('un--findIBinds'(V30))] end(E30)); _ -> ('un--findIBinds'(V30)) end end(E25, E26, E27, E28, E29)); {'Idris.TTImp.TTImp.IMustUnify', E31, E32, E33} -> (fun (V32, V33, V34) -> ('un--findIBinds'(V34)) end(E31, E32, E33)); {'Idris.TTImp.TTImp.IAlternative', E34, E35, E36} -> (fun (V35, V36, V37) -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V49)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'('erased', V50, V51)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'('erased'))}}, fun (V52) -> ('un--findIBinds'(V52)) end))(V37)) end(E34, E35, E36)); {'Idris.TTImp.TTImp.IDelayed', E37, E38, E39} -> (fun (V53, V54, V55) -> ('un--findIBinds'(V55)) end(E37, E38, E39)); {'Idris.TTImp.TTImp.IDelay', E40, E41} -> (fun (V56, V57) -> ('un--findIBinds'(V57)) end(E40, E41)); {'Idris.TTImp.TTImp.IForce', E42, E43} -> (fun (V58, V59) -> ('un--findIBinds'(V59)) end(E42, E43)); {'Idris.TTImp.TTImp.IQuote', E44, E45} -> (fun (V60, V61) -> ('un--findIBinds'(V61)) end(E44, E45)); {'Idris.TTImp.TTImp.IUnquote', E46, E47} -> (fun (V62, V63) -> ('un--findIBinds'(V63)) end(E46, E47)); {'Idris.TTImp.TTImp.IRunElab', E48, E49} -> (fun (V64, V65) -> ('un--findIBinds'(V65)) end(E48, E49)); {'Idris.TTImp.TTImp.IBindHere', E50, E51, E52} -> (fun (V66, V67, V68) -> ('un--findIBinds'(V68)) end(E50, E51, E52)); {'Idris.TTImp.TTImp.IBindVar', E53, E54} -> (fun (V69, V70) -> [V70 | []] end(E53, E54)); _ -> [] end.
'un--definedInBlock'(V0, V1) -> (('Idris.Idris2.Prelude.Interfaces':'un--concatMap'('erased', 'erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'('erased', 'erased', V4, V5, V6)) end end end end end, fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'('erased', 'erased', V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'('erased', V13)) end end}, {'Idris.Prelude.Interfaces.dn--un--__mkMonoid', fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'('erased', V14, V15)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'('erased'))}}, fun (V16) -> ('nested--12249-3230--in--un--defName'(V1, V0, V0, V16)) end))(V1)).
'un--apply'(V0, V1) -> case V1 of [] -> V0; [E0 | E1] -> (fun (V2, V3) -> ('un--apply'({'Idris.TTImp.TTImp.IApp', ('un--getFC'(V0)), V0, V2}, V3)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
