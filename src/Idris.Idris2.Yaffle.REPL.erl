-module('Idris.Idris2.Yaffle.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--repl-1714'/5,
  'case--process-1556'/6,
  'case--case block in case block in process-1446'/10,
  'case--case block in process-1370'/10,
  'case--process-1321'/6,
  'case--case block in case block in process-1135'/13,
  'case--case block in process-1071'/12,
  'case--process-1025'/7,
  'case--process-909'/6,
  'case--process-773'/6,
  'case--process-697'/5,
  'case--process-542'/5,
  'nested--14889-601--in--un--printName'/6,
  'un--showInfo'/1,
  'un--repl'/4,
  'un--processCatch'/5,
  'un--process'/4
]).
'case--repl-1714'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> fun (V6) -> begin (V42 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V7) -> case V7 of {'Idris.Prelude.Types.Left', E1} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V10) -> begin (V41 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V38) -> ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Core':'dn--un--showPrec_Show_Error'(V39, V40)) end end}}, V5))(V10))), {'Idris.Prelude.Types.Right', V41} end end, V6))), case V42 of {'Idris.Prelude.Types.Left', E3} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V44) -> ('un--repl'(V2, V1, V0, V6)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Right', E5} -> (fun (V45) -> fun (V46) -> begin (V47 = ('un--processCatch'(V2, V1, V0, V45, V46))), case V47 of {'Idris.Prelude.Types.Left', E6} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V49) -> case V49 of 0 -> ('un--repl'(V2, V1, V0, V46)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-1556'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V0, V6)) end; _ -> fun (V7) -> begin (V53 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V8) -> fun (V9) -> begin (V14 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V10) -> case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V13) -> ('Idris.Idris2.Core.Termination':'un--checkTotal'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V13)) end, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Context':'un--getTotality'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V20) -> case V20 of {'Idris.Prelude.Types.Left', E6} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V23) -> begin (V51 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V26, V27, V28)) end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> V30 end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V34(V36))), begin (V38 = (V35(V36))), (V37(V38)) end end end end end end end}, fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> begin (V44 = (V41(V43))), ((V42(V44))(V43)) end end end end end end, fun (V45) -> fun (V46) -> fun (V47) -> begin (V48 = (V46(V47))), (V48(V47)) end end end end}, fun (V49) -> fun (V50) -> V50 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_Totality'(V19))))))))(V23))), {'Idris.Prelude.Types.Right', V51} end end, V9)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V52) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V52)) end, V5))))(V7))), case V53 of {'Idris.Prelude.Types.Left', E8} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V55) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-1446'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V10)))); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)) end, V9)))))) end end(E0, E1)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V13)) end, V9)))))) end.
'case--case block in process-1370'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.TT.MissingCases', E2} -> (fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V12) -> case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V15) -> begin (V44 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V43) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V43)) end, V10))))))))))(V15))), {'Idris.Prelude.Types.Right', V44} end end, V11)) end end(E2)); {'Idris.Core.TT.NonCoveringCall', E5} -> (fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V47) -> case V47 of {'Idris.Prelude.Types.Left', E6} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V50) -> begin (V82 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V53, V54, V55)) end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> V57 end end end, fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> begin (V64 = (V61(V63))), begin (V65 = (V62(V63))), (V64(V65)) end end end end end end end}, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> begin (V71 = (V68(V70))), ((V69(V71))(V70)) end end end end end end, fun (V72) -> fun (V73) -> fun (V74) -> begin (V75 = (V73(V74))), (V75(V74)) end end end end}, fun (V76) -> fun (V77) -> V77 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": Calls non covering function"/utf8>>, case V45 of [E8 | E9] -> (fun (V78, V79) -> case V79 of [] -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V78)))); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V80) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V80)) end, V45)))))) end end(E8, E9)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V81) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V81)) end, V45)))))) end))))))(V50))), {'Idris.Prelude.Types.Right', V82} end end, V46)) end end(E5)); _ -> fun (V83) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V84) -> case V84 of {'Idris.Prelude.Types.Left', E0} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V86) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V87) -> begin (V115 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V90, V91, V92)) end end end end end, fun (V93) -> fun (V94) -> fun (V95) -> V94 end end end, fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> begin (V101 = (V98(V100))), begin (V102 = (V99(V100))), (V101(V102)) end end end end end end end}, fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> begin (V108 = (V105(V107))), ((V106(V108))(V107)) end end end end end end, fun (V109) -> fun (V110) -> fun (V111) -> begin (V112 = (V110(V111))), (V112(V111)) end end end end}, fun (V113) -> fun (V114) -> V114 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)), <<": All cases covered"/utf8>>))))(V87))), {'Idris.Prelude.Types.Right', V115} end end, V83)) end end.
'case--process-1321'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V0, V6)) end; _ -> fun (V7) -> begin (V17 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V8) -> fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--getTotality'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = V5), (('case--case block in process-1370'(V0, V1, V2, V3, V4, V5, V13, V8, V12, case V12 of {'Idris.Core.TT.MkTotality', E2, E3} -> (fun (V14, V15) -> V15 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V16) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V16)) end, V5))))(V7))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-1135'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [E2 | E3] -> (fun (V13, V14) -> case V13 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V18) -> case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V21) -> begin (V52 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V24, V25, V26)) end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> V28 end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), begin (V36 = (V33(V34))), (V35(V36)) end end end end end end end}, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V39(V41))), ((V40(V42))(V41)) end end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V44(V45))), (V46(V45)) end end end end}, fun (V47) -> fun (V48) -> V48 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V49) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpClause'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpClause'(V50, V51)) end end}, V16))))(V21))), {'Idris.Prelude.Types.Right', V52} end end, V17)) end end(E6, E7)); _ -> fun (V53) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V54) -> case V54 of {'Idris.Prelude.Types.Left', E4} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V57) -> begin (V85 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V60, V61, V62)) end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> V64 end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> begin (V71 = (V68(V70))), begin (V72 = (V69(V70))), (V71(V72)) end end end end end end end}, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> begin (V78 = (V75(V77))), ((V76(V78))(V77)) end end end end end end, fun (V79) -> fun (V80) -> fun (V81) -> begin (V82 = (V80(V81))), (V82(V81)) end end end end}, fun (V83) -> fun (V84) -> V84 end end}, <<"Failed"/utf8>>))(V57))), {'Idris.Prelude.Types.Right', V85} end end, V53)) end end end(E2, E3)); _ -> fun (V86) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V87) -> case V87 of {'Idris.Prelude.Types.Left', E0} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V89) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V90) -> begin (V118 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V93, V94, V95)) end end end end end, fun (V96) -> fun (V97) -> fun (V98) -> V97 end end end, fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> begin (V104 = (V101(V103))), begin (V105 = (V102(V103))), (V104(V105)) end end end end end end end}, fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> begin (V111 = (V108(V110))), ((V109(V111))(V110)) end end end end end end, fun (V112) -> fun (V113) -> fun (V114) -> begin (V115 = (V113(V114))), (V115(V114)) end end end end}, fun (V116) -> fun (V117) -> V117 end end}, <<"Failed"/utf8>>))(V90))), {'Idris.Prelude.Types.Right', V118} end end, V86)) end end.
'case--case block in process-1071'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> case V12 of {'Idris.Core.Context.None'} -> (fun () -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'('erased', fun (V14) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V4, fun () -> <<"Generation"/utf8>> end, fun (V15) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V4, V3, V2, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.FC':'un--onLine'(V1, V16)) end end, (1 + 0), V9, V15)) end, V14))), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> case V20 of [E7 | E8] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E11, E12} -> (fun (V23, V24) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V25) -> case V25 of {'Idris.Prelude.Types.Left', E13} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V28) -> begin (V59 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V31, V32, V33)) end end end end end, fun (V34) -> fun (V35) -> fun (V36) -> V35 end end end, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V39(V41))), begin (V43 = (V40(V41))), (V42(V43)) end end end end end end end}, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V46(V48))), ((V47(V49))(V48)) end end end end end end, fun (V50) -> fun (V51) -> fun (V52) -> begin (V53 = (V51(V52))), (V53(V52)) end end end end}, fun (V54) -> fun (V55) -> V55 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V56) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpClause'(V56)) end, fun (V57) -> fun (V58) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpClause'(V57, V58)) end end}, V24))))(V28))), {'Idris.Prelude.Types.Right', V59} end end, V14)) end(E11, E12)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V60) -> case V60 of {'Idris.Prelude.Types.Left', E9} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V62) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V63) -> begin (V91 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V66, V67, V68)) end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> V70 end end end, fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> begin (V77 = (V74(V76))), begin (V78 = (V75(V76))), (V77(V78)) end end end end end end end}, fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> begin (V84 = (V81(V83))), ((V82(V84))(V83)) end end end end end end, fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V86(V87))), (V88(V87)) end end end end}, fun (V89) -> fun (V90) -> V90 end end}, <<"Failed"/utf8>>))(V63))), {'Idris.Prelude.Types.Right', V91} end end, V14)) end end(E7, E8)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V92) -> case V92 of {'Idris.Prelude.Types.Left', E5} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V94) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V95) -> begin (V123 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V98, V99, V100)) end end end end end, fun (V101) -> fun (V102) -> fun (V103) -> V102 end end end, fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> begin (V109 = (V106(V108))), begin (V110 = (V107(V108))), (V109(V110)) end end end end end end end}, fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> begin (V116 = (V113(V115))), ((V114(V116))(V115)) end end end end end end, fun (V117) -> fun (V118) -> fun (V119) -> begin (V120 = (V118(V119))), (V120(V119)) end end end end}, fun (V121) -> fun (V122) -> V122 end end}, <<"Failed"/utf8>>))(V95))), {'Idris.Prelude.Types.Right', V123} end end, V14)) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V124) -> fun (V125) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V126) -> case V126 of {'Idris.Prelude.Types.Left', E15} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V128) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V129) -> begin (V157 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V132, V133, V134)) end end end end end, fun (V135) -> fun (V136) -> fun (V137) -> V136 end end end, fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> begin (V143 = (V140(V142))), begin (V144 = (V141(V142))), (V143(V144)) end end end end end end end}, fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> begin (V150 = (V147(V149))), ((V148(V150))(V149)) end end end end end end, fun (V151) -> fun (V152) -> fun (V153) -> begin (V154 = (V152(V153))), (V154(V153)) end end end end}, fun (V155) -> fun (V156) -> V156 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V9))))))(V129))), {'Idris.Prelude.Types.Right', V157} end end, V125)) end end, V13)) end end()); _ -> fun (V158) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V159) -> case V159 of {'Idris.Prelude.Types.Left', E1} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V161) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V162) -> begin (V190 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V165, V166, V167)) end end end end end, fun (V168) -> fun (V169) -> fun (V170) -> V169 end end end, fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> begin (V176 = (V173(V175))), begin (V177 = (V174(V175))), (V176(V177)) end end end end end end end}, fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> begin (V183 = (V180(V182))), ((V181(V183))(V182)) end end end end end end, fun (V184) -> fun (V185) -> fun (V186) -> begin (V187 = (V185(V186))), (V187(V186)) end end end end}, fun (V188) -> fun (V189) -> V189 end end}, <<"Already defined"/utf8>>))(V162))), {'Idris.Prelude.Types.Right', V190} end end, V158)) end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V191) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V192) -> case V192 of {'Idris.Prelude.Types.Left', E17} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V194) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V195) -> begin (V223 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> fun (V200) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V198, V199, V200)) end end end end end, fun (V201) -> fun (V202) -> fun (V203) -> V202 end end end, fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> begin (V209 = (V206(V208))), begin (V210 = (V207(V208))), (V209(V210)) end end end end end end end}, fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> begin (V216 = (V213(V215))), ((V214(V216))(V215)) end end end end end end, fun (V217) -> fun (V218) -> fun (V219) -> begin (V220 = (V218(V219))), (V220(V219)) end end end end}, fun (V221) -> fun (V222) -> V222 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))))))(V195))), {'Idris.Prelude.Types.Right', V223} end end, V191)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-1025'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V12, V13) -> fun (V14) -> begin (V254 = begin (V42 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V10, case V5 of {'Idris.Core.Context.MkDefs', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V15 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V42 of {'Idris.Prelude.Types.Left', E34} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V44) -> case V44 of {'Idris.Prelude.Types.Just', E36} -> (fun (V45) -> case V45 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'('erased', fun (V46) -> begin (V50 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V4, fun () -> <<"Generation"/utf8>> end, fun (V47) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V4, V3, V2, fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.FC':'un--onLine'(V1, V48)) end end, (1 + 0), V10, V47)) end, V46))), case V50 of {'Idris.Prelude.Types.Left', E39} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V52) -> case V52 of [E43 | E44] -> (fun (V53, V54) -> case V53 of {'Idris.Builtin.MkPair', E47, E48} -> (fun (V55, V56) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V57) -> case V57 of {'Idris.Prelude.Types.Left', E49} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V60) -> begin (V91 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V63, V64, V65)) end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> V67 end end end, fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> begin (V74 = (V71(V73))), begin (V75 = (V72(V73))), (V74(V75)) end end end end end end end}, fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> begin (V81 = (V78(V80))), ((V79(V81))(V80)) end end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> begin (V85 = (V83(V84))), (V85(V84)) end end end end}, fun (V86) -> fun (V87) -> V87 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V88) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpClause'(V88)) end, fun (V89) -> fun (V90) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpClause'(V89, V90)) end end}, V56))))(V60))), {'Idris.Prelude.Types.Right', V91} end end, V46)) end(E47, E48)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V92) -> case V92 of {'Idris.Prelude.Types.Left', E45} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V94) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V95) -> begin (V123 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V98, V99, V100)) end end end end end, fun (V101) -> fun (V102) -> fun (V103) -> V102 end end end, fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> begin (V109 = (V106(V108))), begin (V110 = (V107(V108))), (V109(V110)) end end end end end end end}, fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> begin (V116 = (V113(V115))), ((V114(V116))(V115)) end end end end end end, fun (V117) -> fun (V118) -> fun (V119) -> begin (V120 = (V118(V119))), (V120(V119)) end end end end}, fun (V121) -> fun (V122) -> V122 end end}, <<"Failed"/utf8>>))(V95))), {'Idris.Prelude.Types.Right', V123} end end, V46)) end end(E43, E44)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V124) -> case V124 of {'Idris.Prelude.Types.Left', E41} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V126) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V127) -> begin (V155 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V130, V131, V132)) end end end end end, fun (V133) -> fun (V134) -> fun (V135) -> V134 end end end, fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> begin (V141 = (V138(V140))), begin (V142 = (V139(V140))), (V141(V142)) end end end end end end end}, fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> begin (V148 = (V145(V147))), ((V146(V148))(V147)) end end end end end end, fun (V149) -> fun (V150) -> fun (V151) -> begin (V152 = (V150(V151))), (V152(V151)) end end end end}, fun (V153) -> fun (V154) -> V154 end end}, <<"Failed"/utf8>>))(V127))), {'Idris.Prelude.Types.Right', V155} end end, V46)) end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V158) -> case V158 of {'Idris.Prelude.Types.Left', E51} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V160) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V161) -> begin (V189 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V164, V165, V166)) end end end end end, fun (V167) -> fun (V168) -> fun (V169) -> V168 end end end, fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> begin (V175 = (V172(V174))), begin (V176 = (V173(V174))), (V175(V176)) end end end end end end end}, fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> begin (V182 = (V179(V181))), ((V180(V182))(V181)) end end end end end end, fun (V183) -> fun (V184) -> fun (V185) -> begin (V186 = (V184(V185))), (V186(V185)) end end end end}, fun (V187) -> fun (V188) -> V188 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V10))))))(V161))), {'Idris.Prelude.Types.Right', V189} end end, V157)) end end, V14)) end()); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V190) -> case V190 of {'Idris.Prelude.Types.Left', E37} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V192) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V193) -> begin (V221 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V196, V197, V198)) end end end end end, fun (V199) -> fun (V200) -> fun (V201) -> V200 end end end, fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> begin (V207 = (V204(V206))), begin (V208 = (V205(V206))), (V207(V208)) end end end end end end end}, fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> begin (V214 = (V211(V213))), ((V212(V214))(V213)) end end end end end end, fun (V215) -> fun (V216) -> fun (V217) -> begin (V218 = (V216(V217))), (V218(V217)) end end end end}, fun (V219) -> fun (V220) -> V220 end end}, <<"Already defined"/utf8>>))(V193))), {'Idris.Prelude.Types.Right', V221} end end, V14)) end end(E36)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V222) -> case V222 of {'Idris.Prelude.Types.Left', E53} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V224) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V225) -> begin (V253 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V228, V229, V230)) end end end end end, fun (V231) -> fun (V232) -> fun (V233) -> V232 end end end, fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> begin (V239 = (V236(V238))), begin (V240 = (V237(V238))), (V239(V240)) end end end end end end end}, fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> begin (V246 = (V243(V245))), ((V244(V246))(V245)) end end end end end end, fun (V247) -> fun (V248) -> fun (V249) -> begin (V250 = (V248(V249))), (V250(V249)) end end end end}, fun (V251) -> fun (V252) -> V252 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))))))(V225))), {'Idris.Prelude.Types.Right', V253} end end, V14)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V254 of {'Idris.Prelude.Types.Left', E55} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V256) -> {'Idris.Prelude.Types.Right', 0} end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V257) -> begin (V290 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V258) -> case V258 of {'Idris.Prelude.Types.Left', E57} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V260) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V261) -> begin (V289 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V262) -> fun (V263) -> fun (V264) -> fun (V265) -> fun (V266) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V264, V265, V266)) end end end end end, fun (V267) -> fun (V268) -> fun (V269) -> V268 end end end, fun (V270) -> fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> begin (V275 = (V272(V274))), begin (V276 = (V273(V274))), (V275(V276)) end end end end end end end}, fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> begin (V282 = (V279(V281))), ((V280(V282))(V281)) end end end end end end, fun (V283) -> fun (V284) -> fun (V285) -> begin (V286 = (V284(V285))), (V286(V285)) end end end end}, fun (V287) -> fun (V288) -> V288 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))))))(V261))), {'Idris.Prelude.Types.Right', V289} end end, V257))), case V290 of {'Idris.Prelude.Types.Left', E59} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V292) -> {'Idris.Prelude.Types.Right', 0} end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-909'(V0, V1, V2, V3, V4, V5) -> case V5 of [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> case V7 of [] -> fun (V12) -> begin (V13 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V3, V2, V1, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), (1 + 0), V8, [], V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V49 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V16) -> fun (V17) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> V24 end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), begin (V32 = (V29(V30))), (V31(V32)) end end end end end end end}, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), ((V36(V38))(V37)) end end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V40(V41))), (V42(V41)) end end end end}, fun (V43) -> fun (V44) -> V44 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V46, V47)) end end}}, V16))(V17))), {'Idris.Prelude.Types.Right', V48} end end end, V15))(V12))), case V49 of {'Idris.Prelude.Types.Left', E8} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V51) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V52) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V53) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V53)) end, V5))}, V52)) end end end(E4, E5)); _ -> fun (V54) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V55) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V55)) end, V5))}, V54)) end end end(E2, E3)); _ -> fun (V56) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V57) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V57)) end, V5))}, V56)) end end end(E0, E1)); [] -> fun (V58) -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V3, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V0, V58)) end; _ -> fun (V59) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V60) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V60)) end, V5))}, V59)) end end.
'case--process-773'(V0, V1, V2, V3, V4, V5) -> case V5 of [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> case V7 of [] -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Unify':'un--search'([], V3, V1, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(1000)), V8, V11, {'Idris.Core.Env.Nil'}, V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V19) -> begin (V20 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V3, [], V19, {'Idris.Core.Env.Nil'}, V15, V12))), case V20 of {'Idris.Prelude.Types.Left', E10} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V22) -> begin (V65 = begin (V27 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V3, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V25, V26)) end end}, V22, V12))), case V27 of {'Idris.Prelude.Types.Left', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V30) -> case V30 of {'Idris.Prelude.Types.Left', E14} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V33) -> begin (V64 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V36, V37, V38)) end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> V40 end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> begin (V47 = (V44(V46))), begin (V48 = (V45(V46))), (V47(V48)) end end end end end end end}, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V51(V53))), ((V52(V54))(V53)) end end end end end end, fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V56(V57))), (V58(V57)) end end end end}, fun (V59) -> fun (V60) -> V60 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V61) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V61)) end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'([], V62, V63)) end end}}, V29))(V33))), {'Idris.Prelude.Types.Right', V64} end end, V12)) end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V65 of {'Idris.Prelude.Types.Left', E16} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V67) -> {'Idris.Prelude.Types.Right', 0} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V68) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V69) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V69)) end, V5))}, V68)) end end end(E4, E5)); _ -> fun (V70) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V71) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V71)) end, V5))}, V70)) end end end(E2, E3)); _ -> fun (V72) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V73) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V73)) end, V5))}, V72)) end end end(E0, E1)); [] -> fun (V74) -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V3, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V0, V74)) end; _ -> fun (V75) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V76) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V76)) end, V5))}, V75)) end end.
'case--process-697'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V6))(V7))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V3, [], V11, {'Idris.Core.Env.Nil'}, V14, V7))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V56 = begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V3, {'Idris.Core.Env.Nil'}, V17))(V7))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V55 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V53, V54)) end end}}, V20))(V24))), {'Idris.Prelude.Types.Right', V55} end end, V7)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V56 of {'Idris.Prelude.Types.Left', E12} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V58) -> {'Idris.Prelude.Types.Right', 0} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-542'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V3, [], V11, {'Idris.Core.Env.Nil'}, V5, V7))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V53 = begin (V15 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V3, {'Idris.Core.Env.Nil'}, V14))(V7))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V18) -> case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V21) -> begin (V52 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V24, V25, V26)) end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> V28 end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), begin (V36 = (V33(V34))), (V35(V36)) end end end end end end end}, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V39(V41))), ((V40(V42))(V41)) end end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V44(V45))), (V46(V45)) end end end end}, fun (V47) -> fun (V48) -> V48 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V49) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V50, V51)) end end}}, V17))(V21))), {'Idris.Prelude.Types.Right', V52} end end, V7)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V53 of {'Idris.Prelude.Types.Left', E10} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V55) -> {'Idris.Prelude.Types.Right', 0} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14889-601--in--un--printName'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> fun (V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V4, [], V14, {'Idris.Core.Env.Nil'}, V9, V10))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V4, {'Idris.Core.Env.Nil'}, V17))(V10))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V52 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V20))))))))(V24))), {'Idris.Prelude.Types.Right', V52} end end, V10)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--showInfo'(V0) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> fun (V5) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V6) -> case V6 of {'Idris.Prelude.Types.Left', E4} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V9) -> begin (V82 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==>\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Context':'dn--un--show_Show_Def'(case V4 of {'Idris.Core.Context.MkGlobalDef', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57) -> V54 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V58) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_SCCall'(V58)) end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_SCCall'(V59, V60)) end end}, case V4 of {'Idris.Core.Context.MkGlobalDef', E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81) -> V81 end(E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>))))))))))))))))(V9))), {'Idris.Prelude.Types.Right', V82} end end, V5)) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--repl'(V0, V1, V2, V3) -> begin (V36 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V4) -> case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V7) -> begin (V35 = (('Idris.Idris2.Prelude.IO':'un--putStr'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, <<"Yaffle> "/utf8>>))(V7))), {'Idris.Prelude.Types.Right', V35} end end, V3))), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> begin (V67 = begin (V66 = (('Idris.Idris2.Prelude.IO':'un--getLine'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> V45 end end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), begin (V53 = (V50(V51))), (V52(V53)) end end end end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V56(V58))), ((V57(V59))(V58)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V61(V62))), (V63(V62)) end end end end}, fun (V64) -> fun (V65) -> V65 end end}))(V3))), {'Idris.Prelude.Types.Right', V66} end), case V67 of {'Idris.Prelude.Types.Left', E4} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V69) -> (('case--repl-1714'(V2, V1, V0, V69, ('Idris.Idris2.Parser.Source':'un--runParser'('erased', 0, <<"(interactive)"/utf8>>, {'Idris.Prelude.Types.Nothing'}, V69, ('Idris.Idris2.TTImp.Parser':'un--command'())))))(V3)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--processCatch'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'('erased', ('un--process'(V0, V1, V2, V3)), fun (V5) -> fun (V6) -> begin (V39 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V7) -> case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V10) -> begin (V38 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V5))))(V10))), {'Idris.Prelude.Types.Right', V38} end end, V6))), case V39 of {'Idris.Prelude.Types.Left', E2} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V41) -> {'Idris.Prelude.Types.Right', 0} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V4)).
'un--process'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.Eval', E0} -> (fun (V4) -> fun (V5) -> begin (V6 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V4, {'Idris.Prelude.Types.Nothing'}))(V5))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V14, {'Idris.Core.Env.Nil'}, V9, V5))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V56 = begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V17))(V5))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E11} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V55 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V53, V54)) end end}}, V20))(V24))), {'Idris.Prelude.Types.Right', V55} end end, V5)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V56 of {'Idris.Prelude.Types.Left', E13} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V58) -> {'Idris.Prelude.Types.Right', 0} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.Check', E15} -> (fun (V59) -> case V59 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V60, V61) -> fun (V62) -> begin (V64 = begin (V63 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V63} end), case V64 of {'Idris.Prelude.Types.Left', E34} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V66) -> begin (V94 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V61, case V66 of {'Idris.Core.Context.MkDefs', E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93) -> V67 end(E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V62))), case V94 of {'Idris.Prelude.Types.Left', E63} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V96) -> begin (V98 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V97) -> ('nested--14889-601--in--un--printName'(V60, V61, V2, V1, V0, V97)) end, V96))(V62))), case V98 of {'Idris.Prelude.Types.Left', E65} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V100) -> {'Idris.Prelude.Types.Right', 0} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33)); _ -> fun (V101) -> begin (V102 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V59, {'Idris.Prelude.Types.Nothing'}))(V101))), case V102 of {'Idris.Prelude.Types.Left', E16} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V104) -> case V104 of {'Idris.Builtin.MkPair', E18, E19} -> (fun (V105, V106) -> begin (V108 = begin (V107 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V107} end), case V108 of {'Idris.Prelude.Types.Left', E20} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V110) -> begin (V111 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V106))(V101))), case V111 of {'Idris.Prelude.Types.Left', E22} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V113) -> begin (V114 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V110, {'Idris.Core.Env.Nil'}, V113, V101))), case V114 of {'Idris.Prelude.Types.Left', E24} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V116) -> begin (V155 = begin (V117 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V116))(V101))), case V117 of {'Idris.Prelude.Types.Left', E26} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V119) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V120) -> case V120 of {'Idris.Prelude.Types.Left', E28} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V122) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V123) -> begin (V154 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V126, V127, V128)) end end end end end, fun (V129) -> fun (V130) -> fun (V131) -> V130 end end end, fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> begin (V137 = (V134(V136))), begin (V138 = (V135(V136))), (V137(V138)) end end end end end end end}, fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> begin (V144 = (V141(V143))), ((V142(V144))(V143)) end end end end end end, fun (V145) -> fun (V146) -> fun (V147) -> begin (V148 = (V146(V147))), (V148(V147)) end end end end}, fun (V149) -> fun (V150) -> V150 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V151) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V151)) end, fun (V152) -> fun (V153) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V152, V153)) end end}}, V119))(V123))), {'Idris.Prelude.Types.Right', V154} end end, V101)) end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V155 of {'Idris.Prelude.Types.Left', E30} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V157) -> {'Idris.Prelude.Types.Right', 0} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E15)); {'Idris.TTImp.TTImp.ProofSearch', E67} -> (fun (V158) -> fun (V159) -> begin (V161 = begin (V160 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V160} end), case V161 of {'Idris.Prelude.Types.Left', E68} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V163) -> begin (V191 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V158, case V163 of {'Idris.Core.Context.MkDefs', E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96} -> (fun (V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190) -> V164 end(E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V159))), case V191 of {'Idris.Prelude.Types.Left', E97} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V193) -> case V193 of [E99 | E100] -> (fun (V194, V195) -> case V194 of {'Idris.Builtin.MkPair', E101, E102} -> (fun (V196, V197) -> case V197 of {'Idris.Builtin.MkPair', E103, E104} -> (fun (V198, V199) -> case V195 of [] -> begin (V200 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V2, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(1000)), V196, V199, {'Idris.Core.Env.Nil'}, V159))), case V200 of {'Idris.Prelude.Types.Left', E105} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V202) -> begin (V204 = begin (V203 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V203} end), case V204 of {'Idris.Prelude.Types.Left', E107} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V206) -> begin (V207 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V206, {'Idris.Core.Env.Nil'}, V202, V159))), case V207 of {'Idris.Prelude.Types.Left', E109} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V209) -> begin (V252 = begin (V214 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V210) -> fun (V211) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'('erased', V210, V211)) end end, fun (V212) -> fun (V213) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'('erased', V212, V213)) end end}, V209, V159))), case V214 of {'Idris.Prelude.Types.Left', E111} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V216) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V217) -> case V217 of {'Idris.Prelude.Types.Left', E113} -> (fun (V218) -> {'Idris.Prelude.Types.Left', V218} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V219) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V220) -> begin (V251 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V223, V224, V225)) end end end end end, fun (V226) -> fun (V227) -> fun (V228) -> V227 end end end, fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> fun (V233) -> begin (V234 = (V231(V233))), begin (V235 = (V232(V233))), (V234(V235)) end end end end end end end}, fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> begin (V241 = (V238(V240))), ((V239(V241))(V240)) end end end end end end, fun (V242) -> fun (V243) -> fun (V244) -> begin (V245 = (V243(V244))), (V245(V244)) end end end end}, fun (V246) -> fun (V247) -> V247 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V248) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V248)) end, fun (V249) -> fun (V250) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'([], V249, V250)) end end}}, V216))(V220))), {'Idris.Prelude.Types.Right', V251} end end, V159)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V252 of {'Idris.Prelude.Types.Left', E115} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V254) -> {'Idris.Prelude.Types.Right', 0} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V255) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V255)) end, V193))}, V159)) end end(E103, E104)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V256) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V256)) end, V193))}, V159)) end end(E101, E102)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V257) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V257)) end, V193))}, V159)) end end(E99, E100)); [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V0, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V158, V159)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V258) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V258)) end, V193))}, V159)) end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E67)); {'Idris.TTImp.TTImp.ExprSearch', E117} -> (fun (V259) -> fun (V260) -> begin (V262 = begin (V261 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V261} end), case V262 of {'Idris.Prelude.Types.Left', E118} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V264) -> begin (V292 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V259, case V264 of {'Idris.Core.Context.MkDefs', E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146} -> (fun (V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291) -> V265 end(E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V260))), case V292 of {'Idris.Prelude.Types.Left', E147} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V294) -> case V294 of [E149 | E150] -> (fun (V295, V296) -> case V295 of {'Idris.Builtin.MkPair', E151, E152} -> (fun (V297, V298) -> case V298 of {'Idris.Builtin.MkPair', E153, E154} -> (fun (V299, V300) -> case V296 of [] -> begin (V301 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V0, V1, V2, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), (1 + 0), V297, [], V260))), case V301 of {'Idris.Prelude.Types.Left', E155} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V303) -> begin (V337 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V304) -> fun (V305) -> begin (V336 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V308, V309, V310)) end end end end end, fun (V311) -> fun (V312) -> fun (V313) -> V312 end end end, fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> begin (V319 = (V316(V318))), begin (V320 = (V317(V318))), (V319(V320)) end end end end end end end}, fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> begin (V326 = (V323(V325))), ((V324(V326))(V325)) end end end end end end, fun (V327) -> fun (V328) -> fun (V329) -> begin (V330 = (V328(V329))), (V330(V329)) end end end end}, fun (V331) -> fun (V332) -> V332 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V333) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V333)) end, fun (V334) -> fun (V335) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V334, V335)) end end}}, V304))(V305))), {'Idris.Prelude.Types.Right', V336} end end end, V303))(V260))), case V337 of {'Idris.Prelude.Types.Left', E157} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V339) -> {'Idris.Prelude.Types.Right', 0} end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V340) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V340)) end, V294))}, V260)) end end(E153, E154)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V341) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V341)) end, V294))}, V260)) end end(E151, E152)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V342) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V342)) end, V294))}, V260)) end end(E149, E150)); [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V0, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V259, V260)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V343) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V343)) end, V294))}, V260)) end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E117)); {'Idris.TTImp.TTImp.GenerateDef', E159, E160} -> (fun (V344, V345) -> fun (V346) -> begin (V348 = begin (V347 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V347} end), case V348 of {'Idris.Prelude.Types.Left', E161} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V350) -> begin (V353 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V1, fun (V351) -> fun (V352) -> ('Idris.Idris2.Core.FC':'un--onLine'(V344, V351)) end end, V346))), case V353 of {'Idris.Prelude.Types.Left', E163} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V355) -> case V355 of {'Idris.Prelude.Types.Just', E165} -> (fun (V356) -> case V356 of {'Idris.Builtin.MkPair', E166, E167} -> (fun (V357, V358) -> case V358 of {'Idris.Builtin.MkPair', E168, E169} -> (fun (V359, V360) -> case V360 of {'Idris.Builtin.MkPair', E170, E171} -> (fun (V361, V362) -> begin (V602 = begin (V390 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V359, case V350 of {'Idris.Core.Context.MkDefs', E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198} -> (fun (V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389) -> V363 end(E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V346))), case V390 of {'Idris.Prelude.Types.Left', E199} -> (fun (V391) -> {'Idris.Prelude.Types.Left', V391} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V392) -> case V392 of {'Idris.Prelude.Types.Just', E201} -> (fun (V393) -> case V393 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'('erased', fun (V394) -> begin (V398 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V0, fun () -> <<"Generation"/utf8>> end, fun (V395) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V0, V1, V2, fun (V396) -> fun (V397) -> ('Idris.Idris2.Core.FC':'un--onLine'(V344, V396)) end end, (1 + 0), V359, V395)) end, V394))), case V398 of {'Idris.Prelude.Types.Left', E204} -> (fun (V399) -> {'Idris.Prelude.Types.Left', V399} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V400) -> case V400 of [E208 | E209] -> (fun (V401, V402) -> case V401 of {'Idris.Builtin.MkPair', E212, E213} -> (fun (V403, V404) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V405) -> case V405 of {'Idris.Prelude.Types.Left', E214} -> (fun (V406) -> {'Idris.Prelude.Types.Left', V406} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V407) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V408) -> begin (V439 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V411, V412, V413)) end end end end end, fun (V414) -> fun (V415) -> fun (V416) -> V415 end end end, fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> begin (V422 = (V419(V421))), begin (V423 = (V420(V421))), (V422(V423)) end end end end end end end}, fun (V424) -> fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> begin (V429 = (V426(V428))), ((V427(V429))(V428)) end end end end end end, fun (V430) -> fun (V431) -> fun (V432) -> begin (V433 = (V431(V432))), (V433(V432)) end end end end}, fun (V434) -> fun (V435) -> V435 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V436) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpClause'(V436)) end, fun (V437) -> fun (V438) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpClause'(V437, V438)) end end}, V404))))(V408))), {'Idris.Prelude.Types.Right', V439} end end, V394)) end(E212, E213)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V440) -> case V440 of {'Idris.Prelude.Types.Left', E210} -> (fun (V441) -> {'Idris.Prelude.Types.Left', V441} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V442) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V443) -> begin (V471 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> fun (V448) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V446, V447, V448)) end end end end end, fun (V449) -> fun (V450) -> fun (V451) -> V450 end end end, fun (V452) -> fun (V453) -> fun (V454) -> fun (V455) -> fun (V456) -> begin (V457 = (V454(V456))), begin (V458 = (V455(V456))), (V457(V458)) end end end end end end end}, fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> begin (V464 = (V461(V463))), ((V462(V464))(V463)) end end end end end end, fun (V465) -> fun (V466) -> fun (V467) -> begin (V468 = (V466(V467))), (V468(V467)) end end end end}, fun (V469) -> fun (V470) -> V470 end end}, <<"Failed"/utf8>>))(V443))), {'Idris.Prelude.Types.Right', V471} end end, V394)) end end(E208, E209)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V472) -> case V472 of {'Idris.Prelude.Types.Left', E206} -> (fun (V473) -> {'Idris.Prelude.Types.Left', V473} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V474) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V475) -> begin (V503 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V476) -> fun (V477) -> fun (V478) -> fun (V479) -> fun (V480) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V478, V479, V480)) end end end end end, fun (V481) -> fun (V482) -> fun (V483) -> V482 end end end, fun (V484) -> fun (V485) -> fun (V486) -> fun (V487) -> fun (V488) -> begin (V489 = (V486(V488))), begin (V490 = (V487(V488))), (V489(V490)) end end end end end end end}, fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> fun (V495) -> begin (V496 = (V493(V495))), ((V494(V496))(V495)) end end end end end end, fun (V497) -> fun (V498) -> fun (V499) -> begin (V500 = (V498(V499))), (V500(V499)) end end end end}, fun (V501) -> fun (V502) -> V502 end end}, <<"Failed"/utf8>>))(V475))), {'Idris.Prelude.Types.Right', V503} end end, V394)) end end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V504) -> fun (V505) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V506) -> case V506 of {'Idris.Prelude.Types.Left', E216} -> (fun (V507) -> {'Idris.Prelude.Types.Left', V507} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V508) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V509) -> begin (V537 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V510) -> fun (V511) -> fun (V512) -> fun (V513) -> fun (V514) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V512, V513, V514)) end end end end end, fun (V515) -> fun (V516) -> fun (V517) -> V516 end end end, fun (V518) -> fun (V519) -> fun (V520) -> fun (V521) -> fun (V522) -> begin (V523 = (V520(V522))), begin (V524 = (V521(V522))), (V523(V524)) end end end end end end end}, fun (V525) -> fun (V526) -> fun (V527) -> fun (V528) -> fun (V529) -> begin (V530 = (V527(V529))), ((V528(V530))(V529)) end end end end end end, fun (V531) -> fun (V532) -> fun (V533) -> begin (V534 = (V532(V533))), (V534(V533)) end end end end}, fun (V535) -> fun (V536) -> V536 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V359))))))(V509))), {'Idris.Prelude.Types.Right', V537} end end, V505)) end end, V346)) end()); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V538) -> case V538 of {'Idris.Prelude.Types.Left', E202} -> (fun (V539) -> {'Idris.Prelude.Types.Left', V539} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V540) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V541) -> begin (V569 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V542) -> fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V544, V545, V546)) end end end end end, fun (V547) -> fun (V548) -> fun (V549) -> V548 end end end, fun (V550) -> fun (V551) -> fun (V552) -> fun (V553) -> fun (V554) -> begin (V555 = (V552(V554))), begin (V556 = (V553(V554))), (V555(V556)) end end end end end end end}, fun (V557) -> fun (V558) -> fun (V559) -> fun (V560) -> fun (V561) -> begin (V562 = (V559(V561))), ((V560(V562))(V561)) end end end end end end, fun (V563) -> fun (V564) -> fun (V565) -> begin (V566 = (V564(V565))), (V566(V565)) end end end end}, fun (V567) -> fun (V568) -> V568 end end}, <<"Already defined"/utf8>>))(V541))), {'Idris.Prelude.Types.Right', V569} end end, V346)) end end(E201)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V570) -> case V570 of {'Idris.Prelude.Types.Left', E218} -> (fun (V571) -> {'Idris.Prelude.Types.Left', V571} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V572) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V573) -> begin (V601 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V574) -> fun (V575) -> fun (V576) -> fun (V577) -> fun (V578) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V576, V577, V578)) end end end end end, fun (V579) -> fun (V580) -> fun (V581) -> V580 end end end, fun (V582) -> fun (V583) -> fun (V584) -> fun (V585) -> fun (V586) -> begin (V587 = (V584(V586))), begin (V588 = (V585(V586))), (V587(V588)) end end end end end end end}, fun (V589) -> fun (V590) -> fun (V591) -> fun (V592) -> fun (V593) -> begin (V594 = (V591(V593))), ((V592(V594))(V593)) end end end end end end, fun (V595) -> fun (V596) -> fun (V597) -> begin (V598 = (V596(V597))), (V598(V597)) end end end end}, fun (V599) -> fun (V600) -> V600 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V345))))))(V573))), {'Idris.Prelude.Types.Right', V601} end end, V346)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V602 of {'Idris.Prelude.Types.Left', E220} -> (fun (V603) -> {'Idris.Prelude.Types.Left', V603} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V604) -> {'Idris.Prelude.Types.Right', 0} end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170, E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E168, E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E166, E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E165)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V637 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V605) -> case V605 of {'Idris.Prelude.Types.Left', E222} -> (fun (V606) -> {'Idris.Prelude.Types.Left', V606} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V607) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V608) -> begin (V636 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V609) -> fun (V610) -> fun (V611) -> fun (V612) -> fun (V613) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V611, V612, V613)) end end end end end, fun (V614) -> fun (V615) -> fun (V616) -> V615 end end end, fun (V617) -> fun (V618) -> fun (V619) -> fun (V620) -> fun (V621) -> begin (V622 = (V619(V621))), begin (V623 = (V620(V621))), (V622(V623)) end end end end end end end}, fun (V624) -> fun (V625) -> fun (V626) -> fun (V627) -> fun (V628) -> begin (V629 = (V626(V628))), ((V627(V629))(V628)) end end end end end end, fun (V630) -> fun (V631) -> fun (V632) -> begin (V633 = (V631(V632))), (V633(V632)) end end end end}, fun (V634) -> fun (V635) -> V635 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V345))))))(V608))), {'Idris.Prelude.Types.Right', V636} end end, V346))), case V637 of {'Idris.Prelude.Types.Left', E224} -> (fun (V638) -> {'Idris.Prelude.Types.Left', V638} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V639) -> {'Idris.Prelude.Types.Right', 0} end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E159, E160)); {'Idris.TTImp.TTImp.Missing', E226} -> (fun (V640) -> fun (V641) -> begin (V643 = begin (V642 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V642} end), case V643 of {'Idris.Prelude.Types.Left', E227} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E227)); {'Idris.Prelude.Types.Right', E228} -> (fun (V645) -> begin (V673 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V640, case V645 of {'Idris.Core.Context.MkDefs', E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255} -> (fun (V646, V647, V648, V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672) -> V646 end(E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V641))), case V673 of {'Idris.Prelude.Types.Left', E256} -> (fun (V674) -> {'Idris.Prelude.Types.Left', V674} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V675) -> case V675 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V640, V641)); _ -> begin (V685 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V676) -> fun (V677) -> begin (V678 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V676, V677))), case V678 of {'Idris.Prelude.Types.Left', E258} -> (fun (V679) -> {'Idris.Prelude.Types.Left', V679} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V680) -> begin (V681 = V675), (('case--case block in process-1370'(V640, V2, V1, V0, V645, V675, V681, V676, V680, case V680 of {'Idris.Core.TT.MkTotality', E260, E261} -> (fun (V682, V683) -> V683 end(E260, E261)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V677)) end end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V684) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V684)) end, V675))))(V641))), case V685 of {'Idris.Prelude.Types.Left', E262} -> (fun (V686) -> {'Idris.Prelude.Types.Left', V686} end(E262)); {'Idris.Prelude.Types.Right', E263} -> (fun (V687) -> {'Idris.Prelude.Types.Right', 0} end(E263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E226)); {'Idris.TTImp.TTImp.CheckTotal', E264} -> (fun (V688) -> fun (V689) -> begin (V691 = begin (V690 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V690} end), case V691 of {'Idris.Prelude.Types.Left', E265} -> (fun (V692) -> {'Idris.Prelude.Types.Left', V692} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V693) -> begin (V721 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V688, case V693 of {'Idris.Core.Context.MkDefs', E267, E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293} -> (fun (V694, V695, V696, V697, V698, V699, V700, V701, V702, V703, V704, V705, V706, V707, V708, V709, V710, V711, V712, V713, V714, V715, V716, V717, V718, V719, V720) -> V694 end(E267, E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278, E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V689))), case V721 of {'Idris.Prelude.Types.Left', E294} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V723) -> case V723 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'('erased', V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V688, V689)); _ -> begin (V769 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V724) -> fun (V725) -> begin (V730 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V726) -> case V726 of {'Idris.Prelude.Types.Left', E296} -> (fun (V727) -> {'Idris.Prelude.Types.Left', V727} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V728) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V729) -> ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V724, V729)) end, V725))), case V730 of {'Idris.Prelude.Types.Left', E298} -> (fun (V731) -> {'Idris.Prelude.Types.Left', V731} end(E298)); {'Idris.Prelude.Types.Right', E299} -> (fun (V732) -> begin (V733 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V724, V725))), case V733 of {'Idris.Prelude.Types.Left', E300} -> (fun (V734) -> {'Idris.Prelude.Types.Left', V734} end(E300)); {'Idris.Prelude.Types.Right', E301} -> (fun (V735) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V736) -> case V736 of {'Idris.Prelude.Types.Left', E302} -> (fun (V737) -> {'Idris.Prelude.Types.Left', V737} end(E302)); {'Idris.Prelude.Types.Right', E303} -> (fun (V738) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V739) -> begin (V767 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V740) -> fun (V741) -> fun (V742) -> fun (V743) -> fun (V744) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V742, V743, V744)) end end end end end, fun (V745) -> fun (V746) -> fun (V747) -> V746 end end end, fun (V748) -> fun (V749) -> fun (V750) -> fun (V751) -> fun (V752) -> begin (V753 = (V750(V752))), begin (V754 = (V751(V752))), (V753(V754)) end end end end end end end}, fun (V755) -> fun (V756) -> fun (V757) -> fun (V758) -> fun (V759) -> begin (V760 = (V757(V759))), ((V758(V760))(V759)) end end end end end end, fun (V761) -> fun (V762) -> fun (V763) -> begin (V764 = (V762(V763))), (V764(V763)) end end end end}, fun (V765) -> fun (V766) -> V766 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V724)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_Totality'(V735))))))))(V739))), {'Idris.Prelude.Types.Right', V767} end end, V725)) end(E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'('erased', 'erased', fun (V768) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V768)) end, V723))))(V689))), case V769 of {'Idris.Prelude.Types.Left', E304} -> (fun (V770) -> {'Idris.Prelude.Types.Left', V770} end(E304)); {'Idris.Prelude.Types.Right', E305} -> (fun (V771) -> {'Idris.Prelude.Types.Right', 0} end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E264)); {'Idris.TTImp.TTImp.DebugInfo', E306} -> (fun (V772) -> fun (V773) -> begin (V775 = begin (V774 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V774} end), case V775 of {'Idris.Prelude.Types.Left', E307} -> (fun (V776) -> {'Idris.Prelude.Types.Left', V776} end(E307)); {'Idris.Prelude.Types.Right', E308} -> (fun (V777) -> begin (V809 = begin (V805 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V772, case V777 of {'Idris.Core.Context.MkDefs', E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330, E331, E332, E333, E334, E335} -> (fun (V778, V779, V780, V781, V782, V783, V784, V785, V786, V787, V788, V789, V790, V791, V792, V793, V794, V795, V796, V797, V798, V799, V800, V801, V802, V803, V804) -> V778 end(E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330, E331, E332, E333, E334, E335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V773))), case V805 of {'Idris.Prelude.Types.Left', E336} -> (fun (V806) -> {'Idris.Prelude.Types.Left', V806} end(E336)); {'Idris.Prelude.Types.Right', E337} -> (fun (V807) -> (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V808) -> ('un--showInfo'(V808)) end, V807))(V773)) end(E337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V809 of {'Idris.Prelude.Types.Left', E338} -> (fun (V810) -> {'Idris.Prelude.Types.Left', V810} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V811) -> {'Idris.Prelude.Types.Right', 0} end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E306)); {'Idris.TTImp.TTImp.Quit'} -> (fun () -> fun (V812) -> begin (V845 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', fun (V813) -> case V813 of {'Idris.Prelude.Types.Left', E340} -> (fun (V814) -> {'Idris.Prelude.Types.Left', V814} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V815) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V816) -> begin (V844 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V817) -> fun (V818) -> fun (V819) -> fun (V820) -> fun (V821) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'('erased', 'erased', V819, V820, V821)) end end end end end, fun (V822) -> fun (V823) -> fun (V824) -> V823 end end end, fun (V825) -> fun (V826) -> fun (V827) -> fun (V828) -> fun (V829) -> begin (V830 = (V827(V829))), begin (V831 = (V828(V829))), (V830(V831)) end end end end end end end}, fun (V832) -> fun (V833) -> fun (V834) -> fun (V835) -> fun (V836) -> begin (V837 = (V834(V836))), ((V835(V837))(V836)) end end end end end end, fun (V838) -> fun (V839) -> fun (V840) -> begin (V841 = (V839(V840))), (V841(V840)) end end end end}, fun (V842) -> fun (V843) -> V843 end end}, <<"Bye for now!"/utf8>>))(V816))), {'Idris.Prelude.Types.Right', V844} end end, V812))), case V845 of {'Idris.Prelude.Types.Left', E342} -> (fun (V846) -> {'Idris.Prelude.Types.Left', V846} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V847) -> {'Idris.Prelude.Types.Right', 1} end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
