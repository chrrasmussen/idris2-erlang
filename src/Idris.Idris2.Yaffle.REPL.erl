-module('Idris.Idris2.Yaffle.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--10214-583--in--un--printName'/7,
  'un--showInfo'/2,
  'un--repl'/4,
  'un--processCatch'/5,
  'un--process'/5
]).
'nested--10214-583--in--un--printName'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V4, [], V14, {'Idris.Core.Env.Nil'}, V10, V6))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V4, {'Idris.Core.Env.Nil'}, V17))(V6))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', 0} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V52 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V20))))))))(V24))), {'Idris.Prelude.Types.Right', V52} end end, V6)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--showInfo'(V0, V1) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V6) -> case V6 of {'Idris.Prelude.Types.Left', E4} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V8) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V9) -> begin (V82 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==>\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Context':'dn--un--show_Show_Def'(case V5 of {'Idris.Core.Context.MkGlobalDef', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57) -> V54 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V58) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show_SCCall'(V58)) end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show_SCCall'(V59, V60)) end end}, case V5 of {'Idris.Core.Context.MkGlobalDef', E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81) -> V81 end(E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>))))))))))))))))(V9))), {'Idris.Prelude.Types.Right', V82} end end, V1)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--repl'(V0, V1, V2, V3) -> begin (V36 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V4) -> case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V7) -> begin (V35 = (('Idris.Idris2.Prelude.IO':'un--putStr'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, <<"Yaffle> "/utf8>>))(V7))), {'Idris.Prelude.Types.Right', V35} end end, V3))), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> begin (V67 = begin (V66 = (('Idris.Idris2.Prelude.IO':'un--getLine'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> V45 end end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), begin (V53 = (V50(V51))), (V52(V53)) end end end end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V56(V58))), ((V57(V59))(V58)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V61(V62))), (V63(V62)) end end end end}, fun (V64) -> fun (V65) -> V65 end end}))(V3))), {'Idris.Prelude.Types.Right', V66} end), case V67 of {'Idris.Prelude.Types.Left', E4} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V69) -> case ('Idris.Idris2.Parser.Source':'un--runParser'(1, {'Idris.Core.FC.Virtual', 0}, {'Idris.Prelude.Types.Nothing'}, V69, ('Idris.Idris2.TTImp.Parser':'un--command'()))) of {'Idris.Prelude.Types.Left', E6} -> (fun (V70) -> begin (V106 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V71) -> case V71 of {'Idris.Prelude.Types.Left', E7} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V73) -> {'Idris.Prelude.Types.Right', 0} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V74) -> begin (V105 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V77, V78, V79)) end end end end end, fun (V80) -> fun (V81) -> fun (V82) -> V81 end end end, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V85(V87))), begin (V89 = (V86(V87))), (V88(V89)) end end end end end end end}, fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> begin (V95 = (V92(V94))), ((V93(V95))(V94)) end end end end end end, fun (V96) -> fun (V97) -> fun (V98) -> begin (V99 = (V97(V98))), (V99(V98)) end end end end}, fun (V100) -> fun (V101) -> V101 end end}, {'Idris.Prelude.Show.MkShow', fun (V102) -> ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V102)) end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Core':'dn--un--showPrec_Show_Error'(V103, V104)) end end}}, V70))(V74))), {'Idris.Prelude.Types.Right', V105} end end, V3))), case V106 of {'Idris.Prelude.Types.Left', E9} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V108) -> ('un--repl'(V0, V1, V2, V3)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); {'Idris.Prelude.Types.Right', E11} -> (fun (V109) -> case V109 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V110, V111) -> begin (V112 = ('un--processCatch'(V0, V1, V2, V111, V3))), case V112 of {'Idris.Prelude.Types.Left', E14} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V114) -> case V114 of 1 -> ('un--repl'(V0, V1, V2, V3)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--processCatch'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V5) -> ('un--process'(V0, V1, V2, V3, V5)) end, fun (V6) -> fun (V7) -> begin (V40 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V8) -> case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V11) -> begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V6))))(V11))), {'Idris.Prelude.Types.Right', V39} end end, V7))), case V40 of {'Idris.Prelude.Types.Left', E2} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V42) -> {'Idris.Prelude.Types.Right', 1} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V4)).
'un--process'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.Eval', E0} -> (fun (V5) -> begin (V6 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V5, {'Idris.Prelude.Types.Nothing'}))(V4))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V14, {'Idris.Core.Env.Nil'}, V9, V4))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V56 = begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V17))(V4))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E11} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V23) -> {'Idris.Prelude.Types.Right', 0} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V55 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, {'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V53, V54)) end end}}, V20))(V24))), {'Idris.Prelude.Types.Right', V55} end end, V4)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V56 of {'Idris.Prelude.Types.Left', E13} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V58) -> {'Idris.Prelude.Types.Right', 1} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.Check', E15} -> (fun (V59) -> case V59 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V60, V61) -> begin (V63 = begin (V62 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V62} end), case V63 of {'Idris.Prelude.Types.Left', E34} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V65) -> begin (V94 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V61, case V65 of {'Idris.Core.Context.MkDefs', E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63} -> (fun (V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93) -> V66 end(E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V94 of {'Idris.Prelude.Types.Left', E64} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V96) -> begin (V99 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V97) -> fun (V98) -> ('nested--10214-583--in--un--printName'(V60, V61, V2, V1, V0, V97, V98)) end end, V96, V4))), case V99 of {'Idris.Prelude.Types.Left', E66} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V101) -> {'Idris.Prelude.Types.Right', 1} end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32, E33)); _ -> begin (V102 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V59, {'Idris.Prelude.Types.Nothing'}))(V4))), case V102 of {'Idris.Prelude.Types.Left', E16} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V104) -> case V104 of {'Idris.Builtin.MkPair', E18, E19} -> (fun (V105, V106) -> begin (V108 = begin (V107 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V107} end), case V108 of {'Idris.Prelude.Types.Left', E20} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V110) -> begin (V111 = (('Idris.Idris2.Core.Normalise':'un--getTerm'(V106))(V4))), case V111 of {'Idris.Prelude.Types.Left', E22} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V113) -> begin (V114 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V110, {'Idris.Core.Env.Nil'}, V113, V4))), case V114 of {'Idris.Prelude.Types.Left', E24} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V116) -> begin (V155 = begin (V117 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V116))(V4))), case V117 of {'Idris.Prelude.Types.Left', E26} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V119) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V120) -> case V120 of {'Idris.Prelude.Types.Left', E28} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V122) -> {'Idris.Prelude.Types.Right', 0} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V123) -> begin (V154 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V126, V127, V128)) end end end end end, fun (V129) -> fun (V130) -> fun (V131) -> V130 end end end, fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> begin (V137 = (V134(V136))), begin (V138 = (V135(V136))), (V137(V138)) end end end end end end end}, fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> begin (V144 = (V141(V143))), ((V142(V144))(V143)) end end end end end end, fun (V145) -> fun (V146) -> fun (V147) -> begin (V148 = (V146(V147))), (V148(V147)) end end end end}, fun (V149) -> fun (V150) -> V150 end end}, {'Idris.Prelude.Show.MkShow', fun (V151) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V151)) end, fun (V152) -> fun (V153) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V152, V153)) end end}}, V119))(V123))), {'Idris.Prelude.Types.Right', V154} end end, V4)) end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V155 of {'Idris.Prelude.Types.Left', E30} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V157) -> {'Idris.Prelude.Types.Right', 1} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15)); {'Idris.TTImp.TTImp.ProofSearch', E68} -> (fun (V158) -> begin (V160 = begin (V159 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V159} end), case V160 of {'Idris.Prelude.Types.Left', E69} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V162) -> begin (V191 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V158, case V162 of {'Idris.Core.Context.MkDefs', E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98} -> (fun (V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190) -> V163 end(E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V191 of {'Idris.Prelude.Types.Left', E99} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V193) -> case V193 of [E101 | E102] -> (fun (V194, V195) -> case V194 of {'Idris.Builtin.MkPair', E103, E104} -> (fun (V196, V197) -> case V197 of {'Idris.Builtin.MkPair', E105, E106} -> (fun (V198, V199) -> case V195 of [] -> begin (V200 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V2, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 0, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(1000)), V196, V199, {'Idris.Core.Env.Nil'}, V4))), case V200 of {'Idris.Prelude.Types.Left', E107} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V202) -> begin (V204 = begin (V203 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V203} end), case V204 of {'Idris.Prelude.Types.Left', E109} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V206) -> begin (V207 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V206, {'Idris.Core.Env.Nil'}, V202, V4))), case V207 of {'Idris.Prelude.Types.Left', E111} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V209) -> begin (V254 = begin (V216 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V210) -> fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V210, V211, V212)) end end end, fun (V213) -> fun (V214) -> fun (V215) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V213, V214, V215)) end end end}, V209, V4))), case V216 of {'Idris.Prelude.Types.Left', E113} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V218) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V219) -> case V219 of {'Idris.Prelude.Types.Left', E115} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V221) -> {'Idris.Prelude.Types.Right', 0} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V222) -> begin (V253 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V225, V226, V227)) end end end end end, fun (V228) -> fun (V229) -> fun (V230) -> V229 end end end, fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> begin (V236 = (V233(V235))), begin (V237 = (V234(V235))), (V236(V237)) end end end end end end end}, fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> begin (V243 = (V240(V242))), ((V241(V243))(V242)) end end end end end end, fun (V244) -> fun (V245) -> fun (V246) -> begin (V247 = (V245(V246))), (V247(V246)) end end end end}, fun (V248) -> fun (V249) -> V249 end end}, {'Idris.Prelude.Show.MkShow', fun (V250) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V250)) end, fun (V251) -> fun (V252) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'([], V251, V252)) end end}}, V218))(V222))), {'Idris.Prelude.Types.Right', V253} end end, V4)) end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V254 of {'Idris.Prelude.Types.Left', E117} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V256) -> {'Idris.Prelude.Types.Right', 1} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V257) -> ('Idris.Idris2.Builtin':'un--fst'(V257)) end, V193))}, V4)) end end(E105, E106)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V258) -> ('Idris.Idris2.Builtin':'un--fst'(V258)) end, V193))}, V4)) end end(E103, E104)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V259) -> ('Idris.Idris2.Builtin':'un--fst'(V259)) end, V193))}, V4)) end end(E101, E102)); [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V158, V4)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V260) -> ('Idris.Idris2.Builtin':'un--fst'(V260)) end, V193))}, V4)) end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); {'Idris.TTImp.TTImp.ExprSearch', E119} -> (fun (V261) -> begin (V263 = begin (V262 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V262} end), case V263 of {'Idris.Prelude.Types.Left', E120} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V265) -> begin (V294 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V261, case V265 of {'Idris.Core.Context.MkDefs', E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149} -> (fun (V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293) -> V266 end(E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V294 of {'Idris.Prelude.Types.Left', E150} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V296) -> case V296 of [E152 | E153] -> (fun (V297, V298) -> case V297 of {'Idris.Builtin.MkPair', E154, E155} -> (fun (V299, V300) -> case V300 of {'Idris.Builtin.MkPair', E156, E157} -> (fun (V301, V302) -> case V298 of [] -> begin (V303 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V0, V1, V2, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), (1 + 0), V299, [], V4))), case V303 of {'Idris.Prelude.Types.Left', E158} -> (fun (V304) -> {'Idris.Prelude.Types.Left', V304} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V305) -> begin (V339 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V306) -> fun (V307) -> begin (V338 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V310, V311, V312)) end end end end end, fun (V313) -> fun (V314) -> fun (V315) -> V314 end end end, fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> begin (V321 = (V318(V320))), begin (V322 = (V319(V320))), (V321(V322)) end end end end end end end}, fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> begin (V328 = (V325(V327))), ((V326(V328))(V327)) end end end end end end, fun (V329) -> fun (V330) -> fun (V331) -> begin (V332 = (V330(V331))), (V332(V331)) end end end end}, fun (V333) -> fun (V334) -> V334 end end}, {'Idris.Prelude.Show.MkShow', fun (V335) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_RawImp'(V335)) end, fun (V336) -> fun (V337) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_RawImp'(V336, V337)) end end}}, V306))(V307))), {'Idris.Prelude.Types.Right', V338} end end end, V305, V4))), case V339 of {'Idris.Prelude.Types.Left', E160} -> (fun (V340) -> {'Idris.Prelude.Types.Left', V340} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V341) -> {'Idris.Prelude.Types.Right', 1} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V342) -> ('Idris.Idris2.Builtin':'un--fst'(V342)) end, V296))}, V4)) end end(E156, E157)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V343) -> ('Idris.Idris2.Builtin':'un--fst'(V343)) end, V296))}, V4)) end end(E154, E155)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V344) -> ('Idris.Idris2.Builtin':'un--fst'(V344)) end, V296))}, V4)) end end(E152, E153)); [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V261, V4)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V345) -> ('Idris.Idris2.Builtin':'un--fst'(V345)) end, V296))}, V4)) end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); {'Idris.TTImp.TTImp.GenerateDef', E162, E163} -> (fun (V346, V347) -> begin (V349 = begin (V348 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V348} end), case V349 of {'Idris.Prelude.Types.Left', E164} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V351) -> begin (V354 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V1, fun (V352) -> fun (V353) -> ('Idris.Idris2.Core.FC':'un--onLine'(V346, V352)) end end, V4))), case V354 of {'Idris.Prelude.Types.Left', E166} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V356) -> case V356 of {'Idris.Prelude.Types.Just', E168} -> (fun (V357) -> case V357 of {'Idris.Builtin.MkPair', E169, E170} -> (fun (V358, V359) -> case V359 of {'Idris.Builtin.MkPair', E171, E172} -> (fun (V360, V361) -> case V361 of {'Idris.Builtin.MkPair', E173, E174} -> (fun (V362, V363) -> begin (V604 = begin (V392 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V360, case V351 of {'Idris.Core.Context.MkDefs', E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202} -> (fun (V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391) -> V364 end(E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V392 of {'Idris.Prelude.Types.Left', E203} -> (fun (V393) -> {'Idris.Prelude.Types.Left', V393} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V394) -> case V394 of {'Idris.Prelude.Types.Just', E205} -> (fun (V395) -> case V395 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V396) -> begin (V400 = ('Idris.Idris2.Core.Context.Log':'un--logTime'(V0, fun () -> <<"Generation"/utf8>> end, fun (V397) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V0, V1, V2, fun (V398) -> fun (V399) -> ('Idris.Idris2.Core.FC':'un--onLine'(V346, V398)) end end, (1 + 0), V360, V397)) end, V396))), case V400 of {'Idris.Prelude.Types.Left', E208} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V402) -> case V402 of [E212 | E213] -> (fun (V403, V404) -> case V403 of {'Idris.Builtin.MkPair', E216, E217} -> (fun (V405, V406) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V407) -> case V407 of {'Idris.Prelude.Types.Left', E218} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V409) -> {'Idris.Prelude.Types.Right', 0} end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V410) -> begin (V441 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V413, V414, V415)) end end end end end, fun (V416) -> fun (V417) -> fun (V418) -> V417 end end end, fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> begin (V424 = (V421(V423))), begin (V425 = (V422(V423))), (V424(V425)) end end end end end end end}, fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> begin (V431 = (V428(V430))), ((V429(V431))(V430)) end end end end end end, fun (V432) -> fun (V433) -> fun (V434) -> begin (V435 = (V433(V434))), (V435(V434)) end end end end}, fun (V436) -> fun (V437) -> V437 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V438) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_ImpClause'(V438)) end, fun (V439) -> fun (V440) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_ImpClause'(V439, V440)) end end}, V406))))(V410))), {'Idris.Prelude.Types.Right', V441} end end, V396)) end(E216, E217)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V442) -> case V442 of {'Idris.Prelude.Types.Left', E214} -> (fun (V443) -> {'Idris.Prelude.Types.Left', V443} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V444) -> {'Idris.Prelude.Types.Right', 0} end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V445) -> begin (V473 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> fun (V450) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V448, V449, V450)) end end end end end, fun (V451) -> fun (V452) -> fun (V453) -> V452 end end end, fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> fun (V458) -> begin (V459 = (V456(V458))), begin (V460 = (V457(V458))), (V459(V460)) end end end end end end end}, fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> begin (V466 = (V463(V465))), ((V464(V466))(V465)) end end end end end end, fun (V467) -> fun (V468) -> fun (V469) -> begin (V470 = (V468(V469))), (V470(V469)) end end end end}, fun (V471) -> fun (V472) -> V472 end end}, <<"Failed"/utf8>>))(V445))), {'Idris.Prelude.Types.Right', V473} end end, V396)) end end(E212, E213)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V474) -> case V474 of {'Idris.Prelude.Types.Left', E210} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V476) -> {'Idris.Prelude.Types.Right', 0} end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V477) -> begin (V505 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V478) -> fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V480, V481, V482)) end end end end end, fun (V483) -> fun (V484) -> fun (V485) -> V484 end end end, fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> begin (V491 = (V488(V490))), begin (V492 = (V489(V490))), (V491(V492)) end end end end end end end}, fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> begin (V498 = (V495(V497))), ((V496(V498))(V497)) end end end end end end, fun (V499) -> fun (V500) -> fun (V501) -> begin (V502 = (V500(V501))), (V502(V501)) end end end end}, fun (V503) -> fun (V504) -> V504 end end}, <<"Failed"/utf8>>))(V477))), {'Idris.Prelude.Types.Right', V505} end end, V396)) end end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V506) -> fun (V507) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V508) -> case V508 of {'Idris.Prelude.Types.Left', E220} -> (fun (V509) -> {'Idris.Prelude.Types.Left', V509} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V510) -> {'Idris.Prelude.Types.Right', 0} end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V511) -> begin (V539 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V512) -> fun (V513) -> fun (V514) -> fun (V515) -> fun (V516) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V514, V515, V516)) end end end end end, fun (V517) -> fun (V518) -> fun (V519) -> V518 end end end, fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> begin (V525 = (V522(V524))), begin (V526 = (V523(V524))), (V525(V526)) end end end end end end end}, fun (V527) -> fun (V528) -> fun (V529) -> fun (V530) -> fun (V531) -> begin (V532 = (V529(V531))), ((V530(V532))(V531)) end end end end end end, fun (V533) -> fun (V534) -> fun (V535) -> begin (V536 = (V534(V535))), (V536(V535)) end end end end}, fun (V537) -> fun (V538) -> V538 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V360))))))(V511))), {'Idris.Prelude.Types.Right', V539} end end, V507)) end end, V4)) end()); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V540) -> case V540 of {'Idris.Prelude.Types.Left', E206} -> (fun (V541) -> {'Idris.Prelude.Types.Left', V541} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V542) -> {'Idris.Prelude.Types.Right', 0} end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V543) -> begin (V571 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V546, V547, V548)) end end end end end, fun (V549) -> fun (V550) -> fun (V551) -> V550 end end end, fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> fun (V556) -> begin (V557 = (V554(V556))), begin (V558 = (V555(V556))), (V557(V558)) end end end end end end end}, fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> fun (V563) -> begin (V564 = (V561(V563))), ((V562(V564))(V563)) end end end end end end, fun (V565) -> fun (V566) -> fun (V567) -> begin (V568 = (V566(V567))), (V568(V567)) end end end end}, fun (V569) -> fun (V570) -> V570 end end}, <<"Already defined"/utf8>>))(V543))), {'Idris.Prelude.Types.Right', V571} end end, V4)) end end(E205)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V572) -> case V572 of {'Idris.Prelude.Types.Left', E222} -> (fun (V573) -> {'Idris.Prelude.Types.Left', V573} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V574) -> {'Idris.Prelude.Types.Right', 0} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V575) -> begin (V603 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V576) -> fun (V577) -> fun (V578) -> fun (V579) -> fun (V580) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V578, V579, V580)) end end end end end, fun (V581) -> fun (V582) -> fun (V583) -> V582 end end end, fun (V584) -> fun (V585) -> fun (V586) -> fun (V587) -> fun (V588) -> begin (V589 = (V586(V588))), begin (V590 = (V587(V588))), (V589(V590)) end end end end end end end}, fun (V591) -> fun (V592) -> fun (V593) -> fun (V594) -> fun (V595) -> begin (V596 = (V593(V595))), ((V594(V596))(V595)) end end end end end end, fun (V597) -> fun (V598) -> fun (V599) -> begin (V600 = (V598(V599))), (V600(V599)) end end end end}, fun (V601) -> fun (V602) -> V602 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V347))))))(V575))), {'Idris.Prelude.Types.Right', V603} end end, V4)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V604 of {'Idris.Prelude.Types.Left', E224} -> (fun (V605) -> {'Idris.Prelude.Types.Left', V605} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V606) -> {'Idris.Prelude.Types.Right', 1} end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E173, E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E171, E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E169, E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E168)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V639 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V607) -> case V607 of {'Idris.Prelude.Types.Left', E226} -> (fun (V608) -> {'Idris.Prelude.Types.Left', V608} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V609) -> {'Idris.Prelude.Types.Right', 0} end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V610) -> begin (V638 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V611) -> fun (V612) -> fun (V613) -> fun (V614) -> fun (V615) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V613, V614, V615)) end end end end end, fun (V616) -> fun (V617) -> fun (V618) -> V617 end end end, fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> fun (V623) -> begin (V624 = (V621(V623))), begin (V625 = (V622(V623))), (V624(V625)) end end end end end end end}, fun (V626) -> fun (V627) -> fun (V628) -> fun (V629) -> fun (V630) -> begin (V631 = (V628(V630))), ((V629(V631))(V630)) end end end end end end, fun (V632) -> fun (V633) -> fun (V634) -> begin (V635 = (V633(V634))), (V635(V634)) end end end end}, fun (V636) -> fun (V637) -> V637 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V347))))))(V610))), {'Idris.Prelude.Types.Right', V638} end end, V4))), case V639 of {'Idris.Prelude.Types.Left', E228} -> (fun (V640) -> {'Idris.Prelude.Types.Left', V640} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V641) -> {'Idris.Prelude.Types.Right', 1} end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162, E163)); {'Idris.TTImp.TTImp.Missing', E230} -> (fun (V642) -> begin (V644 = begin (V643 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V643} end), case V644 of {'Idris.Prelude.Types.Left', E231} -> (fun (V645) -> {'Idris.Prelude.Types.Left', V645} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V646) -> begin (V675 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V642, case V646 of {'Idris.Core.Context.MkDefs', E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260} -> (fun (V647, V648, V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672, V673, V674) -> V647 end(E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V675 of {'Idris.Prelude.Types.Left', E261} -> (fun (V676) -> {'Idris.Prelude.Types.Left', V676} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V677) -> case V677 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V642, V4)); _ -> begin (V789 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V678) -> fun (V679) -> begin (V680 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V678, V679))), case V680 of {'Idris.Prelude.Types.Left', E263} -> (fun (V681) -> {'Idris.Prelude.Types.Left', V681} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V682) -> case V682 of {'Idris.Core.TT.MkTotality', E265, E266} -> (fun (V683, V684) -> case V684 of {'Idris.Core.TT.MissingCases', E269} -> (fun (V685) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V686) -> case V686 of {'Idris.Prelude.Types.Left', E270} -> (fun (V687) -> {'Idris.Prelude.Types.Left', V687} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V688) -> {'Idris.Prelude.Types.Right', 0} end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V689) -> begin (V718 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V690) -> fun (V691) -> fun (V692) -> fun (V693) -> fun (V694) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V692, V693, V694)) end end end end end, fun (V695) -> fun (V696) -> fun (V697) -> V696 end end end, fun (V698) -> fun (V699) -> fun (V700) -> fun (V701) -> fun (V702) -> begin (V703 = (V700(V702))), begin (V704 = (V701(V702))), (V703(V704)) end end end end end end end}, fun (V705) -> fun (V706) -> fun (V707) -> fun (V708) -> fun (V709) -> begin (V710 = (V707(V709))), ((V708(V710))(V709)) end end end end end end, fun (V711) -> fun (V712) -> fun (V713) -> begin (V714 = (V712(V713))), (V714(V713)) end end end end}, fun (V715) -> fun (V716) -> V716 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V678)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V717) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V717)) end, V685))))))))))(V689))), {'Idris.Prelude.Types.Right', V718} end end, V679)) end(E269)); {'Idris.Core.TT.NonCoveringCall', E272} -> (fun (V719) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V720) -> case V720 of {'Idris.Prelude.Types.Left', E273} -> (fun (V721) -> {'Idris.Prelude.Types.Left', V721} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V722) -> {'Idris.Prelude.Types.Right', 0} end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V723) -> begin (V755 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V724) -> fun (V725) -> fun (V726) -> fun (V727) -> fun (V728) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V726, V727, V728)) end end end end end, fun (V729) -> fun (V730) -> fun (V731) -> V730 end end end, fun (V732) -> fun (V733) -> fun (V734) -> fun (V735) -> fun (V736) -> begin (V737 = (V734(V736))), begin (V738 = (V735(V736))), (V737(V738)) end end end end end end end}, fun (V739) -> fun (V740) -> fun (V741) -> fun (V742) -> fun (V743) -> begin (V744 = (V741(V743))), ((V742(V744))(V743)) end end end end end end, fun (V745) -> fun (V746) -> fun (V747) -> begin (V748 = (V746(V747))), (V748(V747)) end end end end}, fun (V749) -> fun (V750) -> V750 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V678)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": Calls non covering function"/utf8>>, case V719 of [E275 | E276] -> (fun (V751, V752) -> case V752 of [] -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V751)))); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V753) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V753)) end, V719)))))) end end(E275, E276)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V754) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V754)) end, V719)))))) end))))))(V723))), {'Idris.Prelude.Types.Right', V755} end end, V679)) end(E272)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V756) -> case V756 of {'Idris.Prelude.Types.Left', E267} -> (fun (V757) -> {'Idris.Prelude.Types.Left', V757} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V758) -> {'Idris.Prelude.Types.Right', 0} end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V759) -> begin (V787 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V760) -> fun (V761) -> fun (V762) -> fun (V763) -> fun (V764) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V762, V763, V764)) end end end end end, fun (V765) -> fun (V766) -> fun (V767) -> V766 end end end, fun (V768) -> fun (V769) -> fun (V770) -> fun (V771) -> fun (V772) -> begin (V773 = (V770(V772))), begin (V774 = (V771(V772))), (V773(V774)) end end end end end end end}, fun (V775) -> fun (V776) -> fun (V777) -> fun (V778) -> fun (V779) -> begin (V780 = (V777(V779))), ((V778(V780))(V779)) end end end end end end, fun (V781) -> fun (V782) -> fun (V783) -> begin (V784 = (V782(V783))), (V784(V783)) end end end end}, fun (V785) -> fun (V786) -> V786 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V678)), <<": All cases covered"/utf8>>))))(V759))), {'Idris.Prelude.Types.Right', V787} end end, V679)) end end(E265, E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V788) -> ('Idris.Idris2.Builtin':'un--fst'(V788)) end, V677)), V4))), case V789 of {'Idris.Prelude.Types.Left', E277} -> (fun (V790) -> {'Idris.Prelude.Types.Left', V790} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V791) -> {'Idris.Prelude.Types.Right', 1} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E230)); {'Idris.TTImp.TTImp.CheckTotal', E279} -> (fun (V792) -> begin (V794 = begin (V793 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V793} end), case V794 of {'Idris.Prelude.Types.Left', E280} -> (fun (V795) -> {'Idris.Prelude.Types.Left', V795} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V796) -> begin (V825 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V792, case V796 of {'Idris.Core.Context.MkDefs', E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309} -> (fun (V797, V798, V799, V800, V801, V802, V803, V804, V805, V806, V807, V808, V809, V810, V811, V812, V813, V814, V815, V816, V817, V818, V819, V820, V821, V822, V823, V824) -> V797 end(E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V825 of {'Idris.Prelude.Types.Left', E310} -> (fun (V826) -> {'Idris.Prelude.Types.Left', V826} end(E310)); {'Idris.Prelude.Types.Right', E311} -> (fun (V827) -> case V827 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V792, V4)); _ -> begin (V873 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V828) -> fun (V829) -> begin (V834 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V830) -> case V830 of {'Idris.Prelude.Types.Left', E312} -> (fun (V831) -> {'Idris.Prelude.Types.Left', V831} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V832) -> {'Idris.Prelude.Types.Right', 0} end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V833) -> ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V828, V833)) end, V829))), case V834 of {'Idris.Prelude.Types.Left', E314} -> (fun (V835) -> {'Idris.Prelude.Types.Left', V835} end(E314)); {'Idris.Prelude.Types.Right', E315} -> (fun (V836) -> begin (V837 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V828, V829))), case V837 of {'Idris.Prelude.Types.Left', E316} -> (fun (V838) -> {'Idris.Prelude.Types.Left', V838} end(E316)); {'Idris.Prelude.Types.Right', E317} -> (fun (V839) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V840) -> case V840 of {'Idris.Prelude.Types.Left', E318} -> (fun (V841) -> {'Idris.Prelude.Types.Left', V841} end(E318)); {'Idris.Prelude.Types.Right', E319} -> (fun (V842) -> {'Idris.Prelude.Types.Right', 0} end(E319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V843) -> begin (V871 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V844) -> fun (V845) -> fun (V846) -> fun (V847) -> fun (V848) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V846, V847, V848)) end end end end end, fun (V849) -> fun (V850) -> fun (V851) -> V850 end end end, fun (V852) -> fun (V853) -> fun (V854) -> fun (V855) -> fun (V856) -> begin (V857 = (V854(V856))), begin (V858 = (V855(V856))), (V857(V858)) end end end end end end end}, fun (V859) -> fun (V860) -> fun (V861) -> fun (V862) -> fun (V863) -> begin (V864 = (V861(V863))), ((V862(V864))(V863)) end end end end end end, fun (V865) -> fun (V866) -> fun (V867) -> begin (V868 = (V866(V867))), (V868(V867)) end end end end}, fun (V869) -> fun (V870) -> V870 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V828)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_Totality'(V839))))))))(V843))), {'Idris.Prelude.Types.Right', V871} end end, V829)) end(E317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V872) -> ('Idris.Idris2.Builtin':'un--fst'(V872)) end, V827)), V4))), case V873 of {'Idris.Prelude.Types.Left', E320} -> (fun (V874) -> {'Idris.Prelude.Types.Left', V874} end(E320)); {'Idris.Prelude.Types.Right', E321} -> (fun (V875) -> {'Idris.Prelude.Types.Right', 1} end(E321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E279)); {'Idris.TTImp.TTImp.DebugInfo', E322} -> (fun (V876) -> begin (V878 = begin (V877 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V877} end), case V878 of {'Idris.Prelude.Types.Left', E323} -> (fun (V879) -> {'Idris.Prelude.Types.Left', V879} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V880) -> begin (V914 = begin (V909 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V876, case V880 of {'Idris.Core.Context.MkDefs', E325, E326, E327, E328, E329, E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352} -> (fun (V881, V882, V883, V884, V885, V886, V887, V888, V889, V890, V891, V892, V893, V894, V895, V896, V897, V898, V899, V900, V901, V902, V903, V904, V905, V906, V907, V908) -> V881 end(E325, E326, E327, E328, E329, E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V909 of {'Idris.Prelude.Types.Left', E353} -> (fun (V910) -> {'Idris.Prelude.Types.Left', V910} end(E353)); {'Idris.Prelude.Types.Right', E354} -> (fun (V911) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V912) -> fun (V913) -> ('un--showInfo'(V912, V913)) end end, V911, V4)) end(E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V914 of {'Idris.Prelude.Types.Left', E355} -> (fun (V915) -> {'Idris.Prelude.Types.Left', V915} end(E355)); {'Idris.Prelude.Types.Right', E356} -> (fun (V916) -> {'Idris.Prelude.Types.Right', 1} end(E356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E322)); {'Idris.TTImp.TTImp.Quit'} -> (fun () -> begin (V949 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V917) -> case V917 of {'Idris.Prelude.Types.Left', E357} -> (fun (V918) -> {'Idris.Prelude.Types.Left', V918} end(E357)); {'Idris.Prelude.Types.Right', E358} -> (fun (V919) -> {'Idris.Prelude.Types.Right', 0} end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V920) -> begin (V948 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V921) -> fun (V922) -> fun (V923) -> fun (V924) -> fun (V925) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V923, V924, V925)) end end end end end, fun (V926) -> fun (V927) -> fun (V928) -> V927 end end end, fun (V929) -> fun (V930) -> fun (V931) -> fun (V932) -> fun (V933) -> begin (V934 = (V931(V933))), begin (V935 = (V932(V933))), (V934(V935)) end end end end end end end}, fun (V936) -> fun (V937) -> fun (V938) -> fun (V939) -> fun (V940) -> begin (V941 = (V938(V940))), ((V939(V941))(V940)) end end end end end end, fun (V942) -> fun (V943) -> fun (V944) -> begin (V945 = (V943(V944))), (V945(V944)) end end end end}, fun (V946) -> fun (V947) -> V947 end end}, <<"Bye for now!"/utf8>>))(V920))), {'Idris.Prelude.Types.Right', V948} end end, V4))), case V949 of {'Idris.Prelude.Types.Left', E359} -> (fun (V950) -> {'Idris.Prelude.Types.Left', V950} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V951) -> {'Idris.Prelude.Types.Right', 0} end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
